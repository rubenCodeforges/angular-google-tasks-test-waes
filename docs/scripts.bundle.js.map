{"version":3,"sources":["webpack:///./~/jquery/dist/jquery.slim.js?ef5a","webpack:///./~/metismenu/dist/metisMenu.js?ad17","webpack:///./lib/modular-admin/app.js?22a9","webpack:///./lib/modular-admin/vendor.js?7b43","webpack:///./~/jquery/dist/jquery.slim.js","webpack:///./~/metismenu/dist/metisMenu.js","webpack:///./lib/modular-admin/app.js","webpack:///./lib/modular-admin/vendor.js","webpack:///./~/script-loader/addScript.js"],"names":[],"mappings":"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","file":"scripts.bundle.js","sourcesContent":["require(\"!!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/script-loader/addScript.js\")(require(\"!!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/raw-loader/index.js!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/jquery/dist/jquery.slim.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/jquery/dist/jquery.slim.js\n// module id = 301\n// module chunks = 2","require(\"!!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/script-loader/addScript.js\")(require(\"!!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/raw-loader/index.js!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/metismenu/dist/metisMenu.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./~/metismenu/dist/metisMenu.js\n// module id = 302\n// module chunks = 2","require(\"!!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/script-loader/addScript.js\")(require(\"!!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/raw-loader/index.js!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/source-map-loader/index.js!/home/codeforges/work/angular-google-tasks-test-waes/lib/modular-admin/app.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./lib/modular-admin/app.js\n// module id = 303\n// module chunks = 2","require(\"!!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/script-loader/addScript.js\")(require(\"!!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/raw-loader/index.js!/home/codeforges/work/angular-google-tasks-test-waes/node_modules/source-map-loader/index.js!/home/codeforges/work/angular-google-tasks-test-waes/lib/modular-admin/vendor.js\"))\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader!./lib/modular-admin/vendor.js\n// module id = 304\n// module chunks = 2","module.exports = \"/*!\\n * jQuery JavaScript Library v3.2.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/parseXML,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-event/ajax,-effects,-effects/Tween,-effects/animatedSelector\\n * https://jquery.com/\\n *\\n * Includes Sizzle.js\\n * https://sizzlejs.com/\\n *\\n * Copyright JS Foundation and other contributors\\n * Released under the MIT license\\n * https://jquery.org/license\\n *\\n * Date: 2017-03-20T19:00Z\\n */\\n( function( global, factory ) {\\n\\n\\t\\\"use strict\\\";\\n\\n\\tif ( typeof module === \\\"object\\\" && typeof module.exports === \\\"object\\\" ) {\\n\\n\\t\\t// For CommonJS and CommonJS-like environments where a proper `window`\\n\\t\\t// is present, execute the factory and get jQuery.\\n\\t\\t// For environments that do not have a `window` with a `document`\\n\\t\\t// (such as Node.js), expose a factory as module.exports.\\n\\t\\t// This accentuates the need for the creation of a real `window`.\\n\\t\\t// e.g. var jQuery = require(\\\"jquery\\\")(window);\\n\\t\\t// See ticket #14549 for more info.\\n\\t\\tmodule.exports = global.document ?\\n\\t\\t\\tfactory( global, true ) :\\n\\t\\t\\tfunction( w ) {\\n\\t\\t\\t\\tif ( !w.document ) {\\n\\t\\t\\t\\t\\tthrow new Error( \\\"jQuery requires a window with a document\\\" );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn factory( w );\\n\\t\\t\\t};\\n\\t} else {\\n\\t\\tfactory( global );\\n\\t}\\n\\n// Pass this if window is not defined yet\\n} )( typeof window !== \\\"undefined\\\" ? window : this, function( window, noGlobal ) {\\n\\n// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1\\n// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode\\n// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common\\n// enough that all such attempts are guarded in a try block.\\n\\\"use strict\\\";\\n\\nvar arr = [];\\n\\nvar document = window.document;\\n\\nvar getProto = Object.getPrototypeOf;\\n\\nvar slice = arr.slice;\\n\\nvar concat = arr.concat;\\n\\nvar push = arr.push;\\n\\nvar indexOf = arr.indexOf;\\n\\nvar class2type = {};\\n\\nvar toString = class2type.toString;\\n\\nvar hasOwn = class2type.hasOwnProperty;\\n\\nvar fnToString = hasOwn.toString;\\n\\nvar ObjectFunctionString = fnToString.call( Object );\\n\\nvar support = {};\\n\\n\\n\\n\\tfunction DOMEval( code, doc ) {\\n\\t\\tdoc = doc || document;\\n\\n\\t\\tvar script = doc.createElement( \\\"script\\\" );\\n\\n\\t\\tscript.text = code;\\n\\t\\tdoc.head.appendChild( script ).parentNode.removeChild( script );\\n\\t}\\n/* global Symbol */\\n// Defining this global in .eslintrc.json would create a danger of using the global\\n// unguarded in another place, it seems safer to define global only for this module\\n\\n\\n\\nvar\\n\\tversion = \\\"3.2.1 -ajax,-ajax/jsonp,-ajax/load,-ajax/parseXML,-ajax/script,-ajax/var/location,-ajax/var/nonce,-ajax/var/rquery,-ajax/xhr,-manipulation/_evalUrl,-event/ajax,-effects,-effects/Tween,-effects/animatedSelector\\\",\\n\\n\\t// Define a local copy of jQuery\\n\\tjQuery = function( selector, context ) {\\n\\n\\t\\t// The jQuery object is actually just the init constructor 'enhanced'\\n\\t\\t// Need init if jQuery is called (just allow error to be thrown if not included)\\n\\t\\treturn new jQuery.fn.init( selector, context );\\n\\t},\\n\\n\\t// Support: Android <=4.0 only\\n\\t// Make sure we trim BOM and NBSP\\n\\trtrim = /^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g,\\n\\n\\t// Matches dashed string for camelizing\\n\\trmsPrefix = /^-ms-/,\\n\\trdashAlpha = /-([a-z])/g,\\n\\n\\t// Used by jQuery.camelCase as callback to replace()\\n\\tfcamelCase = function( all, letter ) {\\n\\t\\treturn letter.toUpperCase();\\n\\t};\\n\\njQuery.fn = jQuery.prototype = {\\n\\n\\t// The current version of jQuery being used\\n\\tjquery: version,\\n\\n\\tconstructor: jQuery,\\n\\n\\t// The default length of a jQuery object is 0\\n\\tlength: 0,\\n\\n\\ttoArray: function() {\\n\\t\\treturn slice.call( this );\\n\\t},\\n\\n\\t// Get the Nth element in the matched element set OR\\n\\t// Get the whole matched element set as a clean array\\n\\tget: function( num ) {\\n\\n\\t\\t// Return all the elements in a clean array\\n\\t\\tif ( num == null ) {\\n\\t\\t\\treturn slice.call( this );\\n\\t\\t}\\n\\n\\t\\t// Return just the one element from the set\\n\\t\\treturn num < 0 ? this[ num + this.length ] : this[ num ];\\n\\t},\\n\\n\\t// Take an array of elements and push it onto the stack\\n\\t// (returning the new matched element set)\\n\\tpushStack: function( elems ) {\\n\\n\\t\\t// Build a new jQuery matched element set\\n\\t\\tvar ret = jQuery.merge( this.constructor(), elems );\\n\\n\\t\\t// Add the old object onto the stack (as a reference)\\n\\t\\tret.prevObject = this;\\n\\n\\t\\t// Return the newly-formed element set\\n\\t\\treturn ret;\\n\\t},\\n\\n\\t// Execute a callback for every element in the matched set.\\n\\teach: function( callback ) {\\n\\t\\treturn jQuery.each( this, callback );\\n\\t},\\n\\n\\tmap: function( callback ) {\\n\\t\\treturn this.pushStack( jQuery.map( this, function( elem, i ) {\\n\\t\\t\\treturn callback.call( elem, i, elem );\\n\\t\\t} ) );\\n\\t},\\n\\n\\tslice: function() {\\n\\t\\treturn this.pushStack( slice.apply( this, arguments ) );\\n\\t},\\n\\n\\tfirst: function() {\\n\\t\\treturn this.eq( 0 );\\n\\t},\\n\\n\\tlast: function() {\\n\\t\\treturn this.eq( -1 );\\n\\t},\\n\\n\\teq: function( i ) {\\n\\t\\tvar len = this.length,\\n\\t\\t\\tj = +i + ( i < 0 ? len : 0 );\\n\\t\\treturn this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );\\n\\t},\\n\\n\\tend: function() {\\n\\t\\treturn this.prevObject || this.constructor();\\n\\t},\\n\\n\\t// For internal use only.\\n\\t// Behaves like an Array's method, not like a jQuery method.\\n\\tpush: push,\\n\\tsort: arr.sort,\\n\\tsplice: arr.splice\\n};\\n\\njQuery.extend = jQuery.fn.extend = function() {\\n\\tvar options, name, src, copy, copyIsArray, clone,\\n\\t\\ttarget = arguments[ 0 ] || {},\\n\\t\\ti = 1,\\n\\t\\tlength = arguments.length,\\n\\t\\tdeep = false;\\n\\n\\t// Handle a deep copy situation\\n\\tif ( typeof target === \\\"boolean\\\" ) {\\n\\t\\tdeep = target;\\n\\n\\t\\t// Skip the boolean and the target\\n\\t\\ttarget = arguments[ i ] || {};\\n\\t\\ti++;\\n\\t}\\n\\n\\t// Handle case when target is a string or something (possible in deep copy)\\n\\tif ( typeof target !== \\\"object\\\" && !jQuery.isFunction( target ) ) {\\n\\t\\ttarget = {};\\n\\t}\\n\\n\\t// Extend jQuery itself if only one argument is passed\\n\\tif ( i === length ) {\\n\\t\\ttarget = this;\\n\\t\\ti--;\\n\\t}\\n\\n\\tfor ( ; i < length; i++ ) {\\n\\n\\t\\t// Only deal with non-null/undefined values\\n\\t\\tif ( ( options = arguments[ i ] ) != null ) {\\n\\n\\t\\t\\t// Extend the base object\\n\\t\\t\\tfor ( name in options ) {\\n\\t\\t\\t\\tsrc = target[ name ];\\n\\t\\t\\t\\tcopy = options[ name ];\\n\\n\\t\\t\\t\\t// Prevent never-ending loop\\n\\t\\t\\t\\tif ( target === copy ) {\\n\\t\\t\\t\\t\\tcontinue;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Recurse if we're merging plain objects or arrays\\n\\t\\t\\t\\tif ( deep && copy && ( jQuery.isPlainObject( copy ) ||\\n\\t\\t\\t\\t\\t( copyIsArray = Array.isArray( copy ) ) ) ) {\\n\\n\\t\\t\\t\\t\\tif ( copyIsArray ) {\\n\\t\\t\\t\\t\\t\\tcopyIsArray = false;\\n\\t\\t\\t\\t\\t\\tclone = src && Array.isArray( src ) ? src : [];\\n\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tclone = src && jQuery.isPlainObject( src ) ? src : {};\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Never move original objects, clone them\\n\\t\\t\\t\\t\\ttarget[ name ] = jQuery.extend( deep, clone, copy );\\n\\n\\t\\t\\t\\t// Don't bring in undefined values\\n\\t\\t\\t\\t} else if ( copy !== undefined ) {\\n\\t\\t\\t\\t\\ttarget[ name ] = copy;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the modified object\\n\\treturn target;\\n};\\n\\njQuery.extend( {\\n\\n\\t// Unique for each copy of jQuery on the page\\n\\texpando: \\\"jQuery\\\" + ( version + Math.random() ).replace( /\\\\D/g, \\\"\\\" ),\\n\\n\\t// Assume jQuery is ready without the ready module\\n\\tisReady: true,\\n\\n\\terror: function( msg ) {\\n\\t\\tthrow new Error( msg );\\n\\t},\\n\\n\\tnoop: function() {},\\n\\n\\tisFunction: function( obj ) {\\n\\t\\treturn jQuery.type( obj ) === \\\"function\\\";\\n\\t},\\n\\n\\tisWindow: function( obj ) {\\n\\t\\treturn obj != null && obj === obj.window;\\n\\t},\\n\\n\\tisNumeric: function( obj ) {\\n\\n\\t\\t// As of jQuery 3.0, isNumeric is limited to\\n\\t\\t// strings and numbers (primitives or objects)\\n\\t\\t// that can be coerced to finite numbers (gh-2662)\\n\\t\\tvar type = jQuery.type( obj );\\n\\t\\treturn ( type === \\\"number\\\" || type === \\\"string\\\" ) &&\\n\\n\\t\\t\\t// parseFloat NaNs numeric-cast false positives (\\\"\\\")\\n\\t\\t\\t// ...but misinterprets leading-number strings, particularly hex literals (\\\"0x...\\\")\\n\\t\\t\\t// subtraction forces infinities to NaN\\n\\t\\t\\t!isNaN( obj - parseFloat( obj ) );\\n\\t},\\n\\n\\tisPlainObject: function( obj ) {\\n\\t\\tvar proto, Ctor;\\n\\n\\t\\t// Detect obvious negatives\\n\\t\\t// Use toString instead of jQuery.type to catch host objects\\n\\t\\tif ( !obj || toString.call( obj ) !== \\\"[object Object]\\\" ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\n\\t\\tproto = getProto( obj );\\n\\n\\t\\t// Objects with no prototype (e.g., `Object.create( null )`) are plain\\n\\t\\tif ( !proto ) {\\n\\t\\t\\treturn true;\\n\\t\\t}\\n\\n\\t\\t// Objects with prototype are plain iff they were constructed by a global Object function\\n\\t\\tCtor = hasOwn.call( proto, \\\"constructor\\\" ) && proto.constructor;\\n\\t\\treturn typeof Ctor === \\\"function\\\" && fnToString.call( Ctor ) === ObjectFunctionString;\\n\\t},\\n\\n\\tisEmptyObject: function( obj ) {\\n\\n\\t\\t/* eslint-disable no-unused-vars */\\n\\t\\t// See https://github.com/eslint/eslint/issues/6125\\n\\t\\tvar name;\\n\\n\\t\\tfor ( name in obj ) {\\n\\t\\t\\treturn false;\\n\\t\\t}\\n\\t\\treturn true;\\n\\t},\\n\\n\\ttype: function( obj ) {\\n\\t\\tif ( obj == null ) {\\n\\t\\t\\treturn obj + \\\"\\\";\\n\\t\\t}\\n\\n\\t\\t// Support: Android <=2.3 only (functionish RegExp)\\n\\t\\treturn typeof obj === \\\"object\\\" || typeof obj === \\\"function\\\" ?\\n\\t\\t\\tclass2type[ toString.call( obj ) ] || \\\"object\\\" :\\n\\t\\t\\ttypeof obj;\\n\\t},\\n\\n\\t// Evaluates a script in a global context\\n\\tglobalEval: function( code ) {\\n\\t\\tDOMEval( code );\\n\\t},\\n\\n\\t// Convert dashed to camelCase; used by the css and data modules\\n\\t// Support: IE <=9 - 11, Edge 12 - 13\\n\\t// Microsoft forgot to hump their vendor prefix (#9572)\\n\\tcamelCase: function( string ) {\\n\\t\\treturn string.replace( rmsPrefix, \\\"ms-\\\" ).replace( rdashAlpha, fcamelCase );\\n\\t},\\n\\n\\teach: function( obj, callback ) {\\n\\t\\tvar length, i = 0;\\n\\n\\t\\tif ( isArrayLike( obj ) ) {\\n\\t\\t\\tlength = obj.length;\\n\\t\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\t\\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tfor ( i in obj ) {\\n\\t\\t\\t\\tif ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn obj;\\n\\t},\\n\\n\\t// Support: Android <=4.0 only\\n\\ttrim: function( text ) {\\n\\t\\treturn text == null ?\\n\\t\\t\\t\\\"\\\" :\\n\\t\\t\\t( text + \\\"\\\" ).replace( rtrim, \\\"\\\" );\\n\\t},\\n\\n\\t// results is for internal usage only\\n\\tmakeArray: function( arr, results ) {\\n\\t\\tvar ret = results || [];\\n\\n\\t\\tif ( arr != null ) {\\n\\t\\t\\tif ( isArrayLike( Object( arr ) ) ) {\\n\\t\\t\\t\\tjQuery.merge( ret,\\n\\t\\t\\t\\t\\ttypeof arr === \\\"string\\\" ?\\n\\t\\t\\t\\t\\t[ arr ] : arr\\n\\t\\t\\t\\t);\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpush.call( ret, arr );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn ret;\\n\\t},\\n\\n\\tinArray: function( elem, arr, i ) {\\n\\t\\treturn arr == null ? -1 : indexOf.call( arr, elem, i );\\n\\t},\\n\\n\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\tmerge: function( first, second ) {\\n\\t\\tvar len = +second.length,\\n\\t\\t\\tj = 0,\\n\\t\\t\\ti = first.length;\\n\\n\\t\\tfor ( ; j < len; j++ ) {\\n\\t\\t\\tfirst[ i++ ] = second[ j ];\\n\\t\\t}\\n\\n\\t\\tfirst.length = i;\\n\\n\\t\\treturn first;\\n\\t},\\n\\n\\tgrep: function( elems, callback, invert ) {\\n\\t\\tvar callbackInverse,\\n\\t\\t\\tmatches = [],\\n\\t\\t\\ti = 0,\\n\\t\\t\\tlength = elems.length,\\n\\t\\t\\tcallbackExpect = !invert;\\n\\n\\t\\t// Go through the array, only saving the items\\n\\t\\t// that pass the validator function\\n\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\tcallbackInverse = !callback( elems[ i ], i );\\n\\t\\t\\tif ( callbackInverse !== callbackExpect ) {\\n\\t\\t\\t\\tmatches.push( elems[ i ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn matches;\\n\\t},\\n\\n\\t// arg is for internal usage only\\n\\tmap: function( elems, callback, arg ) {\\n\\t\\tvar length, value,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tret = [];\\n\\n\\t\\t// Go through the array, translating each of the items to their new values\\n\\t\\tif ( isArrayLike( elems ) ) {\\n\\t\\t\\tlength = elems.length;\\n\\t\\t\\tfor ( ; i < length; i++ ) {\\n\\t\\t\\t\\tvalue = callback( elems[ i ], i, arg );\\n\\n\\t\\t\\t\\tif ( value != null ) {\\n\\t\\t\\t\\t\\tret.push( value );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Go through every key on the object,\\n\\t\\t} else {\\n\\t\\t\\tfor ( i in elems ) {\\n\\t\\t\\t\\tvalue = callback( elems[ i ], i, arg );\\n\\n\\t\\t\\t\\tif ( value != null ) {\\n\\t\\t\\t\\t\\tret.push( value );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Flatten any nested arrays\\n\\t\\treturn concat.apply( [], ret );\\n\\t},\\n\\n\\t// A global GUID counter for objects\\n\\tguid: 1,\\n\\n\\t// Bind a function to a context, optionally partially applying any\\n\\t// arguments.\\n\\tproxy: function( fn, context ) {\\n\\t\\tvar tmp, args, proxy;\\n\\n\\t\\tif ( typeof context === \\\"string\\\" ) {\\n\\t\\t\\ttmp = fn[ context ];\\n\\t\\t\\tcontext = fn;\\n\\t\\t\\tfn = tmp;\\n\\t\\t}\\n\\n\\t\\t// Quick check to determine if target is callable, in the spec\\n\\t\\t// this throws a TypeError, but we will just return undefined.\\n\\t\\tif ( !jQuery.isFunction( fn ) ) {\\n\\t\\t\\treturn undefined;\\n\\t\\t}\\n\\n\\t\\t// Simulated bind\\n\\t\\targs = slice.call( arguments, 2 );\\n\\t\\tproxy = function() {\\n\\t\\t\\treturn fn.apply( context || this, args.concat( slice.call( arguments ) ) );\\n\\t\\t};\\n\\n\\t\\t// Set the guid of unique handler to the same of original handler, so it can be removed\\n\\t\\tproxy.guid = fn.guid = fn.guid || jQuery.guid++;\\n\\n\\t\\treturn proxy;\\n\\t},\\n\\n\\tnow: Date.now,\\n\\n\\t// jQuery.support is not used in Core but other projects attach their\\n\\t// properties to it so it needs to exist.\\n\\tsupport: support\\n} );\\n\\nif ( typeof Symbol === \\\"function\\\" ) {\\n\\tjQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];\\n}\\n\\n// Populate the class2type map\\njQuery.each( \\\"Boolean Number String Function Array Date RegExp Object Error Symbol\\\".split( \\\" \\\" ),\\nfunction( i, name ) {\\n\\tclass2type[ \\\"[object \\\" + name + \\\"]\\\" ] = name.toLowerCase();\\n} );\\n\\nfunction isArrayLike( obj ) {\\n\\n\\t// Support: real iOS 8.2 only (not reproducible in simulator)\\n\\t// `in` check used to prevent JIT error (gh-2145)\\n\\t// hasOwn isn't used here due to false negatives\\n\\t// regarding Nodelist length in IE\\n\\tvar length = !!obj && \\\"length\\\" in obj && obj.length,\\n\\t\\ttype = jQuery.type( obj );\\n\\n\\tif ( type === \\\"function\\\" || jQuery.isWindow( obj ) ) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\treturn type === \\\"array\\\" || length === 0 ||\\n\\t\\ttypeof length === \\\"number\\\" && length > 0 && ( length - 1 ) in obj;\\n}\\nvar Sizzle =\\n/*!\\n * Sizzle CSS Selector Engine v2.3.3\\n * https://sizzlejs.com/\\n *\\n * Copyright jQuery Foundation and other contributors\\n * Released under the MIT license\\n * http://jquery.org/license\\n *\\n * Date: 2016-08-08\\n */\\n(function( window ) {\\n\\nvar i,\\n\\tsupport,\\n\\tExpr,\\n\\tgetText,\\n\\tisXML,\\n\\ttokenize,\\n\\tcompile,\\n\\tselect,\\n\\toutermostContext,\\n\\tsortInput,\\n\\thasDuplicate,\\n\\n\\t// Local document vars\\n\\tsetDocument,\\n\\tdocument,\\n\\tdocElem,\\n\\tdocumentIsHTML,\\n\\trbuggyQSA,\\n\\trbuggyMatches,\\n\\tmatches,\\n\\tcontains,\\n\\n\\t// Instance-specific data\\n\\texpando = \\\"sizzle\\\" + 1 * new Date(),\\n\\tpreferredDoc = window.document,\\n\\tdirruns = 0,\\n\\tdone = 0,\\n\\tclassCache = createCache(),\\n\\ttokenCache = createCache(),\\n\\tcompilerCache = createCache(),\\n\\tsortOrder = function( a, b ) {\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t}\\n\\t\\treturn 0;\\n\\t},\\n\\n\\t// Instance methods\\n\\thasOwn = ({}).hasOwnProperty,\\n\\tarr = [],\\n\\tpop = arr.pop,\\n\\tpush_native = arr.push,\\n\\tpush = arr.push,\\n\\tslice = arr.slice,\\n\\t// Use a stripped-down indexOf as it's faster than native\\n\\t// https://jsperf.com/thor-indexof-vs-for/5\\n\\tindexOf = function( list, elem ) {\\n\\t\\tvar i = 0,\\n\\t\\t\\tlen = list.length;\\n\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\tif ( list[i] === elem ) {\\n\\t\\t\\t\\treturn i;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn -1;\\n\\t},\\n\\n\\tbooleans = \\\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\\\",\\n\\n\\t// Regular expressions\\n\\n\\t// http://www.w3.org/TR/css3-selectors/#whitespace\\n\\twhitespace = \\\"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\\\",\\n\\n\\t// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\\n\\tidentifier = \\\"(?:\\\\\\\\\\\\\\\\.|[\\\\\\\\w-]|[^\\\\0-\\\\\\\\xa0])+\\\",\\n\\n\\t// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\\n\\tattributes = \\\"\\\\\\\\[\\\" + whitespace + \\\"*(\\\" + identifier + \\\")(?:\\\" + whitespace +\\n\\t\\t// Operator (capture 2)\\n\\t\\t\\\"*([*^$|!~]?=)\\\" + whitespace +\\n\\t\\t// \\\"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\\\"\\n\\t\\t\\\"*(?:'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\"|(\\\" + identifier + \\\"))|)\\\" + whitespace +\\n\\t\\t\\\"*\\\\\\\\]\\\",\\n\\n\\tpseudos = \\\":(\\\" + identifier + \\\")(?:\\\\\\\\((\\\" +\\n\\t\\t// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\\n\\t\\t// 1. quoted (capture 3; capture 4 or capture 5)\\n\\t\\t\\\"('((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\")|\\\" +\\n\\t\\t// 2. simple (capture 6)\\n\\t\\t\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\\\" + attributes + \\\")*)|\\\" +\\n\\t\\t// 3. anything else (capture 2)\\n\\t\\t\\\".*\\\" +\\n\\t\\t\\\")\\\\\\\\)|)\\\",\\n\\n\\t// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\\n\\trwhitespace = new RegExp( whitespace + \\\"+\\\", \\\"g\\\" ),\\n\\trtrim = new RegExp( \\\"^\\\" + whitespace + \\\"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\\\" + whitespace + \\\"+$\\\", \\\"g\\\" ),\\n\\n\\trcomma = new RegExp( \\\"^\\\" + whitespace + \\\"*,\\\" + whitespace + \\\"*\\\" ),\\n\\trcombinators = new RegExp( \\\"^\\\" + whitespace + \\\"*([>+~]|\\\" + whitespace + \\\")\\\" + whitespace + \\\"*\\\" ),\\n\\n\\trattributeQuotes = new RegExp( \\\"=\\\" + whitespace + \\\"*([^\\\\\\\\]'\\\\\\\"]*?)\\\" + whitespace + \\\"*\\\\\\\\]\\\", \\\"g\\\" ),\\n\\n\\trpseudo = new RegExp( pseudos ),\\n\\tridentifier = new RegExp( \\\"^\\\" + identifier + \\\"$\\\" ),\\n\\n\\tmatchExpr = {\\n\\t\\t\\\"ID\\\": new RegExp( \\\"^#(\\\" + identifier + \\\")\\\" ),\\n\\t\\t\\\"CLASS\\\": new RegExp( \\\"^\\\\\\\\.(\\\" + identifier + \\\")\\\" ),\\n\\t\\t\\\"TAG\\\": new RegExp( \\\"^(\\\" + identifier + \\\"|[*])\\\" ),\\n\\t\\t\\\"ATTR\\\": new RegExp( \\\"^\\\" + attributes ),\\n\\t\\t\\\"PSEUDO\\\": new RegExp( \\\"^\\\" + pseudos ),\\n\\t\\t\\\"CHILD\\\": new RegExp( \\\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\\\" + whitespace +\\n\\t\\t\\t\\\"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\\\" + whitespace + \\\"*(?:([+-]|)\\\" + whitespace +\\n\\t\\t\\t\\\"*(\\\\\\\\d+)|))\\\" + whitespace + \\\"*\\\\\\\\)|)\\\", \\\"i\\\" ),\\n\\t\\t\\\"bool\\\": new RegExp( \\\"^(?:\\\" + booleans + \\\")$\\\", \\\"i\\\" ),\\n\\t\\t// For use in libraries implementing .is()\\n\\t\\t// We use this for POS matching in `select`\\n\\t\\t\\\"needsContext\\\": new RegExp( \\\"^\\\" + whitespace + \\\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\\\" +\\n\\t\\t\\twhitespace + \\\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\\\" + whitespace + \\\"*\\\\\\\\)|)(?=[^-]|$)\\\", \\\"i\\\" )\\n\\t},\\n\\n\\trinputs = /^(?:input|select|textarea|button)$/i,\\n\\trheader = /^h\\\\d$/i,\\n\\n\\trnative = /^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,\\n\\n\\t// Easily-parseable/retrievable ID or TAG or CLASS selectors\\n\\trquickExpr = /^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,\\n\\n\\trsibling = /[+~]/,\\n\\n\\t// CSS escapes\\n\\t// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\\n\\trunescape = new RegExp( \\\"\\\\\\\\\\\\\\\\([\\\\\\\\da-f]{1,6}\\\" + whitespace + \\\"?|(\\\" + whitespace + \\\")|.)\\\", \\\"ig\\\" ),\\n\\tfunescape = function( _, escaped, escapedWhitespace ) {\\n\\t\\tvar high = \\\"0x\\\" + escaped - 0x10000;\\n\\t\\t// NaN means non-codepoint\\n\\t\\t// Support: Firefox<24\\n\\t\\t// Workaround erroneous numeric interpretation of +\\\"0x\\\"\\n\\t\\treturn high !== high || escapedWhitespace ?\\n\\t\\t\\tescaped :\\n\\t\\t\\thigh < 0 ?\\n\\t\\t\\t\\t// BMP codepoint\\n\\t\\t\\t\\tString.fromCharCode( high + 0x10000 ) :\\n\\t\\t\\t\\t// Supplemental Plane codepoint (surrogate pair)\\n\\t\\t\\t\\tString.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );\\n\\t},\\n\\n\\t// CSS string/identifier serialization\\n\\t// https://drafts.csswg.org/cssom/#common-serializing-idioms\\n\\trcssescape = /([\\\\0-\\\\x1f\\\\x7f]|^-?\\\\d)|^-$|[^\\\\0-\\\\x1f\\\\x7f-\\\\uFFFF\\\\w-]/g,\\n\\tfcssescape = function( ch, asCodePoint ) {\\n\\t\\tif ( asCodePoint ) {\\n\\n\\t\\t\\t// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER\\n\\t\\t\\tif ( ch === \\\"\\\\0\\\" ) {\\n\\t\\t\\t\\treturn \\\"\\\\uFFFD\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Control characters and (dependent upon position) numbers get escaped as code points\\n\\t\\t\\treturn ch.slice( 0, -1 ) + \\\"\\\\\\\\\\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + \\\" \\\";\\n\\t\\t}\\n\\n\\t\\t// Other potentially-special ASCII characters get backslash-escaped\\n\\t\\treturn \\\"\\\\\\\\\\\" + ch;\\n\\t},\\n\\n\\t// Used for iframes\\n\\t// See setDocument()\\n\\t// Removing the function wrapper causes a \\\"Permission Denied\\\"\\n\\t// error in IE\\n\\tunloadHandler = function() {\\n\\t\\tsetDocument();\\n\\t},\\n\\n\\tdisabledAncestor = addCombinator(\\n\\t\\tfunction( elem ) {\\n\\t\\t\\treturn elem.disabled === true && (\\\"form\\\" in elem || \\\"label\\\" in elem);\\n\\t\\t},\\n\\t\\t{ dir: \\\"parentNode\\\", next: \\\"legend\\\" }\\n\\t);\\n\\n// Optimize for push.apply( _, NodeList )\\ntry {\\n\\tpush.apply(\\n\\t\\t(arr = slice.call( preferredDoc.childNodes )),\\n\\t\\tpreferredDoc.childNodes\\n\\t);\\n\\t// Support: Android<4.0\\n\\t// Detect silently failing push.apply\\n\\tarr[ preferredDoc.childNodes.length ].nodeType;\\n} catch ( e ) {\\n\\tpush = { apply: arr.length ?\\n\\n\\t\\t// Leverage slice if possible\\n\\t\\tfunction( target, els ) {\\n\\t\\t\\tpush_native.apply( target, slice.call(els) );\\n\\t\\t} :\\n\\n\\t\\t// Support: IE<9\\n\\t\\t// Otherwise append directly\\n\\t\\tfunction( target, els ) {\\n\\t\\t\\tvar j = target.length,\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t// Can't trust NodeList.length\\n\\t\\t\\twhile ( (target[j++] = els[i++]) ) {}\\n\\t\\t\\ttarget.length = j - 1;\\n\\t\\t}\\n\\t};\\n}\\n\\nfunction Sizzle( selector, context, results, seed ) {\\n\\tvar m, i, elem, nid, match, groups, newSelector,\\n\\t\\tnewContext = context && context.ownerDocument,\\n\\n\\t\\t// nodeType defaults to 9, since context defaults to document\\n\\t\\tnodeType = context ? context.nodeType : 9;\\n\\n\\tresults = results || [];\\n\\n\\t// Return early from calls with invalid selector or context\\n\\tif ( typeof selector !== \\\"string\\\" || !selector ||\\n\\t\\tnodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {\\n\\n\\t\\treturn results;\\n\\t}\\n\\n\\t// Try to shortcut find operations (as opposed to filters) in HTML documents\\n\\tif ( !seed ) {\\n\\n\\t\\tif ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {\\n\\t\\t\\tsetDocument( context );\\n\\t\\t}\\n\\t\\tcontext = context || document;\\n\\n\\t\\tif ( documentIsHTML ) {\\n\\n\\t\\t\\t// If the selector is sufficiently simple, try using a \\\"get*By*\\\" DOM method\\n\\t\\t\\t// (excepting DocumentFragment context, where the methods don't exist)\\n\\t\\t\\tif ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {\\n\\n\\t\\t\\t\\t// ID selector\\n\\t\\t\\t\\tif ( (m = match[1]) ) {\\n\\n\\t\\t\\t\\t\\t// Document context\\n\\t\\t\\t\\t\\tif ( nodeType === 9 ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = context.getElementById( m )) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: IE, Opera, Webkit\\n\\t\\t\\t\\t\\t\\t\\t// TODO: identify versions\\n\\t\\t\\t\\t\\t\\t\\t// getElementById can match elements by name instead of ID\\n\\t\\t\\t\\t\\t\\t\\tif ( elem.id === m ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Element context\\n\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE, Opera, Webkit\\n\\t\\t\\t\\t\\t\\t// TODO: identify versions\\n\\t\\t\\t\\t\\t\\t// getElementById can match elements by name instead of ID\\n\\t\\t\\t\\t\\t\\tif ( newContext && (elem = newContext.getElementById( m )) &&\\n\\t\\t\\t\\t\\t\\t\\tcontains( context, elem ) &&\\n\\t\\t\\t\\t\\t\\t\\telem.id === m ) {\\n\\n\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Type selector\\n\\t\\t\\t\\t} else if ( match[2] ) {\\n\\t\\t\\t\\t\\tpush.apply( results, context.getElementsByTagName( selector ) );\\n\\t\\t\\t\\t\\treturn results;\\n\\n\\t\\t\\t\\t// Class selector\\n\\t\\t\\t\\t} else if ( (m = match[3]) && support.getElementsByClassName &&\\n\\t\\t\\t\\t\\tcontext.getElementsByClassName ) {\\n\\n\\t\\t\\t\\t\\tpush.apply( results, context.getElementsByClassName( m ) );\\n\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Take advantage of querySelectorAll\\n\\t\\t\\tif ( support.qsa &&\\n\\t\\t\\t\\t!compilerCache[ selector + \\\" \\\" ] &&\\n\\t\\t\\t\\t(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {\\n\\n\\t\\t\\t\\tif ( nodeType !== 1 ) {\\n\\t\\t\\t\\t\\tnewContext = context;\\n\\t\\t\\t\\t\\tnewSelector = selector;\\n\\n\\t\\t\\t\\t// qSA looks outside Element context, which is not what we want\\n\\t\\t\\t\\t// Thanks to Andrew Dupont for this workaround technique\\n\\t\\t\\t\\t// Support: IE <=8\\n\\t\\t\\t\\t// Exclude object elements\\n\\t\\t\\t\\t} else if ( context.nodeName.toLowerCase() !== \\\"object\\\" ) {\\n\\n\\t\\t\\t\\t\\t// Capture the context ID, setting it first if necessary\\n\\t\\t\\t\\t\\tif ( (nid = context.getAttribute( \\\"id\\\" )) ) {\\n\\t\\t\\t\\t\\t\\tnid = nid.replace( rcssescape, fcssescape );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tcontext.setAttribute( \\\"id\\\", (nid = expando) );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Prefix every selector in the list\\n\\t\\t\\t\\t\\tgroups = tokenize( selector );\\n\\t\\t\\t\\t\\ti = groups.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tgroups[i] = \\\"#\\\" + nid + \\\" \\\" + toSelector( groups[i] );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tnewSelector = groups.join( \\\",\\\" );\\n\\n\\t\\t\\t\\t\\t// Expand context for sibling selectors\\n\\t\\t\\t\\t\\tnewContext = rsibling.test( selector ) && testContext( context.parentNode ) ||\\n\\t\\t\\t\\t\\t\\tcontext;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( newSelector ) {\\n\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\tpush.apply( results,\\n\\t\\t\\t\\t\\t\\t\\tnewContext.querySelectorAll( newSelector )\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t} catch ( qsaError ) {\\n\\t\\t\\t\\t\\t} finally {\\n\\t\\t\\t\\t\\t\\tif ( nid === expando ) {\\n\\t\\t\\t\\t\\t\\t\\tcontext.removeAttribute( \\\"id\\\" );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// All others\\n\\treturn select( selector.replace( rtrim, \\\"$1\\\" ), context, results, seed );\\n}\\n\\n/**\\n * Create key-value caches of limited size\\n * @returns {function(string, object)} Returns the Object data after storing it on itself with\\n *\\tproperty name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\\n *\\tdeleting the oldest entry\\n */\\nfunction createCache() {\\n\\tvar keys = [];\\n\\n\\tfunction cache( key, value ) {\\n\\t\\t// Use (key + \\\" \\\") to avoid collision with native prototype properties (see Issue #157)\\n\\t\\tif ( keys.push( key + \\\" \\\" ) > Expr.cacheLength ) {\\n\\t\\t\\t// Only keep the most recent entries\\n\\t\\t\\tdelete cache[ keys.shift() ];\\n\\t\\t}\\n\\t\\treturn (cache[ key + \\\" \\\" ] = value);\\n\\t}\\n\\treturn cache;\\n}\\n\\n/**\\n * Mark a function for special use by Sizzle\\n * @param {Function} fn The function to mark\\n */\\nfunction markFunction( fn ) {\\n\\tfn[ expando ] = true;\\n\\treturn fn;\\n}\\n\\n/**\\n * Support testing using an element\\n * @param {Function} fn Passed the created element and returns a boolean result\\n */\\nfunction assert( fn ) {\\n\\tvar el = document.createElement(\\\"fieldset\\\");\\n\\n\\ttry {\\n\\t\\treturn !!fn( el );\\n\\t} catch (e) {\\n\\t\\treturn false;\\n\\t} finally {\\n\\t\\t// Remove from its parent by default\\n\\t\\tif ( el.parentNode ) {\\n\\t\\t\\tel.parentNode.removeChild( el );\\n\\t\\t}\\n\\t\\t// release memory in IE\\n\\t\\tel = null;\\n\\t}\\n}\\n\\n/**\\n * Adds the same handler for all of the specified attrs\\n * @param {String} attrs Pipe-separated list of attributes\\n * @param {Function} handler The method that will be applied\\n */\\nfunction addHandle( attrs, handler ) {\\n\\tvar arr = attrs.split(\\\"|\\\"),\\n\\t\\ti = arr.length;\\n\\n\\twhile ( i-- ) {\\n\\t\\tExpr.attrHandle[ arr[i] ] = handler;\\n\\t}\\n}\\n\\n/**\\n * Checks document order of two siblings\\n * @param {Element} a\\n * @param {Element} b\\n * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\\n */\\nfunction siblingCheck( a, b ) {\\n\\tvar cur = b && a,\\n\\t\\tdiff = cur && a.nodeType === 1 && b.nodeType === 1 &&\\n\\t\\t\\ta.sourceIndex - b.sourceIndex;\\n\\n\\t// Use IE sourceIndex if available on both nodes\\n\\tif ( diff ) {\\n\\t\\treturn diff;\\n\\t}\\n\\n\\t// Check if b follows a\\n\\tif ( cur ) {\\n\\t\\twhile ( (cur = cur.nextSibling) ) {\\n\\t\\t\\tif ( cur === b ) {\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn a ? 1 : -1;\\n}\\n\\n/**\\n * Returns a function to use in pseudos for input types\\n * @param {String} type\\n */\\nfunction createInputPseudo( type ) {\\n\\treturn function( elem ) {\\n\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\treturn name === \\\"input\\\" && elem.type === type;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for buttons\\n * @param {String} type\\n */\\nfunction createButtonPseudo( type ) {\\n\\treturn function( elem ) {\\n\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\treturn (name === \\\"input\\\" || name === \\\"button\\\") && elem.type === type;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for :enabled/:disabled\\n * @param {Boolean} disabled true for :disabled; false for :enabled\\n */\\nfunction createDisabledPseudo( disabled ) {\\n\\n\\t// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable\\n\\treturn function( elem ) {\\n\\n\\t\\t// Only certain elements can match :enabled or :disabled\\n\\t\\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled\\n\\t\\t// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled\\n\\t\\tif ( \\\"form\\\" in elem ) {\\n\\n\\t\\t\\t// Check for inherited disabledness on relevant non-disabled elements:\\n\\t\\t\\t// * listed form-associated elements in a disabled fieldset\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#category-listed\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled\\n\\t\\t\\t// * option elements in a disabled optgroup\\n\\t\\t\\t//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled\\n\\t\\t\\t// All such elements have a \\\"form\\\" property.\\n\\t\\t\\tif ( elem.parentNode && elem.disabled === false ) {\\n\\n\\t\\t\\t\\t// Option elements defer to a parent optgroup if present\\n\\t\\t\\t\\tif ( \\\"label\\\" in elem ) {\\n\\t\\t\\t\\t\\tif ( \\\"label\\\" in elem.parentNode ) {\\n\\t\\t\\t\\t\\t\\treturn elem.parentNode.disabled === disabled;\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\treturn elem.disabled === disabled;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Support: IE 6 - 11\\n\\t\\t\\t\\t// Use the isDisabled shortcut property to check for disabled fieldset ancestors\\n\\t\\t\\t\\treturn elem.isDisabled === disabled ||\\n\\n\\t\\t\\t\\t\\t// Where there is no isDisabled, check manually\\n\\t\\t\\t\\t\\t/* jshint -W018 */\\n\\t\\t\\t\\t\\telem.isDisabled !== !disabled &&\\n\\t\\t\\t\\t\\t\\tdisabledAncestor( elem ) === disabled;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn elem.disabled === disabled;\\n\\n\\t\\t// Try to winnow out elements that can't be disabled before trusting the disabled property.\\n\\t\\t// Some victims get caught in our net (label, legend, menu, track), but it shouldn't\\n\\t\\t// even exist on them, let alone have a boolean value.\\n\\t\\t} else if ( \\\"label\\\" in elem ) {\\n\\t\\t\\treturn elem.disabled === disabled;\\n\\t\\t}\\n\\n\\t\\t// Remaining elements are neither :enabled nor :disabled\\n\\t\\treturn false;\\n\\t};\\n}\\n\\n/**\\n * Returns a function to use in pseudos for positionals\\n * @param {Function} fn\\n */\\nfunction createPositionalPseudo( fn ) {\\n\\treturn markFunction(function( argument ) {\\n\\t\\targument = +argument;\\n\\t\\treturn markFunction(function( seed, matches ) {\\n\\t\\t\\tvar j,\\n\\t\\t\\t\\tmatchIndexes = fn( [], seed.length, argument ),\\n\\t\\t\\t\\ti = matchIndexes.length;\\n\\n\\t\\t\\t// Match elements found at the specified indexes\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( seed[ (j = matchIndexes[i]) ] ) {\\n\\t\\t\\t\\t\\tseed[j] = !(matches[j] = seed[j]);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t});\\n\\t});\\n}\\n\\n/**\\n * Checks a node for validity as a Sizzle context\\n * @param {Element|Object=} context\\n * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\\n */\\nfunction testContext( context ) {\\n\\treturn context && typeof context.getElementsByTagName !== \\\"undefined\\\" && context;\\n}\\n\\n// Expose support vars for convenience\\nsupport = Sizzle.support = {};\\n\\n/**\\n * Detects XML nodes\\n * @param {Element|Object} elem An element or a document\\n * @returns {Boolean} True iff elem is a non-HTML XML node\\n */\\nisXML = Sizzle.isXML = function( elem ) {\\n\\t// documentElement is verified for cases where it doesn't yet exist\\n\\t// (such as loading iframes in IE - #4833)\\n\\tvar documentElement = elem && (elem.ownerDocument || elem).documentElement;\\n\\treturn documentElement ? documentElement.nodeName !== \\\"HTML\\\" : false;\\n};\\n\\n/**\\n * Sets document-related variables once based on the current document\\n * @param {Element|Object} [doc] An element or document object to use to set the document\\n * @returns {Object} Returns the current document\\n */\\nsetDocument = Sizzle.setDocument = function( node ) {\\n\\tvar hasCompare, subWindow,\\n\\t\\tdoc = node ? node.ownerDocument || node : preferredDoc;\\n\\n\\t// Return early if doc is invalid or already selected\\n\\tif ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {\\n\\t\\treturn document;\\n\\t}\\n\\n\\t// Update global variables\\n\\tdocument = doc;\\n\\tdocElem = document.documentElement;\\n\\tdocumentIsHTML = !isXML( document );\\n\\n\\t// Support: IE 9-11, Edge\\n\\t// Accessing iframe documents after unload throws \\\"permission denied\\\" errors (jQuery #13936)\\n\\tif ( preferredDoc !== document &&\\n\\t\\t(subWindow = document.defaultView) && subWindow.top !== subWindow ) {\\n\\n\\t\\t// Support: IE 11, Edge\\n\\t\\tif ( subWindow.addEventListener ) {\\n\\t\\t\\tsubWindow.addEventListener( \\\"unload\\\", unloadHandler, false );\\n\\n\\t\\t// Support: IE 9 - 10 only\\n\\t\\t} else if ( subWindow.attachEvent ) {\\n\\t\\t\\tsubWindow.attachEvent( \\\"onunload\\\", unloadHandler );\\n\\t\\t}\\n\\t}\\n\\n\\t/* Attributes\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Support: IE<8\\n\\t// Verify that getAttribute really returns attributes and not properties\\n\\t// (excepting IE8 booleans)\\n\\tsupport.attributes = assert(function( el ) {\\n\\t\\tel.className = \\\"i\\\";\\n\\t\\treturn !el.getAttribute(\\\"className\\\");\\n\\t});\\n\\n\\t/* getElement(s)By*\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Check if getElementsByTagName(\\\"*\\\") returns only elements\\n\\tsupport.getElementsByTagName = assert(function( el ) {\\n\\t\\tel.appendChild( document.createComment(\\\"\\\") );\\n\\t\\treturn !el.getElementsByTagName(\\\"*\\\").length;\\n\\t});\\n\\n\\t// Support: IE<9\\n\\tsupport.getElementsByClassName = rnative.test( document.getElementsByClassName );\\n\\n\\t// Support: IE<10\\n\\t// Check if getElementById returns elements by name\\n\\t// The broken getElementById methods don't pick up programmatically-set names,\\n\\t// so use a roundabout getElementsByName test\\n\\tsupport.getById = assert(function( el ) {\\n\\t\\tdocElem.appendChild( el ).id = expando;\\n\\t\\treturn !document.getElementsByName || !document.getElementsByName( expando ).length;\\n\\t});\\n\\n\\t// ID filter and find\\n\\tif ( support.getById ) {\\n\\t\\tExpr.filter[\\\"ID\\\"] = function( id ) {\\n\\t\\t\\tvar attrId = id.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn elem.getAttribute(\\\"id\\\") === attrId;\\n\\t\\t\\t};\\n\\t\\t};\\n\\t\\tExpr.find[\\\"ID\\\"] = function( id, context ) {\\n\\t\\t\\tif ( typeof context.getElementById !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\t\\tvar elem = context.getElementById( id );\\n\\t\\t\\t\\treturn elem ? [ elem ] : [];\\n\\t\\t\\t}\\n\\t\\t};\\n\\t} else {\\n\\t\\tExpr.filter[\\\"ID\\\"] =  function( id ) {\\n\\t\\t\\tvar attrId = id.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar node = typeof elem.getAttributeNode !== \\\"undefined\\\" &&\\n\\t\\t\\t\\t\\telem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\treturn node && node.value === attrId;\\n\\t\\t\\t};\\n\\t\\t};\\n\\n\\t\\t// Support: IE 6 - 7 only\\n\\t\\t// getElementById is not reliable as a find shortcut\\n\\t\\tExpr.find[\\\"ID\\\"] = function( id, context ) {\\n\\t\\t\\tif ( typeof context.getElementById !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\t\\tvar node, i, elems,\\n\\t\\t\\t\\t\\telem = context.getElementById( id );\\n\\n\\t\\t\\t\\tif ( elem ) {\\n\\n\\t\\t\\t\\t\\t// Verify the id attribute\\n\\t\\t\\t\\t\\tnode = elem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\t\\tif ( node && node.value === id ) {\\n\\t\\t\\t\\t\\t\\treturn [ elem ];\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Fall back on getElementsByName\\n\\t\\t\\t\\t\\telems = context.getElementsByName( id );\\n\\t\\t\\t\\t\\ti = 0;\\n\\t\\t\\t\\t\\twhile ( (elem = elems[i++]) ) {\\n\\t\\t\\t\\t\\t\\tnode = elem.getAttributeNode(\\\"id\\\");\\n\\t\\t\\t\\t\\t\\tif ( node && node.value === id ) {\\n\\t\\t\\t\\t\\t\\t\\treturn [ elem ];\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn [];\\n\\t\\t\\t}\\n\\t\\t};\\n\\t}\\n\\n\\t// Tag\\n\\tExpr.find[\\\"TAG\\\"] = support.getElementsByTagName ?\\n\\t\\tfunction( tag, context ) {\\n\\t\\t\\tif ( typeof context.getElementsByTagName !== \\\"undefined\\\" ) {\\n\\t\\t\\t\\treturn context.getElementsByTagName( tag );\\n\\n\\t\\t\\t// DocumentFragment nodes don't have gEBTN\\n\\t\\t\\t} else if ( support.qsa ) {\\n\\t\\t\\t\\treturn context.querySelectorAll( tag );\\n\\t\\t\\t}\\n\\t\\t} :\\n\\n\\t\\tfunction( tag, context ) {\\n\\t\\t\\tvar elem,\\n\\t\\t\\t\\ttmp = [],\\n\\t\\t\\t\\ti = 0,\\n\\t\\t\\t\\t// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\\n\\t\\t\\t\\tresults = context.getElementsByTagName( tag );\\n\\n\\t\\t\\t// Filter out possible comments\\n\\t\\t\\tif ( tag === \\\"*\\\" ) {\\n\\t\\t\\t\\twhile ( (elem = results[i++]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\t\\t\\t\\ttmp.push( elem );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn tmp;\\n\\t\\t\\t}\\n\\t\\t\\treturn results;\\n\\t\\t};\\n\\n\\t// Class\\n\\tExpr.find[\\\"CLASS\\\"] = support.getElementsByClassName && function( className, context ) {\\n\\t\\tif ( typeof context.getElementsByClassName !== \\\"undefined\\\" && documentIsHTML ) {\\n\\t\\t\\treturn context.getElementsByClassName( className );\\n\\t\\t}\\n\\t};\\n\\n\\t/* QSA/matchesSelector\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// QSA and matchesSelector support\\n\\n\\t// matchesSelector(:active) reports false when true (IE9/Opera 11.5)\\n\\trbuggyMatches = [];\\n\\n\\t// qSa(:focus) reports false when true (Chrome 21)\\n\\t// We allow this because of a bug in IE8/9 that throws an error\\n\\t// whenever `document.activeElement` is accessed on an iframe\\n\\t// So, we allow :focus to pass through QSA all the time to avoid the IE error\\n\\t// See https://bugs.jquery.com/ticket/13378\\n\\trbuggyQSA = [];\\n\\n\\tif ( (support.qsa = rnative.test( document.querySelectorAll )) ) {\\n\\t\\t// Build QSA regex\\n\\t\\t// Regex strategy adopted from Diego Perini\\n\\t\\tassert(function( el ) {\\n\\t\\t\\t// Select is set to empty string on purpose\\n\\t\\t\\t// This is to test IE's treatment of not explicitly\\n\\t\\t\\t// setting a boolean content attribute,\\n\\t\\t\\t// since its presence should be enough\\n\\t\\t\\t// https://bugs.jquery.com/ticket/12359\\n\\t\\t\\tdocElem.appendChild( el ).innerHTML = \\\"<a id='\\\" + expando + \\\"'></a>\\\" +\\n\\t\\t\\t\\t\\\"<select id='\\\" + expando + \\\"-\\\\r\\\\\\\\' msallowcapture=''>\\\" +\\n\\t\\t\\t\\t\\\"<option selected=''></option></select>\\\";\\n\\n\\t\\t\\t// Support: IE8, Opera 11-12.16\\n\\t\\t\\t// Nothing should be selected when empty strings follow ^= or $= or *=\\n\\t\\t\\t// The test attribute must be unknown in Opera but \\\"safe\\\" for WinRT\\n\\t\\t\\t// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\\n\\t\\t\\tif ( el.querySelectorAll(\\\"[msallowcapture^='']\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"[*^$]=\\\" + whitespace + \\\"*(?:''|\\\\\\\"\\\\\\\")\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: IE8\\n\\t\\t\\t// Boolean attributes and \\\"value\\\" are not treated correctly\\n\\t\\t\\tif ( !el.querySelectorAll(\\\"[selected]\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"\\\\\\\\[\\\" + whitespace + \\\"*(?:value|\\\" + booleans + \\\")\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+\\n\\t\\t\\tif ( !el.querySelectorAll( \\\"[id~=\\\" + expando + \\\"-]\\\" ).length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\"~=\\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Webkit/Opera - :checked should return selected option elements\\n\\t\\t\\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\n\\t\\t\\t// IE8 throws error here and will not see later tests\\n\\t\\t\\tif ( !el.querySelectorAll(\\\":checked\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\":checked\\\");\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: Safari 8+, iOS 8+\\n\\t\\t\\t// https://bugs.webkit.org/show_bug.cgi?id=136851\\n\\t\\t\\t// In-page `selector#id sibling-combinator selector` fails\\n\\t\\t\\tif ( !el.querySelectorAll( \\\"a#\\\" + expando + \\\"+*\\\" ).length ) {\\n\\t\\t\\t\\trbuggyQSA.push(\\\".#.+[+~]\\\");\\n\\t\\t\\t}\\n\\t\\t});\\n\\n\\t\\tassert(function( el ) {\\n\\t\\t\\tel.innerHTML = \\\"<a href='' disabled='disabled'></a>\\\" +\\n\\t\\t\\t\\t\\\"<select disabled='disabled'><option/></select>\\\";\\n\\n\\t\\t\\t// Support: Windows 8 Native Apps\\n\\t\\t\\t// The type and name attributes are restricted during .innerHTML assignment\\n\\t\\t\\tvar input = document.createElement(\\\"input\\\");\\n\\t\\t\\tinput.setAttribute( \\\"type\\\", \\\"hidden\\\" );\\n\\t\\t\\tel.appendChild( input ).setAttribute( \\\"name\\\", \\\"D\\\" );\\n\\n\\t\\t\\t// Support: IE8\\n\\t\\t\\t// Enforce case-sensitivity of name attribute\\n\\t\\t\\tif ( el.querySelectorAll(\\\"[name=d]\\\").length ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\"name\\\" + whitespace + \\\"*[*^$|!~]?=\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\\n\\t\\t\\t// IE8 throws error here and will not see later tests\\n\\t\\t\\tif ( el.querySelectorAll(\\\":enabled\\\").length !== 2 ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\":enabled\\\", \\\":disabled\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Support: IE9-11+\\n\\t\\t\\t// IE's :disabled selector does not pick up the children of disabled fieldsets\\n\\t\\t\\tdocElem.appendChild( el ).disabled = true;\\n\\t\\t\\tif ( el.querySelectorAll(\\\":disabled\\\").length !== 2 ) {\\n\\t\\t\\t\\trbuggyQSA.push( \\\":enabled\\\", \\\":disabled\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Opera 10-11 does not throw on post-comma invalid pseudos\\n\\t\\t\\tel.querySelectorAll(\\\"*,:x\\\");\\n\\t\\t\\trbuggyQSA.push(\\\",.*:\\\");\\n\\t\\t});\\n\\t}\\n\\n\\tif ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||\\n\\t\\tdocElem.webkitMatchesSelector ||\\n\\t\\tdocElem.mozMatchesSelector ||\\n\\t\\tdocElem.oMatchesSelector ||\\n\\t\\tdocElem.msMatchesSelector) )) ) {\\n\\n\\t\\tassert(function( el ) {\\n\\t\\t\\t// Check to see if it's possible to do matchesSelector\\n\\t\\t\\t// on a disconnected node (IE 9)\\n\\t\\t\\tsupport.disconnectedMatch = matches.call( el, \\\"*\\\" );\\n\\n\\t\\t\\t// This should fail with an exception\\n\\t\\t\\t// Gecko does not error, returns false instead\\n\\t\\t\\tmatches.call( el, \\\"[s!='']:x\\\" );\\n\\t\\t\\trbuggyMatches.push( \\\"!=\\\", pseudos );\\n\\t\\t});\\n\\t}\\n\\n\\trbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join(\\\"|\\\") );\\n\\trbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join(\\\"|\\\") );\\n\\n\\t/* Contains\\n\\t---------------------------------------------------------------------- */\\n\\thasCompare = rnative.test( docElem.compareDocumentPosition );\\n\\n\\t// Element contains another\\n\\t// Purposefully self-exclusive\\n\\t// As in, an element does not contain itself\\n\\tcontains = hasCompare || rnative.test( docElem.contains ) ?\\n\\t\\tfunction( a, b ) {\\n\\t\\t\\tvar adown = a.nodeType === 9 ? a.documentElement : a,\\n\\t\\t\\t\\tbup = b && b.parentNode;\\n\\t\\t\\treturn a === bup || !!( bup && bup.nodeType === 1 && (\\n\\t\\t\\t\\tadown.contains ?\\n\\t\\t\\t\\t\\tadown.contains( bup ) :\\n\\t\\t\\t\\t\\ta.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16\\n\\t\\t\\t));\\n\\t\\t} :\\n\\t\\tfunction( a, b ) {\\n\\t\\t\\tif ( b ) {\\n\\t\\t\\t\\twhile ( (b = b.parentNode) ) {\\n\\t\\t\\t\\t\\tif ( b === a ) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t};\\n\\n\\t/* Sorting\\n\\t---------------------------------------------------------------------- */\\n\\n\\t// Document order sorting\\n\\tsortOrder = hasCompare ?\\n\\tfunction( a, b ) {\\n\\n\\t\\t// Flag for duplicate removal\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\t// Sort on method existence if only one input has compareDocumentPosition\\n\\t\\tvar compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\\n\\t\\tif ( compare ) {\\n\\t\\t\\treturn compare;\\n\\t\\t}\\n\\n\\t\\t// Calculate position if both inputs belong to the same document\\n\\t\\tcompare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\\n\\t\\t\\ta.compareDocumentPosition( b ) :\\n\\n\\t\\t\\t// Otherwise we know they are disconnected\\n\\t\\t\\t1;\\n\\n\\t\\t// Disconnected nodes\\n\\t\\tif ( compare & 1 ||\\n\\t\\t\\t(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {\\n\\n\\t\\t\\t// Choose the first element that is related to our preferred document\\n\\t\\t\\tif ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t\\tif ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {\\n\\t\\t\\t\\treturn 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Maintain original order\\n\\t\\t\\treturn sortInput ?\\n\\t\\t\\t\\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\\n\\t\\t\\t\\t0;\\n\\t\\t}\\n\\n\\t\\treturn compare & 4 ? -1 : 1;\\n\\t} :\\n\\tfunction( a, b ) {\\n\\t\\t// Exit early if the nodes are identical\\n\\t\\tif ( a === b ) {\\n\\t\\t\\thasDuplicate = true;\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\tvar cur,\\n\\t\\t\\ti = 0,\\n\\t\\t\\taup = a.parentNode,\\n\\t\\t\\tbup = b.parentNode,\\n\\t\\t\\tap = [ a ],\\n\\t\\t\\tbp = [ b ];\\n\\n\\t\\t// Parentless nodes are either documents or disconnected\\n\\t\\tif ( !aup || !bup ) {\\n\\t\\t\\treturn a === document ? -1 :\\n\\t\\t\\t\\tb === document ? 1 :\\n\\t\\t\\t\\taup ? -1 :\\n\\t\\t\\t\\tbup ? 1 :\\n\\t\\t\\t\\tsortInput ?\\n\\t\\t\\t\\t( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :\\n\\t\\t\\t\\t0;\\n\\n\\t\\t// If the nodes are siblings, we can do a quick check\\n\\t\\t} else if ( aup === bup ) {\\n\\t\\t\\treturn siblingCheck( a, b );\\n\\t\\t}\\n\\n\\t\\t// Otherwise we need full lists of their ancestors for comparison\\n\\t\\tcur = a;\\n\\t\\twhile ( (cur = cur.parentNode) ) {\\n\\t\\t\\tap.unshift( cur );\\n\\t\\t}\\n\\t\\tcur = b;\\n\\t\\twhile ( (cur = cur.parentNode) ) {\\n\\t\\t\\tbp.unshift( cur );\\n\\t\\t}\\n\\n\\t\\t// Walk down the tree looking for a discrepancy\\n\\t\\twhile ( ap[i] === bp[i] ) {\\n\\t\\t\\ti++;\\n\\t\\t}\\n\\n\\t\\treturn i ?\\n\\t\\t\\t// Do a sibling check if the nodes have a common ancestor\\n\\t\\t\\tsiblingCheck( ap[i], bp[i] ) :\\n\\n\\t\\t\\t// Otherwise nodes in our document sort first\\n\\t\\t\\tap[i] === preferredDoc ? -1 :\\n\\t\\t\\tbp[i] === preferredDoc ? 1 :\\n\\t\\t\\t0;\\n\\t};\\n\\n\\treturn document;\\n};\\n\\nSizzle.matches = function( expr, elements ) {\\n\\treturn Sizzle( expr, null, null, elements );\\n};\\n\\nSizzle.matchesSelector = function( elem, expr ) {\\n\\t// Set document vars if needed\\n\\tif ( ( elem.ownerDocument || elem ) !== document ) {\\n\\t\\tsetDocument( elem );\\n\\t}\\n\\n\\t// Make sure that attribute selectors are quoted\\n\\texpr = expr.replace( rattributeQuotes, \\\"='$1']\\\" );\\n\\n\\tif ( support.matchesSelector && documentIsHTML &&\\n\\t\\t!compilerCache[ expr + \\\" \\\" ] &&\\n\\t\\t( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&\\n\\t\\t( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {\\n\\n\\t\\ttry {\\n\\t\\t\\tvar ret = matches.call( elem, expr );\\n\\n\\t\\t\\t// IE 9's matchesSelector returns false on disconnected nodes\\n\\t\\t\\tif ( ret || support.disconnectedMatch ||\\n\\t\\t\\t\\t\\t// As well, disconnected nodes are said to be in a document\\n\\t\\t\\t\\t\\t// fragment in IE 9\\n\\t\\t\\t\\t\\telem.document && elem.document.nodeType !== 11 ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\t\\t} catch (e) {}\\n\\t}\\n\\n\\treturn Sizzle( expr, document, null, [ elem ] ).length > 0;\\n};\\n\\nSizzle.contains = function( context, elem ) {\\n\\t// Set document vars if needed\\n\\tif ( ( context.ownerDocument || context ) !== document ) {\\n\\t\\tsetDocument( context );\\n\\t}\\n\\treturn contains( context, elem );\\n};\\n\\nSizzle.attr = function( elem, name ) {\\n\\t// Set document vars if needed\\n\\tif ( ( elem.ownerDocument || elem ) !== document ) {\\n\\t\\tsetDocument( elem );\\n\\t}\\n\\n\\tvar fn = Expr.attrHandle[ name.toLowerCase() ],\\n\\t\\t// Don't get fooled by Object.prototype properties (jQuery #13807)\\n\\t\\tval = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?\\n\\t\\t\\tfn( elem, name, !documentIsHTML ) :\\n\\t\\t\\tundefined;\\n\\n\\treturn val !== undefined ?\\n\\t\\tval :\\n\\t\\tsupport.attributes || !documentIsHTML ?\\n\\t\\t\\telem.getAttribute( name ) :\\n\\t\\t\\t(val = elem.getAttributeNode(name)) && val.specified ?\\n\\t\\t\\t\\tval.value :\\n\\t\\t\\t\\tnull;\\n};\\n\\nSizzle.escape = function( sel ) {\\n\\treturn (sel + \\\"\\\").replace( rcssescape, fcssescape );\\n};\\n\\nSizzle.error = function( msg ) {\\n\\tthrow new Error( \\\"Syntax error, unrecognized expression: \\\" + msg );\\n};\\n\\n/**\\n * Document sorting and removing duplicates\\n * @param {ArrayLike} results\\n */\\nSizzle.uniqueSort = function( results ) {\\n\\tvar elem,\\n\\t\\tduplicates = [],\\n\\t\\tj = 0,\\n\\t\\ti = 0;\\n\\n\\t// Unless we *know* we can detect duplicates, assume their presence\\n\\thasDuplicate = !support.detectDuplicates;\\n\\tsortInput = !support.sortStable && results.slice( 0 );\\n\\tresults.sort( sortOrder );\\n\\n\\tif ( hasDuplicate ) {\\n\\t\\twhile ( (elem = results[i++]) ) {\\n\\t\\t\\tif ( elem === results[ i ] ) {\\n\\t\\t\\t\\tj = duplicates.push( i );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\twhile ( j-- ) {\\n\\t\\t\\tresults.splice( duplicates[ j ], 1 );\\n\\t\\t}\\n\\t}\\n\\n\\t// Clear input after sorting to release objects\\n\\t// See https://github.com/jquery/sizzle/pull/225\\n\\tsortInput = null;\\n\\n\\treturn results;\\n};\\n\\n/**\\n * Utility function for retrieving the text value of an array of DOM nodes\\n * @param {Array|Element} elem\\n */\\ngetText = Sizzle.getText = function( elem ) {\\n\\tvar node,\\n\\t\\tret = \\\"\\\",\\n\\t\\ti = 0,\\n\\t\\tnodeType = elem.nodeType;\\n\\n\\tif ( !nodeType ) {\\n\\t\\t// If no nodeType, this is expected to be an array\\n\\t\\twhile ( (node = elem[i++]) ) {\\n\\t\\t\\t// Do not traverse comment nodes\\n\\t\\t\\tret += getText( node );\\n\\t\\t}\\n\\t} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {\\n\\t\\t// Use textContent for elements\\n\\t\\t// innerText usage removed for consistency of new lines (jQuery #11153)\\n\\t\\tif ( typeof elem.textContent === \\\"string\\\" ) {\\n\\t\\t\\treturn elem.textContent;\\n\\t\\t} else {\\n\\t\\t\\t// Traverse its children\\n\\t\\t\\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\\n\\t\\t\\t\\tret += getText( elem );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t} else if ( nodeType === 3 || nodeType === 4 ) {\\n\\t\\treturn elem.nodeValue;\\n\\t}\\n\\t// Do not include comment or processing instruction nodes\\n\\n\\treturn ret;\\n};\\n\\nExpr = Sizzle.selectors = {\\n\\n\\t// Can be adjusted by the user\\n\\tcacheLength: 50,\\n\\n\\tcreatePseudo: markFunction,\\n\\n\\tmatch: matchExpr,\\n\\n\\tattrHandle: {},\\n\\n\\tfind: {},\\n\\n\\trelative: {\\n\\t\\t\\\">\\\": { dir: \\\"parentNode\\\", first: true },\\n\\t\\t\\\" \\\": { dir: \\\"parentNode\\\" },\\n\\t\\t\\\"+\\\": { dir: \\\"previousSibling\\\", first: true },\\n\\t\\t\\\"~\\\": { dir: \\\"previousSibling\\\" }\\n\\t},\\n\\n\\tpreFilter: {\\n\\t\\t\\\"ATTR\\\": function( match ) {\\n\\t\\t\\tmatch[1] = match[1].replace( runescape, funescape );\\n\\n\\t\\t\\t// Move the given value to match[3] whether quoted or unquoted\\n\\t\\t\\tmatch[3] = ( match[3] || match[4] || match[5] || \\\"\\\" ).replace( runescape, funescape );\\n\\n\\t\\t\\tif ( match[2] === \\\"~=\\\" ) {\\n\\t\\t\\t\\tmatch[3] = \\\" \\\" + match[3] + \\\" \\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn match.slice( 0, 4 );\\n\\t\\t},\\n\\n\\t\\t\\\"CHILD\\\": function( match ) {\\n\\t\\t\\t/* matches from matchExpr[\\\"CHILD\\\"]\\n\\t\\t\\t\\t1 type (only|nth|...)\\n\\t\\t\\t\\t2 what (child|of-type)\\n\\t\\t\\t\\t3 argument (even|odd|\\\\d*|\\\\d*n([+-]\\\\d+)?|...)\\n\\t\\t\\t\\t4 xn-component of xn+y argument ([+-]?\\\\d*n|)\\n\\t\\t\\t\\t5 sign of xn-component\\n\\t\\t\\t\\t6 x of xn-component\\n\\t\\t\\t\\t7 sign of y-component\\n\\t\\t\\t\\t8 y of y-component\\n\\t\\t\\t*/\\n\\t\\t\\tmatch[1] = match[1].toLowerCase();\\n\\n\\t\\t\\tif ( match[1].slice( 0, 3 ) === \\\"nth\\\" ) {\\n\\t\\t\\t\\t// nth-* requires argument\\n\\t\\t\\t\\tif ( !match[3] ) {\\n\\t\\t\\t\\t\\tSizzle.error( match[0] );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// numeric x and y parameters for Expr.filter.CHILD\\n\\t\\t\\t\\t// remember that false/true cast respectively to 0/1\\n\\t\\t\\t\\tmatch[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \\\"even\\\" || match[3] === \\\"odd\\\" ) );\\n\\t\\t\\t\\tmatch[5] = +( ( match[7] + match[8] ) || match[3] === \\\"odd\\\" );\\n\\n\\t\\t\\t// other types prohibit arguments\\n\\t\\t\\t} else if ( match[3] ) {\\n\\t\\t\\t\\tSizzle.error( match[0] );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn match;\\n\\t\\t},\\n\\n\\t\\t\\\"PSEUDO\\\": function( match ) {\\n\\t\\t\\tvar excess,\\n\\t\\t\\t\\tunquoted = !match[6] && match[2];\\n\\n\\t\\t\\tif ( matchExpr[\\\"CHILD\\\"].test( match[0] ) ) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Accept quoted arguments as-is\\n\\t\\t\\tif ( match[3] ) {\\n\\t\\t\\t\\tmatch[2] = match[4] || match[5] || \\\"\\\";\\n\\n\\t\\t\\t// Strip excess characters from unquoted arguments\\n\\t\\t\\t} else if ( unquoted && rpseudo.test( unquoted ) &&\\n\\t\\t\\t\\t// Get excess from tokenize (recursively)\\n\\t\\t\\t\\t(excess = tokenize( unquoted, true )) &&\\n\\t\\t\\t\\t// advance to the next closing parenthesis\\n\\t\\t\\t\\t(excess = unquoted.indexOf( \\\")\\\", unquoted.length - excess ) - unquoted.length) ) {\\n\\n\\t\\t\\t\\t// excess is a negative index\\n\\t\\t\\t\\tmatch[0] = match[0].slice( 0, excess );\\n\\t\\t\\t\\tmatch[2] = unquoted.slice( 0, excess );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Return only captures needed by the pseudo filter method (type and argument)\\n\\t\\t\\treturn match.slice( 0, 3 );\\n\\t\\t}\\n\\t},\\n\\n\\tfilter: {\\n\\n\\t\\t\\\"TAG\\\": function( nodeNameSelector ) {\\n\\t\\t\\tvar nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();\\n\\t\\t\\treturn nodeNameSelector === \\\"*\\\" ?\\n\\t\\t\\t\\tfunction() { return true; } :\\n\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\treturn elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\\n\\t\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"CLASS\\\": function( className ) {\\n\\t\\t\\tvar pattern = classCache[ className + \\\" \\\" ];\\n\\n\\t\\t\\treturn pattern ||\\n\\t\\t\\t\\t(pattern = new RegExp( \\\"(^|\\\" + whitespace + \\\")\\\" + className + \\\"(\\\" + whitespace + \\\"|$)\\\" )) &&\\n\\t\\t\\t\\tclassCache( className, function( elem ) {\\n\\t\\t\\t\\t\\treturn pattern.test( typeof elem.className === \\\"string\\\" && elem.className || typeof elem.getAttribute !== \\\"undefined\\\" && elem.getAttribute(\\\"class\\\") || \\\"\\\" );\\n\\t\\t\\t\\t});\\n\\t\\t},\\n\\n\\t\\t\\\"ATTR\\\": function( name, operator, check ) {\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar result = Sizzle.attr( elem, name );\\n\\n\\t\\t\\t\\tif ( result == null ) {\\n\\t\\t\\t\\t\\treturn operator === \\\"!=\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif ( !operator ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tresult += \\\"\\\";\\n\\n\\t\\t\\t\\treturn operator === \\\"=\\\" ? result === check :\\n\\t\\t\\t\\t\\toperator === \\\"!=\\\" ? result !== check :\\n\\t\\t\\t\\t\\toperator === \\\"^=\\\" ? check && result.indexOf( check ) === 0 :\\n\\t\\t\\t\\t\\toperator === \\\"*=\\\" ? check && result.indexOf( check ) > -1 :\\n\\t\\t\\t\\t\\toperator === \\\"$=\\\" ? check && result.slice( -check.length ) === check :\\n\\t\\t\\t\\t\\toperator === \\\"~=\\\" ? ( \\\" \\\" + result.replace( rwhitespace, \\\" \\\" ) + \\\" \\\" ).indexOf( check ) > -1 :\\n\\t\\t\\t\\t\\toperator === \\\"|=\\\" ? result === check || result.slice( 0, check.length + 1 ) === check + \\\"-\\\" :\\n\\t\\t\\t\\t\\tfalse;\\n\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"CHILD\\\": function( type, what, argument, first, last ) {\\n\\t\\t\\tvar simple = type.slice( 0, 3 ) !== \\\"nth\\\",\\n\\t\\t\\t\\tforward = type.slice( -4 ) !== \\\"last\\\",\\n\\t\\t\\t\\tofType = what === \\\"of-type\\\";\\n\\n\\t\\t\\treturn first === 1 && last === 0 ?\\n\\n\\t\\t\\t\\t// Shortcut for :nth-*(n)\\n\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\treturn !!elem.parentNode;\\n\\t\\t\\t\\t} :\\n\\n\\t\\t\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\t\\t\\tvar cache, uniqueCache, outerCache, node, nodeIndex, start,\\n\\t\\t\\t\\t\\t\\tdir = simple !== forward ? \\\"nextSibling\\\" : \\\"previousSibling\\\",\\n\\t\\t\\t\\t\\t\\tparent = elem.parentNode,\\n\\t\\t\\t\\t\\t\\tname = ofType && elem.nodeName.toLowerCase(),\\n\\t\\t\\t\\t\\t\\tuseCache = !xml && !ofType,\\n\\t\\t\\t\\t\\t\\tdiff = false;\\n\\n\\t\\t\\t\\t\\tif ( parent ) {\\n\\n\\t\\t\\t\\t\\t\\t// :(first|last|only)-(child|of-type)\\n\\t\\t\\t\\t\\t\\tif ( simple ) {\\n\\t\\t\\t\\t\\t\\t\\twhile ( dir ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tnode = elem;\\n\\t\\t\\t\\t\\t\\t\\t\\twhile ( (node = node[ dir ]) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( ofType ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeName.toLowerCase() === name :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeType === 1 ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t// Reverse direction for :only-* (if we haven't yet done so)\\n\\t\\t\\t\\t\\t\\t\\t\\tstart = dir = type === \\\"only\\\" && !start && \\\"nextSibling\\\";\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\tstart = [ forward ? parent.firstChild : parent.lastChild ];\\n\\n\\t\\t\\t\\t\\t\\t// non-xml :nth-child(...) stores cache data on `parent`\\n\\t\\t\\t\\t\\t\\tif ( forward && useCache ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Seek `elem` from a previously-cached index\\n\\n\\t\\t\\t\\t\\t\\t\\t// ...in a gzip-friendly way\\n\\t\\t\\t\\t\\t\\t\\tnode = parent;\\n\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\tcache = uniqueCache[ type ] || [];\\n\\t\\t\\t\\t\\t\\t\\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\\n\\t\\t\\t\\t\\t\\t\\tdiff = nodeIndex && cache[ 2 ];\\n\\t\\t\\t\\t\\t\\t\\tnode = nodeIndex && parent.childNodes[ nodeIndex ];\\n\\n\\t\\t\\t\\t\\t\\t\\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Fallback to seeking `elem` from the start\\n\\t\\t\\t\\t\\t\\t\\t\\t(diff = nodeIndex = 0) || start.pop()) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// When found, cache indexes on `parent` and break\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( node.nodeType === 1 && ++diff && node === elem ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache[ type ] = [ dirruns, nodeIndex, diff ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t// Use previously-cached element index if available\\n\\t\\t\\t\\t\\t\\t\\tif ( useCache ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// ...in a gzip-friendly way\\n\\t\\t\\t\\t\\t\\t\\t\\tnode = elem;\\n\\t\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\tcache = uniqueCache[ type ] || [];\\n\\t\\t\\t\\t\\t\\t\\t\\tnodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];\\n\\t\\t\\t\\t\\t\\t\\t\\tdiff = nodeIndex;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t// xml :nth-child(...)\\n\\t\\t\\t\\t\\t\\t\\t// or :nth-last-child(...) or :nth(-last)?-of-type(...)\\n\\t\\t\\t\\t\\t\\t\\tif ( diff === false ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t// Use the same loop as above to seek `elem` from the start\\n\\t\\t\\t\\t\\t\\t\\t\\twhile ( (node = ++nodeIndex && node && node[ dir ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t(diff = nodeIndex = 0) || start.pop()) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( ( ofType ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeName.toLowerCase() === name :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tnode.nodeType === 1 ) &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t++diff ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Cache the index of each encountered element\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( useCache ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\touterCache = node[ expando ] || (node[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ node.uniqueID ] ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t(outerCache[ node.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tuniqueCache[ type ] = [ dirruns, diff ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( node === elem ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Incorporate the offset, then check against cycle size\\n\\t\\t\\t\\t\\t\\tdiff -= last;\\n\\t\\t\\t\\t\\t\\treturn diff === first || ( diff % first === 0 && diff / first >= 0 );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t},\\n\\n\\t\\t\\\"PSEUDO\\\": function( pseudo, argument ) {\\n\\t\\t\\t// pseudo-class names are case-insensitive\\n\\t\\t\\t// http://www.w3.org/TR/selectors/#pseudo-classes\\n\\t\\t\\t// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\\n\\t\\t\\t// Remember that setFilters inherits from pseudos\\n\\t\\t\\tvar args,\\n\\t\\t\\t\\tfn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||\\n\\t\\t\\t\\t\\tSizzle.error( \\\"unsupported pseudo: \\\" + pseudo );\\n\\n\\t\\t\\t// The user may use createPseudo to indicate that\\n\\t\\t\\t// arguments are needed to create the filter function\\n\\t\\t\\t// just as Sizzle does\\n\\t\\t\\tif ( fn[ expando ] ) {\\n\\t\\t\\t\\treturn fn( argument );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// But maintain support for old signatures\\n\\t\\t\\tif ( fn.length > 1 ) {\\n\\t\\t\\t\\targs = [ pseudo, pseudo, \\\"\\\", argument ];\\n\\t\\t\\t\\treturn Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?\\n\\t\\t\\t\\t\\tmarkFunction(function( seed, matches ) {\\n\\t\\t\\t\\t\\t\\tvar idx,\\n\\t\\t\\t\\t\\t\\t\\tmatched = fn( seed, argument ),\\n\\t\\t\\t\\t\\t\\t\\ti = matched.length;\\n\\t\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\t\\tidx = indexOf( seed, matched[i] );\\n\\t\\t\\t\\t\\t\\t\\tseed[ idx ] = !( matches[ idx ] = matched[i] );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}) :\\n\\t\\t\\t\\t\\tfunction( elem ) {\\n\\t\\t\\t\\t\\t\\treturn fn( elem, 0, args );\\n\\t\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn fn;\\n\\t\\t}\\n\\t},\\n\\n\\tpseudos: {\\n\\t\\t// Potentially complex pseudos\\n\\t\\t\\\"not\\\": markFunction(function( selector ) {\\n\\t\\t\\t// Trim the selector passed to compile\\n\\t\\t\\t// to avoid treating leading and trailing\\n\\t\\t\\t// spaces as combinators\\n\\t\\t\\tvar input = [],\\n\\t\\t\\t\\tresults = [],\\n\\t\\t\\t\\tmatcher = compile( selector.replace( rtrim, \\\"$1\\\" ) );\\n\\n\\t\\t\\treturn matcher[ expando ] ?\\n\\t\\t\\t\\tmarkFunction(function( seed, matches, context, xml ) {\\n\\t\\t\\t\\t\\tvar elem,\\n\\t\\t\\t\\t\\t\\tunmatched = matcher( seed, null, xml, [] ),\\n\\t\\t\\t\\t\\t\\ti = seed.length;\\n\\n\\t\\t\\t\\t\\t// Match elements unmatched by `matcher`\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = unmatched[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\tseed[i] = !(matches[i] = elem);\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}) :\\n\\t\\t\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\t\\t\\tinput[0] = elem;\\n\\t\\t\\t\\t\\tmatcher( input, null, xml, results );\\n\\t\\t\\t\\t\\t// Don't keep the element (issue #299)\\n\\t\\t\\t\\t\\tinput[0] = null;\\n\\t\\t\\t\\t\\treturn !results.pop();\\n\\t\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t\\\"has\\\": markFunction(function( selector ) {\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn Sizzle( selector, elem ).length > 0;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t\\\"contains\\\": markFunction(function( text ) {\\n\\t\\t\\ttext = text.replace( runescape, funescape );\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\treturn ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t// \\\"Whether an element is represented by a :lang() selector\\n\\t\\t// is based solely on the element's language value\\n\\t\\t// being equal to the identifier C,\\n\\t\\t// or beginning with the identifier C immediately followed by \\\"-\\\".\\n\\t\\t// The matching of C against the element's language value is performed case-insensitively.\\n\\t\\t// The identifier C does not have to be a valid language name.\\\"\\n\\t\\t// http://www.w3.org/TR/selectors/#lang-pseudo\\n\\t\\t\\\"lang\\\": markFunction( function( lang ) {\\n\\t\\t\\t// lang value must be a valid identifier\\n\\t\\t\\tif ( !ridentifier.test(lang || \\\"\\\") ) {\\n\\t\\t\\t\\tSizzle.error( \\\"unsupported lang: \\\" + lang );\\n\\t\\t\\t}\\n\\t\\t\\tlang = lang.replace( runescape, funescape ).toLowerCase();\\n\\t\\t\\treturn function( elem ) {\\n\\t\\t\\t\\tvar elemLang;\\n\\t\\t\\t\\tdo {\\n\\t\\t\\t\\t\\tif ( (elemLang = documentIsHTML ?\\n\\t\\t\\t\\t\\t\\telem.lang :\\n\\t\\t\\t\\t\\t\\telem.getAttribute(\\\"xml:lang\\\") || elem.getAttribute(\\\"lang\\\")) ) {\\n\\n\\t\\t\\t\\t\\t\\telemLang = elemLang.toLowerCase();\\n\\t\\t\\t\\t\\t\\treturn elemLang === lang || elemLang.indexOf( lang + \\\"-\\\" ) === 0;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} while ( (elem = elem.parentNode) && elem.nodeType === 1 );\\n\\t\\t\\t\\treturn false;\\n\\t\\t\\t};\\n\\t\\t}),\\n\\n\\t\\t// Miscellaneous\\n\\t\\t\\\"target\\\": function( elem ) {\\n\\t\\t\\tvar hash = window.location && window.location.hash;\\n\\t\\t\\treturn hash && hash.slice( 1 ) === elem.id;\\n\\t\\t},\\n\\n\\t\\t\\\"root\\\": function( elem ) {\\n\\t\\t\\treturn elem === docElem;\\n\\t\\t},\\n\\n\\t\\t\\\"focus\\\": function( elem ) {\\n\\t\\t\\treturn elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\\n\\t\\t},\\n\\n\\t\\t// Boolean properties\\n\\t\\t\\\"enabled\\\": createDisabledPseudo( false ),\\n\\t\\t\\\"disabled\\\": createDisabledPseudo( true ),\\n\\n\\t\\t\\\"checked\\\": function( elem ) {\\n\\t\\t\\t// In CSS3, :checked should return both checked and selected elements\\n\\t\\t\\t// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\n\\t\\t\\tvar nodeName = elem.nodeName.toLowerCase();\\n\\t\\t\\treturn (nodeName === \\\"input\\\" && !!elem.checked) || (nodeName === \\\"option\\\" && !!elem.selected);\\n\\t\\t},\\n\\n\\t\\t\\\"selected\\\": function( elem ) {\\n\\t\\t\\t// Accessing this property makes selected-by-default\\n\\t\\t\\t// options in Safari work properly\\n\\t\\t\\tif ( elem.parentNode ) {\\n\\t\\t\\t\\telem.parentNode.selectedIndex;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn elem.selected === true;\\n\\t\\t},\\n\\n\\t\\t// Contents\\n\\t\\t\\\"empty\\\": function( elem ) {\\n\\t\\t\\t// http://www.w3.org/TR/selectors/#empty-pseudo\\n\\t\\t\\t// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\\n\\t\\t\\t//   but not by others (comment: 8; processing instruction: 7; etc.)\\n\\t\\t\\t// nodeType < 6 works because attributes (2) do not appear as children\\n\\t\\t\\tfor ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {\\n\\t\\t\\t\\tif ( elem.nodeType < 6 ) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t},\\n\\n\\t\\t\\\"parent\\\": function( elem ) {\\n\\t\\t\\treturn !Expr.pseudos[\\\"empty\\\"]( elem );\\n\\t\\t},\\n\\n\\t\\t// Element/input types\\n\\t\\t\\\"header\\\": function( elem ) {\\n\\t\\t\\treturn rheader.test( elem.nodeName );\\n\\t\\t},\\n\\n\\t\\t\\\"input\\\": function( elem ) {\\n\\t\\t\\treturn rinputs.test( elem.nodeName );\\n\\t\\t},\\n\\n\\t\\t\\\"button\\\": function( elem ) {\\n\\t\\t\\tvar name = elem.nodeName.toLowerCase();\\n\\t\\t\\treturn name === \\\"input\\\" && elem.type === \\\"button\\\" || name === \\\"button\\\";\\n\\t\\t},\\n\\n\\t\\t\\\"text\\\": function( elem ) {\\n\\t\\t\\tvar attr;\\n\\t\\t\\treturn elem.nodeName.toLowerCase() === \\\"input\\\" &&\\n\\t\\t\\t\\telem.type === \\\"text\\\" &&\\n\\n\\t\\t\\t\\t// Support: IE<8\\n\\t\\t\\t\\t// New HTML5 attribute values (e.g., \\\"search\\\") appear with elem.type === \\\"text\\\"\\n\\t\\t\\t\\t( (attr = elem.getAttribute(\\\"type\\\")) == null || attr.toLowerCase() === \\\"text\\\" );\\n\\t\\t},\\n\\n\\t\\t// Position-in-collection\\n\\t\\t\\\"first\\\": createPositionalPseudo(function() {\\n\\t\\t\\treturn [ 0 ];\\n\\t\\t}),\\n\\n\\t\\t\\\"last\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\treturn [ length - 1 ];\\n\\t\\t}),\\n\\n\\t\\t\\\"eq\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\treturn [ argument < 0 ? argument + length : argument ];\\n\\t\\t}),\\n\\n\\t\\t\\\"even\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\tvar i = 0;\\n\\t\\t\\tfor ( ; i < length; i += 2 ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"odd\\\": createPositionalPseudo(function( matchIndexes, length ) {\\n\\t\\t\\tvar i = 1;\\n\\t\\t\\tfor ( ; i < length; i += 2 ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"lt\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\tvar i = argument < 0 ? argument + length : argument;\\n\\t\\t\\tfor ( ; --i >= 0; ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t}),\\n\\n\\t\\t\\\"gt\\\": createPositionalPseudo(function( matchIndexes, length, argument ) {\\n\\t\\t\\tvar i = argument < 0 ? argument + length : argument;\\n\\t\\t\\tfor ( ; ++i < length; ) {\\n\\t\\t\\t\\tmatchIndexes.push( i );\\n\\t\\t\\t}\\n\\t\\t\\treturn matchIndexes;\\n\\t\\t})\\n\\t}\\n};\\n\\nExpr.pseudos[\\\"nth\\\"] = Expr.pseudos[\\\"eq\\\"];\\n\\n// Add button/input type pseudos\\nfor ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {\\n\\tExpr.pseudos[ i ] = createInputPseudo( i );\\n}\\nfor ( i in { submit: true, reset: true } ) {\\n\\tExpr.pseudos[ i ] = createButtonPseudo( i );\\n}\\n\\n// Easy API for creating new setFilters\\nfunction setFilters() {}\\nsetFilters.prototype = Expr.filters = Expr.pseudos;\\nExpr.setFilters = new setFilters();\\n\\ntokenize = Sizzle.tokenize = function( selector, parseOnly ) {\\n\\tvar matched, match, tokens, type,\\n\\t\\tsoFar, groups, preFilters,\\n\\t\\tcached = tokenCache[ selector + \\\" \\\" ];\\n\\n\\tif ( cached ) {\\n\\t\\treturn parseOnly ? 0 : cached.slice( 0 );\\n\\t}\\n\\n\\tsoFar = selector;\\n\\tgroups = [];\\n\\tpreFilters = Expr.preFilter;\\n\\n\\twhile ( soFar ) {\\n\\n\\t\\t// Comma and first run\\n\\t\\tif ( !matched || (match = rcomma.exec( soFar )) ) {\\n\\t\\t\\tif ( match ) {\\n\\t\\t\\t\\t// Don't consume trailing commas as valid\\n\\t\\t\\t\\tsoFar = soFar.slice( match[0].length ) || soFar;\\n\\t\\t\\t}\\n\\t\\t\\tgroups.push( (tokens = []) );\\n\\t\\t}\\n\\n\\t\\tmatched = false;\\n\\n\\t\\t// Combinators\\n\\t\\tif ( (match = rcombinators.exec( soFar )) ) {\\n\\t\\t\\tmatched = match.shift();\\n\\t\\t\\ttokens.push({\\n\\t\\t\\t\\tvalue: matched,\\n\\t\\t\\t\\t// Cast descendant combinators to space\\n\\t\\t\\t\\ttype: match[0].replace( rtrim, \\\" \\\" )\\n\\t\\t\\t});\\n\\t\\t\\tsoFar = soFar.slice( matched.length );\\n\\t\\t}\\n\\n\\t\\t// Filters\\n\\t\\tfor ( type in Expr.filter ) {\\n\\t\\t\\tif ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||\\n\\t\\t\\t\\t(match = preFilters[ type ]( match ))) ) {\\n\\t\\t\\t\\tmatched = match.shift();\\n\\t\\t\\t\\ttokens.push({\\n\\t\\t\\t\\t\\tvalue: matched,\\n\\t\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\t\\tmatches: match\\n\\t\\t\\t\\t});\\n\\t\\t\\t\\tsoFar = soFar.slice( matched.length );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( !matched ) {\\n\\t\\t\\tbreak;\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the length of the invalid excess\\n\\t// if we're just parsing\\n\\t// Otherwise, throw an error or return tokens\\n\\treturn parseOnly ?\\n\\t\\tsoFar.length :\\n\\t\\tsoFar ?\\n\\t\\t\\tSizzle.error( selector ) :\\n\\t\\t\\t// Cache the tokens\\n\\t\\t\\ttokenCache( selector, groups ).slice( 0 );\\n};\\n\\nfunction toSelector( tokens ) {\\n\\tvar i = 0,\\n\\t\\tlen = tokens.length,\\n\\t\\tselector = \\\"\\\";\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tselector += tokens[i].value;\\n\\t}\\n\\treturn selector;\\n}\\n\\nfunction addCombinator( matcher, combinator, base ) {\\n\\tvar dir = combinator.dir,\\n\\t\\tskip = combinator.next,\\n\\t\\tkey = skip || dir,\\n\\t\\tcheckNonElements = base && key === \\\"parentNode\\\",\\n\\t\\tdoneName = done++;\\n\\n\\treturn combinator.first ?\\n\\t\\t// Check against closest ancestor/preceding element\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\treturn matcher( elem, context, xml );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t} :\\n\\n\\t\\t// Check against all ancestor/preceding elements\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\tvar oldCache, uniqueCache, outerCache,\\n\\t\\t\\t\\tnewCache = [ dirruns, doneName ];\\n\\n\\t\\t\\t// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching\\n\\t\\t\\tif ( xml ) {\\n\\t\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\t\\tif ( matcher( elem, context, xml ) ) {\\n\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\twhile ( (elem = elem[ dir ]) ) {\\n\\t\\t\\t\\t\\tif ( elem.nodeType === 1 || checkNonElements ) {\\n\\t\\t\\t\\t\\t\\touterCache = elem[ expando ] || (elem[ expando ] = {});\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE <9 only\\n\\t\\t\\t\\t\\t\\t// Defend against cloned attroperties (jQuery gh-1709)\\n\\t\\t\\t\\t\\t\\tuniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});\\n\\n\\t\\t\\t\\t\\t\\tif ( skip && skip === elem.nodeName.toLowerCase() ) {\\n\\t\\t\\t\\t\\t\\t\\telem = elem[ dir ] || elem;\\n\\t\\t\\t\\t\\t\\t} else if ( (oldCache = uniqueCache[ key ]) &&\\n\\t\\t\\t\\t\\t\\t\\toldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Assign to newCache so results back-propagate to previous elements\\n\\t\\t\\t\\t\\t\\t\\treturn (newCache[ 2 ] = oldCache[ 2 ]);\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t// Reuse newcache so results back-propagate to previous elements\\n\\t\\t\\t\\t\\t\\t\\tuniqueCache[ key ] = newCache;\\n\\n\\t\\t\\t\\t\\t\\t\\t// A match means we're done; a fail means we have to keep checking\\n\\t\\t\\t\\t\\t\\t\\tif ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn false;\\n\\t\\t};\\n}\\n\\nfunction elementMatcher( matchers ) {\\n\\treturn matchers.length > 1 ?\\n\\t\\tfunction( elem, context, xml ) {\\n\\t\\t\\tvar i = matchers.length;\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( !matchers[i]( elem, context, xml ) ) {\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn true;\\n\\t\\t} :\\n\\t\\tmatchers[0];\\n}\\n\\nfunction multipleContexts( selector, contexts, results ) {\\n\\tvar i = 0,\\n\\t\\tlen = contexts.length;\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tSizzle( selector, contexts[i], results );\\n\\t}\\n\\treturn results;\\n}\\n\\nfunction condense( unmatched, map, filter, context, xml ) {\\n\\tvar elem,\\n\\t\\tnewUnmatched = [],\\n\\t\\ti = 0,\\n\\t\\tlen = unmatched.length,\\n\\t\\tmapped = map != null;\\n\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tif ( (elem = unmatched[i]) ) {\\n\\t\\t\\tif ( !filter || filter( elem, context, xml ) ) {\\n\\t\\t\\t\\tnewUnmatched.push( elem );\\n\\t\\t\\t\\tif ( mapped ) {\\n\\t\\t\\t\\t\\tmap.push( i );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn newUnmatched;\\n}\\n\\nfunction setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {\\n\\tif ( postFilter && !postFilter[ expando ] ) {\\n\\t\\tpostFilter = setMatcher( postFilter );\\n\\t}\\n\\tif ( postFinder && !postFinder[ expando ] ) {\\n\\t\\tpostFinder = setMatcher( postFinder, postSelector );\\n\\t}\\n\\treturn markFunction(function( seed, results, context, xml ) {\\n\\t\\tvar temp, i, elem,\\n\\t\\t\\tpreMap = [],\\n\\t\\t\\tpostMap = [],\\n\\t\\t\\tpreexisting = results.length,\\n\\n\\t\\t\\t// Get initial elements from seed or context\\n\\t\\t\\telems = seed || multipleContexts( selector || \\\"*\\\", context.nodeType ? [ context ] : context, [] ),\\n\\n\\t\\t\\t// Prefilter to get matcher input, preserving a map for seed-results synchronization\\n\\t\\t\\tmatcherIn = preFilter && ( seed || !selector ) ?\\n\\t\\t\\t\\tcondense( elems, preMap, preFilter, context, xml ) :\\n\\t\\t\\t\\telems,\\n\\n\\t\\t\\tmatcherOut = matcher ?\\n\\t\\t\\t\\t// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\\n\\t\\t\\t\\tpostFinder || ( seed ? preFilter : preexisting || postFilter ) ?\\n\\n\\t\\t\\t\\t\\t// ...intermediate processing is necessary\\n\\t\\t\\t\\t\\t[] :\\n\\n\\t\\t\\t\\t\\t// ...otherwise use results directly\\n\\t\\t\\t\\t\\tresults :\\n\\t\\t\\t\\tmatcherIn;\\n\\n\\t\\t// Find primary matches\\n\\t\\tif ( matcher ) {\\n\\t\\t\\tmatcher( matcherIn, matcherOut, context, xml );\\n\\t\\t}\\n\\n\\t\\t// Apply postFilter\\n\\t\\tif ( postFilter ) {\\n\\t\\t\\ttemp = condense( matcherOut, postMap );\\n\\t\\t\\tpostFilter( temp, [], context, xml );\\n\\n\\t\\t\\t// Un-match failing elements by moving them back to matcherIn\\n\\t\\t\\ti = temp.length;\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tif ( (elem = temp[i]) ) {\\n\\t\\t\\t\\t\\tmatcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( seed ) {\\n\\t\\t\\tif ( postFinder || preFilter ) {\\n\\t\\t\\t\\tif ( postFinder ) {\\n\\t\\t\\t\\t\\t// Get the final matcherOut by condensing this intermediate into postFinder contexts\\n\\t\\t\\t\\t\\ttemp = [];\\n\\t\\t\\t\\t\\ti = matcherOut.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\tif ( (elem = matcherOut[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\t// Restore matcherIn since elem is not yet a final match\\n\\t\\t\\t\\t\\t\\t\\ttemp.push( (matcherIn[i] = elem) );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tpostFinder( null, (matcherOut = []), temp, xml );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Move matched elements from seed to results to keep them synchronized\\n\\t\\t\\t\\ti = matcherOut.length;\\n\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\tif ( (elem = matcherOut[i]) &&\\n\\t\\t\\t\\t\\t\\t(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {\\n\\n\\t\\t\\t\\t\\t\\tseed[temp] = !(results[temp] = elem);\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Add elements to results, through postFinder if defined\\n\\t\\t} else {\\n\\t\\t\\tmatcherOut = condense(\\n\\t\\t\\t\\tmatcherOut === results ?\\n\\t\\t\\t\\t\\tmatcherOut.splice( preexisting, matcherOut.length ) :\\n\\t\\t\\t\\t\\tmatcherOut\\n\\t\\t\\t);\\n\\t\\t\\tif ( postFinder ) {\\n\\t\\t\\t\\tpostFinder( null, results, matcherOut, xml );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tpush.apply( results, matcherOut );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t});\\n}\\n\\nfunction matcherFromTokens( tokens ) {\\n\\tvar checkContext, matcher, j,\\n\\t\\tlen = tokens.length,\\n\\t\\tleadingRelative = Expr.relative[ tokens[0].type ],\\n\\t\\timplicitRelative = leadingRelative || Expr.relative[\\\" \\\"],\\n\\t\\ti = leadingRelative ? 1 : 0,\\n\\n\\t\\t// The foundational matcher ensures that elements are reachable from top-level context(s)\\n\\t\\tmatchContext = addCombinator( function( elem ) {\\n\\t\\t\\treturn elem === checkContext;\\n\\t\\t}, implicitRelative, true ),\\n\\t\\tmatchAnyContext = addCombinator( function( elem ) {\\n\\t\\t\\treturn indexOf( checkContext, elem ) > -1;\\n\\t\\t}, implicitRelative, true ),\\n\\t\\tmatchers = [ function( elem, context, xml ) {\\n\\t\\t\\tvar ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\\n\\t\\t\\t\\t(checkContext = context).nodeType ?\\n\\t\\t\\t\\t\\tmatchContext( elem, context, xml ) :\\n\\t\\t\\t\\t\\tmatchAnyContext( elem, context, xml ) );\\n\\t\\t\\t// Avoid hanging onto element (issue #299)\\n\\t\\t\\tcheckContext = null;\\n\\t\\t\\treturn ret;\\n\\t\\t} ];\\n\\n\\tfor ( ; i < len; i++ ) {\\n\\t\\tif ( (matcher = Expr.relative[ tokens[i].type ]) ) {\\n\\t\\t\\tmatchers = [ addCombinator(elementMatcher( matchers ), matcher) ];\\n\\t\\t} else {\\n\\t\\t\\tmatcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );\\n\\n\\t\\t\\t// Return special upon seeing a positional matcher\\n\\t\\t\\tif ( matcher[ expando ] ) {\\n\\t\\t\\t\\t// Find the next relative operator (if any) for proper handling\\n\\t\\t\\t\\tj = ++i;\\n\\t\\t\\t\\tfor ( ; j < len; j++ ) {\\n\\t\\t\\t\\t\\tif ( Expr.relative[ tokens[j].type ] ) {\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn setMatcher(\\n\\t\\t\\t\\t\\ti > 1 && elementMatcher( matchers ),\\n\\t\\t\\t\\t\\ti > 1 && toSelector(\\n\\t\\t\\t\\t\\t\\t// If the preceding token was a descendant combinator, insert an implicit any-element `*`\\n\\t\\t\\t\\t\\t\\ttokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === \\\" \\\" ? \\\"*\\\" : \\\"\\\" })\\n\\t\\t\\t\\t\\t).replace( rtrim, \\\"$1\\\" ),\\n\\t\\t\\t\\t\\tmatcher,\\n\\t\\t\\t\\t\\ti < j && matcherFromTokens( tokens.slice( i, j ) ),\\n\\t\\t\\t\\t\\tj < len && matcherFromTokens( (tokens = tokens.slice( j )) ),\\n\\t\\t\\t\\t\\tj < len && toSelector( tokens )\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t\\tmatchers.push( matcher );\\n\\t\\t}\\n\\t}\\n\\n\\treturn elementMatcher( matchers );\\n}\\n\\nfunction matcherFromGroupMatchers( elementMatchers, setMatchers ) {\\n\\tvar bySet = setMatchers.length > 0,\\n\\t\\tbyElement = elementMatchers.length > 0,\\n\\t\\tsuperMatcher = function( seed, context, xml, results, outermost ) {\\n\\t\\t\\tvar elem, j, matcher,\\n\\t\\t\\t\\tmatchedCount = 0,\\n\\t\\t\\t\\ti = \\\"0\\\",\\n\\t\\t\\t\\tunmatched = seed && [],\\n\\t\\t\\t\\tsetMatched = [],\\n\\t\\t\\t\\tcontextBackup = outermostContext,\\n\\t\\t\\t\\t// We must always have either seed elements or outermost context\\n\\t\\t\\t\\telems = seed || byElement && Expr.find[\\\"TAG\\\"]( \\\"*\\\", outermost ),\\n\\t\\t\\t\\t// Use integer dirruns iff this is the outermost matcher\\n\\t\\t\\t\\tdirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\\n\\t\\t\\t\\tlen = elems.length;\\n\\n\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\toutermostContext = context === document || context || outermost;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add elements passing elementMatchers directly to results\\n\\t\\t\\t// Support: IE<9, Safari\\n\\t\\t\\t// Tolerate NodeList properties (IE: \\\"length\\\"; Safari: <number>) matching elements by id\\n\\t\\t\\tfor ( ; i !== len && (elem = elems[i]) != null; i++ ) {\\n\\t\\t\\t\\tif ( byElement && elem ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\tif ( !context && elem.ownerDocument !== document ) {\\n\\t\\t\\t\\t\\t\\tsetDocument( elem );\\n\\t\\t\\t\\t\\t\\txml = !documentIsHTML;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\twhile ( (matcher = elementMatchers[j++]) ) {\\n\\t\\t\\t\\t\\t\\tif ( matcher( elem, context || document, xml) ) {\\n\\t\\t\\t\\t\\t\\t\\tresults.push( elem );\\n\\t\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\t\\t\\tdirruns = dirrunsUnique;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Track unmatched elements for set filters\\n\\t\\t\\t\\tif ( bySet ) {\\n\\t\\t\\t\\t\\t// They will have gone through all possible matchers\\n\\t\\t\\t\\t\\tif ( (elem = !matcher && elem) ) {\\n\\t\\t\\t\\t\\t\\tmatchedCount--;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Lengthen the array for every element, matched or not\\n\\t\\t\\t\\t\\tif ( seed ) {\\n\\t\\t\\t\\t\\t\\tunmatched.push( elem );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// `i` is now the count of elements visited above, and adding it to `matchedCount`\\n\\t\\t\\t// makes the latter nonnegative.\\n\\t\\t\\tmatchedCount += i;\\n\\n\\t\\t\\t// Apply set filters to unmatched elements\\n\\t\\t\\t// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`\\n\\t\\t\\t// equals `i`), unless we didn't visit _any_ elements in the above loop because we have\\n\\t\\t\\t// no element matchers and no seed.\\n\\t\\t\\t// Incrementing an initially-string \\\"0\\\" `i` allows `i` to remain a string only in that\\n\\t\\t\\t// case, which will result in a \\\"00\\\" `matchedCount` that differs from `i` but is also\\n\\t\\t\\t// numerically zero.\\n\\t\\t\\tif ( bySet && i !== matchedCount ) {\\n\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\twhile ( (matcher = setMatchers[j++]) ) {\\n\\t\\t\\t\\t\\tmatcher( unmatched, setMatched, context, xml );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif ( seed ) {\\n\\t\\t\\t\\t\\t// Reintegrate element matches to eliminate the need for sorting\\n\\t\\t\\t\\t\\tif ( matchedCount > 0 ) {\\n\\t\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( !(unmatched[i] || setMatched[i]) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tsetMatched[i] = pop.call( results );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Discard index placeholder values to get only actual matches\\n\\t\\t\\t\\t\\tsetMatched = condense( setMatched );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Add matches to results\\n\\t\\t\\t\\tpush.apply( results, setMatched );\\n\\n\\t\\t\\t\\t// Seedless set matches succeeding multiple successful matchers stipulate sorting\\n\\t\\t\\t\\tif ( outermost && !seed && setMatched.length > 0 &&\\n\\t\\t\\t\\t\\t( matchedCount + setMatchers.length ) > 1 ) {\\n\\n\\t\\t\\t\\t\\tSizzle.uniqueSort( results );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Override manipulation of globals by nested matchers\\n\\t\\t\\tif ( outermost ) {\\n\\t\\t\\t\\tdirruns = dirrunsUnique;\\n\\t\\t\\t\\toutermostContext = contextBackup;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn unmatched;\\n\\t\\t};\\n\\n\\treturn bySet ?\\n\\t\\tmarkFunction( superMatcher ) :\\n\\t\\tsuperMatcher;\\n}\\n\\ncompile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {\\n\\tvar i,\\n\\t\\tsetMatchers = [],\\n\\t\\telementMatchers = [],\\n\\t\\tcached = compilerCache[ selector + \\\" \\\" ];\\n\\n\\tif ( !cached ) {\\n\\t\\t// Generate a function of recursive functions that can be used to check each element\\n\\t\\tif ( !match ) {\\n\\t\\t\\tmatch = tokenize( selector );\\n\\t\\t}\\n\\t\\ti = match.length;\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\tcached = matcherFromTokens( match[i] );\\n\\t\\t\\tif ( cached[ expando ] ) {\\n\\t\\t\\t\\tsetMatchers.push( cached );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\telementMatchers.push( cached );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Cache the compiled function\\n\\t\\tcached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );\\n\\n\\t\\t// Save selector and tokenization\\n\\t\\tcached.selector = selector;\\n\\t}\\n\\treturn cached;\\n};\\n\\n/**\\n * A low-level selection function that works with Sizzle's compiled\\n *  selector functions\\n * @param {String|Function} selector A selector or a pre-compiled\\n *  selector function built with Sizzle.compile\\n * @param {Element} context\\n * @param {Array} [results]\\n * @param {Array} [seed] A set of elements to match against\\n */\\nselect = Sizzle.select = function( selector, context, results, seed ) {\\n\\tvar i, tokens, token, type, find,\\n\\t\\tcompiled = typeof selector === \\\"function\\\" && selector,\\n\\t\\tmatch = !seed && tokenize( (selector = compiled.selector || selector) );\\n\\n\\tresults = results || [];\\n\\n\\t// Try to minimize operations if there is only one selector in the list and no seed\\n\\t// (the latter of which guarantees us context)\\n\\tif ( match.length === 1 ) {\\n\\n\\t\\t// Reduce context if the leading compound selector is an ID\\n\\t\\ttokens = match[0] = match[0].slice( 0 );\\n\\t\\tif ( tokens.length > 2 && (token = tokens[0]).type === \\\"ID\\\" &&\\n\\t\\t\\t\\tcontext.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {\\n\\n\\t\\t\\tcontext = ( Expr.find[\\\"ID\\\"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];\\n\\t\\t\\tif ( !context ) {\\n\\t\\t\\t\\treturn results;\\n\\n\\t\\t\\t// Precompiled matchers will still verify ancestry, so step up a level\\n\\t\\t\\t} else if ( compiled ) {\\n\\t\\t\\t\\tcontext = context.parentNode;\\n\\t\\t\\t}\\n\\n\\t\\t\\tselector = selector.slice( tokens.shift().value.length );\\n\\t\\t}\\n\\n\\t\\t// Fetch a seed set for right-to-left matching\\n\\t\\ti = matchExpr[\\\"needsContext\\\"].test( selector ) ? 0 : tokens.length;\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\ttoken = tokens[i];\\n\\n\\t\\t\\t// Abort if we hit a combinator\\n\\t\\t\\tif ( Expr.relative[ (type = token.type) ] ) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tif ( (find = Expr.find[ type ]) ) {\\n\\t\\t\\t\\t// Search, expanding context for leading sibling combinators\\n\\t\\t\\t\\tif ( (seed = find(\\n\\t\\t\\t\\t\\ttoken.matches[0].replace( runescape, funescape ),\\n\\t\\t\\t\\t\\trsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context\\n\\t\\t\\t\\t)) ) {\\n\\n\\t\\t\\t\\t\\t// If seed is empty or no tokens remain, we can return early\\n\\t\\t\\t\\t\\ttokens.splice( i, 1 );\\n\\t\\t\\t\\t\\tselector = seed.length && toSelector( tokens );\\n\\t\\t\\t\\t\\tif ( !selector ) {\\n\\t\\t\\t\\t\\t\\tpush.apply( results, seed );\\n\\t\\t\\t\\t\\t\\treturn results;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Compile and execute a filtering function if one is not provided\\n\\t// Provide `match` to avoid retokenization if we modified the selector above\\n\\t( compiled || compile( selector, match ) )(\\n\\t\\tseed,\\n\\t\\tcontext,\\n\\t\\t!documentIsHTML,\\n\\t\\tresults,\\n\\t\\t!context || rsibling.test( selector ) && testContext( context.parentNode ) || context\\n\\t);\\n\\treturn results;\\n};\\n\\n// One-time assignments\\n\\n// Sort stability\\nsupport.sortStable = expando.split(\\\"\\\").sort( sortOrder ).join(\\\"\\\") === expando;\\n\\n// Support: Chrome 14-35+\\n// Always assume duplicates if they aren't passed to the comparison function\\nsupport.detectDuplicates = !!hasDuplicate;\\n\\n// Initialize against the default document\\nsetDocument();\\n\\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\\n// Detached nodes confoundingly follow *each other*\\nsupport.sortDetached = assert(function( el ) {\\n\\t// Should return 1, but returns 4 (following)\\n\\treturn el.compareDocumentPosition( document.createElement(\\\"fieldset\\\") ) & 1;\\n});\\n\\n// Support: IE<8\\n// Prevent attribute/property \\\"interpolation\\\"\\n// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\\nif ( !assert(function( el ) {\\n\\tel.innerHTML = \\\"<a href='#'></a>\\\";\\n\\treturn el.firstChild.getAttribute(\\\"href\\\") === \\\"#\\\" ;\\n}) ) {\\n\\taddHandle( \\\"type|href|height|width\\\", function( elem, name, isXML ) {\\n\\t\\tif ( !isXML ) {\\n\\t\\t\\treturn elem.getAttribute( name, name.toLowerCase() === \\\"type\\\" ? 1 : 2 );\\n\\t\\t}\\n\\t});\\n}\\n\\n// Support: IE<9\\n// Use defaultValue in place of getAttribute(\\\"value\\\")\\nif ( !support.attributes || !assert(function( el ) {\\n\\tel.innerHTML = \\\"<input/>\\\";\\n\\tel.firstChild.setAttribute( \\\"value\\\", \\\"\\\" );\\n\\treturn el.firstChild.getAttribute( \\\"value\\\" ) === \\\"\\\";\\n}) ) {\\n\\taddHandle( \\\"value\\\", function( elem, name, isXML ) {\\n\\t\\tif ( !isXML && elem.nodeName.toLowerCase() === \\\"input\\\" ) {\\n\\t\\t\\treturn elem.defaultValue;\\n\\t\\t}\\n\\t});\\n}\\n\\n// Support: IE<9\\n// Use getAttributeNode to fetch booleans when getAttribute lies\\nif ( !assert(function( el ) {\\n\\treturn el.getAttribute(\\\"disabled\\\") == null;\\n}) ) {\\n\\taddHandle( booleans, function( elem, name, isXML ) {\\n\\t\\tvar val;\\n\\t\\tif ( !isXML ) {\\n\\t\\t\\treturn elem[ name ] === true ? name.toLowerCase() :\\n\\t\\t\\t\\t\\t(val = elem.getAttributeNode( name )) && val.specified ?\\n\\t\\t\\t\\t\\tval.value :\\n\\t\\t\\t\\tnull;\\n\\t\\t}\\n\\t});\\n}\\n\\nreturn Sizzle;\\n\\n})( window );\\n\\n\\n\\njQuery.find = Sizzle;\\njQuery.expr = Sizzle.selectors;\\n\\n// Deprecated\\njQuery.expr[ \\\":\\\" ] = jQuery.expr.pseudos;\\njQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;\\njQuery.text = Sizzle.getText;\\njQuery.isXMLDoc = Sizzle.isXML;\\njQuery.contains = Sizzle.contains;\\njQuery.escapeSelector = Sizzle.escape;\\n\\n\\n\\n\\nvar dir = function( elem, dir, until ) {\\n\\tvar matched = [],\\n\\t\\ttruncate = until !== undefined;\\n\\n\\twhile ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {\\n\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\tif ( truncate && jQuery( elem ).is( until ) ) {\\n\\t\\t\\t\\tbreak;\\n\\t\\t\\t}\\n\\t\\t\\tmatched.push( elem );\\n\\t\\t}\\n\\t}\\n\\treturn matched;\\n};\\n\\n\\nvar siblings = function( n, elem ) {\\n\\tvar matched = [];\\n\\n\\tfor ( ; n; n = n.nextSibling ) {\\n\\t\\tif ( n.nodeType === 1 && n !== elem ) {\\n\\t\\t\\tmatched.push( n );\\n\\t\\t}\\n\\t}\\n\\n\\treturn matched;\\n};\\n\\n\\nvar rneedsContext = jQuery.expr.match.needsContext;\\n\\n\\n\\nfunction nodeName( elem, name ) {\\n\\n  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\\n\\n};\\nvar rsingleTag = ( /^<([a-z][^\\\\/\\\\0>:\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[\\\\x20\\\\t\\\\r\\\\n\\\\f]*\\\\/?>(?:<\\\\/\\\\1>|)$/i );\\n\\n\\n\\nvar risSimple = /^.[^:#\\\\[\\\\.,]*$/;\\n\\n// Implement the identical functionality for filter and not\\nfunction winnow( elements, qualifier, not ) {\\n\\tif ( jQuery.isFunction( qualifier ) ) {\\n\\t\\treturn jQuery.grep( elements, function( elem, i ) {\\n\\t\\t\\treturn !!qualifier.call( elem, i, elem ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Single element\\n\\tif ( qualifier.nodeType ) {\\n\\t\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\t\\treturn ( elem === qualifier ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Arraylike of elements (jQuery, arguments, Array)\\n\\tif ( typeof qualifier !== \\\"string\\\" ) {\\n\\t\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\t\\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not;\\n\\t\\t} );\\n\\t}\\n\\n\\t// Simple selector that can be filtered directly, removing non-Elements\\n\\tif ( risSimple.test( qualifier ) ) {\\n\\t\\treturn jQuery.filter( qualifier, elements, not );\\n\\t}\\n\\n\\t// Complex selector, compare the two sets, removing non-Elements\\n\\tqualifier = jQuery.filter( qualifier, elements );\\n\\treturn jQuery.grep( elements, function( elem ) {\\n\\t\\treturn ( indexOf.call( qualifier, elem ) > -1 ) !== not && elem.nodeType === 1;\\n\\t} );\\n}\\n\\njQuery.filter = function( expr, elems, not ) {\\n\\tvar elem = elems[ 0 ];\\n\\n\\tif ( not ) {\\n\\t\\texpr = \\\":not(\\\" + expr + \\\")\\\";\\n\\t}\\n\\n\\tif ( elems.length === 1 && elem.nodeType === 1 ) {\\n\\t\\treturn jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];\\n\\t}\\n\\n\\treturn jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {\\n\\t\\treturn elem.nodeType === 1;\\n\\t} ) );\\n};\\n\\njQuery.fn.extend( {\\n\\tfind: function( selector ) {\\n\\t\\tvar i, ret,\\n\\t\\t\\tlen = this.length,\\n\\t\\t\\tself = this;\\n\\n\\t\\tif ( typeof selector !== \\\"string\\\" ) {\\n\\t\\t\\treturn this.pushStack( jQuery( selector ).filter( function() {\\n\\t\\t\\t\\tfor ( i = 0; i < len; i++ ) {\\n\\t\\t\\t\\t\\tif ( jQuery.contains( self[ i ], this ) ) {\\n\\t\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t} ) );\\n\\t\\t}\\n\\n\\t\\tret = this.pushStack( [] );\\n\\n\\t\\tfor ( i = 0; i < len; i++ ) {\\n\\t\\t\\tjQuery.find( selector, self[ i ], ret );\\n\\t\\t}\\n\\n\\t\\treturn len > 1 ? jQuery.uniqueSort( ret ) : ret;\\n\\t},\\n\\tfilter: function( selector ) {\\n\\t\\treturn this.pushStack( winnow( this, selector || [], false ) );\\n\\t},\\n\\tnot: function( selector ) {\\n\\t\\treturn this.pushStack( winnow( this, selector || [], true ) );\\n\\t},\\n\\tis: function( selector ) {\\n\\t\\treturn !!winnow(\\n\\t\\t\\tthis,\\n\\n\\t\\t\\t// If this is a positional/relative selector, check membership in the returned set\\n\\t\\t\\t// so $(\\\"p:first\\\").is(\\\"p:last\\\") won't return true for a doc with two \\\"p\\\".\\n\\t\\t\\ttypeof selector === \\\"string\\\" && rneedsContext.test( selector ) ?\\n\\t\\t\\t\\tjQuery( selector ) :\\n\\t\\t\\t\\tselector || [],\\n\\t\\t\\tfalse\\n\\t\\t).length;\\n\\t}\\n} );\\n\\n\\n// Initialize a jQuery object\\n\\n\\n// A central reference to the root jQuery(document)\\nvar rootjQuery,\\n\\n\\t// A simple way to check for HTML strings\\n\\t// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\\n\\t// Strict HTML recognition (#11290: must start with <)\\n\\t// Shortcut simple #id case for speed\\n\\trquickExpr = /^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]+))$/,\\n\\n\\tinit = jQuery.fn.init = function( selector, context, root ) {\\n\\t\\tvar match, elem;\\n\\n\\t\\t// HANDLE: $(\\\"\\\"), $(null), $(undefined), $(false)\\n\\t\\tif ( !selector ) {\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\n\\t\\t// Method init() accepts an alternate rootjQuery\\n\\t\\t// so migrate can support jQuery.sub (gh-2101)\\n\\t\\troot = root || rootjQuery;\\n\\n\\t\\t// Handle HTML strings\\n\\t\\tif ( typeof selector === \\\"string\\\" ) {\\n\\t\\t\\tif ( selector[ 0 ] === \\\"<\\\" &&\\n\\t\\t\\t\\tselector[ selector.length - 1 ] === \\\">\\\" &&\\n\\t\\t\\t\\tselector.length >= 3 ) {\\n\\n\\t\\t\\t\\t// Assume that strings that start and end with <> are HTML and skip the regex check\\n\\t\\t\\t\\tmatch = [ null, selector, null ];\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tmatch = rquickExpr.exec( selector );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Match html or make sure no context is specified for #id\\n\\t\\t\\tif ( match && ( match[ 1 ] || !context ) ) {\\n\\n\\t\\t\\t\\t// HANDLE: $(html) -> $(array)\\n\\t\\t\\t\\tif ( match[ 1 ] ) {\\n\\t\\t\\t\\t\\tcontext = context instanceof jQuery ? context[ 0 ] : context;\\n\\n\\t\\t\\t\\t\\t// Option to run scripts is true for back-compat\\n\\t\\t\\t\\t\\t// Intentionally let the error be thrown if parseHTML is not present\\n\\t\\t\\t\\t\\tjQuery.merge( this, jQuery.parseHTML(\\n\\t\\t\\t\\t\\t\\tmatch[ 1 ],\\n\\t\\t\\t\\t\\t\\tcontext && context.nodeType ? context.ownerDocument || context : document,\\n\\t\\t\\t\\t\\t\\ttrue\\n\\t\\t\\t\\t\\t) );\\n\\n\\t\\t\\t\\t\\t// HANDLE: $(html, props)\\n\\t\\t\\t\\t\\tif ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {\\n\\t\\t\\t\\t\\t\\tfor ( match in context ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Properties of context are called as methods if possible\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery.isFunction( this[ match ] ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis[ match ]( context[ match ] );\\n\\n\\t\\t\\t\\t\\t\\t\\t// ...and otherwise set as attributes\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tthis.attr( match, context[ match ] );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn this;\\n\\n\\t\\t\\t\\t// HANDLE: $(#id)\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\telem = document.getElementById( match[ 2 ] );\\n\\n\\t\\t\\t\\t\\tif ( elem ) {\\n\\n\\t\\t\\t\\t\\t\\t// Inject the element directly into the jQuery object\\n\\t\\t\\t\\t\\t\\tthis[ 0 ] = elem;\\n\\t\\t\\t\\t\\t\\tthis.length = 1;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t// HANDLE: $(expr, $(...))\\n\\t\\t\\t} else if ( !context || context.jquery ) {\\n\\t\\t\\t\\treturn ( context || root ).find( selector );\\n\\n\\t\\t\\t// HANDLE: $(expr, context)\\n\\t\\t\\t// (which is just equivalent to: $(context).find(expr)\\n\\t\\t\\t} else {\\n\\t\\t\\t\\treturn this.constructor( context ).find( selector );\\n\\t\\t\\t}\\n\\n\\t\\t// HANDLE: $(DOMElement)\\n\\t\\t} else if ( selector.nodeType ) {\\n\\t\\t\\tthis[ 0 ] = selector;\\n\\t\\t\\tthis.length = 1;\\n\\t\\t\\treturn this;\\n\\n\\t\\t// HANDLE: $(function)\\n\\t\\t// Shortcut for document ready\\n\\t\\t} else if ( jQuery.isFunction( selector ) ) {\\n\\t\\t\\treturn root.ready !== undefined ?\\n\\t\\t\\t\\troot.ready( selector ) :\\n\\n\\t\\t\\t\\t// Execute immediately if ready is not present\\n\\t\\t\\t\\tselector( jQuery );\\n\\t\\t}\\n\\n\\t\\treturn jQuery.makeArray( selector, this );\\n\\t};\\n\\n// Give the init function the jQuery prototype for later instantiation\\ninit.prototype = jQuery.fn;\\n\\n// Initialize central reference\\nrootjQuery = jQuery( document );\\n\\n\\nvar rparentsprev = /^(?:parents|prev(?:Until|All))/,\\n\\n\\t// Methods guaranteed to produce a unique set when starting from a unique set\\n\\tguaranteedUnique = {\\n\\t\\tchildren: true,\\n\\t\\tcontents: true,\\n\\t\\tnext: true,\\n\\t\\tprev: true\\n\\t};\\n\\njQuery.fn.extend( {\\n\\thas: function( target ) {\\n\\t\\tvar targets = jQuery( target, this ),\\n\\t\\t\\tl = targets.length;\\n\\n\\t\\treturn this.filter( function() {\\n\\t\\t\\tvar i = 0;\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tif ( jQuery.contains( this, targets[ i ] ) ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tclosest: function( selectors, context ) {\\n\\t\\tvar cur,\\n\\t\\t\\ti = 0,\\n\\t\\t\\tl = this.length,\\n\\t\\t\\tmatched = [],\\n\\t\\t\\ttargets = typeof selectors !== \\\"string\\\" && jQuery( selectors );\\n\\n\\t\\t// Positional selectors never match, since there's no _selection_ context\\n\\t\\tif ( !rneedsContext.test( selectors ) ) {\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tfor ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {\\n\\n\\t\\t\\t\\t\\t// Always skip document fragments\\n\\t\\t\\t\\t\\tif ( cur.nodeType < 11 && ( targets ?\\n\\t\\t\\t\\t\\t\\ttargets.index( cur ) > -1 :\\n\\n\\t\\t\\t\\t\\t\\t// Don't pass non-elements to Sizzle\\n\\t\\t\\t\\t\\t\\tcur.nodeType === 1 &&\\n\\t\\t\\t\\t\\t\\t\\tjQuery.find.matchesSelector( cur, selectors ) ) ) {\\n\\n\\t\\t\\t\\t\\t\\tmatched.push( cur );\\n\\t\\t\\t\\t\\t\\tbreak;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );\\n\\t},\\n\\n\\t// Determine the position of an element within the set\\n\\tindex: function( elem ) {\\n\\n\\t\\t// No argument, return index in parent\\n\\t\\tif ( !elem ) {\\n\\t\\t\\treturn ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;\\n\\t\\t}\\n\\n\\t\\t// Index in selector\\n\\t\\tif ( typeof elem === \\\"string\\\" ) {\\n\\t\\t\\treturn indexOf.call( jQuery( elem ), this[ 0 ] );\\n\\t\\t}\\n\\n\\t\\t// Locate the position of the desired element\\n\\t\\treturn indexOf.call( this,\\n\\n\\t\\t\\t// If it receives a jQuery object, the first element is used\\n\\t\\t\\telem.jquery ? elem[ 0 ] : elem\\n\\t\\t);\\n\\t},\\n\\n\\tadd: function( selector, context ) {\\n\\t\\treturn this.pushStack(\\n\\t\\t\\tjQuery.uniqueSort(\\n\\t\\t\\t\\tjQuery.merge( this.get(), jQuery( selector, context ) )\\n\\t\\t\\t)\\n\\t\\t);\\n\\t},\\n\\n\\taddBack: function( selector ) {\\n\\t\\treturn this.add( selector == null ?\\n\\t\\t\\tthis.prevObject : this.prevObject.filter( selector )\\n\\t\\t);\\n\\t}\\n} );\\n\\nfunction sibling( cur, dir ) {\\n\\twhile ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}\\n\\treturn cur;\\n}\\n\\njQuery.each( {\\n\\tparent: function( elem ) {\\n\\t\\tvar parent = elem.parentNode;\\n\\t\\treturn parent && parent.nodeType !== 11 ? parent : null;\\n\\t},\\n\\tparents: function( elem ) {\\n\\t\\treturn dir( elem, \\\"parentNode\\\" );\\n\\t},\\n\\tparentsUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"parentNode\\\", until );\\n\\t},\\n\\tnext: function( elem ) {\\n\\t\\treturn sibling( elem, \\\"nextSibling\\\" );\\n\\t},\\n\\tprev: function( elem ) {\\n\\t\\treturn sibling( elem, \\\"previousSibling\\\" );\\n\\t},\\n\\tnextAll: function( elem ) {\\n\\t\\treturn dir( elem, \\\"nextSibling\\\" );\\n\\t},\\n\\tprevAll: function( elem ) {\\n\\t\\treturn dir( elem, \\\"previousSibling\\\" );\\n\\t},\\n\\tnextUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"nextSibling\\\", until );\\n\\t},\\n\\tprevUntil: function( elem, i, until ) {\\n\\t\\treturn dir( elem, \\\"previousSibling\\\", until );\\n\\t},\\n\\tsiblings: function( elem ) {\\n\\t\\treturn siblings( ( elem.parentNode || {} ).firstChild, elem );\\n\\t},\\n\\tchildren: function( elem ) {\\n\\t\\treturn siblings( elem.firstChild );\\n\\t},\\n\\tcontents: function( elem ) {\\n        if ( nodeName( elem, \\\"iframe\\\" ) ) {\\n            return elem.contentDocument;\\n        }\\n\\n        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only\\n        // Treat the template element as a regular one in browsers that\\n        // don't support it.\\n        if ( nodeName( elem, \\\"template\\\" ) ) {\\n            elem = elem.content || elem;\\n        }\\n\\n        return jQuery.merge( [], elem.childNodes );\\n\\t}\\n}, function( name, fn ) {\\n\\tjQuery.fn[ name ] = function( until, selector ) {\\n\\t\\tvar matched = jQuery.map( this, fn, until );\\n\\n\\t\\tif ( name.slice( -5 ) !== \\\"Until\\\" ) {\\n\\t\\t\\tselector = until;\\n\\t\\t}\\n\\n\\t\\tif ( selector && typeof selector === \\\"string\\\" ) {\\n\\t\\t\\tmatched = jQuery.filter( selector, matched );\\n\\t\\t}\\n\\n\\t\\tif ( this.length > 1 ) {\\n\\n\\t\\t\\t// Remove duplicates\\n\\t\\t\\tif ( !guaranteedUnique[ name ] ) {\\n\\t\\t\\t\\tjQuery.uniqueSort( matched );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Reverse order for parents* and prev-derivatives\\n\\t\\t\\tif ( rparentsprev.test( name ) ) {\\n\\t\\t\\t\\tmatched.reverse();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( matched );\\n\\t};\\n} );\\nvar rnothtmlwhite = ( /[^\\\\x20\\\\t\\\\r\\\\n\\\\f]+/g );\\n\\n\\n\\n// Convert String-formatted options into Object-formatted ones\\nfunction createOptions( options ) {\\n\\tvar object = {};\\n\\tjQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {\\n\\t\\tobject[ flag ] = true;\\n\\t} );\\n\\treturn object;\\n}\\n\\n/*\\n * Create a callback list using the following parameters:\\n *\\n *\\toptions: an optional list of space-separated options that will change how\\n *\\t\\t\\tthe callback list behaves or a more traditional option object\\n *\\n * By default a callback list will act like an event callback list and can be\\n * \\\"fired\\\" multiple times.\\n *\\n * Possible options:\\n *\\n *\\tonce:\\t\\t\\twill ensure the callback list can only be fired once (like a Deferred)\\n *\\n *\\tmemory:\\t\\t\\twill keep track of previous values and will call any callback added\\n *\\t\\t\\t\\t\\tafter the list has been fired right away with the latest \\\"memorized\\\"\\n *\\t\\t\\t\\t\\tvalues (like a Deferred)\\n *\\n *\\tunique:\\t\\t\\twill ensure a callback can only be added once (no duplicate in the list)\\n *\\n *\\tstopOnFalse:\\tinterrupt callings when a callback returns false\\n *\\n */\\njQuery.Callbacks = function( options ) {\\n\\n\\t// Convert options from String-formatted to Object-formatted if needed\\n\\t// (we check in cache first)\\n\\toptions = typeof options === \\\"string\\\" ?\\n\\t\\tcreateOptions( options ) :\\n\\t\\tjQuery.extend( {}, options );\\n\\n\\tvar // Flag to know if list is currently firing\\n\\t\\tfiring,\\n\\n\\t\\t// Last fire value for non-forgettable lists\\n\\t\\tmemory,\\n\\n\\t\\t// Flag to know if list was already fired\\n\\t\\tfired,\\n\\n\\t\\t// Flag to prevent firing\\n\\t\\tlocked,\\n\\n\\t\\t// Actual callback list\\n\\t\\tlist = [],\\n\\n\\t\\t// Queue of execution data for repeatable lists\\n\\t\\tqueue = [],\\n\\n\\t\\t// Index of currently firing callback (modified by add/remove as needed)\\n\\t\\tfiringIndex = -1,\\n\\n\\t\\t// Fire callbacks\\n\\t\\tfire = function() {\\n\\n\\t\\t\\t// Enforce single-firing\\n\\t\\t\\tlocked = locked || options.once;\\n\\n\\t\\t\\t// Execute callbacks for all pending executions,\\n\\t\\t\\t// respecting firingIndex overrides and runtime changes\\n\\t\\t\\tfired = firing = true;\\n\\t\\t\\tfor ( ; queue.length; firingIndex = -1 ) {\\n\\t\\t\\t\\tmemory = queue.shift();\\n\\t\\t\\t\\twhile ( ++firingIndex < list.length ) {\\n\\n\\t\\t\\t\\t\\t// Run callback and check for early termination\\n\\t\\t\\t\\t\\tif ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&\\n\\t\\t\\t\\t\\t\\toptions.stopOnFalse ) {\\n\\n\\t\\t\\t\\t\\t\\t// Jump to end and forget the data so .add doesn't re-fire\\n\\t\\t\\t\\t\\t\\tfiringIndex = list.length;\\n\\t\\t\\t\\t\\t\\tmemory = false;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Forget the data if we're done with it\\n\\t\\t\\tif ( !options.memory ) {\\n\\t\\t\\t\\tmemory = false;\\n\\t\\t\\t}\\n\\n\\t\\t\\tfiring = false;\\n\\n\\t\\t\\t// Clean up if we're done firing for good\\n\\t\\t\\tif ( locked ) {\\n\\n\\t\\t\\t\\t// Keep an empty list if we have data for future add calls\\n\\t\\t\\t\\tif ( memory ) {\\n\\t\\t\\t\\t\\tlist = [];\\n\\n\\t\\t\\t\\t// Otherwise, this object is spent\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tlist = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\t// Actual Callbacks object\\n\\t\\tself = {\\n\\n\\t\\t\\t// Add a callback or a collection of callbacks to the list\\n\\t\\t\\tadd: function() {\\n\\t\\t\\t\\tif ( list ) {\\n\\n\\t\\t\\t\\t\\t// If we have memory from a past run, we should fire after adding\\n\\t\\t\\t\\t\\tif ( memory && !firing ) {\\n\\t\\t\\t\\t\\t\\tfiringIndex = list.length - 1;\\n\\t\\t\\t\\t\\t\\tqueue.push( memory );\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t( function add( args ) {\\n\\t\\t\\t\\t\\t\\tjQuery.each( args, function( _, arg ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery.isFunction( arg ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( !options.unique || !self.has( arg ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tlist.push( arg );\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} else if ( arg && arg.length && jQuery.type( arg ) !== \\\"string\\\" ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Inspect recursively\\n\\t\\t\\t\\t\\t\\t\\t\\tadd( arg );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t} )( arguments );\\n\\n\\t\\t\\t\\t\\tif ( memory && !firing ) {\\n\\t\\t\\t\\t\\t\\tfire();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Remove a callback from the list\\n\\t\\t\\tremove: function() {\\n\\t\\t\\t\\tjQuery.each( arguments, function( _, arg ) {\\n\\t\\t\\t\\t\\tvar index;\\n\\t\\t\\t\\t\\twhile ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {\\n\\t\\t\\t\\t\\t\\tlist.splice( index, 1 );\\n\\n\\t\\t\\t\\t\\t\\t// Handle firing indexes\\n\\t\\t\\t\\t\\t\\tif ( index <= firingIndex ) {\\n\\t\\t\\t\\t\\t\\t\\tfiringIndex--;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Check if a given callback is in the list.\\n\\t\\t\\t// If no argument is given, return whether or not list has callbacks attached.\\n\\t\\t\\thas: function( fn ) {\\n\\t\\t\\t\\treturn fn ?\\n\\t\\t\\t\\t\\tjQuery.inArray( fn, list ) > -1 :\\n\\t\\t\\t\\t\\tlist.length > 0;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Remove all callbacks from the list\\n\\t\\t\\tempty: function() {\\n\\t\\t\\t\\tif ( list ) {\\n\\t\\t\\t\\t\\tlist = [];\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Disable .fire and .add\\n\\t\\t\\t// Abort any current/pending executions\\n\\t\\t\\t// Clear all callbacks and values\\n\\t\\t\\tdisable: function() {\\n\\t\\t\\t\\tlocked = queue = [];\\n\\t\\t\\t\\tlist = memory = \\\"\\\";\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\t\\t\\tdisabled: function() {\\n\\t\\t\\t\\treturn !list;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Disable .fire\\n\\t\\t\\t// Also disable .add unless we have memory (since it would have no effect)\\n\\t\\t\\t// Abort any pending executions\\n\\t\\t\\tlock: function() {\\n\\t\\t\\t\\tlocked = queue = [];\\n\\t\\t\\t\\tif ( !memory && !firing ) {\\n\\t\\t\\t\\t\\tlist = memory = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\t\\t\\tlocked: function() {\\n\\t\\t\\t\\treturn !!locked;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Call all callbacks with the given context and arguments\\n\\t\\t\\tfireWith: function( context, args ) {\\n\\t\\t\\t\\tif ( !locked ) {\\n\\t\\t\\t\\t\\targs = args || [];\\n\\t\\t\\t\\t\\targs = [ context, args.slice ? args.slice() : args ];\\n\\t\\t\\t\\t\\tqueue.push( args );\\n\\t\\t\\t\\t\\tif ( !firing ) {\\n\\t\\t\\t\\t\\t\\tfire();\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// Call all the callbacks with the given arguments\\n\\t\\t\\tfire: function() {\\n\\t\\t\\t\\tself.fireWith( this, arguments );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t},\\n\\n\\t\\t\\t// To know if the callbacks have already been called at least once\\n\\t\\t\\tfired: function() {\\n\\t\\t\\t\\treturn !!fired;\\n\\t\\t\\t}\\n\\t\\t};\\n\\n\\treturn self;\\n};\\n\\n\\nfunction Identity( v ) {\\n\\treturn v;\\n}\\nfunction Thrower( ex ) {\\n\\tthrow ex;\\n}\\n\\nfunction adoptValue( value, resolve, reject, noValue ) {\\n\\tvar method;\\n\\n\\ttry {\\n\\n\\t\\t// Check for promise aspect first to privilege synchronous behavior\\n\\t\\tif ( value && jQuery.isFunction( ( method = value.promise ) ) ) {\\n\\t\\t\\tmethod.call( value ).done( resolve ).fail( reject );\\n\\n\\t\\t// Other thenables\\n\\t\\t} else if ( value && jQuery.isFunction( ( method = value.then ) ) ) {\\n\\t\\t\\tmethod.call( value, resolve, reject );\\n\\n\\t\\t// Other non-thenables\\n\\t\\t} else {\\n\\n\\t\\t\\t// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:\\n\\t\\t\\t// * false: [ value ].slice( 0 ) => resolve( value )\\n\\t\\t\\t// * true: [ value ].slice( 1 ) => resolve()\\n\\t\\t\\tresolve.apply( undefined, [ value ].slice( noValue ) );\\n\\t\\t}\\n\\n\\t// For Promises/A+, convert exceptions into rejections\\n\\t// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in\\n\\t// Deferred#then to conditionally suppress rejection.\\n\\t} catch ( value ) {\\n\\n\\t\\t// Support: Android 4.0 only\\n\\t\\t// Strict mode functions invoked without .call/.apply get global-object context\\n\\t\\treject.apply( undefined, [ value ] );\\n\\t}\\n}\\n\\njQuery.extend( {\\n\\n\\tDeferred: function( func ) {\\n\\t\\tvar tuples = [\\n\\n\\t\\t\\t\\t// action, add listener, callbacks,\\n\\t\\t\\t\\t// ... .then handlers, argument index, [final state]\\n\\t\\t\\t\\t[ \\\"notify\\\", \\\"progress\\\", jQuery.Callbacks( \\\"memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"memory\\\" ), 2 ],\\n\\t\\t\\t\\t[ \\\"resolve\\\", \\\"done\\\", jQuery.Callbacks( \\\"once memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"once memory\\\" ), 0, \\\"resolved\\\" ],\\n\\t\\t\\t\\t[ \\\"reject\\\", \\\"fail\\\", jQuery.Callbacks( \\\"once memory\\\" ),\\n\\t\\t\\t\\t\\tjQuery.Callbacks( \\\"once memory\\\" ), 1, \\\"rejected\\\" ]\\n\\t\\t\\t],\\n\\t\\t\\tstate = \\\"pending\\\",\\n\\t\\t\\tpromise = {\\n\\t\\t\\t\\tstate: function() {\\n\\t\\t\\t\\t\\treturn state;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\talways: function() {\\n\\t\\t\\t\\t\\tdeferred.done( arguments ).fail( arguments );\\n\\t\\t\\t\\t\\treturn this;\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\t\\\"catch\\\": function( fn ) {\\n\\t\\t\\t\\t\\treturn promise.then( null, fn );\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Keep pipe for back-compat\\n\\t\\t\\t\\tpipe: function( /* fnDone, fnFail, fnProgress */ ) {\\n\\t\\t\\t\\t\\tvar fns = arguments;\\n\\n\\t\\t\\t\\t\\treturn jQuery.Deferred( function( newDefer ) {\\n\\t\\t\\t\\t\\t\\tjQuery.each( tuples, function( i, tuple ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Map tuples (progress, done, fail) to arguments (done, fail, progress)\\n\\t\\t\\t\\t\\t\\t\\tvar fn = jQuery.isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];\\n\\n\\t\\t\\t\\t\\t\\t\\t// deferred.progress(function() { bind to newDefer or newDefer.notify })\\n\\t\\t\\t\\t\\t\\t\\t// deferred.done(function() { bind to newDefer or newDefer.resolve })\\n\\t\\t\\t\\t\\t\\t\\t// deferred.fail(function() { bind to newDefer or newDefer.reject })\\n\\t\\t\\t\\t\\t\\t\\tdeferred[ tuple[ 1 ] ]( function() {\\n\\t\\t\\t\\t\\t\\t\\t\\tvar returned = fn && fn.apply( this, arguments );\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( returned && jQuery.isFunction( returned.promise ) ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturned.promise()\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.progress( newDefer.notify )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.done( newDefer.resolve )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t.fail( newDefer.reject );\\n\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tnewDefer[ tuple[ 0 ] + \\\"With\\\" ](\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthis,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tfn ? [ returned ] : arguments\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t\\t\\tfns = null;\\n\\t\\t\\t\\t\\t} ).promise();\\n\\t\\t\\t\\t},\\n\\t\\t\\t\\tthen: function( onFulfilled, onRejected, onProgress ) {\\n\\t\\t\\t\\t\\tvar maxDepth = 0;\\n\\t\\t\\t\\t\\tfunction resolve( depth, deferred, handler, special ) {\\n\\t\\t\\t\\t\\t\\treturn function() {\\n\\t\\t\\t\\t\\t\\t\\tvar that = this,\\n\\t\\t\\t\\t\\t\\t\\t\\targs = arguments,\\n\\t\\t\\t\\t\\t\\t\\t\\tmightThrow = function() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tvar returned, then;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.3\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-59\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore double-resolution attempts\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( depth < maxDepth ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturn;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\treturned = handler.apply( that, args );\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-48\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( returned === deferred.promise() ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthrow new TypeError( \\\"Thenable self-resolution\\\" );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ sections 2.3.3.1, 3.5\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-54\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-75\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Retrieve `then` only once\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tthen = returned &&\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.4\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-64\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only check objects and functions for thenability\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( typeof returned === \\\"object\\\" ||\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttypeof returned === \\\"function\\\" ) &&\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned.then;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Handle a returned thenable\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.isFunction( then ) ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Special processors (notify) just wait for resolution\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( special ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen.call(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Thrower, special )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Normal processors (resolve) also hook into progress\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// ...and disregard older resolution values\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmaxDepth++;\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthen.call(\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\treturned,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Thrower, special ),\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tresolve( maxDepth, deferred, Identity,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdeferred.notifyWith )\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t// Handle all other returned values\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only substitute handlers pass on context\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// and multiple values (non-spec behavior)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( handler !== Identity ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthat = undefined;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\targs = [ returned ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Process the value(s)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Default process is resolve\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t( special || deferred.resolveWith )( that, args );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Only normal processors (resolve) catch and reject exceptions\\n\\t\\t\\t\\t\\t\\t\\t\\tprocess = special ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tmightThrow :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tmightThrow();\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t} catch ( e ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.Deferred.exceptionHook ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tjQuery.Deferred.exceptionHook( e,\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tprocess.stackTrace );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.4.1\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-61\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Ignore post-resolution exceptions\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( depth + 1 >= maxDepth ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// Only substitute handlers pass on context\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t// and multiple values (non-spec behavior)\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tif ( handler !== Thrower ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tthat = undefined;\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\targs = [ e ];\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\tdeferred.rejectWith( that, args );\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\t\\t};\\n\\n\\t\\t\\t\\t\\t\\t\\t// Support: Promises/A+ section 2.3.3.3.1\\n\\t\\t\\t\\t\\t\\t\\t// https://promisesaplus.com/#point-57\\n\\t\\t\\t\\t\\t\\t\\t// Re-resolve promises immediately to dodge false rejection from\\n\\t\\t\\t\\t\\t\\t\\t// subsequent errors\\n\\t\\t\\t\\t\\t\\t\\tif ( depth ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tprocess();\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t\\t\\t\\t\\t// Call an optional hook to record the stack, in case of exception\\n\\t\\t\\t\\t\\t\\t\\t\\t// since it's otherwise lost when execution goes async\\n\\t\\t\\t\\t\\t\\t\\t\\tif ( jQuery.Deferred.getStackHook ) {\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tprocess.stackTrace = jQuery.Deferred.getStackHook();\\n\\t\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t\\t\\twindow.setTimeout( process );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t};\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\treturn jQuery.Deferred( function( newDefer ) {\\n\\n\\t\\t\\t\\t\\t\\t// progress_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 0 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.isFunction( onProgress ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonProgress :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tIdentity,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer.notifyWith\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t// fulfilled_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 1 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.isFunction( onFulfilled ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonFulfilled :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tIdentity\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\n\\t\\t\\t\\t\\t\\t// rejected_handlers.add( ... )\\n\\t\\t\\t\\t\\t\\ttuples[ 2 ][ 3 ].add(\\n\\t\\t\\t\\t\\t\\t\\tresolve(\\n\\t\\t\\t\\t\\t\\t\\t\\t0,\\n\\t\\t\\t\\t\\t\\t\\t\\tnewDefer,\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.isFunction( onRejected ) ?\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tonRejected :\\n\\t\\t\\t\\t\\t\\t\\t\\t\\tThrower\\n\\t\\t\\t\\t\\t\\t\\t)\\n\\t\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t\\t} ).promise();\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t// Get a promise for this deferred\\n\\t\\t\\t\\t// If obj is provided, the promise aspect is added to the object\\n\\t\\t\\t\\tpromise: function( obj ) {\\n\\t\\t\\t\\t\\treturn obj != null ? jQuery.extend( obj, promise ) : promise;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tdeferred = {};\\n\\n\\t\\t// Add list-specific methods\\n\\t\\tjQuery.each( tuples, function( i, tuple ) {\\n\\t\\t\\tvar list = tuple[ 2 ],\\n\\t\\t\\t\\tstateString = tuple[ 5 ];\\n\\n\\t\\t\\t// promise.progress = list.add\\n\\t\\t\\t// promise.done = list.add\\n\\t\\t\\t// promise.fail = list.add\\n\\t\\t\\tpromise[ tuple[ 1 ] ] = list.add;\\n\\n\\t\\t\\t// Handle state\\n\\t\\t\\tif ( stateString ) {\\n\\t\\t\\t\\tlist.add(\\n\\t\\t\\t\\t\\tfunction() {\\n\\n\\t\\t\\t\\t\\t\\t// state = \\\"resolved\\\" (i.e., fulfilled)\\n\\t\\t\\t\\t\\t\\t// state = \\\"rejected\\\"\\n\\t\\t\\t\\t\\t\\tstate = stateString;\\n\\t\\t\\t\\t\\t},\\n\\n\\t\\t\\t\\t\\t// rejected_callbacks.disable\\n\\t\\t\\t\\t\\t// fulfilled_callbacks.disable\\n\\t\\t\\t\\t\\ttuples[ 3 - i ][ 2 ].disable,\\n\\n\\t\\t\\t\\t\\t// progress_callbacks.lock\\n\\t\\t\\t\\t\\ttuples[ 0 ][ 2 ].lock\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\n\\t\\t\\t// progress_handlers.fire\\n\\t\\t\\t// fulfilled_handlers.fire\\n\\t\\t\\t// rejected_handlers.fire\\n\\t\\t\\tlist.add( tuple[ 3 ].fire );\\n\\n\\t\\t\\t// deferred.notify = function() { deferred.notifyWith(...) }\\n\\t\\t\\t// deferred.resolve = function() { deferred.resolveWith(...) }\\n\\t\\t\\t// deferred.reject = function() { deferred.rejectWith(...) }\\n\\t\\t\\tdeferred[ tuple[ 0 ] ] = function() {\\n\\t\\t\\t\\tdeferred[ tuple[ 0 ] + \\\"With\\\" ]( this === deferred ? undefined : this, arguments );\\n\\t\\t\\t\\treturn this;\\n\\t\\t\\t};\\n\\n\\t\\t\\t// deferred.notifyWith = list.fireWith\\n\\t\\t\\t// deferred.resolveWith = list.fireWith\\n\\t\\t\\t// deferred.rejectWith = list.fireWith\\n\\t\\t\\tdeferred[ tuple[ 0 ] + \\\"With\\\" ] = list.fireWith;\\n\\t\\t} );\\n\\n\\t\\t// Make the deferred a promise\\n\\t\\tpromise.promise( deferred );\\n\\n\\t\\t// Call given func if any\\n\\t\\tif ( func ) {\\n\\t\\t\\tfunc.call( deferred, deferred );\\n\\t\\t}\\n\\n\\t\\t// All done!\\n\\t\\treturn deferred;\\n\\t},\\n\\n\\t// Deferred helper\\n\\twhen: function( singleValue ) {\\n\\t\\tvar\\n\\n\\t\\t\\t// count of uncompleted subordinates\\n\\t\\t\\tremaining = arguments.length,\\n\\n\\t\\t\\t// count of unprocessed arguments\\n\\t\\t\\ti = remaining,\\n\\n\\t\\t\\t// subordinate fulfillment data\\n\\t\\t\\tresolveContexts = Array( i ),\\n\\t\\t\\tresolveValues = slice.call( arguments ),\\n\\n\\t\\t\\t// the master Deferred\\n\\t\\t\\tmaster = jQuery.Deferred(),\\n\\n\\t\\t\\t// subordinate callback factory\\n\\t\\t\\tupdateFunc = function( i ) {\\n\\t\\t\\t\\treturn function( value ) {\\n\\t\\t\\t\\t\\tresolveContexts[ i ] = this;\\n\\t\\t\\t\\t\\tresolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;\\n\\t\\t\\t\\t\\tif ( !( --remaining ) ) {\\n\\t\\t\\t\\t\\t\\tmaster.resolveWith( resolveContexts, resolveValues );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t};\\n\\t\\t\\t};\\n\\n\\t\\t// Single- and empty arguments are adopted like Promise.resolve\\n\\t\\tif ( remaining <= 1 ) {\\n\\t\\t\\tadoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,\\n\\t\\t\\t\\t!remaining );\\n\\n\\t\\t\\t// Use .then() to unwrap secondary thenables (cf. gh-3000)\\n\\t\\t\\tif ( master.state() === \\\"pending\\\" ||\\n\\t\\t\\t\\tjQuery.isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {\\n\\n\\t\\t\\t\\treturn master.then();\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Multiple arguments are aggregated like Promise.all array elements\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\tadoptValue( resolveValues[ i ], updateFunc( i ), master.reject );\\n\\t\\t}\\n\\n\\t\\treturn master.promise();\\n\\t}\\n} );\\n\\n\\n// These usually indicate a programmer mistake during development,\\n// warn about them ASAP rather than swallowing them by default.\\nvar rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;\\n\\njQuery.Deferred.exceptionHook = function( error, stack ) {\\n\\n\\t// Support: IE 8 - 9 only\\n\\t// Console exists when dev tools are open, which can happen at any time\\n\\tif ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {\\n\\t\\twindow.console.warn( \\\"jQuery.Deferred exception: \\\" + error.message, error.stack, stack );\\n\\t}\\n};\\n\\n\\n\\n\\njQuery.readyException = function( error ) {\\n\\twindow.setTimeout( function() {\\n\\t\\tthrow error;\\n\\t} );\\n};\\n\\n\\n\\n\\n// The deferred used on DOM ready\\nvar readyList = jQuery.Deferred();\\n\\njQuery.fn.ready = function( fn ) {\\n\\n\\treadyList\\n\\t\\t.then( fn )\\n\\n\\t\\t// Wrap jQuery.readyException in a function so that the lookup\\n\\t\\t// happens at the time of error handling instead of callback\\n\\t\\t// registration.\\n\\t\\t.catch( function( error ) {\\n\\t\\t\\tjQuery.readyException( error );\\n\\t\\t} );\\n\\n\\treturn this;\\n};\\n\\njQuery.extend( {\\n\\n\\t// Is the DOM ready to be used? Set to true once it occurs.\\n\\tisReady: false,\\n\\n\\t// A counter to track how many items to wait for before\\n\\t// the ready event fires. See #6781\\n\\treadyWait: 1,\\n\\n\\t// Handle when the DOM is ready\\n\\tready: function( wait ) {\\n\\n\\t\\t// Abort if there are pending holds or we're already ready\\n\\t\\tif ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Remember that the DOM is ready\\n\\t\\tjQuery.isReady = true;\\n\\n\\t\\t// If a normal DOM Ready event fired, decrement, and wait if need be\\n\\t\\tif ( wait !== true && --jQuery.readyWait > 0 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// If there are functions bound, to execute\\n\\t\\treadyList.resolveWith( document, [ jQuery ] );\\n\\t}\\n} );\\n\\njQuery.ready.then = readyList.then;\\n\\n// The ready event handler and self cleanup method\\nfunction completed() {\\n\\tdocument.removeEventListener( \\\"DOMContentLoaded\\\", completed );\\n\\twindow.removeEventListener( \\\"load\\\", completed );\\n\\tjQuery.ready();\\n}\\n\\n// Catch cases where $(document).ready() is called\\n// after the browser event has already occurred.\\n// Support: IE <=9 - 10 only\\n// Older IE sometimes signals \\\"interactive\\\" too soon\\nif ( document.readyState === \\\"complete\\\" ||\\n\\t( document.readyState !== \\\"loading\\\" && !document.documentElement.doScroll ) ) {\\n\\n\\t// Handle it asynchronously to allow scripts the opportunity to delay ready\\n\\twindow.setTimeout( jQuery.ready );\\n\\n} else {\\n\\n\\t// Use the handy event callback\\n\\tdocument.addEventListener( \\\"DOMContentLoaded\\\", completed );\\n\\n\\t// A fallback to window.onload, that will always work\\n\\twindow.addEventListener( \\\"load\\\", completed );\\n}\\n\\n\\n\\n\\n// Multifunctional method to get and set values of a collection\\n// The value/s can optionally be executed if it's a function\\nvar access = function( elems, fn, key, value, chainable, emptyGet, raw ) {\\n\\tvar i = 0,\\n\\t\\tlen = elems.length,\\n\\t\\tbulk = key == null;\\n\\n\\t// Sets many values\\n\\tif ( jQuery.type( key ) === \\\"object\\\" ) {\\n\\t\\tchainable = true;\\n\\t\\tfor ( i in key ) {\\n\\t\\t\\taccess( elems, fn, i, key[ i ], true, emptyGet, raw );\\n\\t\\t}\\n\\n\\t// Sets one value\\n\\t} else if ( value !== undefined ) {\\n\\t\\tchainable = true;\\n\\n\\t\\tif ( !jQuery.isFunction( value ) ) {\\n\\t\\t\\traw = true;\\n\\t\\t}\\n\\n\\t\\tif ( bulk ) {\\n\\n\\t\\t\\t// Bulk operations run against the entire set\\n\\t\\t\\tif ( raw ) {\\n\\t\\t\\t\\tfn.call( elems, value );\\n\\t\\t\\t\\tfn = null;\\n\\n\\t\\t\\t// ...except when executing function values\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tbulk = fn;\\n\\t\\t\\t\\tfn = function( elem, key, value ) {\\n\\t\\t\\t\\t\\treturn bulk.call( jQuery( elem ), value );\\n\\t\\t\\t\\t};\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\tif ( fn ) {\\n\\t\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\t\\tfn(\\n\\t\\t\\t\\t\\telems[ i ], key, raw ?\\n\\t\\t\\t\\t\\tvalue :\\n\\t\\t\\t\\t\\tvalue.call( elems[ i ], i, fn( elems[ i ], key ) )\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\tif ( chainable ) {\\n\\t\\treturn elems;\\n\\t}\\n\\n\\t// Gets\\n\\tif ( bulk ) {\\n\\t\\treturn fn.call( elems );\\n\\t}\\n\\n\\treturn len ? fn( elems[ 0 ], key ) : emptyGet;\\n};\\nvar acceptData = function( owner ) {\\n\\n\\t// Accepts only:\\n\\t//  - Node\\n\\t//    - Node.ELEMENT_NODE\\n\\t//    - Node.DOCUMENT_NODE\\n\\t//  - Object\\n\\t//    - Any\\n\\treturn owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\\n};\\n\\n\\n\\n\\nfunction Data() {\\n\\tthis.expando = jQuery.expando + Data.uid++;\\n}\\n\\nData.uid = 1;\\n\\nData.prototype = {\\n\\n\\tcache: function( owner ) {\\n\\n\\t\\t// Check if the owner object already has a cache\\n\\t\\tvar value = owner[ this.expando ];\\n\\n\\t\\t// If not, create one\\n\\t\\tif ( !value ) {\\n\\t\\t\\tvalue = {};\\n\\n\\t\\t\\t// We can accept data for non-element nodes in modern browsers,\\n\\t\\t\\t// but we should not, see #8335.\\n\\t\\t\\t// Always return an empty object.\\n\\t\\t\\tif ( acceptData( owner ) ) {\\n\\n\\t\\t\\t\\t// If it is a node unlikely to be stringify-ed or looped over\\n\\t\\t\\t\\t// use plain assignment\\n\\t\\t\\t\\tif ( owner.nodeType ) {\\n\\t\\t\\t\\t\\towner[ this.expando ] = value;\\n\\n\\t\\t\\t\\t// Otherwise secure it in a non-enumerable property\\n\\t\\t\\t\\t// configurable must be true to allow the property to be\\n\\t\\t\\t\\t// deleted when data is removed\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tObject.defineProperty( owner, this.expando, {\\n\\t\\t\\t\\t\\t\\tvalue: value,\\n\\t\\t\\t\\t\\t\\tconfigurable: true\\n\\t\\t\\t\\t\\t} );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn value;\\n\\t},\\n\\tset: function( owner, data, value ) {\\n\\t\\tvar prop,\\n\\t\\t\\tcache = this.cache( owner );\\n\\n\\t\\t// Handle: [ owner, key, value ] args\\n\\t\\t// Always use camelCase key (gh-2257)\\n\\t\\tif ( typeof data === \\\"string\\\" ) {\\n\\t\\t\\tcache[ jQuery.camelCase( data ) ] = value;\\n\\n\\t\\t// Handle: [ owner, { properties } ] args\\n\\t\\t} else {\\n\\n\\t\\t\\t// Copy the properties one-by-one to the cache object\\n\\t\\t\\tfor ( prop in data ) {\\n\\t\\t\\t\\tcache[ jQuery.camelCase( prop ) ] = data[ prop ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\treturn cache;\\n\\t},\\n\\tget: function( owner, key ) {\\n\\t\\treturn key === undefined ?\\n\\t\\t\\tthis.cache( owner ) :\\n\\n\\t\\t\\t// Always use camelCase key (gh-2257)\\n\\t\\t\\towner[ this.expando ] && owner[ this.expando ][ jQuery.camelCase( key ) ];\\n\\t},\\n\\taccess: function( owner, key, value ) {\\n\\n\\t\\t// In cases where either:\\n\\t\\t//\\n\\t\\t//   1. No key was specified\\n\\t\\t//   2. A string key was specified, but no value provided\\n\\t\\t//\\n\\t\\t// Take the \\\"read\\\" path and allow the get method to determine\\n\\t\\t// which value to return, respectively either:\\n\\t\\t//\\n\\t\\t//   1. The entire cache object\\n\\t\\t//   2. The data stored at the key\\n\\t\\t//\\n\\t\\tif ( key === undefined ||\\n\\t\\t\\t\\t( ( key && typeof key === \\\"string\\\" ) && value === undefined ) ) {\\n\\n\\t\\t\\treturn this.get( owner, key );\\n\\t\\t}\\n\\n\\t\\t// When the key is not a string, or both a key and value\\n\\t\\t// are specified, set or extend (existing objects) with either:\\n\\t\\t//\\n\\t\\t//   1. An object of properties\\n\\t\\t//   2. A key and value\\n\\t\\t//\\n\\t\\tthis.set( owner, key, value );\\n\\n\\t\\t// Since the \\\"set\\\" path can have two possible entry points\\n\\t\\t// return the expected data based on which path was taken[*]\\n\\t\\treturn value !== undefined ? value : key;\\n\\t},\\n\\tremove: function( owner, key ) {\\n\\t\\tvar i,\\n\\t\\t\\tcache = owner[ this.expando ];\\n\\n\\t\\tif ( cache === undefined ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( key !== undefined ) {\\n\\n\\t\\t\\t// Support array or space separated string of keys\\n\\t\\t\\tif ( Array.isArray( key ) ) {\\n\\n\\t\\t\\t\\t// If key is an array of keys...\\n\\t\\t\\t\\t// We always set camelCase keys, so remove that.\\n\\t\\t\\t\\tkey = key.map( jQuery.camelCase );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tkey = jQuery.camelCase( key );\\n\\n\\t\\t\\t\\t// If a key with the spaces exists, use it.\\n\\t\\t\\t\\t// Otherwise, create an array by matching non-whitespace\\n\\t\\t\\t\\tkey = key in cache ?\\n\\t\\t\\t\\t\\t[ key ] :\\n\\t\\t\\t\\t\\t( key.match( rnothtmlwhite ) || [] );\\n\\t\\t\\t}\\n\\n\\t\\t\\ti = key.length;\\n\\n\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\tdelete cache[ key[ i ] ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Remove the expando if there's no more data\\n\\t\\tif ( key === undefined || jQuery.isEmptyObject( cache ) ) {\\n\\n\\t\\t\\t// Support: Chrome <=35 - 45\\n\\t\\t\\t// Webkit & Blink performance suffers when deleting properties\\n\\t\\t\\t// from DOM nodes, so set to undefined instead\\n\\t\\t\\t// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)\\n\\t\\t\\tif ( owner.nodeType ) {\\n\\t\\t\\t\\towner[ this.expando ] = undefined;\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tdelete owner[ this.expando ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\thasData: function( owner ) {\\n\\t\\tvar cache = owner[ this.expando ];\\n\\t\\treturn cache !== undefined && !jQuery.isEmptyObject( cache );\\n\\t}\\n};\\nvar dataPriv = new Data();\\n\\nvar dataUser = new Data();\\n\\n\\n\\n//\\tImplementation Summary\\n//\\n//\\t1. Enforce API surface and semantic compatibility with 1.9.x branch\\n//\\t2. Improve the module's maintainability by reducing the storage\\n//\\t\\tpaths to a single mechanism.\\n//\\t3. Use the same single mechanism to support \\\"private\\\" and \\\"user\\\" data.\\n//\\t4. _Never_ expose \\\"private\\\" data to user code (TODO: Drop _data, _removeData)\\n//\\t5. Avoid exposing implementation details on user objects (eg. expando properties)\\n//\\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\\n\\nvar rbrace = /^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,\\n\\trmultiDash = /[A-Z]/g;\\n\\nfunction getData( data ) {\\n\\tif ( data === \\\"true\\\" ) {\\n\\t\\treturn true;\\n\\t}\\n\\n\\tif ( data === \\\"false\\\" ) {\\n\\t\\treturn false;\\n\\t}\\n\\n\\tif ( data === \\\"null\\\" ) {\\n\\t\\treturn null;\\n\\t}\\n\\n\\t// Only convert to a number if it doesn't change the string\\n\\tif ( data === +data + \\\"\\\" ) {\\n\\t\\treturn +data;\\n\\t}\\n\\n\\tif ( rbrace.test( data ) ) {\\n\\t\\treturn JSON.parse( data );\\n\\t}\\n\\n\\treturn data;\\n}\\n\\nfunction dataAttr( elem, key, data ) {\\n\\tvar name;\\n\\n\\t// If nothing was found internally, try to fetch any\\n\\t// data from the HTML5 data-* attribute\\n\\tif ( data === undefined && elem.nodeType === 1 ) {\\n\\t\\tname = \\\"data-\\\" + key.replace( rmultiDash, \\\"-$&\\\" ).toLowerCase();\\n\\t\\tdata = elem.getAttribute( name );\\n\\n\\t\\tif ( typeof data === \\\"string\\\" ) {\\n\\t\\t\\ttry {\\n\\t\\t\\t\\tdata = getData( data );\\n\\t\\t\\t} catch ( e ) {}\\n\\n\\t\\t\\t// Make sure we set the data so it isn't changed later\\n\\t\\t\\tdataUser.set( elem, key, data );\\n\\t\\t} else {\\n\\t\\t\\tdata = undefined;\\n\\t\\t}\\n\\t}\\n\\treturn data;\\n}\\n\\njQuery.extend( {\\n\\thasData: function( elem ) {\\n\\t\\treturn dataUser.hasData( elem ) || dataPriv.hasData( elem );\\n\\t},\\n\\n\\tdata: function( elem, name, data ) {\\n\\t\\treturn dataUser.access( elem, name, data );\\n\\t},\\n\\n\\tremoveData: function( elem, name ) {\\n\\t\\tdataUser.remove( elem, name );\\n\\t},\\n\\n\\t// TODO: Now that all calls to _data and _removeData have been replaced\\n\\t// with direct calls to dataPriv methods, these can be deprecated.\\n\\t_data: function( elem, name, data ) {\\n\\t\\treturn dataPriv.access( elem, name, data );\\n\\t},\\n\\n\\t_removeData: function( elem, name ) {\\n\\t\\tdataPriv.remove( elem, name );\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tdata: function( key, value ) {\\n\\t\\tvar i, name, data,\\n\\t\\t\\telem = this[ 0 ],\\n\\t\\t\\tattrs = elem && elem.attributes;\\n\\n\\t\\t// Gets all values\\n\\t\\tif ( key === undefined ) {\\n\\t\\t\\tif ( this.length ) {\\n\\t\\t\\t\\tdata = dataUser.get( elem );\\n\\n\\t\\t\\t\\tif ( elem.nodeType === 1 && !dataPriv.get( elem, \\\"hasDataAttrs\\\" ) ) {\\n\\t\\t\\t\\t\\ti = attrs.length;\\n\\t\\t\\t\\t\\twhile ( i-- ) {\\n\\n\\t\\t\\t\\t\\t\\t// Support: IE 11 only\\n\\t\\t\\t\\t\\t\\t// The attrs elements can be null (#14894)\\n\\t\\t\\t\\t\\t\\tif ( attrs[ i ] ) {\\n\\t\\t\\t\\t\\t\\t\\tname = attrs[ i ].name;\\n\\t\\t\\t\\t\\t\\t\\tif ( name.indexOf( \\\"data-\\\" ) === 0 ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tname = jQuery.camelCase( name.slice( 5 ) );\\n\\t\\t\\t\\t\\t\\t\\t\\tdataAttr( elem, name, data[ name ] );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tdataPriv.set( elem, \\\"hasDataAttrs\\\", true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn data;\\n\\t\\t}\\n\\n\\t\\t// Sets multiple values\\n\\t\\tif ( typeof key === \\\"object\\\" ) {\\n\\t\\t\\treturn this.each( function() {\\n\\t\\t\\t\\tdataUser.set( this, key );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\tvar data;\\n\\n\\t\\t\\t// The calling jQuery object (element matches) is not empty\\n\\t\\t\\t// (and therefore has an element appears at this[ 0 ]) and the\\n\\t\\t\\t// `value` parameter was not undefined. An empty jQuery object\\n\\t\\t\\t// will result in `undefined` for elem = this[ 0 ] which will\\n\\t\\t\\t// throw an exception if an attempt to read a data cache is made.\\n\\t\\t\\tif ( elem && value === undefined ) {\\n\\n\\t\\t\\t\\t// Attempt to get data from the cache\\n\\t\\t\\t\\t// The key will always be camelCased in Data\\n\\t\\t\\t\\tdata = dataUser.get( elem, key );\\n\\t\\t\\t\\tif ( data !== undefined ) {\\n\\t\\t\\t\\t\\treturn data;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Attempt to \\\"discover\\\" the data in\\n\\t\\t\\t\\t// HTML5 custom data-* attrs\\n\\t\\t\\t\\tdata = dataAttr( elem, key );\\n\\t\\t\\t\\tif ( data !== undefined ) {\\n\\t\\t\\t\\t\\treturn data;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// We tried really hard, but the data doesn't exist.\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Set the data...\\n\\t\\t\\tthis.each( function() {\\n\\n\\t\\t\\t\\t// We always store the camelCased key\\n\\t\\t\\t\\tdataUser.set( this, key, value );\\n\\t\\t\\t} );\\n\\t\\t}, null, value, arguments.length > 1, null, true );\\n\\t},\\n\\n\\tremoveData: function( key ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tdataUser.remove( this, key );\\n\\t\\t} );\\n\\t}\\n} );\\n\\n\\njQuery.extend( {\\n\\tqueue: function( elem, type, data ) {\\n\\t\\tvar queue;\\n\\n\\t\\tif ( elem ) {\\n\\t\\t\\ttype = ( type || \\\"fx\\\" ) + \\\"queue\\\";\\n\\t\\t\\tqueue = dataPriv.get( elem, type );\\n\\n\\t\\t\\t// Speed up dequeue by getting out quickly if this is just a lookup\\n\\t\\t\\tif ( data ) {\\n\\t\\t\\t\\tif ( !queue || Array.isArray( data ) ) {\\n\\t\\t\\t\\t\\tqueue = dataPriv.access( elem, type, jQuery.makeArray( data ) );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tqueue.push( data );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\treturn queue || [];\\n\\t\\t}\\n\\t},\\n\\n\\tdequeue: function( elem, type ) {\\n\\t\\ttype = type || \\\"fx\\\";\\n\\n\\t\\tvar queue = jQuery.queue( elem, type ),\\n\\t\\t\\tstartLength = queue.length,\\n\\t\\t\\tfn = queue.shift(),\\n\\t\\t\\thooks = jQuery._queueHooks( elem, type ),\\n\\t\\t\\tnext = function() {\\n\\t\\t\\t\\tjQuery.dequeue( elem, type );\\n\\t\\t\\t};\\n\\n\\t\\t// If the fx queue is dequeued, always remove the progress sentinel\\n\\t\\tif ( fn === \\\"inprogress\\\" ) {\\n\\t\\t\\tfn = queue.shift();\\n\\t\\t\\tstartLength--;\\n\\t\\t}\\n\\n\\t\\tif ( fn ) {\\n\\n\\t\\t\\t// Add a progress sentinel to prevent the fx queue from being\\n\\t\\t\\t// automatically dequeued\\n\\t\\t\\tif ( type === \\\"fx\\\" ) {\\n\\t\\t\\t\\tqueue.unshift( \\\"inprogress\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Clear up the last queue stop function\\n\\t\\t\\tdelete hooks.stop;\\n\\t\\t\\tfn.call( elem, next, hooks );\\n\\t\\t}\\n\\n\\t\\tif ( !startLength && hooks ) {\\n\\t\\t\\thooks.empty.fire();\\n\\t\\t}\\n\\t},\\n\\n\\t// Not public - generate a queueHooks object, or return the current one\\n\\t_queueHooks: function( elem, type ) {\\n\\t\\tvar key = type + \\\"queueHooks\\\";\\n\\t\\treturn dataPriv.get( elem, key ) || dataPriv.access( elem, key, {\\n\\t\\t\\tempty: jQuery.Callbacks( \\\"once memory\\\" ).add( function() {\\n\\t\\t\\t\\tdataPriv.remove( elem, [ type + \\\"queue\\\", key ] );\\n\\t\\t\\t} )\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tqueue: function( type, data ) {\\n\\t\\tvar setter = 2;\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tdata = type;\\n\\t\\t\\ttype = \\\"fx\\\";\\n\\t\\t\\tsetter--;\\n\\t\\t}\\n\\n\\t\\tif ( arguments.length < setter ) {\\n\\t\\t\\treturn jQuery.queue( this[ 0 ], type );\\n\\t\\t}\\n\\n\\t\\treturn data === undefined ?\\n\\t\\t\\tthis :\\n\\t\\t\\tthis.each( function() {\\n\\t\\t\\t\\tvar queue = jQuery.queue( this, type, data );\\n\\n\\t\\t\\t\\t// Ensure a hooks for this queue\\n\\t\\t\\t\\tjQuery._queueHooks( this, type );\\n\\n\\t\\t\\t\\tif ( type === \\\"fx\\\" && queue[ 0 ] !== \\\"inprogress\\\" ) {\\n\\t\\t\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} );\\n\\t},\\n\\tdequeue: function( type ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.dequeue( this, type );\\n\\t\\t} );\\n\\t},\\n\\tclearQueue: function( type ) {\\n\\t\\treturn this.queue( type || \\\"fx\\\", [] );\\n\\t},\\n\\n\\t// Get a promise resolved when queues of a certain type\\n\\t// are emptied (fx is the type by default)\\n\\tpromise: function( type, obj ) {\\n\\t\\tvar tmp,\\n\\t\\t\\tcount = 1,\\n\\t\\t\\tdefer = jQuery.Deferred(),\\n\\t\\t\\telements = this,\\n\\t\\t\\ti = this.length,\\n\\t\\t\\tresolve = function() {\\n\\t\\t\\t\\tif ( !( --count ) ) {\\n\\t\\t\\t\\t\\tdefer.resolveWith( elements, [ elements ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t};\\n\\n\\t\\tif ( typeof type !== \\\"string\\\" ) {\\n\\t\\t\\tobj = type;\\n\\t\\t\\ttype = undefined;\\n\\t\\t}\\n\\t\\ttype = type || \\\"fx\\\";\\n\\n\\t\\twhile ( i-- ) {\\n\\t\\t\\ttmp = dataPriv.get( elements[ i ], type + \\\"queueHooks\\\" );\\n\\t\\t\\tif ( tmp && tmp.empty ) {\\n\\t\\t\\t\\tcount++;\\n\\t\\t\\t\\ttmp.empty.add( resolve );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tresolve();\\n\\t\\treturn defer.promise( obj );\\n\\t}\\n} );\\nvar pnum = ( /[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/ ).source;\\n\\nvar rcssNum = new RegExp( \\\"^(?:([+-])=|)(\\\" + pnum + \\\")([a-z%]*)$\\\", \\\"i\\\" );\\n\\n\\nvar cssExpand = [ \\\"Top\\\", \\\"Right\\\", \\\"Bottom\\\", \\\"Left\\\" ];\\n\\nvar isHiddenWithinTree = function( elem, el ) {\\n\\n\\t\\t// isHiddenWithinTree might be called from jQuery#filter function;\\n\\t\\t// in that case, element will be second argument\\n\\t\\telem = el || elem;\\n\\n\\t\\t// Inline style trumps all\\n\\t\\treturn elem.style.display === \\\"none\\\" ||\\n\\t\\t\\telem.style.display === \\\"\\\" &&\\n\\n\\t\\t\\t// Otherwise, check computed style\\n\\t\\t\\t// Support: Firefox <=43 - 45\\n\\t\\t\\t// Disconnected elements can have computed display: none, so first confirm that elem is\\n\\t\\t\\t// in the document.\\n\\t\\t\\tjQuery.contains( elem.ownerDocument, elem ) &&\\n\\n\\t\\t\\tjQuery.css( elem, \\\"display\\\" ) === \\\"none\\\";\\n\\t};\\n\\nvar swap = function( elem, options, callback, args ) {\\n\\tvar ret, name,\\n\\t\\told = {};\\n\\n\\t// Remember the old values, and insert the new ones\\n\\tfor ( name in options ) {\\n\\t\\told[ name ] = elem.style[ name ];\\n\\t\\telem.style[ name ] = options[ name ];\\n\\t}\\n\\n\\tret = callback.apply( elem, args || [] );\\n\\n\\t// Revert the old values\\n\\tfor ( name in options ) {\\n\\t\\telem.style[ name ] = old[ name ];\\n\\t}\\n\\n\\treturn ret;\\n};\\n\\n\\n\\n\\nfunction adjustCSS( elem, prop, valueParts, tween ) {\\n\\tvar adjusted,\\n\\t\\tscale = 1,\\n\\t\\tmaxIterations = 20,\\n\\t\\tcurrentValue = tween ?\\n\\t\\t\\tfunction() {\\n\\t\\t\\t\\treturn tween.cur();\\n\\t\\t\\t} :\\n\\t\\t\\tfunction() {\\n\\t\\t\\t\\treturn jQuery.css( elem, prop, \\\"\\\" );\\n\\t\\t\\t},\\n\\t\\tinitial = currentValue(),\\n\\t\\tunit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? \\\"\\\" : \\\"px\\\" ),\\n\\n\\t\\t// Starting value computation is required for potential unit mismatches\\n\\t\\tinitialInUnit = ( jQuery.cssNumber[ prop ] || unit !== \\\"px\\\" && +initial ) &&\\n\\t\\t\\trcssNum.exec( jQuery.css( elem, prop ) );\\n\\n\\tif ( initialInUnit && initialInUnit[ 3 ] !== unit ) {\\n\\n\\t\\t// Trust units reported by jQuery.css\\n\\t\\tunit = unit || initialInUnit[ 3 ];\\n\\n\\t\\t// Make sure we update the tween properties later on\\n\\t\\tvalueParts = valueParts || [];\\n\\n\\t\\t// Iteratively approximate from a nonzero starting point\\n\\t\\tinitialInUnit = +initial || 1;\\n\\n\\t\\tdo {\\n\\n\\t\\t\\t// If previous iteration zeroed out, double until we get *something*.\\n\\t\\t\\t// Use string for doubling so we don't accidentally see scale as unchanged below\\n\\t\\t\\tscale = scale || \\\".5\\\";\\n\\n\\t\\t\\t// Adjust and apply\\n\\t\\t\\tinitialInUnit = initialInUnit / scale;\\n\\t\\t\\tjQuery.style( elem, prop, initialInUnit + unit );\\n\\n\\t\\t// Update scale, tolerating zero or NaN from tween.cur()\\n\\t\\t// Break the loop if scale is unchanged or perfect, or if we've just had enough.\\n\\t\\t} while (\\n\\t\\t\\tscale !== ( scale = currentValue() / initial ) && scale !== 1 && --maxIterations\\n\\t\\t);\\n\\t}\\n\\n\\tif ( valueParts ) {\\n\\t\\tinitialInUnit = +initialInUnit || +initial || 0;\\n\\n\\t\\t// Apply relative offset (+=/-=) if specified\\n\\t\\tadjusted = valueParts[ 1 ] ?\\n\\t\\t\\tinitialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :\\n\\t\\t\\t+valueParts[ 2 ];\\n\\t\\tif ( tween ) {\\n\\t\\t\\ttween.unit = unit;\\n\\t\\t\\ttween.start = initialInUnit;\\n\\t\\t\\ttween.end = adjusted;\\n\\t\\t}\\n\\t}\\n\\treturn adjusted;\\n}\\n\\n\\nvar defaultDisplayMap = {};\\n\\nfunction getDefaultDisplay( elem ) {\\n\\tvar temp,\\n\\t\\tdoc = elem.ownerDocument,\\n\\t\\tnodeName = elem.nodeName,\\n\\t\\tdisplay = defaultDisplayMap[ nodeName ];\\n\\n\\tif ( display ) {\\n\\t\\treturn display;\\n\\t}\\n\\n\\ttemp = doc.body.appendChild( doc.createElement( nodeName ) );\\n\\tdisplay = jQuery.css( temp, \\\"display\\\" );\\n\\n\\ttemp.parentNode.removeChild( temp );\\n\\n\\tif ( display === \\\"none\\\" ) {\\n\\t\\tdisplay = \\\"block\\\";\\n\\t}\\n\\tdefaultDisplayMap[ nodeName ] = display;\\n\\n\\treturn display;\\n}\\n\\nfunction showHide( elements, show ) {\\n\\tvar display, elem,\\n\\t\\tvalues = [],\\n\\t\\tindex = 0,\\n\\t\\tlength = elements.length;\\n\\n\\t// Determine new display value for elements that need to change\\n\\tfor ( ; index < length; index++ ) {\\n\\t\\telem = elements[ index ];\\n\\t\\tif ( !elem.style ) {\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tdisplay = elem.style.display;\\n\\t\\tif ( show ) {\\n\\n\\t\\t\\t// Since we force visibility upon cascade-hidden elements, an immediate (and slow)\\n\\t\\t\\t// check is required in this first loop unless we have a nonempty display value (either\\n\\t\\t\\t// inline or about-to-be-restored)\\n\\t\\t\\tif ( display === \\\"none\\\" ) {\\n\\t\\t\\t\\tvalues[ index ] = dataPriv.get( elem, \\\"display\\\" ) || null;\\n\\t\\t\\t\\tif ( !values[ index ] ) {\\n\\t\\t\\t\\t\\telem.style.display = \\\"\\\";\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t\\tif ( elem.style.display === \\\"\\\" && isHiddenWithinTree( elem ) ) {\\n\\t\\t\\t\\tvalues[ index ] = getDefaultDisplay( elem );\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\t\\t\\tif ( display !== \\\"none\\\" ) {\\n\\t\\t\\t\\tvalues[ index ] = \\\"none\\\";\\n\\n\\t\\t\\t\\t// Remember what we're overwriting\\n\\t\\t\\t\\tdataPriv.set( elem, \\\"display\\\", display );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Set the display of the elements in a second loop to avoid constant reflow\\n\\tfor ( index = 0; index < length; index++ ) {\\n\\t\\tif ( values[ index ] != null ) {\\n\\t\\t\\telements[ index ].style.display = values[ index ];\\n\\t\\t}\\n\\t}\\n\\n\\treturn elements;\\n}\\n\\njQuery.fn.extend( {\\n\\tshow: function() {\\n\\t\\treturn showHide( this, true );\\n\\t},\\n\\thide: function() {\\n\\t\\treturn showHide( this );\\n\\t},\\n\\ttoggle: function( state ) {\\n\\t\\tif ( typeof state === \\\"boolean\\\" ) {\\n\\t\\t\\treturn state ? this.show() : this.hide();\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tif ( isHiddenWithinTree( this ) ) {\\n\\t\\t\\t\\tjQuery( this ).show();\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tjQuery( this ).hide();\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t}\\n} );\\nvar rcheckableType = ( /^(?:checkbox|radio)$/i );\\n\\nvar rtagName = ( /<([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]+)/i );\\n\\nvar rscriptType = ( /^$|\\\\/(?:java|ecma)script/i );\\n\\n\\n\\n// We have to close these tags to support XHTML (#13200)\\nvar wrapMap = {\\n\\n\\t// Support: IE <=9 only\\n\\toption: [ 1, \\\"<select multiple='multiple'>\\\", \\\"</select>\\\" ],\\n\\n\\t// XHTML parsers do not magically insert elements in the\\n\\t// same way that tag soup parsers do. So we cannot shorten\\n\\t// this by omitting <tbody> or other required elements.\\n\\tthead: [ 1, \\\"<table>\\\", \\\"</table>\\\" ],\\n\\tcol: [ 2, \\\"<table><colgroup>\\\", \\\"</colgroup></table>\\\" ],\\n\\ttr: [ 2, \\\"<table><tbody>\\\", \\\"</tbody></table>\\\" ],\\n\\ttd: [ 3, \\\"<table><tbody><tr>\\\", \\\"</tr></tbody></table>\\\" ],\\n\\n\\t_default: [ 0, \\\"\\\", \\\"\\\" ]\\n};\\n\\n// Support: IE <=9 only\\nwrapMap.optgroup = wrapMap.option;\\n\\nwrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\\nwrapMap.th = wrapMap.td;\\n\\n\\nfunction getAll( context, tag ) {\\n\\n\\t// Support: IE <=9 - 11 only\\n\\t// Use typeof to avoid zero-argument method invocation on host objects (#15151)\\n\\tvar ret;\\n\\n\\tif ( typeof context.getElementsByTagName !== \\\"undefined\\\" ) {\\n\\t\\tret = context.getElementsByTagName( tag || \\\"*\\\" );\\n\\n\\t} else if ( typeof context.querySelectorAll !== \\\"undefined\\\" ) {\\n\\t\\tret = context.querySelectorAll( tag || \\\"*\\\" );\\n\\n\\t} else {\\n\\t\\tret = [];\\n\\t}\\n\\n\\tif ( tag === undefined || tag && nodeName( context, tag ) ) {\\n\\t\\treturn jQuery.merge( [ context ], ret );\\n\\t}\\n\\n\\treturn ret;\\n}\\n\\n\\n// Mark scripts as having already been evaluated\\nfunction setGlobalEval( elems, refElements ) {\\n\\tvar i = 0,\\n\\t\\tl = elems.length;\\n\\n\\tfor ( ; i < l; i++ ) {\\n\\t\\tdataPriv.set(\\n\\t\\t\\telems[ i ],\\n\\t\\t\\t\\\"globalEval\\\",\\n\\t\\t\\t!refElements || dataPriv.get( refElements[ i ], \\\"globalEval\\\" )\\n\\t\\t);\\n\\t}\\n}\\n\\n\\nvar rhtml = /<|&#?\\\\w+;/;\\n\\nfunction buildFragment( elems, context, scripts, selection, ignored ) {\\n\\tvar elem, tmp, tag, wrap, contains, j,\\n\\t\\tfragment = context.createDocumentFragment(),\\n\\t\\tnodes = [],\\n\\t\\ti = 0,\\n\\t\\tl = elems.length;\\n\\n\\tfor ( ; i < l; i++ ) {\\n\\t\\telem = elems[ i ];\\n\\n\\t\\tif ( elem || elem === 0 ) {\\n\\n\\t\\t\\t// Add nodes directly\\n\\t\\t\\tif ( jQuery.type( elem ) === \\\"object\\\" ) {\\n\\n\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\tjQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );\\n\\n\\t\\t\\t// Convert non-html into a text node\\n\\t\\t\\t} else if ( !rhtml.test( elem ) ) {\\n\\t\\t\\t\\tnodes.push( context.createTextNode( elem ) );\\n\\n\\t\\t\\t// Convert html into DOM nodes\\n\\t\\t\\t} else {\\n\\t\\t\\t\\ttmp = tmp || fragment.appendChild( context.createElement( \\\"div\\\" ) );\\n\\n\\t\\t\\t\\t// Deserialize a standard representation\\n\\t\\t\\t\\ttag = ( rtagName.exec( elem ) || [ \\\"\\\", \\\"\\\" ] )[ 1 ].toLowerCase();\\n\\t\\t\\t\\twrap = wrapMap[ tag ] || wrapMap._default;\\n\\t\\t\\t\\ttmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];\\n\\n\\t\\t\\t\\t// Descend through wrappers to the right content\\n\\t\\t\\t\\tj = wrap[ 0 ];\\n\\t\\t\\t\\twhile ( j-- ) {\\n\\t\\t\\t\\t\\ttmp = tmp.lastChild;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\tjQuery.merge( nodes, tmp.childNodes );\\n\\n\\t\\t\\t\\t// Remember the top-level container\\n\\t\\t\\t\\ttmp = fragment.firstChild;\\n\\n\\t\\t\\t\\t// Ensure the created nodes are orphaned (#12392)\\n\\t\\t\\t\\ttmp.textContent = \\\"\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// Remove wrapper from fragment\\n\\tfragment.textContent = \\\"\\\";\\n\\n\\ti = 0;\\n\\twhile ( ( elem = nodes[ i++ ] ) ) {\\n\\n\\t\\t// Skip elements already in the context collection (trac-4087)\\n\\t\\tif ( selection && jQuery.inArray( elem, selection ) > -1 ) {\\n\\t\\t\\tif ( ignored ) {\\n\\t\\t\\t\\tignored.push( elem );\\n\\t\\t\\t}\\n\\t\\t\\tcontinue;\\n\\t\\t}\\n\\n\\t\\tcontains = jQuery.contains( elem.ownerDocument, elem );\\n\\n\\t\\t// Append to fragment\\n\\t\\ttmp = getAll( fragment.appendChild( elem ), \\\"script\\\" );\\n\\n\\t\\t// Preserve script evaluation history\\n\\t\\tif ( contains ) {\\n\\t\\t\\tsetGlobalEval( tmp );\\n\\t\\t}\\n\\n\\t\\t// Capture executables\\n\\t\\tif ( scripts ) {\\n\\t\\t\\tj = 0;\\n\\t\\t\\twhile ( ( elem = tmp[ j++ ] ) ) {\\n\\t\\t\\t\\tif ( rscriptType.test( elem.type || \\\"\\\" ) ) {\\n\\t\\t\\t\\t\\tscripts.push( elem );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn fragment;\\n}\\n\\n\\n( function() {\\n\\tvar fragment = document.createDocumentFragment(),\\n\\t\\tdiv = fragment.appendChild( document.createElement( \\\"div\\\" ) ),\\n\\t\\tinput = document.createElement( \\\"input\\\" );\\n\\n\\t// Support: Android 4.0 - 4.3 only\\n\\t// Check state lost if the name is set (#11217)\\n\\t// Support: Windows Web Apps (WWA)\\n\\t// `name` and `type` must use .setAttribute for WWA (#14901)\\n\\tinput.setAttribute( \\\"type\\\", \\\"radio\\\" );\\n\\tinput.setAttribute( \\\"checked\\\", \\\"checked\\\" );\\n\\tinput.setAttribute( \\\"name\\\", \\\"t\\\" );\\n\\n\\tdiv.appendChild( input );\\n\\n\\t// Support: Android <=4.1 only\\n\\t// Older WebKit doesn't clone checked state correctly in fragments\\n\\tsupport.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;\\n\\n\\t// Support: IE <=11 only\\n\\t// Make sure textarea (and checkbox) defaultValue is properly cloned\\n\\tdiv.innerHTML = \\\"<textarea>x</textarea>\\\";\\n\\tsupport.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;\\n} )();\\nvar documentElement = document.documentElement;\\n\\n\\n\\nvar\\n\\trkeyEvent = /^key/,\\n\\trmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,\\n\\trtypenamespace = /^([^.]*)(?:\\\\.(.+)|)/;\\n\\nfunction returnTrue() {\\n\\treturn true;\\n}\\n\\nfunction returnFalse() {\\n\\treturn false;\\n}\\n\\n// Support: IE <=9 only\\n// See #13393 for more info\\nfunction safeActiveElement() {\\n\\ttry {\\n\\t\\treturn document.activeElement;\\n\\t} catch ( err ) { }\\n}\\n\\nfunction on( elem, types, selector, data, fn, one ) {\\n\\tvar origFn, type;\\n\\n\\t// Types can be a map of types/handlers\\n\\tif ( typeof types === \\\"object\\\" ) {\\n\\n\\t\\t// ( types-Object, selector, data )\\n\\t\\tif ( typeof selector !== \\\"string\\\" ) {\\n\\n\\t\\t\\t// ( types-Object, data )\\n\\t\\t\\tdata = data || selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t\\tfor ( type in types ) {\\n\\t\\t\\ton( elem, type, selector, data, types[ type ], one );\\n\\t\\t}\\n\\t\\treturn elem;\\n\\t}\\n\\n\\tif ( data == null && fn == null ) {\\n\\n\\t\\t// ( types, fn )\\n\\t\\tfn = selector;\\n\\t\\tdata = selector = undefined;\\n\\t} else if ( fn == null ) {\\n\\t\\tif ( typeof selector === \\\"string\\\" ) {\\n\\n\\t\\t\\t// ( types, selector, fn )\\n\\t\\t\\tfn = data;\\n\\t\\t\\tdata = undefined;\\n\\t\\t} else {\\n\\n\\t\\t\\t// ( types, data, fn )\\n\\t\\t\\tfn = data;\\n\\t\\t\\tdata = selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t}\\n\\tif ( fn === false ) {\\n\\t\\tfn = returnFalse;\\n\\t} else if ( !fn ) {\\n\\t\\treturn elem;\\n\\t}\\n\\n\\tif ( one === 1 ) {\\n\\t\\torigFn = fn;\\n\\t\\tfn = function( event ) {\\n\\n\\t\\t\\t// Can use an empty set, since event contains the info\\n\\t\\t\\tjQuery().off( event );\\n\\t\\t\\treturn origFn.apply( this, arguments );\\n\\t\\t};\\n\\n\\t\\t// Use same guid so caller can remove using origFn\\n\\t\\tfn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\\n\\t}\\n\\treturn elem.each( function() {\\n\\t\\tjQuery.event.add( this, types, fn, data, selector );\\n\\t} );\\n}\\n\\n/*\\n * Helper functions for managing events -- not part of the public interface.\\n * Props to Dean Edwards' addEvent library for many of the ideas.\\n */\\njQuery.event = {\\n\\n\\tglobal: {},\\n\\n\\tadd: function( elem, types, handler, data, selector ) {\\n\\n\\t\\tvar handleObjIn, eventHandle, tmp,\\n\\t\\t\\tevents, t, handleObj,\\n\\t\\t\\tspecial, handlers, type, namespaces, origType,\\n\\t\\t\\telemData = dataPriv.get( elem );\\n\\n\\t\\t// Don't attach events to noData or text/comment nodes (but allow plain objects)\\n\\t\\tif ( !elemData ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Caller can pass in an object of custom data in lieu of the handler\\n\\t\\tif ( handler.handler ) {\\n\\t\\t\\thandleObjIn = handler;\\n\\t\\t\\thandler = handleObjIn.handler;\\n\\t\\t\\tselector = handleObjIn.selector;\\n\\t\\t}\\n\\n\\t\\t// Ensure that invalid selectors throw exceptions at attach time\\n\\t\\t// Evaluate against documentElement in case elem is a non-element node (e.g., document)\\n\\t\\tif ( selector ) {\\n\\t\\t\\tjQuery.find.matchesSelector( documentElement, selector );\\n\\t\\t}\\n\\n\\t\\t// Make sure that the handler has a unique ID, used to find/remove it later\\n\\t\\tif ( !handler.guid ) {\\n\\t\\t\\thandler.guid = jQuery.guid++;\\n\\t\\t}\\n\\n\\t\\t// Init the element's event structure and main handler, if this is the first\\n\\t\\tif ( !( events = elemData.events ) ) {\\n\\t\\t\\tevents = elemData.events = {};\\n\\t\\t}\\n\\t\\tif ( !( eventHandle = elemData.handle ) ) {\\n\\t\\t\\teventHandle = elemData.handle = function( e ) {\\n\\n\\t\\t\\t\\t// Discard the second event of a jQuery.event.trigger() and\\n\\t\\t\\t\\t// when an event is called after a page has unloaded\\n\\t\\t\\t\\treturn typeof jQuery !== \\\"undefined\\\" && jQuery.event.triggered !== e.type ?\\n\\t\\t\\t\\t\\tjQuery.event.dispatch.apply( elem, arguments ) : undefined;\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Handle multiple events separated by a space\\n\\t\\ttypes = ( types || \\\"\\\" ).match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\t\\tt = types.length;\\n\\t\\twhile ( t-- ) {\\n\\t\\t\\ttmp = rtypenamespace.exec( types[ t ] ) || [];\\n\\t\\t\\ttype = origType = tmp[ 1 ];\\n\\t\\t\\tnamespaces = ( tmp[ 2 ] || \\\"\\\" ).split( \\\".\\\" ).sort();\\n\\n\\t\\t\\t// There *must* be a type, no attaching namespace-only handlers\\n\\t\\t\\tif ( !type ) {\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If event changes its type, use the special event handlers for the changed type\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\n\\t\\t\\t// If selector defined, determine special event api type, otherwise given type\\n\\t\\t\\ttype = ( selector ? special.delegateType : special.bindType ) || type;\\n\\n\\t\\t\\t// Update special based on newly reset type\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\n\\t\\t\\t// handleObj is passed to all event handlers\\n\\t\\t\\thandleObj = jQuery.extend( {\\n\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\torigType: origType,\\n\\t\\t\\t\\tdata: data,\\n\\t\\t\\t\\thandler: handler,\\n\\t\\t\\t\\tguid: handler.guid,\\n\\t\\t\\t\\tselector: selector,\\n\\t\\t\\t\\tneedsContext: selector && jQuery.expr.match.needsContext.test( selector ),\\n\\t\\t\\t\\tnamespace: namespaces.join( \\\".\\\" )\\n\\t\\t\\t}, handleObjIn );\\n\\n\\t\\t\\t// Init the event handler queue if we're the first\\n\\t\\t\\tif ( !( handlers = events[ type ] ) ) {\\n\\t\\t\\t\\thandlers = events[ type ] = [];\\n\\t\\t\\t\\thandlers.delegateCount = 0;\\n\\n\\t\\t\\t\\t// Only use addEventListener if the special events handler returns false\\n\\t\\t\\t\\tif ( !special.setup ||\\n\\t\\t\\t\\t\\tspecial.setup.call( elem, data, namespaces, eventHandle ) === false ) {\\n\\n\\t\\t\\t\\t\\tif ( elem.addEventListener ) {\\n\\t\\t\\t\\t\\t\\telem.addEventListener( type, eventHandle );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( special.add ) {\\n\\t\\t\\t\\tspecial.add.call( elem, handleObj );\\n\\n\\t\\t\\t\\tif ( !handleObj.handler.guid ) {\\n\\t\\t\\t\\t\\thandleObj.handler.guid = handler.guid;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add to the element's handler list, delegates in front\\n\\t\\t\\tif ( selector ) {\\n\\t\\t\\t\\thandlers.splice( handlers.delegateCount++, 0, handleObj );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\thandlers.push( handleObj );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Keep track of which events have ever been used, for event optimization\\n\\t\\t\\tjQuery.event.global[ type ] = true;\\n\\t\\t}\\n\\n\\t},\\n\\n\\t// Detach an event or set of events from an element\\n\\tremove: function( elem, types, handler, selector, mappedTypes ) {\\n\\n\\t\\tvar j, origCount, tmp,\\n\\t\\t\\tevents, t, handleObj,\\n\\t\\t\\tspecial, handlers, type, namespaces, origType,\\n\\t\\t\\telemData = dataPriv.hasData( elem ) && dataPriv.get( elem );\\n\\n\\t\\tif ( !elemData || !( events = elemData.events ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Once for each type.namespace in types; type may be omitted\\n\\t\\ttypes = ( types || \\\"\\\" ).match( rnothtmlwhite ) || [ \\\"\\\" ];\\n\\t\\tt = types.length;\\n\\t\\twhile ( t-- ) {\\n\\t\\t\\ttmp = rtypenamespace.exec( types[ t ] ) || [];\\n\\t\\t\\ttype = origType = tmp[ 1 ];\\n\\t\\t\\tnamespaces = ( tmp[ 2 ] || \\\"\\\" ).split( \\\".\\\" ).sort();\\n\\n\\t\\t\\t// Unbind all events (on this namespace, if provided) for the element\\n\\t\\t\\tif ( !type ) {\\n\\t\\t\\t\\tfor ( type in events ) {\\n\\t\\t\\t\\t\\tjQuery.event.remove( elem, type + types[ t ], handler, selector, true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tcontinue;\\n\\t\\t\\t}\\n\\n\\t\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\t\\t\\ttype = ( selector ? special.delegateType : special.bindType ) || type;\\n\\t\\t\\thandlers = events[ type ] || [];\\n\\t\\t\\ttmp = tmp[ 2 ] &&\\n\\t\\t\\t\\tnew RegExp( \\\"(^|\\\\\\\\.)\\\" + namespaces.join( \\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\" ) + \\\"(\\\\\\\\.|$)\\\" );\\n\\n\\t\\t\\t// Remove matching events\\n\\t\\t\\torigCount = j = handlers.length;\\n\\t\\t\\twhile ( j-- ) {\\n\\t\\t\\t\\thandleObj = handlers[ j ];\\n\\n\\t\\t\\t\\tif ( ( mappedTypes || origType === handleObj.origType ) &&\\n\\t\\t\\t\\t\\t( !handler || handler.guid === handleObj.guid ) &&\\n\\t\\t\\t\\t\\t( !tmp || tmp.test( handleObj.namespace ) ) &&\\n\\t\\t\\t\\t\\t( !selector || selector === handleObj.selector ||\\n\\t\\t\\t\\t\\t\\tselector === \\\"**\\\" && handleObj.selector ) ) {\\n\\t\\t\\t\\t\\thandlers.splice( j, 1 );\\n\\n\\t\\t\\t\\t\\tif ( handleObj.selector ) {\\n\\t\\t\\t\\t\\t\\thandlers.delegateCount--;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( special.remove ) {\\n\\t\\t\\t\\t\\t\\tspecial.remove.call( elem, handleObj );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Remove generic event handler if we removed something and no more handlers exist\\n\\t\\t\\t// (avoids potential for endless recursion during removal of special event handlers)\\n\\t\\t\\tif ( origCount && !handlers.length ) {\\n\\t\\t\\t\\tif ( !special.teardown ||\\n\\t\\t\\t\\t\\tspecial.teardown.call( elem, namespaces, elemData.handle ) === false ) {\\n\\n\\t\\t\\t\\t\\tjQuery.removeEvent( elem, type, elemData.handle );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tdelete events[ type ];\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Remove data and the expando if it's no longer used\\n\\t\\tif ( jQuery.isEmptyObject( events ) ) {\\n\\t\\t\\tdataPriv.remove( elem, \\\"handle events\\\" );\\n\\t\\t}\\n\\t},\\n\\n\\tdispatch: function( nativeEvent ) {\\n\\n\\t\\t// Make a writable jQuery.Event from the native event object\\n\\t\\tvar event = jQuery.event.fix( nativeEvent );\\n\\n\\t\\tvar i, j, ret, matched, handleObj, handlerQueue,\\n\\t\\t\\targs = new Array( arguments.length ),\\n\\t\\t\\thandlers = ( dataPriv.get( this, \\\"events\\\" ) || {} )[ event.type ] || [],\\n\\t\\t\\tspecial = jQuery.event.special[ event.type ] || {};\\n\\n\\t\\t// Use the fix-ed jQuery.Event rather than the (read-only) native event\\n\\t\\targs[ 0 ] = event;\\n\\n\\t\\tfor ( i = 1; i < arguments.length; i++ ) {\\n\\t\\t\\targs[ i ] = arguments[ i ];\\n\\t\\t}\\n\\n\\t\\tevent.delegateTarget = this;\\n\\n\\t\\t// Call the preDispatch hook for the mapped type, and let it bail if desired\\n\\t\\tif ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Determine handlers\\n\\t\\thandlerQueue = jQuery.event.handlers.call( this, event, handlers );\\n\\n\\t\\t// Run delegates first; they may want to stop propagation beneath us\\n\\t\\ti = 0;\\n\\t\\twhile ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {\\n\\t\\t\\tevent.currentTarget = matched.elem;\\n\\n\\t\\t\\tj = 0;\\n\\t\\t\\twhile ( ( handleObj = matched.handlers[ j++ ] ) &&\\n\\t\\t\\t\\t!event.isImmediatePropagationStopped() ) {\\n\\n\\t\\t\\t\\t// Triggered event must either 1) have no namespace, or 2) have namespace(s)\\n\\t\\t\\t\\t// a subset or equal to those in the bound event (both can have no namespace).\\n\\t\\t\\t\\tif ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {\\n\\n\\t\\t\\t\\t\\tevent.handleObj = handleObj;\\n\\t\\t\\t\\t\\tevent.data = handleObj.data;\\n\\n\\t\\t\\t\\t\\tret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||\\n\\t\\t\\t\\t\\t\\thandleObj.handler ).apply( matched.elem, args );\\n\\n\\t\\t\\t\\t\\tif ( ret !== undefined ) {\\n\\t\\t\\t\\t\\t\\tif ( ( event.result = ret ) === false ) {\\n\\t\\t\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t\\t\\t\\tevent.stopPropagation();\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Call the postDispatch hook for the mapped type\\n\\t\\tif ( special.postDispatch ) {\\n\\t\\t\\tspecial.postDispatch.call( this, event );\\n\\t\\t}\\n\\n\\t\\treturn event.result;\\n\\t},\\n\\n\\thandlers: function( event, handlers ) {\\n\\t\\tvar i, handleObj, sel, matchedHandlers, matchedSelectors,\\n\\t\\t\\thandlerQueue = [],\\n\\t\\t\\tdelegateCount = handlers.delegateCount,\\n\\t\\t\\tcur = event.target;\\n\\n\\t\\t// Find delegate handlers\\n\\t\\tif ( delegateCount &&\\n\\n\\t\\t\\t// Support: IE <=9\\n\\t\\t\\t// Black-hole SVG <use> instance trees (trac-13180)\\n\\t\\t\\tcur.nodeType &&\\n\\n\\t\\t\\t// Support: Firefox <=42\\n\\t\\t\\t// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)\\n\\t\\t\\t// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click\\n\\t\\t\\t// Support: IE 11 only\\n\\t\\t\\t// ...but not arrow key \\\"clicks\\\" of radio inputs, which can have `button` -1 (gh-2343)\\n\\t\\t\\t!( event.type === \\\"click\\\" && event.button >= 1 ) ) {\\n\\n\\t\\t\\tfor ( ; cur !== this; cur = cur.parentNode || this ) {\\n\\n\\t\\t\\t\\t// Don't check non-elements (#13208)\\n\\t\\t\\t\\t// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\\n\\t\\t\\t\\tif ( cur.nodeType === 1 && !( event.type === \\\"click\\\" && cur.disabled === true ) ) {\\n\\t\\t\\t\\t\\tmatchedHandlers = [];\\n\\t\\t\\t\\t\\tmatchedSelectors = {};\\n\\t\\t\\t\\t\\tfor ( i = 0; i < delegateCount; i++ ) {\\n\\t\\t\\t\\t\\t\\thandleObj = handlers[ i ];\\n\\n\\t\\t\\t\\t\\t\\t// Don't conflict with Object.prototype properties (#13203)\\n\\t\\t\\t\\t\\t\\tsel = handleObj.selector + \\\" \\\";\\n\\n\\t\\t\\t\\t\\t\\tif ( matchedSelectors[ sel ] === undefined ) {\\n\\t\\t\\t\\t\\t\\t\\tmatchedSelectors[ sel ] = handleObj.needsContext ?\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery( sel, this ).index( cur ) > -1 :\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.find( sel, this, null, [ cur ] ).length;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\tif ( matchedSelectors[ sel ] ) {\\n\\t\\t\\t\\t\\t\\t\\tmatchedHandlers.push( handleObj );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\tif ( matchedHandlers.length ) {\\n\\t\\t\\t\\t\\t\\thandlerQueue.push( { elem: cur, handlers: matchedHandlers } );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Add the remaining (directly-bound) handlers\\n\\t\\tcur = this;\\n\\t\\tif ( delegateCount < handlers.length ) {\\n\\t\\t\\thandlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );\\n\\t\\t}\\n\\n\\t\\treturn handlerQueue;\\n\\t},\\n\\n\\taddProp: function( name, hook ) {\\n\\t\\tObject.defineProperty( jQuery.Event.prototype, name, {\\n\\t\\t\\tenumerable: true,\\n\\t\\t\\tconfigurable: true,\\n\\n\\t\\t\\tget: jQuery.isFunction( hook ) ?\\n\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\tif ( this.originalEvent ) {\\n\\t\\t\\t\\t\\t\\t\\treturn hook( this.originalEvent );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} :\\n\\t\\t\\t\\tfunction() {\\n\\t\\t\\t\\t\\tif ( this.originalEvent ) {\\n\\t\\t\\t\\t\\t\\t\\treturn this.originalEvent[ name ];\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t},\\n\\n\\t\\t\\tset: function( value ) {\\n\\t\\t\\t\\tObject.defineProperty( this, name, {\\n\\t\\t\\t\\t\\tenumerable: true,\\n\\t\\t\\t\\t\\tconfigurable: true,\\n\\t\\t\\t\\t\\twritable: true,\\n\\t\\t\\t\\t\\tvalue: value\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tfix: function( originalEvent ) {\\n\\t\\treturn originalEvent[ jQuery.expando ] ?\\n\\t\\t\\toriginalEvent :\\n\\t\\t\\tnew jQuery.Event( originalEvent );\\n\\t},\\n\\n\\tspecial: {\\n\\t\\tload: {\\n\\n\\t\\t\\t// Prevent triggered image.load events from bubbling to window.load\\n\\t\\t\\tnoBubble: true\\n\\t\\t},\\n\\t\\tfocus: {\\n\\n\\t\\t\\t// Fire native event if possible so blur/focus sequence is correct\\n\\t\\t\\ttrigger: function() {\\n\\t\\t\\t\\tif ( this !== safeActiveElement() && this.focus ) {\\n\\t\\t\\t\\t\\tthis.focus();\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tdelegateType: \\\"focusin\\\"\\n\\t\\t},\\n\\t\\tblur: {\\n\\t\\t\\ttrigger: function() {\\n\\t\\t\\t\\tif ( this === safeActiveElement() && this.blur ) {\\n\\t\\t\\t\\t\\tthis.blur();\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\t\\t\\tdelegateType: \\\"focusout\\\"\\n\\t\\t},\\n\\t\\tclick: {\\n\\n\\t\\t\\t// For checkbox, fire native event so checked state will be right\\n\\t\\t\\ttrigger: function() {\\n\\t\\t\\t\\tif ( this.type === \\\"checkbox\\\" && this.click && nodeName( this, \\\"input\\\" ) ) {\\n\\t\\t\\t\\t\\tthis.click();\\n\\t\\t\\t\\t\\treturn false;\\n\\t\\t\\t\\t}\\n\\t\\t\\t},\\n\\n\\t\\t\\t// For cross-browser consistency, don't fire native .click() on links\\n\\t\\t\\t_default: function( event ) {\\n\\t\\t\\t\\treturn nodeName( event.target, \\\"a\\\" );\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tbeforeunload: {\\n\\t\\t\\tpostDispatch: function( event ) {\\n\\n\\t\\t\\t\\t// Support: Firefox 20+\\n\\t\\t\\t\\t// Firefox doesn't alert if the returnValue field is not set.\\n\\t\\t\\t\\tif ( event.result !== undefined && event.originalEvent ) {\\n\\t\\t\\t\\t\\tevent.originalEvent.returnValue = event.result;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n};\\n\\njQuery.removeEvent = function( elem, type, handle ) {\\n\\n\\t// This \\\"if\\\" is needed for plain objects\\n\\tif ( elem.removeEventListener ) {\\n\\t\\telem.removeEventListener( type, handle );\\n\\t}\\n};\\n\\njQuery.Event = function( src, props ) {\\n\\n\\t// Allow instantiation without the 'new' keyword\\n\\tif ( !( this instanceof jQuery.Event ) ) {\\n\\t\\treturn new jQuery.Event( src, props );\\n\\t}\\n\\n\\t// Event object\\n\\tif ( src && src.type ) {\\n\\t\\tthis.originalEvent = src;\\n\\t\\tthis.type = src.type;\\n\\n\\t\\t// Events bubbling up the document may have been marked as prevented\\n\\t\\t// by a handler lower down the tree; reflect the correct value.\\n\\t\\tthis.isDefaultPrevented = src.defaultPrevented ||\\n\\t\\t\\t\\tsrc.defaultPrevented === undefined &&\\n\\n\\t\\t\\t\\t// Support: Android <=2.3 only\\n\\t\\t\\t\\tsrc.returnValue === false ?\\n\\t\\t\\treturnTrue :\\n\\t\\t\\treturnFalse;\\n\\n\\t\\t// Create target properties\\n\\t\\t// Support: Safari <=6 - 7 only\\n\\t\\t// Target should not be a text node (#504, #13143)\\n\\t\\tthis.target = ( src.target && src.target.nodeType === 3 ) ?\\n\\t\\t\\tsrc.target.parentNode :\\n\\t\\t\\tsrc.target;\\n\\n\\t\\tthis.currentTarget = src.currentTarget;\\n\\t\\tthis.relatedTarget = src.relatedTarget;\\n\\n\\t// Event type\\n\\t} else {\\n\\t\\tthis.type = src;\\n\\t}\\n\\n\\t// Put explicitly provided properties onto the event object\\n\\tif ( props ) {\\n\\t\\tjQuery.extend( this, props );\\n\\t}\\n\\n\\t// Create a timestamp if incoming event doesn't have one\\n\\tthis.timeStamp = src && src.timeStamp || jQuery.now();\\n\\n\\t// Mark it as fixed\\n\\tthis[ jQuery.expando ] = true;\\n};\\n\\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\\n// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\\njQuery.Event.prototype = {\\n\\tconstructor: jQuery.Event,\\n\\tisDefaultPrevented: returnFalse,\\n\\tisPropagationStopped: returnFalse,\\n\\tisImmediatePropagationStopped: returnFalse,\\n\\tisSimulated: false,\\n\\n\\tpreventDefault: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isDefaultPrevented = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.preventDefault();\\n\\t\\t}\\n\\t},\\n\\tstopPropagation: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isPropagationStopped = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.stopPropagation();\\n\\t\\t}\\n\\t},\\n\\tstopImmediatePropagation: function() {\\n\\t\\tvar e = this.originalEvent;\\n\\n\\t\\tthis.isImmediatePropagationStopped = returnTrue;\\n\\n\\t\\tif ( e && !this.isSimulated ) {\\n\\t\\t\\te.stopImmediatePropagation();\\n\\t\\t}\\n\\n\\t\\tthis.stopPropagation();\\n\\t}\\n};\\n\\n// Includes all common event props including KeyEvent and MouseEvent specific props\\njQuery.each( {\\n\\taltKey: true,\\n\\tbubbles: true,\\n\\tcancelable: true,\\n\\tchangedTouches: true,\\n\\tctrlKey: true,\\n\\tdetail: true,\\n\\teventPhase: true,\\n\\tmetaKey: true,\\n\\tpageX: true,\\n\\tpageY: true,\\n\\tshiftKey: true,\\n\\tview: true,\\n\\t\\\"char\\\": true,\\n\\tcharCode: true,\\n\\tkey: true,\\n\\tkeyCode: true,\\n\\tbutton: true,\\n\\tbuttons: true,\\n\\tclientX: true,\\n\\tclientY: true,\\n\\toffsetX: true,\\n\\toffsetY: true,\\n\\tpointerId: true,\\n\\tpointerType: true,\\n\\tscreenX: true,\\n\\tscreenY: true,\\n\\ttargetTouches: true,\\n\\ttoElement: true,\\n\\ttouches: true,\\n\\n\\twhich: function( event ) {\\n\\t\\tvar button = event.button;\\n\\n\\t\\t// Add which for key events\\n\\t\\tif ( event.which == null && rkeyEvent.test( event.type ) ) {\\n\\t\\t\\treturn event.charCode != null ? event.charCode : event.keyCode;\\n\\t\\t}\\n\\n\\t\\t// Add which for click: 1 === left; 2 === middle; 3 === right\\n\\t\\tif ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {\\n\\t\\t\\tif ( button & 1 ) {\\n\\t\\t\\t\\treturn 1;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( button & 2 ) {\\n\\t\\t\\t\\treturn 3;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( button & 4 ) {\\n\\t\\t\\t\\treturn 2;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn 0;\\n\\t\\t}\\n\\n\\t\\treturn event.which;\\n\\t}\\n}, jQuery.event.addProp );\\n\\n// Create mouseenter/leave events using mouseover/out and event-time checks\\n// so that event delegation works in jQuery.\\n// Do the same for pointerenter/pointerleave and pointerover/pointerout\\n//\\n// Support: Safari 7 only\\n// Safari sends mouseenter too often; see:\\n// https://bugs.chromium.org/p/chromium/issues/detail?id=470258\\n// for the description of the bug (it existed in older Chrome versions as well).\\njQuery.each( {\\n\\tmouseenter: \\\"mouseover\\\",\\n\\tmouseleave: \\\"mouseout\\\",\\n\\tpointerenter: \\\"pointerover\\\",\\n\\tpointerleave: \\\"pointerout\\\"\\n}, function( orig, fix ) {\\n\\tjQuery.event.special[ orig ] = {\\n\\t\\tdelegateType: fix,\\n\\t\\tbindType: fix,\\n\\n\\t\\thandle: function( event ) {\\n\\t\\t\\tvar ret,\\n\\t\\t\\t\\ttarget = this,\\n\\t\\t\\t\\trelated = event.relatedTarget,\\n\\t\\t\\t\\thandleObj = event.handleObj;\\n\\n\\t\\t\\t// For mouseenter/leave call the handler if related is outside the target.\\n\\t\\t\\t// NB: No relatedTarget if the mouse left/entered the browser window\\n\\t\\t\\tif ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {\\n\\t\\t\\t\\tevent.type = handleObj.origType;\\n\\t\\t\\t\\tret = handleObj.handler.apply( this, arguments );\\n\\t\\t\\t\\tevent.type = fix;\\n\\t\\t\\t}\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\t};\\n} );\\n\\njQuery.fn.extend( {\\n\\n\\ton: function( types, selector, data, fn ) {\\n\\t\\treturn on( this, types, selector, data, fn );\\n\\t},\\n\\tone: function( types, selector, data, fn ) {\\n\\t\\treturn on( this, types, selector, data, fn, 1 );\\n\\t},\\n\\toff: function( types, selector, fn ) {\\n\\t\\tvar handleObj, type;\\n\\t\\tif ( types && types.preventDefault && types.handleObj ) {\\n\\n\\t\\t\\t// ( event )  dispatched jQuery.Event\\n\\t\\t\\thandleObj = types.handleObj;\\n\\t\\t\\tjQuery( types.delegateTarget ).off(\\n\\t\\t\\t\\thandleObj.namespace ?\\n\\t\\t\\t\\t\\thandleObj.origType + \\\".\\\" + handleObj.namespace :\\n\\t\\t\\t\\t\\thandleObj.origType,\\n\\t\\t\\t\\thandleObj.selector,\\n\\t\\t\\t\\thandleObj.handler\\n\\t\\t\\t);\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\t\\tif ( typeof types === \\\"object\\\" ) {\\n\\n\\t\\t\\t// ( types-object [, selector] )\\n\\t\\t\\tfor ( type in types ) {\\n\\t\\t\\t\\tthis.off( type, selector, types[ type ] );\\n\\t\\t\\t}\\n\\t\\t\\treturn this;\\n\\t\\t}\\n\\t\\tif ( selector === false || typeof selector === \\\"function\\\" ) {\\n\\n\\t\\t\\t// ( types [, fn] )\\n\\t\\t\\tfn = selector;\\n\\t\\t\\tselector = undefined;\\n\\t\\t}\\n\\t\\tif ( fn === false ) {\\n\\t\\t\\tfn = returnFalse;\\n\\t\\t}\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.event.remove( this, types, fn, selector );\\n\\t\\t} );\\n\\t}\\n} );\\n\\n\\nvar\\n\\n\\t/* eslint-disable max-len */\\n\\n\\t// See https://github.com/eslint/eslint/issues/3229\\n\\trxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\\\\/\\\\0>\\\\x20\\\\t\\\\r\\\\n\\\\f]*)[^>]*)\\\\/>/gi,\\n\\n\\t/* eslint-enable */\\n\\n\\t// Support: IE <=10 - 11, Edge 12 - 13\\n\\t// In IE/Edge using regex groups here causes severe slowdowns.\\n\\t// See https://connect.microsoft.com/IE/feedback/details/1736512/\\n\\trnoInnerhtml = /<script|<style|<link/i,\\n\\n\\t// checked=\\\"checked\\\" or checked\\n\\trchecked = /checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,\\n\\trscriptTypeMasked = /^true\\\\/(.*)/,\\n\\trcleanScript = /^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g;\\n\\n// Prefer a tbody over its parent table for containing new rows\\nfunction manipulationTarget( elem, content ) {\\n\\tif ( nodeName( elem, \\\"table\\\" ) &&\\n\\t\\tnodeName( content.nodeType !== 11 ? content : content.firstChild, \\\"tr\\\" ) ) {\\n\\n\\t\\treturn jQuery( \\\">tbody\\\", elem )[ 0 ] || elem;\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\n// Replace/restore the type attribute of script elements for safe DOM manipulation\\nfunction disableScript( elem ) {\\n\\telem.type = ( elem.getAttribute( \\\"type\\\" ) !== null ) + \\\"/\\\" + elem.type;\\n\\treturn elem;\\n}\\nfunction restoreScript( elem ) {\\n\\tvar match = rscriptTypeMasked.exec( elem.type );\\n\\n\\tif ( match ) {\\n\\t\\telem.type = match[ 1 ];\\n\\t} else {\\n\\t\\telem.removeAttribute( \\\"type\\\" );\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\nfunction cloneCopyEvent( src, dest ) {\\n\\tvar i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\\n\\n\\tif ( dest.nodeType !== 1 ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// 1. Copy private data: events, handlers, etc.\\n\\tif ( dataPriv.hasData( src ) ) {\\n\\t\\tpdataOld = dataPriv.access( src );\\n\\t\\tpdataCur = dataPriv.set( dest, pdataOld );\\n\\t\\tevents = pdataOld.events;\\n\\n\\t\\tif ( events ) {\\n\\t\\t\\tdelete pdataCur.handle;\\n\\t\\t\\tpdataCur.events = {};\\n\\n\\t\\t\\tfor ( type in events ) {\\n\\t\\t\\t\\tfor ( i = 0, l = events[ type ].length; i < l; i++ ) {\\n\\t\\t\\t\\t\\tjQuery.event.add( dest, type, events[ type ][ i ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\t// 2. Copy user data\\n\\tif ( dataUser.hasData( src ) ) {\\n\\t\\tudataOld = dataUser.access( src );\\n\\t\\tudataCur = jQuery.extend( {}, udataOld );\\n\\n\\t\\tdataUser.set( dest, udataCur );\\n\\t}\\n}\\n\\n// Fix IE bugs, see support tests\\nfunction fixInput( src, dest ) {\\n\\tvar nodeName = dest.nodeName.toLowerCase();\\n\\n\\t// Fails to persist the checked state of a cloned checkbox or radio button.\\n\\tif ( nodeName === \\\"input\\\" && rcheckableType.test( src.type ) ) {\\n\\t\\tdest.checked = src.checked;\\n\\n\\t// Fails to return the selected option to the default selected state when cloning options\\n\\t} else if ( nodeName === \\\"input\\\" || nodeName === \\\"textarea\\\" ) {\\n\\t\\tdest.defaultValue = src.defaultValue;\\n\\t}\\n}\\n\\nfunction domManip( collection, args, callback, ignored ) {\\n\\n\\t// Flatten any nested arrays\\n\\targs = concat.apply( [], args );\\n\\n\\tvar fragment, first, scripts, hasScripts, node, doc,\\n\\t\\ti = 0,\\n\\t\\tl = collection.length,\\n\\t\\tiNoClone = l - 1,\\n\\t\\tvalue = args[ 0 ],\\n\\t\\tisFunction = jQuery.isFunction( value );\\n\\n\\t// We can't cloneNode fragments that contain checked, in WebKit\\n\\tif ( isFunction ||\\n\\t\\t\\t( l > 1 && typeof value === \\\"string\\\" &&\\n\\t\\t\\t\\t!support.checkClone && rchecked.test( value ) ) ) {\\n\\t\\treturn collection.each( function( index ) {\\n\\t\\t\\tvar self = collection.eq( index );\\n\\t\\t\\tif ( isFunction ) {\\n\\t\\t\\t\\targs[ 0 ] = value.call( this, index, self.html() );\\n\\t\\t\\t}\\n\\t\\t\\tdomManip( self, args, callback, ignored );\\n\\t\\t} );\\n\\t}\\n\\n\\tif ( l ) {\\n\\t\\tfragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );\\n\\t\\tfirst = fragment.firstChild;\\n\\n\\t\\tif ( fragment.childNodes.length === 1 ) {\\n\\t\\t\\tfragment = first;\\n\\t\\t}\\n\\n\\t\\t// Require either new content or an interest in ignored elements to invoke the callback\\n\\t\\tif ( first || ignored ) {\\n\\t\\t\\tscripts = jQuery.map( getAll( fragment, \\\"script\\\" ), disableScript );\\n\\t\\t\\thasScripts = scripts.length;\\n\\n\\t\\t\\t// Use the original fragment for the last item\\n\\t\\t\\t// instead of the first because it can end up\\n\\t\\t\\t// being emptied incorrectly in certain situations (#8070).\\n\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\tnode = fragment;\\n\\n\\t\\t\\t\\tif ( i !== iNoClone ) {\\n\\t\\t\\t\\t\\tnode = jQuery.clone( node, true, true );\\n\\n\\t\\t\\t\\t\\t// Keep references to cloned scripts for later restoration\\n\\t\\t\\t\\t\\tif ( hasScripts ) {\\n\\n\\t\\t\\t\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t\\t\\t\\t// push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\t\\t\\t\\tjQuery.merge( scripts, getAll( node, \\\"script\\\" ) );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tcallback.call( collection[ i ], node, i );\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( hasScripts ) {\\n\\t\\t\\t\\tdoc = scripts[ scripts.length - 1 ].ownerDocument;\\n\\n\\t\\t\\t\\t// Reenable scripts\\n\\t\\t\\t\\tjQuery.map( scripts, restoreScript );\\n\\n\\t\\t\\t\\t// Evaluate executable scripts on first document insertion\\n\\t\\t\\t\\tfor ( i = 0; i < hasScripts; i++ ) {\\n\\t\\t\\t\\t\\tnode = scripts[ i ];\\n\\t\\t\\t\\t\\tif ( rscriptType.test( node.type || \\\"\\\" ) &&\\n\\t\\t\\t\\t\\t\\t!dataPriv.access( node, \\\"globalEval\\\" ) &&\\n\\t\\t\\t\\t\\t\\tjQuery.contains( doc, node ) ) {\\n\\n\\t\\t\\t\\t\\t\\tif ( node.src ) {\\n\\n\\t\\t\\t\\t\\t\\t\\t// Optional AJAX dependency, but won't run scripts if not present\\n\\t\\t\\t\\t\\t\\t\\tif ( jQuery._evalUrl ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery._evalUrl( node.src );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\tDOMEval( node.textContent.replace( rcleanScript, \\\"\\\" ), doc );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn collection;\\n}\\n\\nfunction remove( elem, selector, keepData ) {\\n\\tvar node,\\n\\t\\tnodes = selector ? jQuery.filter( selector, elem ) : elem,\\n\\t\\ti = 0;\\n\\n\\tfor ( ; ( node = nodes[ i ] ) != null; i++ ) {\\n\\t\\tif ( !keepData && node.nodeType === 1 ) {\\n\\t\\t\\tjQuery.cleanData( getAll( node ) );\\n\\t\\t}\\n\\n\\t\\tif ( node.parentNode ) {\\n\\t\\t\\tif ( keepData && jQuery.contains( node.ownerDocument, node ) ) {\\n\\t\\t\\t\\tsetGlobalEval( getAll( node, \\\"script\\\" ) );\\n\\t\\t\\t}\\n\\t\\t\\tnode.parentNode.removeChild( node );\\n\\t\\t}\\n\\t}\\n\\n\\treturn elem;\\n}\\n\\njQuery.extend( {\\n\\thtmlPrefilter: function( html ) {\\n\\t\\treturn html.replace( rxhtmlTag, \\\"<$1></$2>\\\" );\\n\\t},\\n\\n\\tclone: function( elem, dataAndEvents, deepDataAndEvents ) {\\n\\t\\tvar i, l, srcElements, destElements,\\n\\t\\t\\tclone = elem.cloneNode( true ),\\n\\t\\t\\tinPage = jQuery.contains( elem.ownerDocument, elem );\\n\\n\\t\\t// Fix IE cloning issues\\n\\t\\tif ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&\\n\\t\\t\\t\\t!jQuery.isXMLDoc( elem ) ) {\\n\\n\\t\\t\\t// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2\\n\\t\\t\\tdestElements = getAll( clone );\\n\\t\\t\\tsrcElements = getAll( elem );\\n\\n\\t\\t\\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\\n\\t\\t\\t\\tfixInput( srcElements[ i ], destElements[ i ] );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Copy the events from the original to the clone\\n\\t\\tif ( dataAndEvents ) {\\n\\t\\t\\tif ( deepDataAndEvents ) {\\n\\t\\t\\t\\tsrcElements = srcElements || getAll( elem );\\n\\t\\t\\t\\tdestElements = destElements || getAll( clone );\\n\\n\\t\\t\\t\\tfor ( i = 0, l = srcElements.length; i < l; i++ ) {\\n\\t\\t\\t\\t\\tcloneCopyEvent( srcElements[ i ], destElements[ i ] );\\n\\t\\t\\t\\t}\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tcloneCopyEvent( elem, clone );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Preserve script evaluation history\\n\\t\\tdestElements = getAll( clone, \\\"script\\\" );\\n\\t\\tif ( destElements.length > 0 ) {\\n\\t\\t\\tsetGlobalEval( destElements, !inPage && getAll( elem, \\\"script\\\" ) );\\n\\t\\t}\\n\\n\\t\\t// Return the cloned set\\n\\t\\treturn clone;\\n\\t},\\n\\n\\tcleanData: function( elems ) {\\n\\t\\tvar data, elem, type,\\n\\t\\t\\tspecial = jQuery.event.special,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {\\n\\t\\t\\tif ( acceptData( elem ) ) {\\n\\t\\t\\t\\tif ( ( data = elem[ dataPriv.expando ] ) ) {\\n\\t\\t\\t\\t\\tif ( data.events ) {\\n\\t\\t\\t\\t\\t\\tfor ( type in data.events ) {\\n\\t\\t\\t\\t\\t\\t\\tif ( special[ type ] ) {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.event.remove( elem, type );\\n\\n\\t\\t\\t\\t\\t\\t\\t// This is a shortcut to avoid jQuery.event.remove's overhead\\n\\t\\t\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\t\\t\\tjQuery.removeEvent( elem, type, data.handle );\\n\\t\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Support: Chrome <=35 - 45+\\n\\t\\t\\t\\t\\t// Assign undefined instead of using delete, see Data#remove\\n\\t\\t\\t\\t\\telem[ dataPriv.expando ] = undefined;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tif ( elem[ dataUser.expando ] ) {\\n\\n\\t\\t\\t\\t\\t// Support: Chrome <=35 - 45+\\n\\t\\t\\t\\t\\t// Assign undefined instead of using delete, see Data#remove\\n\\t\\t\\t\\t\\telem[ dataUser.expando ] = undefined;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tdetach: function( selector ) {\\n\\t\\treturn remove( this, selector, true );\\n\\t},\\n\\n\\tremove: function( selector ) {\\n\\t\\treturn remove( this, selector );\\n\\t},\\n\\n\\ttext: function( value ) {\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\treturn value === undefined ?\\n\\t\\t\\t\\tjQuery.text( this ) :\\n\\t\\t\\t\\tthis.empty().each( function() {\\n\\t\\t\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\t\\t\\tthis.textContent = value;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t} );\\n\\t\\t}, null, value, arguments.length );\\n\\t},\\n\\n\\tappend: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\tvar target = manipulationTarget( this, elem );\\n\\t\\t\\t\\ttarget.appendChild( elem );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tprepend: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {\\n\\t\\t\\t\\tvar target = manipulationTarget( this, elem );\\n\\t\\t\\t\\ttarget.insertBefore( elem, target.firstChild );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tbefore: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.parentNode ) {\\n\\t\\t\\t\\tthis.parentNode.insertBefore( elem, this );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tafter: function() {\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tif ( this.parentNode ) {\\n\\t\\t\\t\\tthis.parentNode.insertBefore( elem, this.nextSibling );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\tempty: function() {\\n\\t\\tvar elem,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; ( elem = this[ i ] ) != null; i++ ) {\\n\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\n\\t\\t\\t\\t// Prevent memory leaks\\n\\t\\t\\t\\tjQuery.cleanData( getAll( elem, false ) );\\n\\n\\t\\t\\t\\t// Remove any remaining nodes\\n\\t\\t\\t\\telem.textContent = \\\"\\\";\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\tclone: function( dataAndEvents, deepDataAndEvents ) {\\n\\t\\tdataAndEvents = dataAndEvents == null ? false : dataAndEvents;\\n\\t\\tdeepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\\n\\n\\t\\treturn this.map( function() {\\n\\t\\t\\treturn jQuery.clone( this, dataAndEvents, deepDataAndEvents );\\n\\t\\t} );\\n\\t},\\n\\n\\thtml: function( value ) {\\n\\t\\treturn access( this, function( value ) {\\n\\t\\t\\tvar elem = this[ 0 ] || {},\\n\\t\\t\\t\\ti = 0,\\n\\t\\t\\t\\tl = this.length;\\n\\n\\t\\t\\tif ( value === undefined && elem.nodeType === 1 ) {\\n\\t\\t\\t\\treturn elem.innerHTML;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// See if we can take a shortcut and just use innerHTML\\n\\t\\t\\tif ( typeof value === \\\"string\\\" && !rnoInnerhtml.test( value ) &&\\n\\t\\t\\t\\t!wrapMap[ ( rtagName.exec( value ) || [ \\\"\\\", \\\"\\\" ] )[ 1 ].toLowerCase() ] ) {\\n\\n\\t\\t\\t\\tvalue = jQuery.htmlPrefilter( value );\\n\\n\\t\\t\\t\\ttry {\\n\\t\\t\\t\\t\\tfor ( ; i < l; i++ ) {\\n\\t\\t\\t\\t\\t\\telem = this[ i ] || {};\\n\\n\\t\\t\\t\\t\\t\\t// Remove element nodes and prevent memory leaks\\n\\t\\t\\t\\t\\t\\tif ( elem.nodeType === 1 ) {\\n\\t\\t\\t\\t\\t\\t\\tjQuery.cleanData( getAll( elem, false ) );\\n\\t\\t\\t\\t\\t\\t\\telem.innerHTML = value;\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\telem = 0;\\n\\n\\t\\t\\t\\t// If using innerHTML throws an exception, use the fallback method\\n\\t\\t\\t\\t} catch ( e ) {}\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( elem ) {\\n\\t\\t\\t\\tthis.empty().append( value );\\n\\t\\t\\t}\\n\\t\\t}, null, value, arguments.length );\\n\\t},\\n\\n\\treplaceWith: function() {\\n\\t\\tvar ignored = [];\\n\\n\\t\\t// Make the changes, replacing each non-ignored context element with the new content\\n\\t\\treturn domManip( this, arguments, function( elem ) {\\n\\t\\t\\tvar parent = this.parentNode;\\n\\n\\t\\t\\tif ( jQuery.inArray( this, ignored ) < 0 ) {\\n\\t\\t\\t\\tjQuery.cleanData( getAll( this ) );\\n\\t\\t\\t\\tif ( parent ) {\\n\\t\\t\\t\\t\\tparent.replaceChild( elem, this );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t// Force callback invocation\\n\\t\\t}, ignored );\\n\\t}\\n} );\\n\\njQuery.each( {\\n\\tappendTo: \\\"append\\\",\\n\\tprependTo: \\\"prepend\\\",\\n\\tinsertBefore: \\\"before\\\",\\n\\tinsertAfter: \\\"after\\\",\\n\\treplaceAll: \\\"replaceWith\\\"\\n}, function( name, original ) {\\n\\tjQuery.fn[ name ] = function( selector ) {\\n\\t\\tvar elems,\\n\\t\\t\\tret = [],\\n\\t\\t\\tinsert = jQuery( selector ),\\n\\t\\t\\tlast = insert.length - 1,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tfor ( ; i <= last; i++ ) {\\n\\t\\t\\telems = i === last ? this : this.clone( true );\\n\\t\\t\\tjQuery( insert[ i ] )[ original ]( elems );\\n\\n\\t\\t\\t// Support: Android <=4.0 only, PhantomJS 1 only\\n\\t\\t\\t// .get() because push.apply(_, arraylike) throws on ancient WebKit\\n\\t\\t\\tpush.apply( ret, elems.get() );\\n\\t\\t}\\n\\n\\t\\treturn this.pushStack( ret );\\n\\t};\\n} );\\nvar rmargin = ( /^margin/ );\\n\\nvar rnumnonpx = new RegExp( \\\"^(\\\" + pnum + \\\")(?!px)[a-z%]+$\\\", \\\"i\\\" );\\n\\nvar getStyles = function( elem ) {\\n\\n\\t\\t// Support: IE <=11 only, Firefox <=30 (#15098, #14150)\\n\\t\\t// IE throws on elements created in popups\\n\\t\\t// FF meanwhile throws on frame elements through \\\"defaultView.getComputedStyle\\\"\\n\\t\\tvar view = elem.ownerDocument.defaultView;\\n\\n\\t\\tif ( !view || !view.opener ) {\\n\\t\\t\\tview = window;\\n\\t\\t}\\n\\n\\t\\treturn view.getComputedStyle( elem );\\n\\t};\\n\\n\\n\\n( function() {\\n\\n\\t// Executing both pixelPosition & boxSizingReliable tests require only one layout\\n\\t// so they're executed at the same time to save the second computation.\\n\\tfunction computeStyleTests() {\\n\\n\\t\\t// This is a singleton, we need to execute it only once\\n\\t\\tif ( !div ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tdiv.style.cssText =\\n\\t\\t\\t\\\"box-sizing:border-box;\\\" +\\n\\t\\t\\t\\\"position:relative;display:block;\\\" +\\n\\t\\t\\t\\\"margin:auto;border:1px;padding:1px;\\\" +\\n\\t\\t\\t\\\"top:1%;width:50%\\\";\\n\\t\\tdiv.innerHTML = \\\"\\\";\\n\\t\\tdocumentElement.appendChild( container );\\n\\n\\t\\tvar divStyle = window.getComputedStyle( div );\\n\\t\\tpixelPositionVal = divStyle.top !== \\\"1%\\\";\\n\\n\\t\\t// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44\\n\\t\\treliableMarginLeftVal = divStyle.marginLeft === \\\"2px\\\";\\n\\t\\tboxSizingReliableVal = divStyle.width === \\\"4px\\\";\\n\\n\\t\\t// Support: Android 4.0 - 4.3 only\\n\\t\\t// Some styles come back with percentage values, even though they shouldn't\\n\\t\\tdiv.style.marginRight = \\\"50%\\\";\\n\\t\\tpixelMarginRightVal = divStyle.marginRight === \\\"4px\\\";\\n\\n\\t\\tdocumentElement.removeChild( container );\\n\\n\\t\\t// Nullify the div so it wouldn't be stored in the memory and\\n\\t\\t// it will also be a sign that checks already performed\\n\\t\\tdiv = null;\\n\\t}\\n\\n\\tvar pixelPositionVal, boxSizingReliableVal, pixelMarginRightVal, reliableMarginLeftVal,\\n\\t\\tcontainer = document.createElement( \\\"div\\\" ),\\n\\t\\tdiv = document.createElement( \\\"div\\\" );\\n\\n\\t// Finish early in limited (non-browser) environments\\n\\tif ( !div.style ) {\\n\\t\\treturn;\\n\\t}\\n\\n\\t// Support: IE <=9 - 11 only\\n\\t// Style of cloned element affects source element cloned (#8908)\\n\\tdiv.style.backgroundClip = \\\"content-box\\\";\\n\\tdiv.cloneNode( true ).style.backgroundClip = \\\"\\\";\\n\\tsupport.clearCloneStyle = div.style.backgroundClip === \\\"content-box\\\";\\n\\n\\tcontainer.style.cssText = \\\"border:0;width:8px;height:0;top:0;left:-9999px;\\\" +\\n\\t\\t\\\"padding:0;margin-top:1px;position:absolute\\\";\\n\\tcontainer.appendChild( div );\\n\\n\\tjQuery.extend( support, {\\n\\t\\tpixelPosition: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn pixelPositionVal;\\n\\t\\t},\\n\\t\\tboxSizingReliable: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn boxSizingReliableVal;\\n\\t\\t},\\n\\t\\tpixelMarginRight: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn pixelMarginRightVal;\\n\\t\\t},\\n\\t\\treliableMarginLeft: function() {\\n\\t\\t\\tcomputeStyleTests();\\n\\t\\t\\treturn reliableMarginLeftVal;\\n\\t\\t}\\n\\t} );\\n} )();\\n\\n\\nfunction curCSS( elem, name, computed ) {\\n\\tvar width, minWidth, maxWidth, ret,\\n\\n\\t\\t// Support: Firefox 51+\\n\\t\\t// Retrieving style before computed somehow\\n\\t\\t// fixes an issue with getting wrong values\\n\\t\\t// on detached elements\\n\\t\\tstyle = elem.style;\\n\\n\\tcomputed = computed || getStyles( elem );\\n\\n\\t// getPropertyValue is needed for:\\n\\t//   .css('filter') (IE 9 only, #12537)\\n\\t//   .css('--customProperty) (#3144)\\n\\tif ( computed ) {\\n\\t\\tret = computed.getPropertyValue( name ) || computed[ name ];\\n\\n\\t\\tif ( ret === \\\"\\\" && !jQuery.contains( elem.ownerDocument, elem ) ) {\\n\\t\\t\\tret = jQuery.style( elem, name );\\n\\t\\t}\\n\\n\\t\\t// A tribute to the \\\"awesome hack by Dean Edwards\\\"\\n\\t\\t// Android Browser returns percentage for some values,\\n\\t\\t// but width seems to be reliably pixels.\\n\\t\\t// This is against the CSSOM draft spec:\\n\\t\\t// https://drafts.csswg.org/cssom/#resolved-values\\n\\t\\tif ( !support.pixelMarginRight() && rnumnonpx.test( ret ) && rmargin.test( name ) ) {\\n\\n\\t\\t\\t// Remember the original values\\n\\t\\t\\twidth = style.width;\\n\\t\\t\\tminWidth = style.minWidth;\\n\\t\\t\\tmaxWidth = style.maxWidth;\\n\\n\\t\\t\\t// Put in the new values to get a computed value out\\n\\t\\t\\tstyle.minWidth = style.maxWidth = style.width = ret;\\n\\t\\t\\tret = computed.width;\\n\\n\\t\\t\\t// Revert the changed values\\n\\t\\t\\tstyle.width = width;\\n\\t\\t\\tstyle.minWidth = minWidth;\\n\\t\\t\\tstyle.maxWidth = maxWidth;\\n\\t\\t}\\n\\t}\\n\\n\\treturn ret !== undefined ?\\n\\n\\t\\t// Support: IE <=9 - 11 only\\n\\t\\t// IE returns zIndex value as an integer.\\n\\t\\tret + \\\"\\\" :\\n\\t\\tret;\\n}\\n\\n\\nfunction addGetHookIf( conditionFn, hookFn ) {\\n\\n\\t// Define the hook, we'll check on the first run if it's really needed.\\n\\treturn {\\n\\t\\tget: function() {\\n\\t\\t\\tif ( conditionFn() ) {\\n\\n\\t\\t\\t\\t// Hook not needed (or it's not possible to use it due\\n\\t\\t\\t\\t// to missing dependency), remove it.\\n\\t\\t\\t\\tdelete this.get;\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Hook needed; redefine it so that the support test is not executed again.\\n\\t\\t\\treturn ( this.get = hookFn ).apply( this, arguments );\\n\\t\\t}\\n\\t};\\n}\\n\\n\\nvar\\n\\n\\t// Swappable if display is none or starts with table\\n\\t// except \\\"table\\\", \\\"table-cell\\\", or \\\"table-caption\\\"\\n\\t// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\\n\\trdisplayswap = /^(none|table(?!-c[ea]).+)/,\\n\\trcustomProp = /^--/,\\n\\tcssShow = { position: \\\"absolute\\\", visibility: \\\"hidden\\\", display: \\\"block\\\" },\\n\\tcssNormalTransform = {\\n\\t\\tletterSpacing: \\\"0\\\",\\n\\t\\tfontWeight: \\\"400\\\"\\n\\t},\\n\\n\\tcssPrefixes = [ \\\"Webkit\\\", \\\"Moz\\\", \\\"ms\\\" ],\\n\\temptyStyle = document.createElement( \\\"div\\\" ).style;\\n\\n// Return a css property mapped to a potentially vendor prefixed property\\nfunction vendorPropName( name ) {\\n\\n\\t// Shortcut for names that are not vendor prefixed\\n\\tif ( name in emptyStyle ) {\\n\\t\\treturn name;\\n\\t}\\n\\n\\t// Check for vendor prefixed names\\n\\tvar capName = name[ 0 ].toUpperCase() + name.slice( 1 ),\\n\\t\\ti = cssPrefixes.length;\\n\\n\\twhile ( i-- ) {\\n\\t\\tname = cssPrefixes[ i ] + capName;\\n\\t\\tif ( name in emptyStyle ) {\\n\\t\\t\\treturn name;\\n\\t\\t}\\n\\t}\\n}\\n\\n// Return a property mapped along what jQuery.cssProps suggests or to\\n// a vendor prefixed property.\\nfunction finalPropName( name ) {\\n\\tvar ret = jQuery.cssProps[ name ];\\n\\tif ( !ret ) {\\n\\t\\tret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;\\n\\t}\\n\\treturn ret;\\n}\\n\\nfunction setPositiveNumber( elem, value, subtract ) {\\n\\n\\t// Any relative (+/-) values have already been\\n\\t// normalized at this point\\n\\tvar matches = rcssNum.exec( value );\\n\\treturn matches ?\\n\\n\\t\\t// Guard against undefined \\\"subtract\\\", e.g., when used as in cssHooks\\n\\t\\tMath.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || \\\"px\\\" ) :\\n\\t\\tvalue;\\n}\\n\\nfunction augmentWidthOrHeight( elem, name, extra, isBorderBox, styles ) {\\n\\tvar i,\\n\\t\\tval = 0;\\n\\n\\t// If we already have the right measurement, avoid augmentation\\n\\tif ( extra === ( isBorderBox ? \\\"border\\\" : \\\"content\\\" ) ) {\\n\\t\\ti = 4;\\n\\n\\t// Otherwise initialize for horizontal or vertical properties\\n\\t} else {\\n\\t\\ti = name === \\\"width\\\" ? 1 : 0;\\n\\t}\\n\\n\\tfor ( ; i < 4; i += 2 ) {\\n\\n\\t\\t// Both box models exclude margin, so add it if we want it\\n\\t\\tif ( extra === \\\"margin\\\" ) {\\n\\t\\t\\tval += jQuery.css( elem, extra + cssExpand[ i ], true, styles );\\n\\t\\t}\\n\\n\\t\\tif ( isBorderBox ) {\\n\\n\\t\\t\\t// border-box includes padding, so remove it if we want content\\n\\t\\t\\tif ( extra === \\\"content\\\" ) {\\n\\t\\t\\t\\tval -= jQuery.css( elem, \\\"padding\\\" + cssExpand[ i ], true, styles );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// At this point, extra isn't border nor margin, so remove border\\n\\t\\t\\tif ( extra !== \\\"margin\\\" ) {\\n\\t\\t\\t\\tval -= jQuery.css( elem, \\\"border\\\" + cssExpand[ i ] + \\\"Width\\\", true, styles );\\n\\t\\t\\t}\\n\\t\\t} else {\\n\\n\\t\\t\\t// At this point, extra isn't content, so add padding\\n\\t\\t\\tval += jQuery.css( elem, \\\"padding\\\" + cssExpand[ i ], true, styles );\\n\\n\\t\\t\\t// At this point, extra isn't content nor padding, so add border\\n\\t\\t\\tif ( extra !== \\\"padding\\\" ) {\\n\\t\\t\\t\\tval += jQuery.css( elem, \\\"border\\\" + cssExpand[ i ] + \\\"Width\\\", true, styles );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n\\n\\treturn val;\\n}\\n\\nfunction getWidthOrHeight( elem, name, extra ) {\\n\\n\\t// Start with computed style\\n\\tvar valueIsBorderBox,\\n\\t\\tstyles = getStyles( elem ),\\n\\t\\tval = curCSS( elem, name, styles ),\\n\\t\\tisBorderBox = jQuery.css( elem, \\\"boxSizing\\\", false, styles ) === \\\"border-box\\\";\\n\\n\\t// Computed unit is not pixels. Stop here and return.\\n\\tif ( rnumnonpx.test( val ) ) {\\n\\t\\treturn val;\\n\\t}\\n\\n\\t// Check for style in case a browser which returns unreliable values\\n\\t// for getComputedStyle silently falls back to the reliable elem.style\\n\\tvalueIsBorderBox = isBorderBox &&\\n\\t\\t( support.boxSizingReliable() || val === elem.style[ name ] );\\n\\n\\t// Fall back to offsetWidth/Height when value is \\\"auto\\\"\\n\\t// This happens for inline elements with no explicit setting (gh-3571)\\n\\tif ( val === \\\"auto\\\" ) {\\n\\t\\tval = elem[ \\\"offset\\\" + name[ 0 ].toUpperCase() + name.slice( 1 ) ];\\n\\t}\\n\\n\\t// Normalize \\\"\\\", auto, and prepare for extra\\n\\tval = parseFloat( val ) || 0;\\n\\n\\t// Use the active box-sizing model to add/subtract irrelevant styles\\n\\treturn ( val +\\n\\t\\taugmentWidthOrHeight(\\n\\t\\t\\telem,\\n\\t\\t\\tname,\\n\\t\\t\\textra || ( isBorderBox ? \\\"border\\\" : \\\"content\\\" ),\\n\\t\\t\\tvalueIsBorderBox,\\n\\t\\t\\tstyles\\n\\t\\t)\\n\\t) + \\\"px\\\";\\n}\\n\\njQuery.extend( {\\n\\n\\t// Add in style property hooks for overriding the default\\n\\t// behavior of getting and setting a style property\\n\\tcssHooks: {\\n\\t\\topacity: {\\n\\t\\t\\tget: function( elem, computed ) {\\n\\t\\t\\t\\tif ( computed ) {\\n\\n\\t\\t\\t\\t\\t// We should always get a number back from opacity\\n\\t\\t\\t\\t\\tvar ret = curCSS( elem, \\\"opacity\\\" );\\n\\t\\t\\t\\t\\treturn ret === \\\"\\\" ? \\\"1\\\" : ret;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\t// Don't automatically add \\\"px\\\" to these possibly-unitless properties\\n\\tcssNumber: {\\n\\t\\t\\\"animationIterationCount\\\": true,\\n\\t\\t\\\"columnCount\\\": true,\\n\\t\\t\\\"fillOpacity\\\": true,\\n\\t\\t\\\"flexGrow\\\": true,\\n\\t\\t\\\"flexShrink\\\": true,\\n\\t\\t\\\"fontWeight\\\": true,\\n\\t\\t\\\"lineHeight\\\": true,\\n\\t\\t\\\"opacity\\\": true,\\n\\t\\t\\\"order\\\": true,\\n\\t\\t\\\"orphans\\\": true,\\n\\t\\t\\\"widows\\\": true,\\n\\t\\t\\\"zIndex\\\": true,\\n\\t\\t\\\"zoom\\\": true\\n\\t},\\n\\n\\t// Add in properties whose names you wish to fix before\\n\\t// setting or getting the value\\n\\tcssProps: {\\n\\t\\t\\\"float\\\": \\\"cssFloat\\\"\\n\\t},\\n\\n\\t// Get and set the style property on a DOM Node\\n\\tstyle: function( elem, name, value, extra ) {\\n\\n\\t\\t// Don't set styles on text and comment nodes\\n\\t\\tif ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Make sure that we're working with the right name\\n\\t\\tvar ret, type, hooks,\\n\\t\\t\\torigName = jQuery.camelCase( name ),\\n\\t\\t\\tisCustomProp = rcustomProp.test( name ),\\n\\t\\t\\tstyle = elem.style;\\n\\n\\t\\t// Make sure that we're working with the right name. We don't\\n\\t\\t// want to query the value if it is a CSS custom property\\n\\t\\t// since they are user-defined.\\n\\t\\tif ( !isCustomProp ) {\\n\\t\\t\\tname = finalPropName( origName );\\n\\t\\t}\\n\\n\\t\\t// Gets hook for the prefixed version, then unprefixed version\\n\\t\\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\\n\\n\\t\\t// Check if we're setting a value\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\ttype = typeof value;\\n\\n\\t\\t\\t// Convert \\\"+=\\\" or \\\"-=\\\" to relative numbers (#7345)\\n\\t\\t\\tif ( type === \\\"string\\\" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {\\n\\t\\t\\t\\tvalue = adjustCSS( elem, name, ret );\\n\\n\\t\\t\\t\\t// Fixes bug #9237\\n\\t\\t\\t\\ttype = \\\"number\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Make sure that null and NaN values aren't set (#7116)\\n\\t\\t\\tif ( value == null || value !== value ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If a number was passed in, add the unit (except for certain CSS properties)\\n\\t\\t\\tif ( type === \\\"number\\\" ) {\\n\\t\\t\\t\\tvalue += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? \\\"\\\" : \\\"px\\\" );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// background-* props affect original clone's values\\n\\t\\t\\tif ( !support.clearCloneStyle && value === \\\"\\\" && name.indexOf( \\\"background\\\" ) === 0 ) {\\n\\t\\t\\t\\tstyle[ name ] = \\\"inherit\\\";\\n\\t\\t\\t}\\n\\n\\t\\t\\t// If a hook was provided, use that value, otherwise just set the specified value\\n\\t\\t\\tif ( !hooks || !( \\\"set\\\" in hooks ) ||\\n\\t\\t\\t\\t( value = hooks.set( elem, value, extra ) ) !== undefined ) {\\n\\n\\t\\t\\t\\tif ( isCustomProp ) {\\n\\t\\t\\t\\t\\tstyle.setProperty( name, value );\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tstyle[ name ] = value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\n\\t\\t} else {\\n\\n\\t\\t\\t// If a hook was provided get the non-computed value from there\\n\\t\\t\\tif ( hooks && \\\"get\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.get( elem, false, extra ) ) !== undefined ) {\\n\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Otherwise just get the value from the style object\\n\\t\\t\\treturn style[ name ];\\n\\t\\t}\\n\\t},\\n\\n\\tcss: function( elem, name, extra, styles ) {\\n\\t\\tvar val, num, hooks,\\n\\t\\t\\torigName = jQuery.camelCase( name ),\\n\\t\\t\\tisCustomProp = rcustomProp.test( name );\\n\\n\\t\\t// Make sure that we're working with the right name. We don't\\n\\t\\t// want to modify the value if it is a CSS custom property\\n\\t\\t// since they are user-defined.\\n\\t\\tif ( !isCustomProp ) {\\n\\t\\t\\tname = finalPropName( origName );\\n\\t\\t}\\n\\n\\t\\t// Try prefixed name followed by the unprefixed name\\n\\t\\thooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];\\n\\n\\t\\t// If a hook was provided get the computed value from there\\n\\t\\tif ( hooks && \\\"get\\\" in hooks ) {\\n\\t\\t\\tval = hooks.get( elem, true, extra );\\n\\t\\t}\\n\\n\\t\\t// Otherwise, if a way to get the computed value exists, use that\\n\\t\\tif ( val === undefined ) {\\n\\t\\t\\tval = curCSS( elem, name, styles );\\n\\t\\t}\\n\\n\\t\\t// Convert \\\"normal\\\" to computed value\\n\\t\\tif ( val === \\\"normal\\\" && name in cssNormalTransform ) {\\n\\t\\t\\tval = cssNormalTransform[ name ];\\n\\t\\t}\\n\\n\\t\\t// Make numeric if forced or a qualifier was provided and val looks numeric\\n\\t\\tif ( extra === \\\"\\\" || extra ) {\\n\\t\\t\\tnum = parseFloat( val );\\n\\t\\t\\treturn extra === true || isFinite( num ) ? num || 0 : val;\\n\\t\\t}\\n\\n\\t\\treturn val;\\n\\t}\\n} );\\n\\njQuery.each( [ \\\"height\\\", \\\"width\\\" ], function( i, name ) {\\n\\tjQuery.cssHooks[ name ] = {\\n\\t\\tget: function( elem, computed, extra ) {\\n\\t\\t\\tif ( computed ) {\\n\\n\\t\\t\\t\\t// Certain elements can have dimension info if we invisibly show them\\n\\t\\t\\t\\t// but it must have a current display style that would benefit\\n\\t\\t\\t\\treturn rdisplayswap.test( jQuery.css( elem, \\\"display\\\" ) ) &&\\n\\n\\t\\t\\t\\t\\t// Support: Safari 8+\\n\\t\\t\\t\\t\\t// Table columns in Safari have non-zero offsetWidth & zero\\n\\t\\t\\t\\t\\t// getBoundingClientRect().width unless display is changed.\\n\\t\\t\\t\\t\\t// Support: IE <=11 only\\n\\t\\t\\t\\t\\t// Running getBoundingClientRect on a disconnected node\\n\\t\\t\\t\\t\\t// in IE throws an error.\\n\\t\\t\\t\\t\\t( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?\\n\\t\\t\\t\\t\\t\\tswap( elem, cssShow, function() {\\n\\t\\t\\t\\t\\t\\t\\treturn getWidthOrHeight( elem, name, extra );\\n\\t\\t\\t\\t\\t\\t} ) :\\n\\t\\t\\t\\t\\t\\tgetWidthOrHeight( elem, name, extra );\\n\\t\\t\\t}\\n\\t\\t},\\n\\n\\t\\tset: function( elem, value, extra ) {\\n\\t\\t\\tvar matches,\\n\\t\\t\\t\\tstyles = extra && getStyles( elem ),\\n\\t\\t\\t\\tsubtract = extra && augmentWidthOrHeight(\\n\\t\\t\\t\\t\\telem,\\n\\t\\t\\t\\t\\tname,\\n\\t\\t\\t\\t\\textra,\\n\\t\\t\\t\\t\\tjQuery.css( elem, \\\"boxSizing\\\", false, styles ) === \\\"border-box\\\",\\n\\t\\t\\t\\t\\tstyles\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t// Convert to pixels if value adjustment is needed\\n\\t\\t\\tif ( subtract && ( matches = rcssNum.exec( value ) ) &&\\n\\t\\t\\t\\t( matches[ 3 ] || \\\"px\\\" ) !== \\\"px\\\" ) {\\n\\n\\t\\t\\t\\telem.style[ name ] = value;\\n\\t\\t\\t\\tvalue = jQuery.css( elem, name );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn setPositiveNumber( elem, value, subtract );\\n\\t\\t}\\n\\t};\\n} );\\n\\njQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,\\n\\tfunction( elem, computed ) {\\n\\t\\tif ( computed ) {\\n\\t\\t\\treturn ( parseFloat( curCSS( elem, \\\"marginLeft\\\" ) ) ||\\n\\t\\t\\t\\telem.getBoundingClientRect().left -\\n\\t\\t\\t\\t\\tswap( elem, { marginLeft: 0 }, function() {\\n\\t\\t\\t\\t\\t\\treturn elem.getBoundingClientRect().left;\\n\\t\\t\\t\\t\\t} )\\n\\t\\t\\t\\t) + \\\"px\\\";\\n\\t\\t}\\n\\t}\\n);\\n\\n// These hooks are used by animate to expand properties\\njQuery.each( {\\n\\tmargin: \\\"\\\",\\n\\tpadding: \\\"\\\",\\n\\tborder: \\\"Width\\\"\\n}, function( prefix, suffix ) {\\n\\tjQuery.cssHooks[ prefix + suffix ] = {\\n\\t\\texpand: function( value ) {\\n\\t\\t\\tvar i = 0,\\n\\t\\t\\t\\texpanded = {},\\n\\n\\t\\t\\t\\t// Assumes a single number if not a string\\n\\t\\t\\t\\tparts = typeof value === \\\"string\\\" ? value.split( \\\" \\\" ) : [ value ];\\n\\n\\t\\t\\tfor ( ; i < 4; i++ ) {\\n\\t\\t\\t\\texpanded[ prefix + cssExpand[ i ] + suffix ] =\\n\\t\\t\\t\\t\\tparts[ i ] || parts[ i - 2 ] || parts[ 0 ];\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn expanded;\\n\\t\\t}\\n\\t};\\n\\n\\tif ( !rmargin.test( prefix ) ) {\\n\\t\\tjQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;\\n\\t}\\n} );\\n\\njQuery.fn.extend( {\\n\\tcss: function( name, value ) {\\n\\t\\treturn access( this, function( elem, name, value ) {\\n\\t\\t\\tvar styles, len,\\n\\t\\t\\t\\tmap = {},\\n\\t\\t\\t\\ti = 0;\\n\\n\\t\\t\\tif ( Array.isArray( name ) ) {\\n\\t\\t\\t\\tstyles = getStyles( elem );\\n\\t\\t\\t\\tlen = name.length;\\n\\n\\t\\t\\t\\tfor ( ; i < len; i++ ) {\\n\\t\\t\\t\\t\\tmap[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn map;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn value !== undefined ?\\n\\t\\t\\t\\tjQuery.style( elem, name, value ) :\\n\\t\\t\\t\\tjQuery.css( elem, name );\\n\\t\\t}, name, value, arguments.length > 1 );\\n\\t}\\n} );\\n\\n\\n// Based off of the plugin by Clint Helfers, with permission.\\n// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/\\njQuery.fn.delay = function( time, type ) {\\n\\ttime = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;\\n\\ttype = type || \\\"fx\\\";\\n\\n\\treturn this.queue( type, function( next, hooks ) {\\n\\t\\tvar timeout = window.setTimeout( next, time );\\n\\t\\thooks.stop = function() {\\n\\t\\t\\twindow.clearTimeout( timeout );\\n\\t\\t};\\n\\t} );\\n};\\n\\n\\n( function() {\\n\\tvar input = document.createElement( \\\"input\\\" ),\\n\\t\\tselect = document.createElement( \\\"select\\\" ),\\n\\t\\topt = select.appendChild( document.createElement( \\\"option\\\" ) );\\n\\n\\tinput.type = \\\"checkbox\\\";\\n\\n\\t// Support: Android <=4.3 only\\n\\t// Default value for a checkbox should be \\\"on\\\"\\n\\tsupport.checkOn = input.value !== \\\"\\\";\\n\\n\\t// Support: IE <=11 only\\n\\t// Must access selectedIndex to make default options select\\n\\tsupport.optSelected = opt.selected;\\n\\n\\t// Support: IE <=11 only\\n\\t// An input loses its value after becoming a radio\\n\\tinput = document.createElement( \\\"input\\\" );\\n\\tinput.value = \\\"t\\\";\\n\\tinput.type = \\\"radio\\\";\\n\\tsupport.radioValue = input.value === \\\"t\\\";\\n} )();\\n\\n\\nvar boolHook,\\n\\tattrHandle = jQuery.expr.attrHandle;\\n\\njQuery.fn.extend( {\\n\\tattr: function( name, value ) {\\n\\t\\treturn access( this, jQuery.attr, name, value, arguments.length > 1 );\\n\\t},\\n\\n\\tremoveAttr: function( name ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.removeAttr( this, name );\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tattr: function( elem, name, value ) {\\n\\t\\tvar ret, hooks,\\n\\t\\t\\tnType = elem.nodeType;\\n\\n\\t\\t// Don't get/set attributes on text, comment and attribute nodes\\n\\t\\tif ( nType === 3 || nType === 8 || nType === 2 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Fallback to prop when attributes are not supported\\n\\t\\tif ( typeof elem.getAttribute === \\\"undefined\\\" ) {\\n\\t\\t\\treturn jQuery.prop( elem, name, value );\\n\\t\\t}\\n\\n\\t\\t// Attribute hooks are determined by the lowercase version\\n\\t\\t// Grab necessary hook if one is defined\\n\\t\\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\\n\\t\\t\\thooks = jQuery.attrHooks[ name.toLowerCase() ] ||\\n\\t\\t\\t\\t( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );\\n\\t\\t}\\n\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\tif ( value === null ) {\\n\\t\\t\\t\\tjQuery.removeAttr( elem, name );\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( hooks && \\\"set\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\telem.setAttribute( name, value + \\\"\\\" );\\n\\t\\t\\treturn value;\\n\\t\\t}\\n\\n\\t\\tif ( hooks && \\\"get\\\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\n\\t\\tret = jQuery.find.attr( elem, name );\\n\\n\\t\\t// Non-existent attributes return null, we normalize to undefined\\n\\t\\treturn ret == null ? undefined : ret;\\n\\t},\\n\\n\\tattrHooks: {\\n\\t\\ttype: {\\n\\t\\t\\tset: function( elem, value ) {\\n\\t\\t\\t\\tif ( !support.radioValue && value === \\\"radio\\\" &&\\n\\t\\t\\t\\t\\tnodeName( elem, \\\"input\\\" ) ) {\\n\\t\\t\\t\\t\\tvar val = elem.value;\\n\\t\\t\\t\\t\\telem.setAttribute( \\\"type\\\", value );\\n\\t\\t\\t\\t\\tif ( val ) {\\n\\t\\t\\t\\t\\t\\telem.value = val;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\treturn value;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\tremoveAttr: function( elem, value ) {\\n\\t\\tvar name,\\n\\t\\t\\ti = 0,\\n\\n\\t\\t\\t// Attribute names can contain non-HTML whitespace characters\\n\\t\\t\\t// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\\n\\t\\t\\tattrNames = value && value.match( rnothtmlwhite );\\n\\n\\t\\tif ( attrNames && elem.nodeType === 1 ) {\\n\\t\\t\\twhile ( ( name = attrNames[ i++ ] ) ) {\\n\\t\\t\\t\\telem.removeAttribute( name );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Hooks for boolean attributes\\nboolHook = {\\n\\tset: function( elem, value, name ) {\\n\\t\\tif ( value === false ) {\\n\\n\\t\\t\\t// Remove boolean attributes when set to false\\n\\t\\t\\tjQuery.removeAttr( elem, name );\\n\\t\\t} else {\\n\\t\\t\\telem.setAttribute( name, name );\\n\\t\\t}\\n\\t\\treturn name;\\n\\t}\\n};\\n\\njQuery.each( jQuery.expr.match.bool.source.match( /\\\\w+/g ), function( i, name ) {\\n\\tvar getter = attrHandle[ name ] || jQuery.find.attr;\\n\\n\\tattrHandle[ name ] = function( elem, name, isXML ) {\\n\\t\\tvar ret, handle,\\n\\t\\t\\tlowercaseName = name.toLowerCase();\\n\\n\\t\\tif ( !isXML ) {\\n\\n\\t\\t\\t// Avoid an infinite loop by temporarily removing this function from the getter\\n\\t\\t\\thandle = attrHandle[ lowercaseName ];\\n\\t\\t\\tattrHandle[ lowercaseName ] = ret;\\n\\t\\t\\tret = getter( elem, name, isXML ) != null ?\\n\\t\\t\\t\\tlowercaseName :\\n\\t\\t\\t\\tnull;\\n\\t\\t\\tattrHandle[ lowercaseName ] = handle;\\n\\t\\t}\\n\\t\\treturn ret;\\n\\t};\\n} );\\n\\n\\n\\n\\nvar rfocusable = /^(?:input|select|textarea|button)$/i,\\n\\trclickable = /^(?:a|area)$/i;\\n\\njQuery.fn.extend( {\\n\\tprop: function( name, value ) {\\n\\t\\treturn access( this, jQuery.prop, name, value, arguments.length > 1 );\\n\\t},\\n\\n\\tremoveProp: function( name ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tdelete this[ jQuery.propFix[ name ] || name ];\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tprop: function( elem, name, value ) {\\n\\t\\tvar ret, hooks,\\n\\t\\t\\tnType = elem.nodeType;\\n\\n\\t\\t// Don't get/set properties on text, comment and attribute nodes\\n\\t\\tif ( nType === 3 || nType === 8 || nType === 2 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {\\n\\n\\t\\t\\t// Fix name and attach hooks\\n\\t\\t\\tname = jQuery.propFix[ name ] || name;\\n\\t\\t\\thooks = jQuery.propHooks[ name ];\\n\\t\\t}\\n\\n\\t\\tif ( value !== undefined ) {\\n\\t\\t\\tif ( hooks && \\\"set\\\" in hooks &&\\n\\t\\t\\t\\t( ret = hooks.set( elem, value, name ) ) !== undefined ) {\\n\\t\\t\\t\\treturn ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn ( elem[ name ] = value );\\n\\t\\t}\\n\\n\\t\\tif ( hooks && \\\"get\\\" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {\\n\\t\\t\\treturn ret;\\n\\t\\t}\\n\\n\\t\\treturn elem[ name ];\\n\\t},\\n\\n\\tpropHooks: {\\n\\t\\ttabIndex: {\\n\\t\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t\\t// Support: IE <=9 - 11 only\\n\\t\\t\\t\\t// elem.tabIndex doesn't always return the\\n\\t\\t\\t\\t// correct value when it hasn't been explicitly set\\n\\t\\t\\t\\t// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/\\n\\t\\t\\t\\t// Use proper attribute retrieval(#12072)\\n\\t\\t\\t\\tvar tabindex = jQuery.find.attr( elem, \\\"tabindex\\\" );\\n\\n\\t\\t\\t\\tif ( tabindex ) {\\n\\t\\t\\t\\t\\treturn parseInt( tabindex, 10 );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tif (\\n\\t\\t\\t\\t\\trfocusable.test( elem.nodeName ) ||\\n\\t\\t\\t\\t\\trclickable.test( elem.nodeName ) &&\\n\\t\\t\\t\\t\\telem.href\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn 0;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn -1;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t},\\n\\n\\tpropFix: {\\n\\t\\t\\\"for\\\": \\\"htmlFor\\\",\\n\\t\\t\\\"class\\\": \\\"className\\\"\\n\\t}\\n} );\\n\\n// Support: IE <=11 only\\n// Accessing the selectedIndex property\\n// forces the browser to respect setting selected\\n// on the option\\n// The getter ensures a default option is selected\\n// when in an optgroup\\n// eslint rule \\\"no-unused-expressions\\\" is disabled for this code\\n// since it considers such accessions noop\\nif ( !support.optSelected ) {\\n\\tjQuery.propHooks.selected = {\\n\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t/* eslint no-unused-expressions: \\\"off\\\" */\\n\\n\\t\\t\\tvar parent = elem.parentNode;\\n\\t\\t\\tif ( parent && parent.parentNode ) {\\n\\t\\t\\t\\tparent.parentNode.selectedIndex;\\n\\t\\t\\t}\\n\\t\\t\\treturn null;\\n\\t\\t},\\n\\t\\tset: function( elem ) {\\n\\n\\t\\t\\t/* eslint no-unused-expressions: \\\"off\\\" */\\n\\n\\t\\t\\tvar parent = elem.parentNode;\\n\\t\\t\\tif ( parent ) {\\n\\t\\t\\t\\tparent.selectedIndex;\\n\\n\\t\\t\\t\\tif ( parent.parentNode ) {\\n\\t\\t\\t\\t\\tparent.parentNode.selectedIndex;\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n}\\n\\njQuery.each( [\\n\\t\\\"tabIndex\\\",\\n\\t\\\"readOnly\\\",\\n\\t\\\"maxLength\\\",\\n\\t\\\"cellSpacing\\\",\\n\\t\\\"cellPadding\\\",\\n\\t\\\"rowSpan\\\",\\n\\t\\\"colSpan\\\",\\n\\t\\\"useMap\\\",\\n\\t\\\"frameBorder\\\",\\n\\t\\\"contentEditable\\\"\\n], function() {\\n\\tjQuery.propFix[ this.toLowerCase() ] = this;\\n} );\\n\\n\\n\\n\\n\\t// Strip and collapse whitespace according to HTML spec\\n\\t// https://html.spec.whatwg.org/multipage/infrastructure.html#strip-and-collapse-whitespace\\n\\tfunction stripAndCollapse( value ) {\\n\\t\\tvar tokens = value.match( rnothtmlwhite ) || [];\\n\\t\\treturn tokens.join( \\\" \\\" );\\n\\t}\\n\\n\\nfunction getClass( elem ) {\\n\\treturn elem.getAttribute && elem.getAttribute( \\\"class\\\" ) || \\\"\\\";\\n}\\n\\njQuery.fn.extend( {\\n\\taddClass: function( value ) {\\n\\t\\tvar classes, elem, cur, curValue, clazz, j, finalValue,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tif ( jQuery.isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( j ) {\\n\\t\\t\\t\\tjQuery( this ).addClass( value.call( this, j, getClass( this ) ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tif ( typeof value === \\\"string\\\" && value ) {\\n\\t\\t\\tclasses = value.match( rnothtmlwhite ) || [];\\n\\n\\t\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\t\\tcurValue = getClass( elem );\\n\\t\\t\\t\\tcur = elem.nodeType === 1 && ( \\\" \\\" + stripAndCollapse( curValue ) + \\\" \\\" );\\n\\n\\t\\t\\t\\tif ( cur ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\twhile ( ( clazz = classes[ j++ ] ) ) {\\n\\t\\t\\t\\t\\t\\tif ( cur.indexOf( \\\" \\\" + clazz + \\\" \\\" ) < 0 ) {\\n\\t\\t\\t\\t\\t\\t\\tcur += clazz + \\\" \\\";\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Only assign if different to avoid unneeded rendering.\\n\\t\\t\\t\\t\\tfinalValue = stripAndCollapse( cur );\\n\\t\\t\\t\\t\\tif ( curValue !== finalValue ) {\\n\\t\\t\\t\\t\\t\\telem.setAttribute( \\\"class\\\", finalValue );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\tremoveClass: function( value ) {\\n\\t\\tvar classes, elem, cur, curValue, clazz, j, finalValue,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tif ( jQuery.isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( j ) {\\n\\t\\t\\t\\tjQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tif ( !arguments.length ) {\\n\\t\\t\\treturn this.attr( \\\"class\\\", \\\"\\\" );\\n\\t\\t}\\n\\n\\t\\tif ( typeof value === \\\"string\\\" && value ) {\\n\\t\\t\\tclasses = value.match( rnothtmlwhite ) || [];\\n\\n\\t\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\t\\tcurValue = getClass( elem );\\n\\n\\t\\t\\t\\t// This expression is here for better compressibility (see addClass)\\n\\t\\t\\t\\tcur = elem.nodeType === 1 && ( \\\" \\\" + stripAndCollapse( curValue ) + \\\" \\\" );\\n\\n\\t\\t\\t\\tif ( cur ) {\\n\\t\\t\\t\\t\\tj = 0;\\n\\t\\t\\t\\t\\twhile ( ( clazz = classes[ j++ ] ) ) {\\n\\n\\t\\t\\t\\t\\t\\t// Remove *all* instances\\n\\t\\t\\t\\t\\t\\twhile ( cur.indexOf( \\\" \\\" + clazz + \\\" \\\" ) > -1 ) {\\n\\t\\t\\t\\t\\t\\t\\tcur = cur.replace( \\\" \\\" + clazz + \\\" \\\", \\\" \\\" );\\n\\t\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Only assign if different to avoid unneeded rendering.\\n\\t\\t\\t\\t\\tfinalValue = stripAndCollapse( cur );\\n\\t\\t\\t\\t\\tif ( curValue !== finalValue ) {\\n\\t\\t\\t\\t\\t\\telem.setAttribute( \\\"class\\\", finalValue );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\ttoggleClass: function( value, stateVal ) {\\n\\t\\tvar type = typeof value;\\n\\n\\t\\tif ( typeof stateVal === \\\"boolean\\\" && type === \\\"string\\\" ) {\\n\\t\\t\\treturn stateVal ? this.addClass( value ) : this.removeClass( value );\\n\\t\\t}\\n\\n\\t\\tif ( jQuery.isFunction( value ) ) {\\n\\t\\t\\treturn this.each( function( i ) {\\n\\t\\t\\t\\tjQuery( this ).toggleClass(\\n\\t\\t\\t\\t\\tvalue.call( this, i, getClass( this ), stateVal ),\\n\\t\\t\\t\\t\\tstateVal\\n\\t\\t\\t\\t);\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar className, i, self, classNames;\\n\\n\\t\\t\\tif ( type === \\\"string\\\" ) {\\n\\n\\t\\t\\t\\t// Toggle individual class names\\n\\t\\t\\t\\ti = 0;\\n\\t\\t\\t\\tself = jQuery( this );\\n\\t\\t\\t\\tclassNames = value.match( rnothtmlwhite ) || [];\\n\\n\\t\\t\\t\\twhile ( ( className = classNames[ i++ ] ) ) {\\n\\n\\t\\t\\t\\t\\t// Check each className given, space separated list\\n\\t\\t\\t\\t\\tif ( self.hasClass( className ) ) {\\n\\t\\t\\t\\t\\t\\tself.removeClass( className );\\n\\t\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\t\\tself.addClass( className );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t// Toggle whole class name\\n\\t\\t\\t} else if ( value === undefined || type === \\\"boolean\\\" ) {\\n\\t\\t\\t\\tclassName = getClass( this );\\n\\t\\t\\t\\tif ( className ) {\\n\\n\\t\\t\\t\\t\\t// Store className if set\\n\\t\\t\\t\\t\\tdataPriv.set( this, \\\"__className__\\\", className );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// If the element has a class name or if we're passed `false`,\\n\\t\\t\\t\\t// then remove the whole classname (if there was one, the above saved it).\\n\\t\\t\\t\\t// Otherwise bring back whatever was previously saved (if anything),\\n\\t\\t\\t\\t// falling back to the empty string if nothing was stored.\\n\\t\\t\\t\\tif ( this.setAttribute ) {\\n\\t\\t\\t\\t\\tthis.setAttribute( \\\"class\\\",\\n\\t\\t\\t\\t\\t\\tclassName || value === false ?\\n\\t\\t\\t\\t\\t\\t\\\"\\\" :\\n\\t\\t\\t\\t\\t\\tdataPriv.get( this, \\\"__className__\\\" ) || \\\"\\\"\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\thasClass: function( selector ) {\\n\\t\\tvar className, elem,\\n\\t\\t\\ti = 0;\\n\\n\\t\\tclassName = \\\" \\\" + selector + \\\" \\\";\\n\\t\\twhile ( ( elem = this[ i++ ] ) ) {\\n\\t\\t\\tif ( elem.nodeType === 1 &&\\n\\t\\t\\t\\t( \\\" \\\" + stripAndCollapse( getClass( elem ) ) + \\\" \\\" ).indexOf( className ) > -1 ) {\\n\\t\\t\\t\\t\\treturn true;\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn false;\\n\\t}\\n} );\\n\\n\\n\\n\\nvar rreturn = /\\\\r/g;\\n\\njQuery.fn.extend( {\\n\\tval: function( value ) {\\n\\t\\tvar hooks, ret, isFunction,\\n\\t\\t\\telem = this[ 0 ];\\n\\n\\t\\tif ( !arguments.length ) {\\n\\t\\t\\tif ( elem ) {\\n\\t\\t\\t\\thooks = jQuery.valHooks[ elem.type ] ||\\n\\t\\t\\t\\t\\tjQuery.valHooks[ elem.nodeName.toLowerCase() ];\\n\\n\\t\\t\\t\\tif ( hooks &&\\n\\t\\t\\t\\t\\t\\\"get\\\" in hooks &&\\n\\t\\t\\t\\t\\t( ret = hooks.get( elem, \\\"value\\\" ) ) !== undefined\\n\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\treturn ret;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\tret = elem.value;\\n\\n\\t\\t\\t\\t// Handle most common string cases\\n\\t\\t\\t\\tif ( typeof ret === \\\"string\\\" ) {\\n\\t\\t\\t\\t\\treturn ret.replace( rreturn, \\\"\\\" );\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Handle cases where value is null/undef or number\\n\\t\\t\\t\\treturn ret == null ? \\\"\\\" : ret;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tisFunction = jQuery.isFunction( value );\\n\\n\\t\\treturn this.each( function( i ) {\\n\\t\\t\\tvar val;\\n\\n\\t\\t\\tif ( this.nodeType !== 1 ) {\\n\\t\\t\\t\\treturn;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( isFunction ) {\\n\\t\\t\\t\\tval = value.call( this, i, jQuery( this ).val() );\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tval = value;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Treat null/undefined as \\\"\\\"; convert numbers to string\\n\\t\\t\\tif ( val == null ) {\\n\\t\\t\\t\\tval = \\\"\\\";\\n\\n\\t\\t\\t} else if ( typeof val === \\\"number\\\" ) {\\n\\t\\t\\t\\tval += \\\"\\\";\\n\\n\\t\\t\\t} else if ( Array.isArray( val ) ) {\\n\\t\\t\\t\\tval = jQuery.map( val, function( value ) {\\n\\t\\t\\t\\t\\treturn value == null ? \\\"\\\" : value + \\\"\\\";\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\n\\t\\t\\thooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];\\n\\n\\t\\t\\t// If set returns undefined, fall back to normal setting\\n\\t\\t\\tif ( !hooks || !( \\\"set\\\" in hooks ) || hooks.set( this, val, \\\"value\\\" ) === undefined ) {\\n\\t\\t\\t\\tthis.value = val;\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t}\\n} );\\n\\njQuery.extend( {\\n\\tvalHooks: {\\n\\t\\toption: {\\n\\t\\t\\tget: function( elem ) {\\n\\n\\t\\t\\t\\tvar val = jQuery.find.attr( elem, \\\"value\\\" );\\n\\t\\t\\t\\treturn val != null ?\\n\\t\\t\\t\\t\\tval :\\n\\n\\t\\t\\t\\t\\t// Support: IE <=10 - 11 only\\n\\t\\t\\t\\t\\t// option.text throws exceptions (#14686, #14858)\\n\\t\\t\\t\\t\\t// Strip and collapse whitespace\\n\\t\\t\\t\\t\\t// https://html.spec.whatwg.org/#strip-and-collapse-whitespace\\n\\t\\t\\t\\t\\tstripAndCollapse( jQuery.text( elem ) );\\n\\t\\t\\t}\\n\\t\\t},\\n\\t\\tselect: {\\n\\t\\t\\tget: function( elem ) {\\n\\t\\t\\t\\tvar value, option, i,\\n\\t\\t\\t\\t\\toptions = elem.options,\\n\\t\\t\\t\\t\\tindex = elem.selectedIndex,\\n\\t\\t\\t\\t\\tone = elem.type === \\\"select-one\\\",\\n\\t\\t\\t\\t\\tvalues = one ? null : [],\\n\\t\\t\\t\\t\\tmax = one ? index + 1 : options.length;\\n\\n\\t\\t\\t\\tif ( index < 0 ) {\\n\\t\\t\\t\\t\\ti = max;\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\ti = one ? index : 0;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Loop through all the selected options\\n\\t\\t\\t\\tfor ( ; i < max; i++ ) {\\n\\t\\t\\t\\t\\toption = options[ i ];\\n\\n\\t\\t\\t\\t\\t// Support: IE <=9 only\\n\\t\\t\\t\\t\\t// IE8-9 doesn't update selected after form reset (#2551)\\n\\t\\t\\t\\t\\tif ( ( option.selected || i === index ) &&\\n\\n\\t\\t\\t\\t\\t\\t\\t// Don't return options that are disabled or in a disabled optgroup\\n\\t\\t\\t\\t\\t\\t\\t!option.disabled &&\\n\\t\\t\\t\\t\\t\\t\\t( !option.parentNode.disabled ||\\n\\t\\t\\t\\t\\t\\t\\t\\t!nodeName( option.parentNode, \\\"optgroup\\\" ) ) ) {\\n\\n\\t\\t\\t\\t\\t\\t// Get the specific value for the option\\n\\t\\t\\t\\t\\t\\tvalue = jQuery( option ).val();\\n\\n\\t\\t\\t\\t\\t\\t// We don't need an array for one selects\\n\\t\\t\\t\\t\\t\\tif ( one ) {\\n\\t\\t\\t\\t\\t\\t\\treturn value;\\n\\t\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t\\t// Multi-Selects return an array\\n\\t\\t\\t\\t\\t\\tvalues.push( value );\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn values;\\n\\t\\t\\t},\\n\\n\\t\\t\\tset: function( elem, value ) {\\n\\t\\t\\t\\tvar optionSet, option,\\n\\t\\t\\t\\t\\toptions = elem.options,\\n\\t\\t\\t\\t\\tvalues = jQuery.makeArray( value ),\\n\\t\\t\\t\\t\\ti = options.length;\\n\\n\\t\\t\\t\\twhile ( i-- ) {\\n\\t\\t\\t\\t\\toption = options[ i ];\\n\\n\\t\\t\\t\\t\\t/* eslint-disable no-cond-assign */\\n\\n\\t\\t\\t\\t\\tif ( option.selected =\\n\\t\\t\\t\\t\\t\\tjQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1\\n\\t\\t\\t\\t\\t) {\\n\\t\\t\\t\\t\\t\\toptionSet = true;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t/* eslint-enable no-cond-assign */\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Force browsers to behave consistently when non-matching value is set\\n\\t\\t\\t\\tif ( !optionSet ) {\\n\\t\\t\\t\\t\\telem.selectedIndex = -1;\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\treturn values;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t}\\n} );\\n\\n// Radios and checkboxes getter/setter\\njQuery.each( [ \\\"radio\\\", \\\"checkbox\\\" ], function() {\\n\\tjQuery.valHooks[ this ] = {\\n\\t\\tset: function( elem, value ) {\\n\\t\\t\\tif ( Array.isArray( value ) ) {\\n\\t\\t\\t\\treturn ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );\\n\\t\\t\\t}\\n\\t\\t}\\n\\t};\\n\\tif ( !support.checkOn ) {\\n\\t\\tjQuery.valHooks[ this ].get = function( elem ) {\\n\\t\\t\\treturn elem.getAttribute( \\\"value\\\" ) === null ? \\\"on\\\" : elem.value;\\n\\t\\t};\\n\\t}\\n} );\\n\\n\\n\\n\\n// Return jQuery for attributes-only inclusion\\n\\n\\nvar rfocusMorph = /^(?:focusinfocus|focusoutblur)$/;\\n\\njQuery.extend( jQuery.event, {\\n\\n\\ttrigger: function( event, data, elem, onlyHandlers ) {\\n\\n\\t\\tvar i, cur, tmp, bubbleType, ontype, handle, special,\\n\\t\\t\\teventPath = [ elem || document ],\\n\\t\\t\\ttype = hasOwn.call( event, \\\"type\\\" ) ? event.type : event,\\n\\t\\t\\tnamespaces = hasOwn.call( event, \\\"namespace\\\" ) ? event.namespace.split( \\\".\\\" ) : [];\\n\\n\\t\\tcur = tmp = elem = elem || document;\\n\\n\\t\\t// Don't do events on text and comment nodes\\n\\t\\tif ( elem.nodeType === 3 || elem.nodeType === 8 ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// focus/blur morphs to focusin/out; ensure we're not firing them right now\\n\\t\\tif ( rfocusMorph.test( type + jQuery.event.triggered ) ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tif ( type.indexOf( \\\".\\\" ) > -1 ) {\\n\\n\\t\\t\\t// Namespaced trigger; create a regexp to match event type in handle()\\n\\t\\t\\tnamespaces = type.split( \\\".\\\" );\\n\\t\\t\\ttype = namespaces.shift();\\n\\t\\t\\tnamespaces.sort();\\n\\t\\t}\\n\\t\\tontype = type.indexOf( \\\":\\\" ) < 0 && \\\"on\\\" + type;\\n\\n\\t\\t// Caller can pass in a jQuery.Event object, Object, or just an event type string\\n\\t\\tevent = event[ jQuery.expando ] ?\\n\\t\\t\\tevent :\\n\\t\\t\\tnew jQuery.Event( type, typeof event === \\\"object\\\" && event );\\n\\n\\t\\t// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\\n\\t\\tevent.isTrigger = onlyHandlers ? 2 : 3;\\n\\t\\tevent.namespace = namespaces.join( \\\".\\\" );\\n\\t\\tevent.rnamespace = event.namespace ?\\n\\t\\t\\tnew RegExp( \\\"(^|\\\\\\\\.)\\\" + namespaces.join( \\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\" ) + \\\"(\\\\\\\\.|$)\\\" ) :\\n\\t\\t\\tnull;\\n\\n\\t\\t// Clean up the event in case it is being reused\\n\\t\\tevent.result = undefined;\\n\\t\\tif ( !event.target ) {\\n\\t\\t\\tevent.target = elem;\\n\\t\\t}\\n\\n\\t\\t// Clone any incoming data and prepend the event, creating the handler arg list\\n\\t\\tdata = data == null ?\\n\\t\\t\\t[ event ] :\\n\\t\\t\\tjQuery.makeArray( data, [ event ] );\\n\\n\\t\\t// Allow special events to draw outside the lines\\n\\t\\tspecial = jQuery.event.special[ type ] || {};\\n\\t\\tif ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Determine event propagation path in advance, per W3C events spec (#9951)\\n\\t\\t// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\\n\\t\\tif ( !onlyHandlers && !special.noBubble && !jQuery.isWindow( elem ) ) {\\n\\n\\t\\t\\tbubbleType = special.delegateType || type;\\n\\t\\t\\tif ( !rfocusMorph.test( bubbleType + type ) ) {\\n\\t\\t\\t\\tcur = cur.parentNode;\\n\\t\\t\\t}\\n\\t\\t\\tfor ( ; cur; cur = cur.parentNode ) {\\n\\t\\t\\t\\teventPath.push( cur );\\n\\t\\t\\t\\ttmp = cur;\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Only add window if we got to document (e.g., not plain obj or detached DOM)\\n\\t\\t\\tif ( tmp === ( elem.ownerDocument || document ) ) {\\n\\t\\t\\t\\teventPath.push( tmp.defaultView || tmp.parentWindow || window );\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\t// Fire handlers on the event path\\n\\t\\ti = 0;\\n\\t\\twhile ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {\\n\\n\\t\\t\\tevent.type = i > 1 ?\\n\\t\\t\\t\\tbubbleType :\\n\\t\\t\\t\\tspecial.bindType || type;\\n\\n\\t\\t\\t// jQuery handler\\n\\t\\t\\thandle = ( dataPriv.get( cur, \\\"events\\\" ) || {} )[ event.type ] &&\\n\\t\\t\\t\\tdataPriv.get( cur, \\\"handle\\\" );\\n\\t\\t\\tif ( handle ) {\\n\\t\\t\\t\\thandle.apply( cur, data );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Native handler\\n\\t\\t\\thandle = ontype && cur[ ontype ];\\n\\t\\t\\tif ( handle && handle.apply && acceptData( cur ) ) {\\n\\t\\t\\t\\tevent.result = handle.apply( cur, data );\\n\\t\\t\\t\\tif ( event.result === false ) {\\n\\t\\t\\t\\t\\tevent.preventDefault();\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\t\\tevent.type = type;\\n\\n\\t\\t// If nobody prevented the default action, do it now\\n\\t\\tif ( !onlyHandlers && !event.isDefaultPrevented() ) {\\n\\n\\t\\t\\tif ( ( !special._default ||\\n\\t\\t\\t\\tspecial._default.apply( eventPath.pop(), data ) === false ) &&\\n\\t\\t\\t\\tacceptData( elem ) ) {\\n\\n\\t\\t\\t\\t// Call a native DOM method on the target with the same name as the event.\\n\\t\\t\\t\\t// Don't do default actions on window, that's where global variables be (#6170)\\n\\t\\t\\t\\tif ( ontype && jQuery.isFunction( elem[ type ] ) && !jQuery.isWindow( elem ) ) {\\n\\n\\t\\t\\t\\t\\t// Don't re-trigger an onFOO event when we call its FOO() method\\n\\t\\t\\t\\t\\ttmp = elem[ ontype ];\\n\\n\\t\\t\\t\\t\\tif ( tmp ) {\\n\\t\\t\\t\\t\\t\\telem[ ontype ] = null;\\n\\t\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t\\t// Prevent re-triggering of the same event, since we already bubbled it above\\n\\t\\t\\t\\t\\tjQuery.event.triggered = type;\\n\\t\\t\\t\\t\\telem[ type ]();\\n\\t\\t\\t\\t\\tjQuery.event.triggered = undefined;\\n\\n\\t\\t\\t\\t\\tif ( tmp ) {\\n\\t\\t\\t\\t\\t\\telem[ ontype ] = tmp;\\n\\t\\t\\t\\t\\t}\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t}\\n\\n\\t\\treturn event.result;\\n\\t},\\n\\n\\t// Piggyback on a donor event to simulate a different one\\n\\t// Used only for `focus(in | out)` events\\n\\tsimulate: function( type, elem, event ) {\\n\\t\\tvar e = jQuery.extend(\\n\\t\\t\\tnew jQuery.Event(),\\n\\t\\t\\tevent,\\n\\t\\t\\t{\\n\\t\\t\\t\\ttype: type,\\n\\t\\t\\t\\tisSimulated: true\\n\\t\\t\\t}\\n\\t\\t);\\n\\n\\t\\tjQuery.event.trigger( e, null, elem );\\n\\t}\\n\\n} );\\n\\njQuery.fn.extend( {\\n\\n\\ttrigger: function( type, data ) {\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tjQuery.event.trigger( type, data, this );\\n\\t\\t} );\\n\\t},\\n\\ttriggerHandler: function( type, data ) {\\n\\t\\tvar elem = this[ 0 ];\\n\\t\\tif ( elem ) {\\n\\t\\t\\treturn jQuery.event.trigger( type, data, elem, true );\\n\\t\\t}\\n\\t}\\n} );\\n\\n\\njQuery.each( ( \\\"blur focus focusin focusout resize scroll click dblclick \\\" +\\n\\t\\\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \\\" +\\n\\t\\\"change select submit keydown keypress keyup contextmenu\\\" ).split( \\\" \\\" ),\\n\\tfunction( i, name ) {\\n\\n\\t// Handle event binding\\n\\tjQuery.fn[ name ] = function( data, fn ) {\\n\\t\\treturn arguments.length > 0 ?\\n\\t\\t\\tthis.on( name, null, data, fn ) :\\n\\t\\t\\tthis.trigger( name );\\n\\t};\\n} );\\n\\njQuery.fn.extend( {\\n\\thover: function( fnOver, fnOut ) {\\n\\t\\treturn this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );\\n\\t}\\n} );\\n\\n\\n\\n\\nsupport.focusin = \\\"onfocusin\\\" in window;\\n\\n\\n// Support: Firefox <=44\\n// Firefox doesn't have focus(in | out) events\\n// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787\\n//\\n// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1\\n// focus(in | out) events fire after focus & blur events,\\n// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order\\n// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857\\nif ( !support.focusin ) {\\n\\tjQuery.each( { focus: \\\"focusin\\\", blur: \\\"focusout\\\" }, function( orig, fix ) {\\n\\n\\t\\t// Attach a single capturing handler on the document while someone wants focusin/focusout\\n\\t\\tvar handler = function( event ) {\\n\\t\\t\\tjQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );\\n\\t\\t};\\n\\n\\t\\tjQuery.event.special[ fix ] = {\\n\\t\\t\\tsetup: function() {\\n\\t\\t\\t\\tvar doc = this.ownerDocument || this,\\n\\t\\t\\t\\t\\tattaches = dataPriv.access( doc, fix );\\n\\n\\t\\t\\t\\tif ( !attaches ) {\\n\\t\\t\\t\\t\\tdoc.addEventListener( orig, handler, true );\\n\\t\\t\\t\\t}\\n\\t\\t\\t\\tdataPriv.access( doc, fix, ( attaches || 0 ) + 1 );\\n\\t\\t\\t},\\n\\t\\t\\tteardown: function() {\\n\\t\\t\\t\\tvar doc = this.ownerDocument || this,\\n\\t\\t\\t\\t\\tattaches = dataPriv.access( doc, fix ) - 1;\\n\\n\\t\\t\\t\\tif ( !attaches ) {\\n\\t\\t\\t\\t\\tdoc.removeEventListener( orig, handler, true );\\n\\t\\t\\t\\t\\tdataPriv.remove( doc, fix );\\n\\n\\t\\t\\t\\t} else {\\n\\t\\t\\t\\t\\tdataPriv.access( doc, fix, attaches );\\n\\t\\t\\t\\t}\\n\\t\\t\\t}\\n\\t\\t};\\n\\t} );\\n}\\n\\n\\nvar\\n\\trbracket = /\\\\[\\\\]$/,\\n\\trCRLF = /\\\\r?\\\\n/g,\\n\\trsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\\n\\trsubmittable = /^(?:input|select|textarea|keygen)/i;\\n\\nfunction buildParams( prefix, obj, traditional, add ) {\\n\\tvar name;\\n\\n\\tif ( Array.isArray( obj ) ) {\\n\\n\\t\\t// Serialize array item.\\n\\t\\tjQuery.each( obj, function( i, v ) {\\n\\t\\t\\tif ( traditional || rbracket.test( prefix ) ) {\\n\\n\\t\\t\\t\\t// Treat each array item as a scalar.\\n\\t\\t\\t\\tadd( prefix, v );\\n\\n\\t\\t\\t} else {\\n\\n\\t\\t\\t\\t// Item is non-scalar (array or object), encode its numeric index.\\n\\t\\t\\t\\tbuildParams(\\n\\t\\t\\t\\t\\tprefix + \\\"[\\\" + ( typeof v === \\\"object\\\" && v != null ? i : \\\"\\\" ) + \\\"]\\\",\\n\\t\\t\\t\\t\\tv,\\n\\t\\t\\t\\t\\ttraditional,\\n\\t\\t\\t\\t\\tadd\\n\\t\\t\\t\\t);\\n\\t\\t\\t}\\n\\t\\t} );\\n\\n\\t} else if ( !traditional && jQuery.type( obj ) === \\\"object\\\" ) {\\n\\n\\t\\t// Serialize object item.\\n\\t\\tfor ( name in obj ) {\\n\\t\\t\\tbuildParams( prefix + \\\"[\\\" + name + \\\"]\\\", obj[ name ], traditional, add );\\n\\t\\t}\\n\\n\\t} else {\\n\\n\\t\\t// Serialize scalar item.\\n\\t\\tadd( prefix, obj );\\n\\t}\\n}\\n\\n// Serialize an array of form elements or a set of\\n// key/values into a query string\\njQuery.param = function( a, traditional ) {\\n\\tvar prefix,\\n\\t\\ts = [],\\n\\t\\tadd = function( key, valueOrFunction ) {\\n\\n\\t\\t\\t// If value is a function, invoke it and use its return value\\n\\t\\t\\tvar value = jQuery.isFunction( valueOrFunction ) ?\\n\\t\\t\\t\\tvalueOrFunction() :\\n\\t\\t\\t\\tvalueOrFunction;\\n\\n\\t\\t\\ts[ s.length ] = encodeURIComponent( key ) + \\\"=\\\" +\\n\\t\\t\\t\\tencodeURIComponent( value == null ? \\\"\\\" : value );\\n\\t\\t};\\n\\n\\t// If an array was passed in, assume that it is an array of form elements.\\n\\tif ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {\\n\\n\\t\\t// Serialize the form elements\\n\\t\\tjQuery.each( a, function() {\\n\\t\\t\\tadd( this.name, this.value );\\n\\t\\t} );\\n\\n\\t} else {\\n\\n\\t\\t// If traditional, encode the \\\"old\\\" way (the way 1.3.2 or older\\n\\t\\t// did it), otherwise encode params recursively.\\n\\t\\tfor ( prefix in a ) {\\n\\t\\t\\tbuildParams( prefix, a[ prefix ], traditional, add );\\n\\t\\t}\\n\\t}\\n\\n\\t// Return the resulting serialization\\n\\treturn s.join( \\\"&\\\" );\\n};\\n\\njQuery.fn.extend( {\\n\\tserialize: function() {\\n\\t\\treturn jQuery.param( this.serializeArray() );\\n\\t},\\n\\tserializeArray: function() {\\n\\t\\treturn this.map( function() {\\n\\n\\t\\t\\t// Can add propHook for \\\"elements\\\" to filter or add form elements\\n\\t\\t\\tvar elements = jQuery.prop( this, \\\"elements\\\" );\\n\\t\\t\\treturn elements ? jQuery.makeArray( elements ) : this;\\n\\t\\t} )\\n\\t\\t.filter( function() {\\n\\t\\t\\tvar type = this.type;\\n\\n\\t\\t\\t// Use .is( \\\":disabled\\\" ) so that fieldset[disabled] works\\n\\t\\t\\treturn this.name && !jQuery( this ).is( \\\":disabled\\\" ) &&\\n\\t\\t\\t\\trsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&\\n\\t\\t\\t\\t( this.checked || !rcheckableType.test( type ) );\\n\\t\\t} )\\n\\t\\t.map( function( i, elem ) {\\n\\t\\t\\tvar val = jQuery( this ).val();\\n\\n\\t\\t\\tif ( val == null ) {\\n\\t\\t\\t\\treturn null;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( Array.isArray( val ) ) {\\n\\t\\t\\t\\treturn jQuery.map( val, function( val ) {\\n\\t\\t\\t\\t\\treturn { name: elem.name, value: val.replace( rCRLF, \\\"\\\\r\\\\n\\\" ) };\\n\\t\\t\\t\\t} );\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn { name: elem.name, value: val.replace( rCRLF, \\\"\\\\r\\\\n\\\" ) };\\n\\t\\t} ).get();\\n\\t}\\n} );\\n\\n\\njQuery.fn.extend( {\\n\\twrapAll: function( html ) {\\n\\t\\tvar wrap;\\n\\n\\t\\tif ( this[ 0 ] ) {\\n\\t\\t\\tif ( jQuery.isFunction( html ) ) {\\n\\t\\t\\t\\thtml = html.call( this[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\t// The elements to wrap the target around\\n\\t\\t\\twrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );\\n\\n\\t\\t\\tif ( this[ 0 ].parentNode ) {\\n\\t\\t\\t\\twrap.insertBefore( this[ 0 ] );\\n\\t\\t\\t}\\n\\n\\t\\t\\twrap.map( function() {\\n\\t\\t\\t\\tvar elem = this;\\n\\n\\t\\t\\t\\twhile ( elem.firstElementChild ) {\\n\\t\\t\\t\\t\\telem = elem.firstElementChild;\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn elem;\\n\\t\\t\\t} ).append( this );\\n\\t\\t}\\n\\n\\t\\treturn this;\\n\\t},\\n\\n\\twrapInner: function( html ) {\\n\\t\\tif ( jQuery.isFunction( html ) ) {\\n\\t\\t\\treturn this.each( function( i ) {\\n\\t\\t\\t\\tjQuery( this ).wrapInner( html.call( this, i ) );\\n\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\treturn this.each( function() {\\n\\t\\t\\tvar self = jQuery( this ),\\n\\t\\t\\t\\tcontents = self.contents();\\n\\n\\t\\t\\tif ( contents.length ) {\\n\\t\\t\\t\\tcontents.wrapAll( html );\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\tself.append( html );\\n\\t\\t\\t}\\n\\t\\t} );\\n\\t},\\n\\n\\twrap: function( html ) {\\n\\t\\tvar isFunction = jQuery.isFunction( html );\\n\\n\\t\\treturn this.each( function( i ) {\\n\\t\\t\\tjQuery( this ).wrapAll( isFunction ? html.call( this, i ) : html );\\n\\t\\t} );\\n\\t},\\n\\n\\tunwrap: function( selector ) {\\n\\t\\tthis.parent( selector ).not( \\\"body\\\" ).each( function() {\\n\\t\\t\\tjQuery( this ).replaceWith( this.childNodes );\\n\\t\\t} );\\n\\t\\treturn this;\\n\\t}\\n} );\\n\\n\\njQuery.expr.pseudos.hidden = function( elem ) {\\n\\treturn !jQuery.expr.pseudos.visible( elem );\\n};\\njQuery.expr.pseudos.visible = function( elem ) {\\n\\treturn !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );\\n};\\n\\n\\n\\n\\n// Support: Safari 8 only\\n// In Safari 8 documents created via document.implementation.createHTMLDocument\\n// collapse sibling forms: the second one becomes a child of the first one.\\n// Because of that, this security measure has to be disabled in Safari 8.\\n// https://bugs.webkit.org/show_bug.cgi?id=137337\\nsupport.createHTMLDocument = ( function() {\\n\\tvar body = document.implementation.createHTMLDocument( \\\"\\\" ).body;\\n\\tbody.innerHTML = \\\"<form></form><form></form>\\\";\\n\\treturn body.childNodes.length === 2;\\n} )();\\n\\n\\n// Argument \\\"data\\\" should be string of html\\n// context (optional): If specified, the fragment will be created in this context,\\n// defaults to document\\n// keepScripts (optional): If true, will include scripts passed in the html string\\njQuery.parseHTML = function( data, context, keepScripts ) {\\n\\tif ( typeof data !== \\\"string\\\" ) {\\n\\t\\treturn [];\\n\\t}\\n\\tif ( typeof context === \\\"boolean\\\" ) {\\n\\t\\tkeepScripts = context;\\n\\t\\tcontext = false;\\n\\t}\\n\\n\\tvar base, parsed, scripts;\\n\\n\\tif ( !context ) {\\n\\n\\t\\t// Stop scripts or inline event handlers from being executed immediately\\n\\t\\t// by using document.implementation\\n\\t\\tif ( support.createHTMLDocument ) {\\n\\t\\t\\tcontext = document.implementation.createHTMLDocument( \\\"\\\" );\\n\\n\\t\\t\\t// Set the base href for the created document\\n\\t\\t\\t// so any parsed elements with URLs\\n\\t\\t\\t// are based on the document's URL (gh-2965)\\n\\t\\t\\tbase = context.createElement( \\\"base\\\" );\\n\\t\\t\\tbase.href = document.location.href;\\n\\t\\t\\tcontext.head.appendChild( base );\\n\\t\\t} else {\\n\\t\\t\\tcontext = document;\\n\\t\\t}\\n\\t}\\n\\n\\tparsed = rsingleTag.exec( data );\\n\\tscripts = !keepScripts && [];\\n\\n\\t// Single tag\\n\\tif ( parsed ) {\\n\\t\\treturn [ context.createElement( parsed[ 1 ] ) ];\\n\\t}\\n\\n\\tparsed = buildFragment( [ data ], context, scripts );\\n\\n\\tif ( scripts && scripts.length ) {\\n\\t\\tjQuery( scripts ).remove();\\n\\t}\\n\\n\\treturn jQuery.merge( [], parsed.childNodes );\\n};\\n\\n\\njQuery.offset = {\\n\\tsetOffset: function( elem, options, i ) {\\n\\t\\tvar curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\\n\\t\\t\\tposition = jQuery.css( elem, \\\"position\\\" ),\\n\\t\\t\\tcurElem = jQuery( elem ),\\n\\t\\t\\tprops = {};\\n\\n\\t\\t// Set position first, in-case top/left are set even on static elem\\n\\t\\tif ( position === \\\"static\\\" ) {\\n\\t\\t\\telem.style.position = \\\"relative\\\";\\n\\t\\t}\\n\\n\\t\\tcurOffset = curElem.offset();\\n\\t\\tcurCSSTop = jQuery.css( elem, \\\"top\\\" );\\n\\t\\tcurCSSLeft = jQuery.css( elem, \\\"left\\\" );\\n\\t\\tcalculatePosition = ( position === \\\"absolute\\\" || position === \\\"fixed\\\" ) &&\\n\\t\\t\\t( curCSSTop + curCSSLeft ).indexOf( \\\"auto\\\" ) > -1;\\n\\n\\t\\t// Need to be able to calculate position if either\\n\\t\\t// top or left is auto and position is either absolute or fixed\\n\\t\\tif ( calculatePosition ) {\\n\\t\\t\\tcurPosition = curElem.position();\\n\\t\\t\\tcurTop = curPosition.top;\\n\\t\\t\\tcurLeft = curPosition.left;\\n\\n\\t\\t} else {\\n\\t\\t\\tcurTop = parseFloat( curCSSTop ) || 0;\\n\\t\\t\\tcurLeft = parseFloat( curCSSLeft ) || 0;\\n\\t\\t}\\n\\n\\t\\tif ( jQuery.isFunction( options ) ) {\\n\\n\\t\\t\\t// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)\\n\\t\\t\\toptions = options.call( elem, i, jQuery.extend( {}, curOffset ) );\\n\\t\\t}\\n\\n\\t\\tif ( options.top != null ) {\\n\\t\\t\\tprops.top = ( options.top - curOffset.top ) + curTop;\\n\\t\\t}\\n\\t\\tif ( options.left != null ) {\\n\\t\\t\\tprops.left = ( options.left - curOffset.left ) + curLeft;\\n\\t\\t}\\n\\n\\t\\tif ( \\\"using\\\" in options ) {\\n\\t\\t\\toptions.using.call( elem, props );\\n\\n\\t\\t} else {\\n\\t\\t\\tcurElem.css( props );\\n\\t\\t}\\n\\t}\\n};\\n\\njQuery.fn.extend( {\\n\\toffset: function( options ) {\\n\\n\\t\\t// Preserve chaining for setter\\n\\t\\tif ( arguments.length ) {\\n\\t\\t\\treturn options === undefined ?\\n\\t\\t\\t\\tthis :\\n\\t\\t\\t\\tthis.each( function( i ) {\\n\\t\\t\\t\\t\\tjQuery.offset.setOffset( this, options, i );\\n\\t\\t\\t\\t} );\\n\\t\\t}\\n\\n\\t\\tvar doc, docElem, rect, win,\\n\\t\\t\\telem = this[ 0 ];\\n\\n\\t\\tif ( !elem ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\t// Return zeros for disconnected and hidden (display: none) elements (gh-2310)\\n\\t\\t// Support: IE <=11 only\\n\\t\\t// Running getBoundingClientRect on a\\n\\t\\t// disconnected node in IE throws an error\\n\\t\\tif ( !elem.getClientRects().length ) {\\n\\t\\t\\treturn { top: 0, left: 0 };\\n\\t\\t}\\n\\n\\t\\trect = elem.getBoundingClientRect();\\n\\n\\t\\tdoc = elem.ownerDocument;\\n\\t\\tdocElem = doc.documentElement;\\n\\t\\twin = doc.defaultView;\\n\\n\\t\\treturn {\\n\\t\\t\\ttop: rect.top + win.pageYOffset - docElem.clientTop,\\n\\t\\t\\tleft: rect.left + win.pageXOffset - docElem.clientLeft\\n\\t\\t};\\n\\t},\\n\\n\\tposition: function() {\\n\\t\\tif ( !this[ 0 ] ) {\\n\\t\\t\\treturn;\\n\\t\\t}\\n\\n\\t\\tvar offsetParent, offset,\\n\\t\\t\\telem = this[ 0 ],\\n\\t\\t\\tparentOffset = { top: 0, left: 0 };\\n\\n\\t\\t// Fixed elements are offset from window (parentOffset = {top:0, left: 0},\\n\\t\\t// because it is its only offset parent\\n\\t\\tif ( jQuery.css( elem, \\\"position\\\" ) === \\\"fixed\\\" ) {\\n\\n\\t\\t\\t// Assume getBoundingClientRect is there when computed position is fixed\\n\\t\\t\\toffset = elem.getBoundingClientRect();\\n\\n\\t\\t} else {\\n\\n\\t\\t\\t// Get *real* offsetParent\\n\\t\\t\\toffsetParent = this.offsetParent();\\n\\n\\t\\t\\t// Get correct offsets\\n\\t\\t\\toffset = this.offset();\\n\\t\\t\\tif ( !nodeName( offsetParent[ 0 ], \\\"html\\\" ) ) {\\n\\t\\t\\t\\tparentOffset = offsetParent.offset();\\n\\t\\t\\t}\\n\\n\\t\\t\\t// Add offsetParent borders\\n\\t\\t\\tparentOffset = {\\n\\t\\t\\t\\ttop: parentOffset.top + jQuery.css( offsetParent[ 0 ], \\\"borderTopWidth\\\", true ),\\n\\t\\t\\t\\tleft: parentOffset.left + jQuery.css( offsetParent[ 0 ], \\\"borderLeftWidth\\\", true )\\n\\t\\t\\t};\\n\\t\\t}\\n\\n\\t\\t// Subtract parent offsets and element margins\\n\\t\\treturn {\\n\\t\\t\\ttop: offset.top - parentOffset.top - jQuery.css( elem, \\\"marginTop\\\", true ),\\n\\t\\t\\tleft: offset.left - parentOffset.left - jQuery.css( elem, \\\"marginLeft\\\", true )\\n\\t\\t};\\n\\t},\\n\\n\\t// This method will return documentElement in the following cases:\\n\\t// 1) For the element inside the iframe without offsetParent, this method will return\\n\\t//    documentElement of the parent window\\n\\t// 2) For the hidden or detached element\\n\\t// 3) For body or html element, i.e. in case of the html node - it will return itself\\n\\t//\\n\\t// but those exceptions were never presented as a real life use-cases\\n\\t// and might be considered as more preferable results.\\n\\t//\\n\\t// This logic, however, is not guaranteed and can change at any point in the future\\n\\toffsetParent: function() {\\n\\t\\treturn this.map( function() {\\n\\t\\t\\tvar offsetParent = this.offsetParent;\\n\\n\\t\\t\\twhile ( offsetParent && jQuery.css( offsetParent, \\\"position\\\" ) === \\\"static\\\" ) {\\n\\t\\t\\t\\toffsetParent = offsetParent.offsetParent;\\n\\t\\t\\t}\\n\\n\\t\\t\\treturn offsetParent || documentElement;\\n\\t\\t} );\\n\\t}\\n} );\\n\\n// Create scrollLeft and scrollTop methods\\njQuery.each( { scrollLeft: \\\"pageXOffset\\\", scrollTop: \\\"pageYOffset\\\" }, function( method, prop ) {\\n\\tvar top = \\\"pageYOffset\\\" === prop;\\n\\n\\tjQuery.fn[ method ] = function( val ) {\\n\\t\\treturn access( this, function( elem, method, val ) {\\n\\n\\t\\t\\t// Coalesce documents and windows\\n\\t\\t\\tvar win;\\n\\t\\t\\tif ( jQuery.isWindow( elem ) ) {\\n\\t\\t\\t\\twin = elem;\\n\\t\\t\\t} else if ( elem.nodeType === 9 ) {\\n\\t\\t\\t\\twin = elem.defaultView;\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( val === undefined ) {\\n\\t\\t\\t\\treturn win ? win[ prop ] : elem[ method ];\\n\\t\\t\\t}\\n\\n\\t\\t\\tif ( win ) {\\n\\t\\t\\t\\twin.scrollTo(\\n\\t\\t\\t\\t\\t!top ? val : win.pageXOffset,\\n\\t\\t\\t\\t\\ttop ? val : win.pageYOffset\\n\\t\\t\\t\\t);\\n\\n\\t\\t\\t} else {\\n\\t\\t\\t\\telem[ method ] = val;\\n\\t\\t\\t}\\n\\t\\t}, method, val, arguments.length );\\n\\t};\\n} );\\n\\n// Support: Safari <=7 - 9.1, Chrome <=37 - 49\\n// Add the top/left cssHooks using jQuery.fn.position\\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\\n// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347\\n// getComputedStyle returns percent when specified for top/left/bottom/right;\\n// rather than make the css module depend on the offset module, just check for it here\\njQuery.each( [ \\\"top\\\", \\\"left\\\" ], function( i, prop ) {\\n\\tjQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,\\n\\t\\tfunction( elem, computed ) {\\n\\t\\t\\tif ( computed ) {\\n\\t\\t\\t\\tcomputed = curCSS( elem, prop );\\n\\n\\t\\t\\t\\t// If curCSS returns percentage, fallback to offset\\n\\t\\t\\t\\treturn rnumnonpx.test( computed ) ?\\n\\t\\t\\t\\t\\tjQuery( elem ).position()[ prop ] + \\\"px\\\" :\\n\\t\\t\\t\\t\\tcomputed;\\n\\t\\t\\t}\\n\\t\\t}\\n\\t);\\n} );\\n\\n\\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\\njQuery.each( { Height: \\\"height\\\", Width: \\\"width\\\" }, function( name, type ) {\\n\\tjQuery.each( { padding: \\\"inner\\\" + name, content: type, \\\"\\\": \\\"outer\\\" + name },\\n\\t\\tfunction( defaultExtra, funcName ) {\\n\\n\\t\\t// Margin is only for outerHeight, outerWidth\\n\\t\\tjQuery.fn[ funcName ] = function( margin, value ) {\\n\\t\\t\\tvar chainable = arguments.length && ( defaultExtra || typeof margin !== \\\"boolean\\\" ),\\n\\t\\t\\t\\textra = defaultExtra || ( margin === true || value === true ? \\\"margin\\\" : \\\"border\\\" );\\n\\n\\t\\t\\treturn access( this, function( elem, type, value ) {\\n\\t\\t\\t\\tvar doc;\\n\\n\\t\\t\\t\\tif ( jQuery.isWindow( elem ) ) {\\n\\n\\t\\t\\t\\t\\t// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)\\n\\t\\t\\t\\t\\treturn funcName.indexOf( \\\"outer\\\" ) === 0 ?\\n\\t\\t\\t\\t\\t\\telem[ \\\"inner\\\" + name ] :\\n\\t\\t\\t\\t\\t\\telem.document.documentElement[ \\\"client\\\" + name ];\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\t// Get document width or height\\n\\t\\t\\t\\tif ( elem.nodeType === 9 ) {\\n\\t\\t\\t\\t\\tdoc = elem.documentElement;\\n\\n\\t\\t\\t\\t\\t// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\\n\\t\\t\\t\\t\\t// whichever is greatest\\n\\t\\t\\t\\t\\treturn Math.max(\\n\\t\\t\\t\\t\\t\\telem.body[ \\\"scroll\\\" + name ], doc[ \\\"scroll\\\" + name ],\\n\\t\\t\\t\\t\\t\\telem.body[ \\\"offset\\\" + name ], doc[ \\\"offset\\\" + name ],\\n\\t\\t\\t\\t\\t\\tdoc[ \\\"client\\\" + name ]\\n\\t\\t\\t\\t\\t);\\n\\t\\t\\t\\t}\\n\\n\\t\\t\\t\\treturn value === undefined ?\\n\\n\\t\\t\\t\\t\\t// Get width or height on the element, requesting but not forcing parseFloat\\n\\t\\t\\t\\t\\tjQuery.css( elem, type, extra ) :\\n\\n\\t\\t\\t\\t\\t// Set width or height on the element\\n\\t\\t\\t\\t\\tjQuery.style( elem, type, value, extra );\\n\\t\\t\\t}, type, chainable ? margin : undefined, chainable );\\n\\t\\t};\\n\\t} );\\n} );\\n\\n\\njQuery.fn.extend( {\\n\\n\\tbind: function( types, data, fn ) {\\n\\t\\treturn this.on( types, null, data, fn );\\n\\t},\\n\\tunbind: function( types, fn ) {\\n\\t\\treturn this.off( types, null, fn );\\n\\t},\\n\\n\\tdelegate: function( selector, types, data, fn ) {\\n\\t\\treturn this.on( types, selector, data, fn );\\n\\t},\\n\\tundelegate: function( selector, types, fn ) {\\n\\n\\t\\t// ( namespace ) or ( selector, types [, fn] )\\n\\t\\treturn arguments.length === 1 ?\\n\\t\\t\\tthis.off( selector, \\\"**\\\" ) :\\n\\t\\t\\tthis.off( types, selector || \\\"**\\\", fn );\\n\\t}\\n} );\\n\\njQuery.holdReady = function( hold ) {\\n\\tif ( hold ) {\\n\\t\\tjQuery.readyWait++;\\n\\t} else {\\n\\t\\tjQuery.ready( true );\\n\\t}\\n};\\njQuery.isArray = Array.isArray;\\njQuery.parseJSON = JSON.parse;\\njQuery.nodeName = nodeName;\\n\\n\\n\\n\\n// Register as a named AMD module, since jQuery can be concatenated with other\\n// files that may use define, but not via a proper concatenation script that\\n// understands anonymous AMD modules. A named AMD is safest and most robust\\n// way to register. Lowercase jquery is used because AMD module names are\\n// derived from file names, and jQuery is normally delivered in a lowercase\\n// file name. Do this after creating the global so that if an AMD module wants\\n// to call noConflict to hide this version of jQuery, it will work.\\n\\n// Note that for maximum portability, libraries that are not jQuery should\\n// declare themselves as anonymous modules, and avoid setting a global if an\\n// AMD loader is present. jQuery is a special case. For more information, see\\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\\n\\nif ( typeof define === \\\"function\\\" && define.amd ) {\\n\\tdefine( \\\"jquery\\\", [], function() {\\n\\t\\treturn jQuery;\\n\\t} );\\n}\\n\\n\\n\\n\\nvar\\n\\n\\t// Map over jQuery in case of overwrite\\n\\t_jQuery = window.jQuery,\\n\\n\\t// Map over the $ in case of overwrite\\n\\t_$ = window.$;\\n\\njQuery.noConflict = function( deep ) {\\n\\tif ( window.$ === jQuery ) {\\n\\t\\twindow.$ = _$;\\n\\t}\\n\\n\\tif ( deep && window.jQuery === jQuery ) {\\n\\t\\twindow.jQuery = _jQuery;\\n\\t}\\n\\n\\treturn jQuery;\\n};\\n\\n// Expose jQuery and $ identifiers, even in AMD\\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\\n// and CommonJS for browser emulators (#13566)\\nif ( !noGlobal ) {\\n\\twindow.jQuery = window.$ = jQuery;\\n}\\n\\n\\n\\n\\nreturn jQuery;\\n} );\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/jquery/dist/jquery.slim.js\n// module id = 489\n// module chunks = 2","module.exports = \"/*\\n * metismenu - v2.7.0\\n * A jQuery menu plugin\\n * https://github.com/onokumus/metismenu#readme\\n *\\n * Made by Osman Nuri Okumus <onokumus@gmail.com> (https://github.com/onokumus)\\n * Under MIT License\\n */\\n\\n(function (global, factory) {\\n  if (typeof define === \\\"function\\\" && define.amd) {\\n    define(['jquery'], factory);\\n  } else if (typeof exports !== \\\"undefined\\\") {\\n    factory(require('jquery'));\\n  } else {\\n    var mod = {\\n      exports: {}\\n    };\\n    factory(global.jquery);\\n    global.metisMenu = mod.exports;\\n  }\\n})(this, function (_jquery) {\\n  'use strict';\\n\\n  var _jquery2 = _interopRequireDefault(_jquery);\\n\\n  function _interopRequireDefault(obj) {\\n    return obj && obj.__esModule ? obj : {\\n      default: obj\\n    };\\n  }\\n\\n  var _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) {\\n    return typeof obj;\\n  } : function (obj) {\\n    return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n  };\\n\\n  function _classCallCheck(instance, Constructor) {\\n    if (!(instance instanceof Constructor)) {\\n      throw new TypeError(\\\"Cannot call a class as a function\\\");\\n    }\\n  }\\n\\n  var Util = function ($) {\\n    var transition = false;\\n\\n    var TransitionEndEvent = {\\n      WebkitTransition: 'webkitTransitionEnd',\\n      MozTransition: 'transitionend',\\n      OTransition: 'oTransitionEnd otransitionend',\\n      transition: 'transitionend'\\n    };\\n\\n    function getSpecialTransitionEndEvent() {\\n      return {\\n        bindType: transition.end,\\n        delegateType: transition.end,\\n        handle: function handle(event) {\\n          if ($(event.target).is(this)) {\\n            return event.handleObj.handler.apply(this, arguments);\\n          }\\n          return undefined;\\n        }\\n      };\\n    }\\n\\n    function transitionEndTest() {\\n      if (window.QUnit) {\\n        return false;\\n      }\\n\\n      var el = document.createElement('mm');\\n\\n      for (var name in TransitionEndEvent) {\\n        if (el.style[name] !== undefined) {\\n          return {\\n            end: TransitionEndEvent[name]\\n          };\\n        }\\n      }\\n\\n      return false;\\n    }\\n\\n    function transitionEndEmulator(duration) {\\n      var _this2 = this;\\n\\n      var called = false;\\n\\n      $(this).one(Util.TRANSITION_END, function () {\\n        called = true;\\n      });\\n\\n      setTimeout(function () {\\n        if (!called) {\\n          Util.triggerTransitionEnd(_this2);\\n        }\\n      }, duration);\\n\\n      return this;\\n    }\\n\\n    function setTransitionEndSupport() {\\n      transition = transitionEndTest();\\n      $.fn.emulateTransitionEnd = transitionEndEmulator;\\n\\n      if (Util.supportsTransitionEnd()) {\\n        $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\\n      }\\n    }\\n\\n    var Util = {\\n      TRANSITION_END: 'mmTransitionEnd',\\n\\n      triggerTransitionEnd: function triggerTransitionEnd(element) {\\n        $(element).trigger(transition.end);\\n      },\\n      supportsTransitionEnd: function supportsTransitionEnd() {\\n        return Boolean(transition);\\n      }\\n    };\\n\\n    setTransitionEndSupport();\\n\\n    return Util;\\n  }(jQuery);\\n\\n  var MetisMenu = function ($) {\\n\\n    var NAME = 'metisMenu';\\n    var DATA_KEY = 'metisMenu';\\n    var EVENT_KEY = '.' + DATA_KEY;\\n    var DATA_API_KEY = '.data-api';\\n    var JQUERY_NO_CONFLICT = $.fn[NAME];\\n    var TRANSITION_DURATION = 350;\\n\\n    var Default = {\\n      toggle: true,\\n      preventDefault: true,\\n      activeClass: 'active',\\n      collapseClass: 'collapse',\\n      collapseInClass: 'in',\\n      collapsingClass: 'collapsing',\\n      triggerElement: 'a',\\n      parentTrigger: 'li',\\n      subMenu: 'ul'\\n    };\\n\\n    var Event = {\\n      SHOW: 'show' + EVENT_KEY,\\n      SHOWN: 'shown' + EVENT_KEY,\\n      HIDE: 'hide' + EVENT_KEY,\\n      HIDDEN: 'hidden' + EVENT_KEY,\\n      CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n    };\\n\\n    var MetisMenu = function () {\\n      function MetisMenu(element, config) {\\n        _classCallCheck(this, MetisMenu);\\n\\n        this._element = element;\\n        this._config = this._getConfig(config);\\n        this._transitioning = null;\\n\\n        this.init();\\n      }\\n\\n      MetisMenu.prototype.init = function init() {\\n        var self = this;\\n        $(this._element).find(this._config.parentTrigger + '.' + this._config.activeClass).has(this._config.subMenu).children(this._config.subMenu).attr('aria-expanded', true).addClass(this._config.collapseClass + ' ' + this._config.collapseInClass);\\n\\n        $(this._element).find(this._config.parentTrigger).not('.' + this._config.activeClass).has(this._config.subMenu).children(this._config.subMenu).attr('aria-expanded', false).addClass(this._config.collapseClass);\\n\\n        $(this._element).find(this._config.parentTrigger).has(this._config.subMenu).children(this._config.triggerElement).on(Event.CLICK_DATA_API, function (e) {\\n          var _this = $(this);\\n          var _parent = _this.parent(self._config.parentTrigger);\\n          var _siblings = _parent.siblings(self._config.parentTrigger).children(self._config.triggerElement);\\n          var _list = _parent.children(self._config.subMenu);\\n          if (self._config.preventDefault) {\\n            e.preventDefault();\\n          }\\n          if (_this.attr('aria-disabled') === 'true') {\\n            return;\\n          }\\n          if (_parent.hasClass(self._config.activeClass)) {\\n            _this.attr('aria-expanded', false);\\n            self._hide(_list);\\n          } else {\\n            self._show(_list);\\n            _this.attr('aria-expanded', true);\\n            if (self._config.toggle) {\\n              _siblings.attr('aria-expanded', false);\\n            }\\n          }\\n\\n          if (self._config.onTransitionStart) {\\n            self._config.onTransitionStart(e);\\n          }\\n        });\\n      };\\n\\n      MetisMenu.prototype._show = function _show(element) {\\n        if (this._transitioning || $(element).hasClass(this._config.collapsingClass)) {\\n          return;\\n        }\\n        var _this = this;\\n        var _el = $(element);\\n\\n        var startEvent = $.Event(Event.SHOW);\\n        _el.trigger(startEvent);\\n\\n        if (startEvent.isDefaultPrevented()) {\\n          return;\\n        }\\n\\n        _el.parent(this._config.parentTrigger).addClass(this._config.activeClass);\\n\\n        if (this._config.toggle) {\\n          this._hide(_el.parent(this._config.parentTrigger).siblings().children(this._config.subMenu + '.' + this._config.collapseInClass).attr('aria-expanded', false));\\n        }\\n\\n        _el.removeClass(this._config.collapseClass).addClass(this._config.collapsingClass).height(0);\\n\\n        this.setTransitioning(true);\\n\\n        var complete = function complete() {\\n\\n          _el.removeClass(_this._config.collapsingClass).addClass(_this._config.collapseClass + ' ' + _this._config.collapseInClass).height('').attr('aria-expanded', true);\\n\\n          _this.setTransitioning(false);\\n\\n          _el.trigger(Event.SHOWN);\\n        };\\n\\n        if (!Util.supportsTransitionEnd()) {\\n          complete();\\n          return;\\n        }\\n\\n        _el.height(_el[0].scrollHeight).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\\n      };\\n\\n      MetisMenu.prototype._hide = function _hide(element) {\\n\\n        if (this._transitioning || !$(element).hasClass(this._config.collapseInClass)) {\\n          return;\\n        }\\n        var _this = this;\\n        var _el = $(element);\\n\\n        var startEvent = $.Event(Event.HIDE);\\n        _el.trigger(startEvent);\\n\\n        if (startEvent.isDefaultPrevented()) {\\n          return;\\n        }\\n\\n        _el.parent(this._config.parentTrigger).removeClass(this._config.activeClass);\\n        _el.height(_el.height())[0].offsetHeight;\\n\\n        _el.addClass(this._config.collapsingClass).removeClass(this._config.collapseClass).removeClass(this._config.collapseInClass);\\n\\n        this.setTransitioning(true);\\n\\n        var complete = function complete() {\\n          if (_this._transitioning && _this._config.onTransitionEnd) {\\n            _this._config.onTransitionEnd();\\n          }\\n\\n          _this.setTransitioning(false);\\n          _el.trigger(Event.HIDDEN);\\n\\n          _el.removeClass(_this._config.collapsingClass).addClass(_this._config.collapseClass).attr('aria-expanded', false);\\n        };\\n\\n        if (!Util.supportsTransitionEnd()) {\\n          complete();\\n          return;\\n        }\\n\\n        _el.height() == 0 || _el.css('display') == 'none' ? complete() : _el.height(0).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\\n      };\\n\\n      MetisMenu.prototype.setTransitioning = function setTransitioning(isTransitioning) {\\n        this._transitioning = isTransitioning;\\n      };\\n\\n      MetisMenu.prototype.dispose = function dispose() {\\n        $.removeData(this._element, DATA_KEY);\\n\\n        $(this._element).find(this._config.parentTrigger).has(this._config.subMenu).children(this._config.triggerElement).off('click');\\n\\n        this._transitioning = null;\\n        this._config = null;\\n        this._element = null;\\n      };\\n\\n      MetisMenu.prototype._getConfig = function _getConfig(config) {\\n        config = $.extend({}, Default, config);\\n        return config;\\n      };\\n\\n      MetisMenu._jQueryInterface = function _jQueryInterface(config) {\\n        return this.each(function () {\\n          var $this = $(this);\\n          var data = $this.data(DATA_KEY);\\n          var _config = $.extend({}, Default, $this.data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);\\n\\n          if (!data && /dispose/.test(config)) {\\n            this.dispose();\\n          }\\n\\n          if (!data) {\\n            data = new MetisMenu(this, _config);\\n            $this.data(DATA_KEY, data);\\n          }\\n\\n          if (typeof config === 'string') {\\n            if (data[config] === undefined) {\\n              throw new Error('No method named \\\"' + config + '\\\"');\\n            }\\n            data[config]();\\n          }\\n        });\\n      };\\n\\n      return MetisMenu;\\n    }();\\n\\n    /**\\n     * ------------------------------------------------------------------------\\n     * jQuery\\n     * ------------------------------------------------------------------------\\n     */\\n\\n    $.fn[NAME] = MetisMenu._jQueryInterface;\\n    $.fn[NAME].Constructor = MetisMenu;\\n    $.fn[NAME].noConflict = function () {\\n      $.fn[NAME] = JQUERY_NO_CONFLICT;\\n      return MetisMenu._jQueryInterface;\\n    };\\n    return MetisMenu;\\n  }(jQuery);\\n});\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/metismenu/dist/metisMenu.js\n// module id = 490\n// module chunks = 2","module.exports = \"var config = window.config = {};\\n\\n// Config reference element\\nvar $ref = $(\\\"#ref\\\");\\n\\n// Configure responsive bootstrap toolkit\\nconfig.ResponsiveBootstrapToolkitVisibilityDivs = {\\n    'xs': $('<div class=\\\"device-xs \\t\\t\\t\\t  hidden-sm-up\\\"></div>'),\\n    'sm': $('<div class=\\\"device-sm hidden-xs-down hidden-md-up\\\"></div>'),\\n    'md': $('<div class=\\\"device-md hidden-sm-down hidden-lg-up\\\"></div>'),\\n    'lg': $('<div class=\\\"device-lg hidden-md-down hidden-xl-up\\\"></div>'),\\n    'xl': $('<div class=\\\"device-xl hidden-lg-down\\t\\t\\t  \\\"></div>'),\\n};\\n\\nResponsiveBootstrapToolkit.use('Custom', config.ResponsiveBootstrapToolkitVisibilityDivs);\\n\\n//validation configuration\\nconfig.validations = {\\n    debug: true,\\n    errorClass: 'has-error',\\n    validClass: 'success',\\n    errorElement: \\\"span\\\",\\n\\n    // add error class\\n    highlight: function (element, errorClass, validClass) {\\n        $(element).parents(\\\"div.form-group\\\")\\n            .addClass(errorClass)\\n            .removeClass(validClass);\\n    },\\n\\n    // add error class\\n    unhighlight: function (element, errorClass, validClass) {\\n        $(element).parents(\\\".has-error\\\")\\n            .removeClass(errorClass)\\n            .addClass(validClass);\\n    },\\n\\n    // submit handler\\n    submitHandler: function (form) {\\n        form.submit();\\n    }\\n}\\n\\n//delay time configuration\\nconfig.delayTime = 50;\\n\\n// chart configurations\\nconfig.chart = {};\\n\\nconfig.chart.colorPrimary = tinycolor($ref.find(\\\".chart .color-primary\\\").css(\\\"color\\\"));\\nconfig.chart.colorSecondary = tinycolor($ref.find(\\\".chart .color-secondary\\\").css(\\\"color\\\"));\\n$(function () {\\n    animate({\\n        name: 'flipInY',\\n        selector: '.error-card > .error-title-block'\\n    });\\n\\n\\n    setTimeout(function () {\\n        var $el = $('.error-card > .error-container');\\n\\n        animate({\\n            name: 'fadeInUp',\\n            selector: $el\\n        });\\n\\n        $el.addClass('visible');\\n    }, 1000);\\n})\\n//ResetForm validation\\n$(function () {\\n    if (!$('#reset-form').length) {\\n        return false;\\n    }\\n\\n    var resetValidationSettings = {\\n        rules: {\\n            email1: {\\n                required: true,\\n                email: true\\n            }\\n        },\\n        messages: {\\n            email1: {\\n                required: \\\"Please enter email address\\\",\\n                email: \\\"Please enter a valid email address\\\"\\n            }\\n        },\\n        invalidHandler: function () {\\n            animate({\\n                name: 'shake',\\n                selector: '.auth-container > .card'\\n            });\\n        }\\n    }\\n\\n    $.extend(resetValidationSettings, config.validations);\\n\\n    $('#reset-form').validate(resetValidationSettings);\\n})\\n//LoginForm validation\\n$(function () {\\n    if (!$('#login-form').length) {\\n        return false;\\n    }\\n\\n    var loginValidationSettings = {\\n        rules: {\\n            username: {\\n                required: true,\\n                email: true\\n            },\\n            password: \\\"required\\\",\\n            agree: \\\"required\\\"\\n        },\\n        messages: {\\n            username: {\\n                required: \\\"Please enter username\\\",\\n                email: \\\"Please enter a valid email address\\\"\\n            },\\n            password: \\\"Please enter password\\\",\\n            agree: \\\"Please accept our policy\\\"\\n        },\\n        invalidHandler: function () {\\n            animate({\\n                name: 'shake',\\n                selector: '.auth-container > .card'\\n            });\\n        }\\n    }\\n\\n    $.extend(loginValidationSettings, config.validations);\\n\\n    $('#login-form').validate(loginValidationSettings);\\n})\\n//SignupForm validation\\n$(function () {\\n    if (!$('#signup-form').length) {\\n        return false;\\n    }\\n\\n    var signupValidationSettings = {\\n        rules: {\\n            firstname: {\\n                required: true,\\n            },\\n            lastname: {\\n                required: true,\\n            },\\n            email: {\\n                required: true,\\n                email: true\\n            },\\n            password: {\\n                required: true,\\n                minlength: 8\\n            },\\n            retype_password: {\\n                required: true,\\n                minlength: 8,\\n                equalTo: \\\"#password\\\"\\n            },\\n            agree: {\\n                required: true,\\n            }\\n        },\\n        groups: {\\n            name: \\\"firstname lastname\\\",\\n            pass: \\\"password retype_password\\\",\\n        },\\n        errorPlacement: function (error, element) {\\n            if (\\n                element.attr(\\\"name\\\") == \\\"firstname\\\" ||\\n                element.attr(\\\"name\\\") == \\\"lastname\\\"\\n            ) {\\n                error.insertAfter($(\\\"#lastname\\\").closest('.row'));\\n                element.parents(\\\"div.form-group\\\")\\n                    .addClass('has-error');\\n            }\\n            else if (\\n                element.attr(\\\"name\\\") == \\\"password\\\" ||\\n                element.attr(\\\"name\\\") == \\\"retype_password\\\"\\n            ) {\\n                error.insertAfter($(\\\"#retype_password\\\").closest('.row'));\\n                element.parents(\\\"div.form-group\\\")\\n                    .addClass('has-error');\\n            }\\n            else if (element.attr(\\\"name\\\") == \\\"agree\\\") {\\n                error.insertAfter(\\\"#agree-text\\\");\\n            }\\n            else {\\n                error.insertAfter(element);\\n            }\\n        },\\n        messages: {\\n            firstname: \\\"Please enter firstname and lastname\\\",\\n            lastname: \\\"Please enter firstname and lastname\\\",\\n            email: {\\n                required: \\\"Please enter email\\\",\\n                email: \\\"Please enter a valid email address\\\"\\n            },\\n            password: {\\n                required: \\\"Please enter password fields.\\\",\\n                minlength: \\\"Passwords should be at least 8 characters.\\\"\\n            },\\n            retype_password: {\\n                required: \\\"Please enter password fields.\\\",\\n                minlength: \\\"Passwords should be at least 8 characters.\\\"\\n            },\\n            agree: \\\"Please accept our policy\\\"\\n        },\\n        invalidHandler: function () {\\n            animate({\\n                name: 'shake',\\n                selector: '.auth-container > .card'\\n            });\\n        }\\n    }\\n\\n    $.extend(signupValidationSettings, config.validations);\\n\\n    $('#signup-form').validate(signupValidationSettings);\\n});\\n/***********************************************\\n *        Animation Settings\\n ***********************************************/\\nfunction animate(options) {\\n    var animationName = \\\"animated \\\" + options.name;\\n    var animationEnd = \\\"webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend\\\";\\n    $(options.selector)\\n        .addClass(animationName)\\n        .one(animationEnd,\\n            function () {\\n                $(this).removeClass(animationName);\\n            }\\n        );\\n}\\n\\n$(function () {\\n    var $itemActions = $(\\\".item-actions-dropdown\\\");\\n\\n    $(document).on('click', function (e) {\\n        if (!$(e.target).closest('.item-actions-dropdown').length) {\\n            $itemActions.removeClass('active');\\n        }\\n    });\\n\\n    $('.item-actions-toggle-btn').on('click', function (e) {\\n        e.preventDefault();\\n\\n        var $thisActionList = $(this).closest('.item-actions-dropdown');\\n\\n        $itemActions.not($thisActionList).removeClass('active');\\n\\n        $thisActionList.toggleClass('active');\\n    });\\n});\\n\\n/***********************************************\\n *        NProgress Settings\\n ***********************************************/\\nvar npSettings = {\\n    easing: 'ease',\\n    speed: 500\\n}\\n\\nNProgress.configure(npSettings);\\n$(function () {\\n    setSameHeights();\\n\\n    var resizeTimer;\\n\\n    $(window).resize(function () {\\n        clearTimeout(resizeTimer);\\n        resizeTimer = setTimeout(setSameHeights, 150);\\n    });\\n});\\n\\n\\nfunction setSameHeights($container) {\\n\\n    $container = $container || $('.sameheight-container');\\n\\n    var viewport = ResponsiveBootstrapToolkit.current();\\n\\n    $container.each(function () {\\n\\n        var $items = $(this).find(\\\".sameheight-item\\\");\\n\\n        // Get max height of items in container\\n        var maxHeight = 0;\\n\\n        $items.each(function () {\\n            $(this).css({height: 'auto'});\\n            maxHeight = Math.max(maxHeight, $(this).innerHeight());\\n        });\\n\\n\\n        // Set heights of items\\n        $items.each(function () {\\n            // Ignored viewports for item\\n            var excludedStr = $(this).data('exclude') || '';\\n            var excluded = excludedStr.split(',');\\n\\n            // Set height of element if it's not excluded on\\n            if (excluded.indexOf(viewport) === -1) {\\n                $(this).innerHeight(maxHeight);\\n            }\\n        });\\n    });\\n}\\n\\n$(function () {\\n\\n    if (!$('#dashboard-visits-chart').length) {\\n        return false;\\n    }\\n\\n    // drawing visits chart\\n    drawVisitsChart();\\n\\n    var el = null;\\n    var item = 'visits';\\n\\n    $('a[data-toggle=\\\"tab\\\"]').on('shown.bs.tab', function (e) {\\n\\n        el = e.target;\\n        item = $(el).attr('href').replace('#', '');\\n        switchHistoryCharts(item);\\n\\n    });\\n\\n    $(document).on(\\\"themechange\\\", function () {\\n        switchHistoryCharts(item);\\n    });\\n\\n    function switchHistoryCharts(item) {\\n        var chartSelector = \\\"#dashboard-\\\" + item + \\\"-chart\\\";\\n\\n        if ($(chartSelector).has('svg').length) {\\n            $(chartSelector).empty();\\n        }\\n\\n        switch (item) {\\n            case 'visits':\\n                drawVisitsChart();\\n                break;\\n            case 'downloads':\\n                drawDownloadsChart();\\n                break;\\n        }\\n    }\\n\\n    function drawVisitsChart() {\\n        var dataVisits = [\\n            {x: '2015-09-01', y: 70},\\n            {x: '2015-09-02', y: 75},\\n            {x: '2015-09-03', y: 50},\\n            {x: '2015-09-04', y: 75},\\n            {x: '2015-09-05', y: 50},\\n            {x: '2015-09-06', y: 75},\\n            {x: '2015-09-07', y: 86}\\n        ];\\n\\n\\n        Morris.Line({\\n            element: 'dashboard-visits-chart',\\n            data: dataVisits,\\n            xkey: 'x',\\n            ykeys: ['y'],\\n            ymin: 'auto 40',\\n            labels: ['Visits'],\\n            xLabels: \\\"day\\\",\\n            hideHover: 'auto',\\n            yLabelFormat: function (y) {\\n                // Only integers\\n                if (y === parseInt(y, 10)) {\\n                    return y;\\n                }\\n                else {\\n                    return '';\\n                }\\n            },\\n            resize: true,\\n            lineColors: [\\n                config.chart.colorSecondary.toString(),\\n            ],\\n            pointFillColors: [\\n                config.chart.colorPrimary.toString(),\\n            ]\\n        });\\n    }\\n\\n    function drawDownloadsChart() {\\n\\n        var dataDownloads = [\\n            {\\n                year: '2006',\\n                downloads: 1300\\n            },\\n            {\\n                year: '2007',\\n                downloads: 1526\\n            },\\n            {\\n                year: '2008',\\n                downloads: 2000\\n            },\\n            {\\n                year: '2009',\\n                downloads: 1800\\n            },\\n            {\\n                year: '2010',\\n                downloads: 1650\\n            },\\n            {\\n                year: '2011',\\n                downloads: 620\\n            },\\n            {\\n                year: '2012',\\n                downloads: 1000\\n            },\\n            {\\n                year: '2013',\\n                downloads: 1896\\n            },\\n            {\\n                year: '2014',\\n                downloads: 850\\n            },\\n            {\\n                year: '2015',\\n                downloads: 1500\\n            }\\n        ];\\n\\n\\n        Morris.Bar({\\n            element: 'dashboard-downloads-chart',\\n            data: dataDownloads,\\n            xkey: 'year',\\n            ykeys: ['downloads'],\\n            labels: ['Downloads'],\\n            hideHover: 'auto',\\n            resize: true,\\n            barColors: [\\n                config.chart.colorPrimary.toString(),\\n                tinycolor(config.chart.colorPrimary.toString()).darken(10).toString()\\n            ],\\n        });\\n    }\\n});\\n\\n\\n$(function () {\\n\\n\\n    function drawDashboardItemsListSparklines() {\\n        $(\\\".dashboard-page .items .sparkline\\\").each(function () {\\n            var type = $(this).data('type');\\n\\n            // There is predefined data\\n            if ($(this).data('data')) {\\n                var data = $(this).data('data').split(',').map(function (item) {\\n                    if (item.indexOf(\\\":\\\") > 0) {\\n                        return item.split(\\\":\\\");\\n                    }\\n                    else {\\n                        return item;\\n                    }\\n                });\\n            }\\n            // Generate random data\\n            else {\\n                var data = [];\\n                for (var i = 0; i < 17; i++) {\\n                    data.push(Math.round(100 * Math.random()));\\n                }\\n            }\\n\\n\\n            $(this).sparkline(data, {\\n                barColor: config.chart.colorPrimary.toString(),\\n                height: $(this).height(),\\n                type: type\\n            });\\n        });\\n    }\\n\\n    drawDashboardItemsListSparklines();\\n\\n    $(document).on(\\\"themechange\\\", function () {\\n        drawDashboardItemsListSparklines();\\n    });\\n});\\n$(function () {\\n\\n    var $dashboardSalesBreakdownChart = $('#dashboard-sales-breakdown-chart');\\n\\n    if (!$dashboardSalesBreakdownChart.length) {\\n        return false;\\n    }\\n\\n    function drawSalesChart() {\\n\\n        $dashboardSalesBreakdownChart.empty();\\n\\n        Morris.Donut({\\n            element: 'dashboard-sales-breakdown-chart',\\n            data: [{label: \\\"Download Sales\\\", value: 12},\\n                {label: \\\"In-Store Sales\\\", value: 30},\\n                {label: \\\"Mail-Order Sales\\\", value: 20}],\\n            resize: true,\\n            colors: [\\n                tinycolor(config.chart.colorPrimary.toString()).lighten(10).toString(),\\n                tinycolor(config.chart.colorPrimary.toString()).darken(8).toString(),\\n                config.chart.colorPrimary.toString()\\n            ],\\n        });\\n\\n        var $sameheightContainer = $dashboardSalesBreakdownChart.closest(\\\".sameheight-container\\\");\\n\\n        setSameHeights($sameheightContainer);\\n    }\\n\\n    drawSalesChart();\\n\\n    $(document).on(\\\"themechange\\\", function () {\\n        drawSalesChart();\\n    });\\n\\n})\\n$(function () {\\n\\n    var $dashboardSalesMap = $('#dashboard-sales-map');\\n\\n    if (!$dashboardSalesMap.length) {\\n        return false;\\n    }\\n\\n    function drawSalesMap() {\\n\\n        $dashboardSalesMap.empty();\\n\\n        var color = config.chart.colorPrimary.toHexString();\\n        var darkColor = tinycolor(config.chart.colorPrimary.toString()).darken(40).toHexString();\\n        var selectedColor = tinycolor(config.chart.colorPrimary.toString()).darken(10).toHexString();\\n\\n        var sales_data = {\\n            us: 2000,\\n            ru: 2000,\\n            gb: 10000,\\n            fr: 10000,\\n            de: 10000,\\n            cn: 10000,\\n            in: 10000,\\n            sa: 10000,\\n            ca: 10000,\\n            br: 5000,\\n            au: 5000\\n        };\\n\\n        $dashboardSalesMap.vectorMap({\\n            map: 'world_en',\\n            backgroundColor: 'transparent',\\n            color: '#E5E3E5',\\n            hoverOpacity: 0.7,\\n            selectedColor: selectedColor,\\n            enableZoom: true,\\n            showTooltip: true,\\n            values: sales_data,\\n            scaleColors: [color, darkColor],\\n            normalizeFunction: 'linear'\\n        });\\n    }\\n\\n    drawSalesMap();\\n\\n    $(document).on(\\\"themechange\\\", function () {\\n        drawSalesMap();\\n    });\\n});\\n$(function () {\\n\\n    $('.actions-list > li').on('click', '.check', function (e) {\\n        e.preventDefault();\\n\\n        $(this).parents('.tasks-item')\\n            .find('.checkbox')\\n            .prop(\\\"checked\\\", true);\\n\\n        removeActionList();\\n    });\\n\\n});\\n//Flot Bar Chart\\n$(function () {\\n\\n    if (!$('#flot-bar-chart').length) {\\n        return false;\\n    }\\n\\n    function drawFlotCharts() {\\n\\n        var barOptions = {\\n            series: {\\n                bars: {\\n                    show: true,\\n                    barWidth: 0.6,\\n                    fill: true,\\n                    fillColor: {\\n                        colors: [{\\n                            opacity: 0.8\\n                        }, {\\n                            opacity: 0.8\\n                        }]\\n                    }\\n                }\\n            },\\n            xaxis: {\\n                tickDecimals: 0\\n            },\\n            colors: [config.chart.colorPrimary],\\n            grid: {\\n                color: \\\"#999999\\\",\\n                hoverable: true,\\n                clickable: true,\\n                tickColor: \\\"#D4D4D4\\\",\\n                borderWidth: 0\\n            },\\n            legend: {\\n                show: false\\n            },\\n            tooltip: true,\\n            tooltipOpts: {\\n                content: \\\"x: %x, y: %y\\\"\\n            }\\n        };\\n        var barData = {\\n            label: \\\"bar\\\",\\n            data: [\\n                [1, 34],\\n                [2, 25],\\n                [3, 19],\\n                [4, 34],\\n                [5, 32],\\n                [6, 44]\\n            ]\\n        };\\n        $.plot($(\\\"#flot-bar-chart\\\"), [barData], barOptions);\\n\\n\\n        // Flot line chart\\n        var lineOptions = {\\n            series: {\\n                lines: {\\n                    show: true,\\n                    lineWidth: 2,\\n                    fill: true,\\n                    fillColor: {\\n                        colors: [{\\n                            opacity: 0.0\\n                        }, {\\n                            opacity: 0.0\\n                        }]\\n                    }\\n                }\\n            },\\n            xaxis: {\\n                tickDecimals: 0\\n            },\\n            colors: [config.chart.colorPrimary],\\n            grid: {\\n                color: \\\"#999999\\\",\\n                hoverable: true,\\n                clickable: true,\\n                tickColor: \\\"#D4D4D4\\\",\\n                borderWidth: 0\\n            },\\n            legend: {\\n                show: false\\n            },\\n            tooltip: true,\\n            tooltipOpts: {\\n                content: \\\"x: %x, y: %y\\\"\\n            }\\n        };\\n        var barData = {\\n            label: \\\"bar\\\",\\n            data: [\\n                [1, 34],\\n                [2, 25],\\n                [3, 19],\\n                [4, 34],\\n                [5, 32],\\n                [6, 44]\\n            ]\\n        };\\n        $.plot($(\\\"#flot-line-chart\\\"), [barData], lineOptions);\\n\\n        //Flot Pie Chart\\n        var data = [{\\n            label: \\\"Sales 1\\\",\\n            data: 21,\\n            color: tinycolor(config.chart.colorPrimary.toString()).lighten(20),\\n        }, {\\n            label: \\\"Sales 2\\\",\\n            data: 15,\\n            color: tinycolor(config.chart.colorPrimary.toString()).lighten(10),\\n        }, {\\n            label: \\\"Sales 3\\\",\\n            data: 7,\\n            color: tinycolor(config.chart.colorPrimary.toString()),\\n        }, {\\n            label: \\\"Sales 4\\\",\\n            data: 52,\\n            color: tinycolor(config.chart.colorPrimary.toString()).darken(10),\\n        }];\\n\\n        var plotObj = $.plot($(\\\"#flot-pie-chart\\\"), data, {\\n            series: {\\n                pie: {\\n                    show: true\\n                }\\n            },\\n            grid: {\\n                hoverable: true\\n            },\\n            tooltip: true,\\n            tooltipOpts: {\\n                content: \\\"%p.0%, %s\\\", // show percentages, rounding to 2 decimal places\\n                shifts: {\\n                    x: 20,\\n                    y: 0\\n                },\\n                defaultTheme: false\\n            }\\n        });\\n\\n\\n        //live chart example\\n        var container = $(\\\"#flot-line-chart-moving\\\");\\n        container.empty();\\n        // Determine how many data points to keep based on the placeholder's initial size;\\n        // this gives us a nice high-res plot while avoiding more than one point per pixel.\\n\\n        var maximum = container.outerWidth() / 10 || 100;\\n\\n        //\\n\\n        var data = [];\\n\\n        function getRandomData() {\\n\\n            if (data.length) {\\n                data = data.slice(1);\\n            }\\n\\n            while (data.length < maximum) {\\n                var previous = data.length ? data[data.length - 1] : 50;\\n                var y = previous + Math.random() * 10 - 5;\\n                data.push(y < 0 ? 0 : y > 100 ? 100 : y);\\n            }\\n\\n            // zip the generated y values with the x values\\n\\n            var res = [];\\n            for (var i = 0; i < data.length; ++i) {\\n                res.push([i, data[i]])\\n            }\\n\\n            return res;\\n        }\\n\\n        series = [{\\n            data: getRandomData(),\\n            lines: {\\n                fill: true\\n            }\\n        }];\\n\\n\\n        var plot = $.plot(container, series, {\\n            grid: {\\n\\n                color: \\\"#999999\\\",\\n                tickColor: \\\"#D4D4D4\\\",\\n                borderWidth: 0,\\n                minBorderMargin: 20,\\n                labelMargin: 10,\\n                backgroundColor: {\\n                    colors: [\\\"#ffffff\\\", \\\"#ffffff\\\"]\\n                },\\n                margin: {\\n                    top: 8,\\n                    bottom: 20,\\n                    left: 20\\n                },\\n                markings: function (axes) {\\n                    var markings = [];\\n                    var xaxis = axes.xaxis;\\n                    for (var x = Math.floor(xaxis.min); x < xaxis.max; x += xaxis.tickSize * 2) {\\n                        markings.push({\\n                            xaxis: {\\n                                from: x,\\n                                to: x + xaxis.tickSize\\n                            },\\n                            color: \\\"#fff\\\"\\n                        });\\n                    }\\n                    return markings;\\n                }\\n            },\\n            colors: [config.chart.colorPrimary.toString()],\\n            xaxis: {\\n                tickFormatter: function () {\\n                    return \\\"\\\";\\n                }\\n            },\\n            yaxis: {\\n                min: 0,\\n                max: 110\\n            },\\n            legend: {\\n                show: true\\n            }\\n        });\\n\\n        // Update the random dataset at 25FPS for a smoothly-animating chart\\n\\n        setInterval(function updateRandom() {\\n            series[0].data = getRandomData();\\n            plot.setData(series);\\n            plot.draw();\\n        }, 40);\\n\\n\\n        //Flot Multiple Axes Line Chart\\n        var oilpricesFull = [[1167692400000, 61.05], [1167778800000, 58.32], [1167865200000, 57.35], [1167951600000, 56.31], [1168210800000, 55.55], [1168297200000, 55.64], [1168383600000, 54.02], [1168470000000, 51.88], [1168556400000, 52.99], [1168815600000, 52.99], [1168902000000, 51.21], [1168988400000, 52.24], [1169074800000, 50.48], [1169161200000, 51.99], [1169420400000, 51.13], [1169506800000, 55.04], [1169593200000, 55.37], [1169679600000, 54.23], [1169766000000, 55.42], [1170025200000, 54.01], [1170111600000, 56.97], [1170198000000, 58.14], [1170284400000, 58.14], [1170370800000, 59.02], [1170630000000, 58.74], [1170716400000, 58.88], [1170802800000, 57.71], [1170889200000, 59.71], [1170975600000, 59.89], [1171234800000, 57.81], [1171321200000, 59.06], [1171407600000, 58.00], [1171494000000, 57.99], [1171580400000, 59.39], [1171839600000, 59.39], [1171926000000, 58.07], [1172012400000, 60.07], [1172098800000, 61.14], [1172444400000, 61.39], [1172530800000, 61.46], [1172617200000, 61.79], [1172703600000, 62.00], [1172790000000, 60.07], [1173135600000, 60.69], [1173222000000, 61.82], [1173308400000, 60.05], [1173654000000, 58.91], [1173740400000, 57.93], [1173826800000, 58.16], [1173913200000, 57.55], [1173999600000, 57.11], [1174258800000, 56.59], [1174345200000, 59.61], [1174518000000, 61.69], [1174604400000, 62.28], [1174860000000, 62.91], [1174946400000, 62.93], [1175032800000, 64.03], [1175119200000, 66.03], [1175205600000, 65.87], [1175464800000, 64.64], [1175637600000, 64.38], [1175724000000, 64.28], [1175810400000, 64.28], [1176069600000, 61.51], [1176156000000, 61.89], [1176242400000, 62.01], [1176328800000, 63.85], [1176415200000, 63.63], [1176674400000, 63.61], [1176760800000, 63.10], [1176847200000, 63.13], [1176933600000, 61.83], [1177020000000, 63.38], [1177279200000, 64.58], [1177452000000, 65.84], [1177538400000, 65.06], [1177624800000, 66.46], [1177884000000, 64.40], [1178056800000, 63.68], [1178143200000, 63.19], [1178229600000, 61.93], [1178488800000, 61.47], [1178575200000, 61.55], [1178748000000, 61.81], [1178834400000, 62.37], [1179093600000, 62.46], [1179180000000, 63.17], [1179266400000, 62.55], [1179352800000, 64.94], [1179698400000, 66.27], [1179784800000, 65.50], [1179871200000, 65.77], [1179957600000, 64.18], [1180044000000, 65.20], [1180389600000, 63.15], [1180476000000, 63.49], [1180562400000, 65.08], [1180908000000, 66.30], [1180994400000, 65.96], [1181167200000, 66.93], [1181253600000, 65.98], [1181599200000, 65.35], [1181685600000, 66.26], [1181858400000, 68.00], [1182117600000, 69.09], [1182204000000, 69.10], [1182290400000, 68.19], [1182376800000, 68.19], [1182463200000, 69.14], [1182722400000, 68.19], [1182808800000, 67.77], [1182895200000, 68.97], [1182981600000, 69.57], [1183068000000, 70.68], [1183327200000, 71.09], [1183413600000, 70.92], [1183586400000, 71.81], [1183672800000, 72.81], [1183932000000, 72.19], [1184018400000, 72.56], [1184191200000, 72.50], [1184277600000, 74.15], [1184623200000, 75.05], [1184796000000, 75.92], [1184882400000, 75.57], [1185141600000, 74.89], [1185228000000, 73.56], [1185314400000, 75.57], [1185400800000, 74.95], [1185487200000, 76.83], [1185832800000, 78.21], [1185919200000, 76.53], [1186005600000, 76.86], [1186092000000, 76.00], [1186437600000, 71.59], [1186696800000, 71.47], [1186956000000, 71.62], [1187042400000, 71.00], [1187301600000, 71.98], [1187560800000, 71.12], [1187647200000, 69.47], [1187733600000, 69.26], [1187820000000, 69.83], [1187906400000, 71.09], [1188165600000, 71.73], [1188338400000, 73.36], [1188511200000, 74.04], [1188856800000, 76.30], [1189116000000, 77.49], [1189461600000, 78.23], [1189548000000, 79.91], [1189634400000, 80.09], [1189720800000, 79.10], [1189980000000, 80.57], [1190066400000, 81.93], [1190239200000, 83.32], [1190325600000, 81.62], [1190584800000, 80.95], [1190671200000, 79.53], [1190757600000, 80.30], [1190844000000, 82.88], [1190930400000, 81.66], [1191189600000, 80.24], [1191276000000, 80.05], [1191362400000, 79.94], [1191448800000, 81.44], [1191535200000, 81.22], [1191794400000, 79.02], [1191880800000, 80.26], [1191967200000, 80.30], [1192053600000, 83.08], [1192140000000, 83.69], [1192399200000, 86.13], [1192485600000, 87.61], [1192572000000, 87.40], [1192658400000, 89.47], [1192744800000, 88.60], [1193004000000, 87.56], [1193090400000, 87.56], [1193176800000, 87.10], [1193263200000, 91.86], [1193612400000, 93.53], [1193698800000, 94.53], [1193871600000, 95.93], [1194217200000, 93.98], [1194303600000, 96.37], [1194476400000, 95.46], [1194562800000, 96.32], [1195081200000, 93.43], [1195167600000, 95.10], [1195426800000, 94.64], [1195513200000, 95.10], [1196031600000, 97.70], [1196118000000, 94.42], [1196204400000, 90.62], [1196290800000, 91.01], [1196377200000, 88.71], [1196636400000, 88.32], [1196809200000, 90.23], [1196982000000, 88.28], [1197241200000, 87.86], [1197327600000, 90.02], [1197414000000, 92.25], [1197586800000, 90.63], [1197846000000, 90.63], [1197932400000, 90.49], [1198018800000, 91.24], [1198105200000, 91.06], [1198191600000, 90.49], [1198710000000, 96.62], [1198796400000, 96.00], [1199142000000, 99.62], [1199314800000, 99.18], [1199401200000, 95.09], [1199660400000, 96.33], [1199833200000, 95.67], [1200351600000, 91.90], [1200438000000, 90.84], [1200524400000, 90.13], [1200610800000, 90.57], [1200956400000, 89.21], [1201042800000, 86.99], [1201129200000, 89.85], [1201474800000, 90.99], [1201561200000, 91.64], [1201647600000, 92.33], [1201734000000, 91.75], [1202079600000, 90.02], [1202166000000, 88.41], [1202252400000, 87.14], [1202338800000, 88.11], [1202425200000, 91.77], [1202770800000, 92.78], [1202857200000, 93.27], [1202943600000, 95.46], [1203030000000, 95.46], [1203289200000, 101.74], [1203462000000, 98.81], [1203894000000, 100.88], [1204066800000, 99.64], [1204153200000, 102.59], [1204239600000, 101.84], [1204498800000, 99.52], [1204585200000, 99.52], [1204671600000, 104.52], [1204758000000, 105.47], [1204844400000, 105.15], [1205103600000, 108.75], [1205276400000, 109.92], [1205362800000, 110.33], [1205449200000, 110.21], [1205708400000, 105.68], [1205967600000, 101.84], [1206313200000, 100.86], [1206399600000, 101.22], [1206486000000, 105.90], [1206572400000, 107.58], [1206658800000, 105.62], [1206914400000, 101.58], [1207000800000, 100.98], [1207173600000, 103.83], [1207260000000, 106.23], [1207605600000, 108.50], [1207778400000, 110.11], [1207864800000, 110.14], [1208210400000, 113.79], [1208296800000, 114.93], [1208383200000, 114.86], [1208728800000, 117.48], [1208815200000, 118.30], [1208988000000, 116.06], [1209074400000, 118.52], [1209333600000, 118.75], [1209420000000, 113.46], [1209592800000, 112.52], [1210024800000, 121.84], [1210111200000, 123.53], [1210197600000, 123.69], [1210543200000, 124.23], [1210629600000, 125.80], [1210716000000, 126.29], [1211148000000, 127.05], [1211320800000, 129.07], [1211493600000, 132.19], [1211839200000, 128.85], [1212357600000, 127.76], [1212703200000, 138.54], [1212962400000, 136.80], [1213135200000, 136.38], [1213308000000, 134.86], [1213653600000, 134.01], [1213740000000, 136.68], [1213912800000, 135.65], [1214172000000, 134.62], [1214258400000, 134.62], [1214344800000, 134.62], [1214431200000, 139.64], [1214517600000, 140.21], [1214776800000, 140.00], [1214863200000, 140.97], [1214949600000, 143.57], [1215036000000, 145.29], [1215381600000, 141.37], [1215468000000, 136.04], [1215727200000, 146.40], [1215986400000, 145.18], [1216072800000, 138.74], [1216159200000, 134.60], [1216245600000, 129.29], [1216332000000, 130.65], [1216677600000, 127.95], [1216850400000, 127.95], [1217282400000, 122.19], [1217455200000, 124.08], [1217541600000, 125.10], [1217800800000, 121.41], [1217887200000, 119.17], [1217973600000, 118.58], [1218060000000, 120.02], [1218405600000, 114.45], [1218492000000, 113.01], [1218578400000, 116.00], [1218751200000, 113.77], [1219010400000, 112.87], [1219096800000, 114.53], [1219269600000, 114.98], [1219356000000, 114.98], [1219701600000, 116.27], [1219788000000, 118.15], [1219874400000, 115.59], [1219960800000, 115.46], [1220306400000, 109.71], [1220392800000, 109.35], [1220565600000, 106.23], [1220824800000, 106.34]];\\n        var exchangeratesFull = [[1167606000000, 0.7580], [1167692400000, 0.7580], [1167778800000, 0.75470], [1167865200000, 0.75490], [1167951600000, 0.76130], [1168038000000, 0.76550], [1168124400000, 0.76930], [1168210800000, 0.76940], [1168297200000, 0.76880], [1168383600000, 0.76780], [1168470000000, 0.77080], [1168556400000, 0.77270], [1168642800000, 0.77490], [1168729200000, 0.77410], [1168815600000, 0.77410], [1168902000000, 0.77320], [1168988400000, 0.77270], [1169074800000, 0.77370], [1169161200000, 0.77240], [1169247600000, 0.77120], [1169334000000, 0.7720], [1169420400000, 0.77210], [1169506800000, 0.77170], [1169593200000, 0.77040], [1169679600000, 0.7690], [1169766000000, 0.77110], [1169852400000, 0.7740], [1169938800000, 0.77450], [1170025200000, 0.77450], [1170111600000, 0.7740], [1170198000000, 0.77160], [1170284400000, 0.77130], [1170370800000, 0.76780], [1170457200000, 0.76880], [1170543600000, 0.77180], [1170630000000, 0.77180], [1170716400000, 0.77280], [1170802800000, 0.77290], [1170889200000, 0.76980], [1170975600000, 0.76850], [1171062000000, 0.76810], [1171148400000, 0.7690], [1171234800000, 0.7690], [1171321200000, 0.76980], [1171407600000, 0.76990], [1171494000000, 0.76510], [1171580400000, 0.76130], [1171666800000, 0.76160], [1171753200000, 0.76140], [1171839600000, 0.76140], [1171926000000, 0.76070], [1172012400000, 0.76020], [1172098800000, 0.76110], [1172185200000, 0.76220], [1172271600000, 0.76150], [1172358000000, 0.75980], [1172444400000, 0.75980], [1172530800000, 0.75920], [1172617200000, 0.75730], [1172703600000, 0.75660], [1172790000000, 0.75670], [1172876400000, 0.75910], [1172962800000, 0.75820], [1173049200000, 0.75850], [1173135600000, 0.76130], [1173222000000, 0.76310], [1173308400000, 0.76150], [1173394800000, 0.760], [1173481200000, 0.76130], [1173567600000, 0.76270], [1173654000000, 0.76270], [1173740400000, 0.76080], [1173826800000, 0.75830], [1173913200000, 0.75750], [1173999600000, 0.75620], [1174086000000, 0.7520], [1174172400000, 0.75120], [1174258800000, 0.75120], [1174345200000, 0.75170], [1174431600000, 0.7520], [1174518000000, 0.75110], [1174604400000, 0.7480], [1174690800000, 0.75090], [1174777200000, 0.75310], [1174860000000, 0.75310], [1174946400000, 0.75270], [1175032800000, 0.74980], [1175119200000, 0.74930], [1175205600000, 0.75040], [1175292000000, 0.750], [1175378400000, 0.74910], [1175464800000, 0.74910], [1175551200000, 0.74850], [1175637600000, 0.74840], [1175724000000, 0.74920], [1175810400000, 0.74710], [1175896800000, 0.74590], [1175983200000, 0.74770], [1176069600000, 0.74770], [1176156000000, 0.74830], [1176242400000, 0.74580], [1176328800000, 0.74480], [1176415200000, 0.7430], [1176501600000, 0.73990], [1176588000000, 0.73950], [1176674400000, 0.73950], [1176760800000, 0.73780], [1176847200000, 0.73820], [1176933600000, 0.73620], [1177020000000, 0.73550], [1177106400000, 0.73480], [1177192800000, 0.73610], [1177279200000, 0.73610], [1177365600000, 0.73650], [1177452000000, 0.73620], [1177538400000, 0.73310], [1177624800000, 0.73390], [1177711200000, 0.73440], [1177797600000, 0.73270], [1177884000000, 0.73270], [1177970400000, 0.73360], [1178056800000, 0.73330], [1178143200000, 0.73590], [1178229600000, 0.73590], [1178316000000, 0.73720], [1178402400000, 0.7360], [1178488800000, 0.7360], [1178575200000, 0.7350], [1178661600000, 0.73650], [1178748000000, 0.73840], [1178834400000, 0.73950], [1178920800000, 0.74130], [1179007200000, 0.73970], [1179093600000, 0.73960], [1179180000000, 0.73850], [1179266400000, 0.73780], [1179352800000, 0.73660], [1179439200000, 0.740], [1179525600000, 0.74110], [1179612000000, 0.74060], [1179698400000, 0.74050], [1179784800000, 0.74140], [1179871200000, 0.74310], [1179957600000, 0.74310], [1180044000000, 0.74380], [1180130400000, 0.74430], [1180216800000, 0.74430], [1180303200000, 0.74430], [1180389600000, 0.74340], [1180476000000, 0.74290], [1180562400000, 0.74420], [1180648800000, 0.7440], [1180735200000, 0.74390], [1180821600000, 0.74370], [1180908000000, 0.74370], [1180994400000, 0.74290], [1181080800000, 0.74030], [1181167200000, 0.73990], [1181253600000, 0.74180], [1181340000000, 0.74680], [1181426400000, 0.7480], [1181512800000, 0.7480], [1181599200000, 0.7490], [1181685600000, 0.74940], [1181772000000, 0.75220], [1181858400000, 0.75150], [1181944800000, 0.75020], [1182031200000, 0.74720], [1182117600000, 0.74720], [1182204000000, 0.74620], [1182290400000, 0.74550], [1182376800000, 0.74490], [1182463200000, 0.74670], [1182549600000, 0.74580], [1182636000000, 0.74270], [1182722400000, 0.74270], [1182808800000, 0.7430], [1182895200000, 0.74290], [1182981600000, 0.7440], [1183068000000, 0.7430], [1183154400000, 0.74220], [1183240800000, 0.73880], [1183327200000, 0.73880], [1183413600000, 0.73690], [1183500000000, 0.73450], [1183586400000, 0.73450], [1183672800000, 0.73450], [1183759200000, 0.73520], [1183845600000, 0.73410], [1183932000000, 0.73410], [1184018400000, 0.7340], [1184104800000, 0.73240], [1184191200000, 0.72720], [1184277600000, 0.72640], [1184364000000, 0.72550], [1184450400000, 0.72580], [1184536800000, 0.72580], [1184623200000, 0.72560], [1184709600000, 0.72570], [1184796000000, 0.72470], [1184882400000, 0.72430], [1184968800000, 0.72440], [1185055200000, 0.72350], [1185141600000, 0.72350], [1185228000000, 0.72350], [1185314400000, 0.72350], [1185400800000, 0.72620], [1185487200000, 0.72880], [1185573600000, 0.73010], [1185660000000, 0.73370], [1185746400000, 0.73370], [1185832800000, 0.73240], [1185919200000, 0.72970], [1186005600000, 0.73170], [1186092000000, 0.73150], [1186178400000, 0.72880], [1186264800000, 0.72630], [1186351200000, 0.72630], [1186437600000, 0.72420], [1186524000000, 0.72530], [1186610400000, 0.72640], [1186696800000, 0.7270], [1186783200000, 0.73120], [1186869600000, 0.73050], [1186956000000, 0.73050], [1187042400000, 0.73180], [1187128800000, 0.73580], [1187215200000, 0.74090], [1187301600000, 0.74540], [1187388000000, 0.74370], [1187474400000, 0.74240], [1187560800000, 0.74240], [1187647200000, 0.74150], [1187733600000, 0.74190], [1187820000000, 0.74140], [1187906400000, 0.73770], [1187992800000, 0.73550], [1188079200000, 0.73150], [1188165600000, 0.73150], [1188252000000, 0.7320], [1188338400000, 0.73320], [1188424800000, 0.73460], [1188511200000, 0.73280], [1188597600000, 0.73230], [1188684000000, 0.7340], [1188770400000, 0.7340], [1188856800000, 0.73360], [1188943200000, 0.73510], [1189029600000, 0.73460], [1189116000000, 0.73210], [1189202400000, 0.72940], [1189288800000, 0.72660], [1189375200000, 0.72660], [1189461600000, 0.72540], [1189548000000, 0.72420], [1189634400000, 0.72130], [1189720800000, 0.71970], [1189807200000, 0.72090], [1189893600000, 0.7210], [1189980000000, 0.7210], [1190066400000, 0.7210], [1190152800000, 0.72090], [1190239200000, 0.71590], [1190325600000, 0.71330], [1190412000000, 0.71050], [1190498400000, 0.70990], [1190584800000, 0.70990], [1190671200000, 0.70930], [1190757600000, 0.70930], [1190844000000, 0.70760], [1190930400000, 0.7070], [1191016800000, 0.70490], [1191103200000, 0.70120], [1191189600000, 0.70110], [1191276000000, 0.70190], [1191362400000, 0.70460], [1191448800000, 0.70630], [1191535200000, 0.70890], [1191621600000, 0.70770], [1191708000000, 0.70770], [1191794400000, 0.70770], [1191880800000, 0.70910], [1191967200000, 0.71180], [1192053600000, 0.70790], [1192140000000, 0.70530], [1192226400000, 0.7050], [1192312800000, 0.70550], [1192399200000, 0.70550], [1192485600000, 0.70450], [1192572000000, 0.70510], [1192658400000, 0.70510], [1192744800000, 0.70170], [1192831200000, 0.70], [1192917600000, 0.69950], [1193004000000, 0.69940], [1193090400000, 0.70140], [1193176800000, 0.70360], [1193263200000, 0.70210], [1193349600000, 0.70020], [1193436000000, 0.69670], [1193522400000, 0.6950], [1193612400000, 0.6950], [1193698800000, 0.69390], [1193785200000, 0.6940], [1193871600000, 0.69220], [1193958000000, 0.69190], [1194044400000, 0.69140], [1194130800000, 0.68940], [1194217200000, 0.68910], [1194303600000, 0.69040], [1194390000000, 0.6890], [1194476400000, 0.68340], [1194562800000, 0.68230], [1194649200000, 0.68070], [1194735600000, 0.68150], [1194822000000, 0.68150], [1194908400000, 0.68470], [1194994800000, 0.68590], [1195081200000, 0.68220], [1195167600000, 0.68270], [1195254000000, 0.68370], [1195340400000, 0.68230], [1195426800000, 0.68220], [1195513200000, 0.68220], [1195599600000, 0.67920], [1195686000000, 0.67460], [1195772400000, 0.67350], [1195858800000, 0.67310], [1195945200000, 0.67420], [1196031600000, 0.67440], [1196118000000, 0.67390], [1196204400000, 0.67310], [1196290800000, 0.67610], [1196377200000, 0.67610], [1196463600000, 0.67850], [1196550000000, 0.68180], [1196636400000, 0.68360], [1196722800000, 0.68230], [1196809200000, 0.68050], [1196895600000, 0.67930], [1196982000000, 0.68490], [1197068400000, 0.68330], [1197154800000, 0.68250], [1197241200000, 0.68250], [1197327600000, 0.68160], [1197414000000, 0.67990], [1197500400000, 0.68130], [1197586800000, 0.68090], [1197673200000, 0.68680], [1197759600000, 0.69330], [1197846000000, 0.69330], [1197932400000, 0.69450], [1198018800000, 0.69440], [1198105200000, 0.69460], [1198191600000, 0.69640], [1198278000000, 0.69650], [1198364400000, 0.69560], [1198450800000, 0.69560], [1198537200000, 0.6950], [1198623600000, 0.69480], [1198710000000, 0.69280], [1198796400000, 0.68870], [1198882800000, 0.68240], [1198969200000, 0.67940], [1199055600000, 0.67940], [1199142000000, 0.68030], [1199228400000, 0.68550], [1199314800000, 0.68240], [1199401200000, 0.67910], [1199487600000, 0.67830], [1199574000000, 0.67850], [1199660400000, 0.67850], [1199746800000, 0.67970], [1199833200000, 0.680], [1199919600000, 0.68030], [1200006000000, 0.68050], [1200092400000, 0.6760], [1200178800000, 0.6770], [1200265200000, 0.6770], [1200351600000, 0.67360], [1200438000000, 0.67260], [1200524400000, 0.67640], [1200610800000, 0.68210], [1200697200000, 0.68310], [1200783600000, 0.68420], [1200870000000, 0.68420], [1200956400000, 0.68870], [1201042800000, 0.69030], [1201129200000, 0.68480], [1201215600000, 0.68240], [1201302000000, 0.67880], [1201388400000, 0.68140], [1201474800000, 0.68140], [1201561200000, 0.67970], [1201647600000, 0.67690], [1201734000000, 0.67650], [1201820400000, 0.67330], [1201906800000, 0.67290], [1201993200000, 0.67580], [1202079600000, 0.67580], [1202166000000, 0.6750], [1202252400000, 0.6780], [1202338800000, 0.68330], [1202425200000, 0.68560], [1202511600000, 0.69030], [1202598000000, 0.68960], [1202684400000, 0.68960], [1202770800000, 0.68820], [1202857200000, 0.68790], [1202943600000, 0.68620], [1203030000000, 0.68520], [1203116400000, 0.68230], [1203202800000, 0.68130], [1203289200000, 0.68130], [1203375600000, 0.68220], [1203462000000, 0.68020], [1203548400000, 0.68020], [1203634800000, 0.67840], [1203721200000, 0.67480], [1203807600000, 0.67470], [1203894000000, 0.67470], [1203980400000, 0.67480], [1204066800000, 0.67330], [1204153200000, 0.6650], [1204239600000, 0.66110], [1204326000000, 0.65830], [1204412400000, 0.6590], [1204498800000, 0.6590], [1204585200000, 0.65810], [1204671600000, 0.65780], [1204758000000, 0.65740], [1204844400000, 0.65320], [1204930800000, 0.65020], [1205017200000, 0.65140], [1205103600000, 0.65140], [1205190000000, 0.65070], [1205276400000, 0.6510], [1205362800000, 0.64890], [1205449200000, 0.64240], [1205535600000, 0.64060], [1205622000000, 0.63820], [1205708400000, 0.63820], [1205794800000, 0.63410], [1205881200000, 0.63440], [1205967600000, 0.63780], [1206054000000, 0.64390], [1206140400000, 0.64780], [1206226800000, 0.64810], [1206313200000, 0.64810], [1206399600000, 0.64940], [1206486000000, 0.64380], [1206572400000, 0.63770], [1206658800000, 0.63290], [1206745200000, 0.63360], [1206831600000, 0.63330], [1206914400000, 0.63330], [1207000800000, 0.6330], [1207087200000, 0.63710], [1207173600000, 0.64030], [1207260000000, 0.63960], [1207346400000, 0.63640], [1207432800000, 0.63560], [1207519200000, 0.63560], [1207605600000, 0.63680], [1207692000000, 0.63570], [1207778400000, 0.63540], [1207864800000, 0.6320], [1207951200000, 0.63320], [1208037600000, 0.63280], [1208124000000, 0.63310], [1208210400000, 0.63420], [1208296800000, 0.63210], [1208383200000, 0.63020], [1208469600000, 0.62780], [1208556000000, 0.63080], [1208642400000, 0.63240], [1208728800000, 0.63240], [1208815200000, 0.63070], [1208901600000, 0.62770], [1208988000000, 0.62690], [1209074400000, 0.63350], [1209160800000, 0.63920], [1209247200000, 0.640], [1209333600000, 0.64010], [1209420000000, 0.63960], [1209506400000, 0.64070], [1209592800000, 0.64230], [1209679200000, 0.64290], [1209765600000, 0.64720], [1209852000000, 0.64850], [1209938400000, 0.64860], [1210024800000, 0.64670], [1210111200000, 0.64440], [1210197600000, 0.64670], [1210284000000, 0.65090], [1210370400000, 0.64780], [1210456800000, 0.64610], [1210543200000, 0.64610], [1210629600000, 0.64680], [1210716000000, 0.64490], [1210802400000, 0.6470], [1210888800000, 0.64610], [1210975200000, 0.64520], [1211061600000, 0.64220], [1211148000000, 0.64220], [1211234400000, 0.64250], [1211320800000, 0.64140], [1211407200000, 0.63660], [1211493600000, 0.63460], [1211580000000, 0.6350], [1211666400000, 0.63460], [1211752800000, 0.63460], [1211839200000, 0.63430], [1211925600000, 0.63460], [1212012000000, 0.63790], [1212098400000, 0.64160], [1212184800000, 0.64420], [1212271200000, 0.64310], [1212357600000, 0.64310], [1212444000000, 0.64350], [1212530400000, 0.6440], [1212616800000, 0.64730], [1212703200000, 0.64690], [1212789600000, 0.63860], [1212876000000, 0.63560], [1212962400000, 0.6340], [1213048800000, 0.63460], [1213135200000, 0.6430], [1213221600000, 0.64520], [1213308000000, 0.64670], [1213394400000, 0.65060], [1213480800000, 0.65040], [1213567200000, 0.65030], [1213653600000, 0.64810], [1213740000000, 0.64510], [1213826400000, 0.6450], [1213912800000, 0.64410], [1213999200000, 0.64140], [1214085600000, 0.64090], [1214172000000, 0.64090], [1214258400000, 0.64280], [1214344800000, 0.64310], [1214431200000, 0.64180], [1214517600000, 0.63710], [1214604000000, 0.63490], [1214690400000, 0.63330], [1214776800000, 0.63340], [1214863200000, 0.63380], [1214949600000, 0.63420], [1215036000000, 0.6320], [1215122400000, 0.63180], [1215208800000, 0.6370], [1215295200000, 0.63680], [1215381600000, 0.63680], [1215468000000, 0.63830], [1215554400000, 0.63710], [1215640800000, 0.63710], [1215727200000, 0.63550], [1215813600000, 0.6320], [1215900000000, 0.62770], [1215986400000, 0.62760], [1216072800000, 0.62910], [1216159200000, 0.62740], [1216245600000, 0.62930], [1216332000000, 0.63110], [1216418400000, 0.6310], [1216504800000, 0.63120], [1216591200000, 0.63120], [1216677600000, 0.63040], [1216764000000, 0.62940], [1216850400000, 0.63480], [1216936800000, 0.63780], [1217023200000, 0.63680], [1217109600000, 0.63680], [1217196000000, 0.63680], [1217282400000, 0.6360], [1217368800000, 0.6370], [1217455200000, 0.64180], [1217541600000, 0.64110], [1217628000000, 0.64350], [1217714400000, 0.64270], [1217800800000, 0.64270], [1217887200000, 0.64190], [1217973600000, 0.64460], [1218060000000, 0.64680], [1218146400000, 0.64870], [1218232800000, 0.65940], [1218319200000, 0.66660], [1218405600000, 0.66660], [1218492000000, 0.66780], [1218578400000, 0.67120], [1218664800000, 0.67050], [1218751200000, 0.67180], [1218837600000, 0.67840], [1218924000000, 0.68110], [1219010400000, 0.68110], [1219096800000, 0.67940], [1219183200000, 0.68040], [1219269600000, 0.67810], [1219356000000, 0.67560], [1219442400000, 0.67350], [1219528800000, 0.67630], [1219615200000, 0.67620], [1219701600000, 0.67770], [1219788000000, 0.68150], [1219874400000, 0.68020], [1219960800000, 0.6780], [1220047200000, 0.67960], [1220133600000, 0.68170], [1220220000000, 0.68170], [1220306400000, 0.68320], [1220392800000, 0.68770], [1220479200000, 0.69120], [1220565600000, 0.69140], [1220652000000, 0.70090], [1220738400000, 0.70120], [1220824800000, 0.7010], [1220911200000, 0.70050]\\n        ];\\n\\n        oilprices = [];\\n        exchangerates = [];\\n\\n\\n        oilpricesFull.map(function (item, index) {\\n            if (index % 8 === 0) {\\n                oilprices.push(item);\\n            }\\n        });\\n\\n        exchangeratesFull.map(function (item, index) {\\n            if (index % 8 === 0) {\\n                exchangerates.push(item);\\n            }\\n        });\\n\\n\\n        function euroFormatter(v, axis) {\\n            return v.toFixed(axis.tickDecimals) + \\\"€\\\";\\n        }\\n\\n        function doPlot(position) {\\n            $.plot($(\\\"#flot-line-chart-multi\\\"), [{\\n                data: oilprices,\\n                label: \\\"Oil price ($)\\\"\\n            }, {\\n                data: exchangerates,\\n                label: \\\"USD/EUR exchange rate\\\",\\n                yaxis: 2\\n            }], {\\n                xaxes: [{\\n                    mode: 'time'\\n                }],\\n                yaxes: [{\\n                    min: 0\\n                }, {\\n                    // align if we are to the right\\n                    alignTicksWithAxis: position == \\\"right\\\" ? 1 : null,\\n                    position: position,\\n                    tickFormatter: euroFormatter\\n                }],\\n                legend: {\\n                    position: 'sw'\\n                },\\n                colors: [config.chart.colorPrimary.toString()],\\n                grid: {\\n                    color: \\\"#999999\\\",\\n                    hoverable: true,\\n                    clickable: true,\\n                    tickColor: \\\"#D4D4D4\\\",\\n                    borderWidth: 0,\\n                    hoverable: true //IMPORTANT! this is needed for tooltip to work,\\n\\n                },\\n                tooltip: true,\\n                tooltipOpts: {\\n                    content: \\\"%s for %x was %y\\\",\\n                    xDateFormat: \\\"%y-%m-%d\\\",\\n\\n                    onHover: function (flotItem, $tooltipEl) {\\n                        // console.log(flotItem, $tooltipEl);\\n                    }\\n                }\\n\\n            });\\n        }\\n\\n        doPlot(\\\"right\\\");\\n\\n        $(\\\"button\\\").click(function () {\\n            doPlot($(this).text());\\n        });\\n\\n    }\\n\\n    drawFlotCharts();\\n\\n    $(document).on(\\\"themechange\\\", function () {\\n        drawFlotCharts();\\n    });\\n\\n});\\n$(function () {\\n\\n    if (!$('#morris-one-line-chart').length) {\\n        return false;\\n    }\\n\\n    function drawMorrisCharts() {\\n\\n        $('#morris-one-line-chart').empty();\\n\\n        Morris.Line({\\n            element: 'morris-one-line-chart',\\n            data: [\\n                {year: '2008', value: 5},\\n                {year: '2009', value: 10},\\n                {year: '2010', value: 8},\\n                {year: '2011', value: 22},\\n                {year: '2012', value: 8},\\n                {year: '2014', value: 10},\\n                {year: '2015', value: 5}\\n            ],\\n            xkey: 'year',\\n            ykeys: ['value'],\\n            resize: true,\\n            lineWidth: 4,\\n            labels: ['Value'],\\n            lineColors: [config.chart.colorPrimary.toString()],\\n            pointSize: 5,\\n        });\\n\\n        $('#morris-area-chart').empty();\\n\\n        Morris.Area({\\n            element: 'morris-area-chart',\\n            data: [{period: '2010 Q1', iphone: 2666, ipad: null, itouch: 2647},\\n                {period: '2010 Q2', iphone: 2778, ipad: 2294, itouch: 2441},\\n                {period: '2010 Q3', iphone: 4912, ipad: 1969, itouch: 2501},\\n                {period: '2010 Q4', iphone: 3767, ipad: 3597, itouch: 5689},\\n                {period: '2011 Q1', iphone: 6810, ipad: 1914, itouch: 2293},\\n                {period: '2011 Q2', iphone: 5670, ipad: 4293, itouch: 1881},\\n                {period: '2011 Q3', iphone: 4820, ipad: 3795, itouch: 1588},\\n                {period: '2011 Q4', iphone: 15073, ipad: 5967, itouch: 5175},\\n                {period: '2012 Q1', iphone: 10687, ipad: 4460, itouch: 2028},\\n                {period: '2012 Q2', iphone: 8432, ipad: 5713, itouch: 1791}],\\n            xkey: 'period',\\n            ykeys: ['iphone', 'ipad', 'itouch'],\\n            labels: ['iPhone', 'iPad', 'iPod Touch'],\\n            pointSize: 2,\\n            hideHover: 'auto',\\n            resize: true,\\n            lineColors: [\\n                tinycolor(config.chart.colorPrimary.toString()).lighten(10).toString(),\\n                tinycolor(config.chart.colorPrimary.toString()).darken(10).toString(),\\n                config.chart.colorPrimary.toString()\\n            ],\\n            lineWidth: 2,\\n            pointSize: 1,\\n        });\\n\\n        $('#morris-donut-chart').empty();\\n\\n        Morris.Donut({\\n            element: 'morris-donut-chart',\\n            data: [{label: \\\"Download Sales\\\", value: 12},\\n                {label: \\\"In-Store Sales\\\", value: 30},\\n                {label: \\\"Mail-Order Sales\\\", value: 20}],\\n            resize: true,\\n            colors: [\\n                tinycolor(config.chart.colorPrimary.toString()).lighten(10).toString(),\\n                tinycolor(config.chart.colorPrimary.toString()).darken(10).toString(),\\n                config.chart.colorPrimary.toString()\\n            ],\\n        });\\n\\n        $('#morris-bar-chart').empty();\\n\\n        Morris.Bar({\\n            element: 'morris-bar-chart',\\n            data: [{y: '2006', a: 60, b: 50},\\n                {y: '2007', a: 75, b: 65},\\n                {y: '2008', a: 50, b: 40},\\n                {y: '2009', a: 75, b: 65},\\n                {y: '2010', a: 50, b: 40},\\n                {y: '2011', a: 75, b: 65},\\n                {y: '2012', a: 100, b: 90}],\\n            xkey: 'y',\\n            ykeys: ['a', 'b'],\\n            labels: ['Series A', 'Series B'],\\n            hideHover: 'auto',\\n            resize: true,\\n            barColors: [\\n                config.chart.colorPrimary.toString(),\\n                tinycolor(config.chart.colorPrimary.toString()).darken(10).toString()\\n            ],\\n        });\\n\\n        $('#morris-line-chart').empty();\\n\\n        Morris.Line({\\n            element: 'morris-line-chart',\\n            data: [{y: '2006', a: 100, b: 90},\\n                {y: '2007', a: 75, b: 65},\\n                {y: '2008', a: 50, b: 40},\\n                {y: '2009', a: 75, b: 65},\\n                {y: '2010', a: 50, b: 40},\\n                {y: '2011', a: 75, b: 65},\\n                {y: '2012', a: 100, b: 90}],\\n            xkey: 'y',\\n            ykeys: ['a', 'b'],\\n            labels: ['Series A', 'Series B'],\\n            hideHover: 'auto',\\n            resize: true,\\n            lineColors: [\\n                config.chart.colorPrimary.toString(),\\n                tinycolor(config.chart.colorPrimary.toString()).darken(10).toString()\\n            ],\\n        });\\n    }\\n\\n    drawMorrisCharts();\\n\\n    $(document).on(\\\"themechange\\\", function () {\\n        drawMorrisCharts();\\n    });\\n});\\n//LoginForm validation\\n$(function () {\\n    if (!$('.form-control').length) {\\n        return false;\\n    }\\n\\n    $('.form-control').focus(function () {\\n        $(this).siblings('.input-group-addon').addClass('focus');\\n    });\\n\\n    $('.form-control').blur(function () {\\n        $(this).siblings('.input-group-addon').removeClass('focus');\\n    });\\n});\\n$(function () {\\n\\n    // set sortable options\\n    $('.images-container').sortable({\\n        animation: 150,\\n        handle: \\\".control-btn.move\\\",\\n        draggable: \\\".image-container\\\",\\n        onMove: function (evt) {\\n            var $relatedElem = $(evt.related);\\n\\n            if ($relatedElem.hasClass('add-image')) {\\n                return false;\\n            }\\n        }\\n    });\\n\\n\\n    $controlsButtons = $('.controls');\\n\\n    $controlsButtonsStar = $controlsButtons.find('.star');\\n    $controlsButtonsRemove = $controlsButtons.find('.remove');\\n\\n    $controlsButtonsStar.on('click', function (e) {\\n        e.preventDefault();\\n\\n        $controlsButtonsStar.removeClass('active');\\n        $controlsButtonsStar.parents('.image-container').removeClass('main');\\n\\n        $(this).addClass('active');\\n\\n        $(this).parents('.image-container').addClass('main');\\n    })\\n\\n})\\n$(function () {\\n\\n    if (!$('#select-all-items').length) {\\n        return false;\\n    }\\n\\n\\n    $('#select-all-items').on('change', function () {\\n        var $this = $(this).children(':checkbox').get(0);\\n\\n        $(this).parents('li')\\n            .siblings()\\n            .find(':checkbox')\\n            .prop('checked', $this.checked)\\n            .val($this.checked)\\n            .change();\\n    });\\n\\n\\n    function drawItemsListSparklines() {\\n        $(\\\".items-list-page .sparkline\\\").each(function () {\\n            var type = $(this).data('type');\\n\\n            // Generate random data\\n            var data = [];\\n            for (var i = 0; i < 17; i++) {\\n                data.push(Math.round(100 * Math.random()));\\n            }\\n\\n            $(this).sparkline(data, {\\n                barColor: config.chart.colorPrimary.toString(),\\n                height: $(this).height(),\\n                type: type\\n            });\\n        });\\n    }\\n\\n    drawItemsListSparklines();\\n\\n    $(document).on(\\\"themechange\\\", function () {\\n        drawItemsListSparklines();\\n    });\\n\\n});\\n$(function () {\\n\\n    $(\\\".wyswyg\\\").each(function () {\\n\\n        var $toolbar = $(this).find(\\\".toolbar\\\");\\n        var $editor = $(this).find(\\\".editor\\\");\\n\\n\\n        var editor = new Quill($editor.get(0), {\\n            theme: 'snow'\\n        });\\n\\n        editor.addModule('toolbar', {\\n            container: $toolbar.get(0)     // Selector for toolbar container\\n        });\\n\\n\\n    });\\n\\n});\\n$(function () {\\n\\n    $('#sidebar-menu, #customize-menu').metisMenu({\\n        activeClass: 'open'\\n    });\\n\\n\\n    $('#sidebar-collapse-btn').on('click', function (event) {\\n        event.preventDefault();\\n\\n        $(\\\"#app\\\").toggleClass(\\\"sidebar-open\\\");\\n    });\\n\\n    $(\\\"#sidebar-overlay\\\").on('click', function () {\\n        $(\\\"#app\\\").removeClass(\\\"sidebar-open\\\");\\n    });\\n\\n});\\n$(function () {\\n    $('.nav-profile > li > a').on('click', function () {\\n        var $el = $(this).next();\\n\\n        animate({\\n            name: 'flipInX',\\n            selector: $el\\n        });\\n    });\\n})\\nvar modalMedia = {\\n    $el: $(\\\"#modal-media\\\"),\\n    result: {},\\n    options: {},\\n    open: function (options) {\\n        options = options || {};\\n        this.options = options;\\n\\n\\n        this.$el.modal('show');\\n    },\\n    close: function () {\\n        if ($.isFunction(this.options.beforeClose)) {\\n            this.options.beforeClose(this.result);\\n        }\\n\\n        this.$el.modal('hide');\\n\\n        if ($.isFunction(this.options.afterClose)) {\\n            this.options.beforeClose(this.result);\\n        }\\n    }\\n};\\n$(function () {\\n\\n    // Local storage settings\\n    var themeSettings = getThemeSettings();\\n\\n    // Elements\\n\\n    var $app = $('#app');\\n    var $styleLink = $('#theme-style');\\n    var $customizeMenu = $('#customize-menu');\\n\\n    // Color switcher\\n    var $customizeMenuColorBtns = $customizeMenu.find('.color-item');\\n\\n    // Position switchers\\n    var $customizeMenuRadioBtns = $customizeMenu.find('.radio');\\n\\n\\n    // /////////////////////////////////////////////////\\n\\n    // Initial state\\n\\n    // On setting event, set corresponding options\\n\\n    // Update customize view based on options\\n\\n    // Update theme based on options\\n\\n    /************************************************\\n     *                Initial State\\n     *************************************************/\\n\\n    setThemeSettings();\\n\\n    /************************************************\\n     *                    Events\\n     *************************************************/\\n\\n    // set theme type\\n    $customizeMenuColorBtns.on('click', function () {\\n        themeSettings.themeName = $(this).data('theme');\\n\\n        setThemeSettings();\\n    });\\n\\n\\n    $customizeMenuRadioBtns.on('click', function () {\\n\\n        var optionName = $(this).prop('name');\\n        var value = $(this).val();\\n\\n        themeSettings[optionName] = value;\\n\\n        setThemeSettings();\\n    });\\n\\n    function setThemeSettings() {\\n        setThemeState()\\n            .delay(config.delayTime)\\n            .queue(function (next) {\\n\\n                setThemeColor();\\n                setThemeControlsState();\\n                saveThemeSettings();\\n\\n                $(document).trigger(\\\"themechange\\\");\\n\\n                next();\\n            });\\n    }\\n\\n    /************************************************\\n     *            Update theme based on options\\n     *************************************************/\\n\\n    function setThemeState() {\\n        // set theme type\\n        if (themeSettings.themeName) {\\n            $styleLink.attr('href', 'css/app-' + themeSettings.themeName + '.css');\\n        }\\n        else {\\n            $styleLink.attr('href', 'css/app.css');\\n        }\\n\\n        // App classes\\n        $app.removeClass('header-fixed footer-fixed sidebar-fixed');\\n\\n        // set header\\n        $app.addClass(themeSettings.headerPosition);\\n\\n        // set footer\\n        $app.addClass(themeSettings.footerPosition);\\n\\n        // set footer\\n        $app.addClass(themeSettings.sidebarPosition);\\n\\n        return $app;\\n    }\\n\\n    /************************************************\\n     *            Update theme controls based on options\\n     *************************************************/\\n\\n    function setThemeControlsState() {\\n        // set color switcher\\n        $customizeMenuColorBtns.each(function () {\\n            if ($(this).data('theme') === themeSettings.themeName) {\\n                $(this).addClass('active');\\n            }\\n            else {\\n                $(this).removeClass('active');\\n            }\\n        });\\n\\n        // set radio buttons\\n        $customizeMenuRadioBtns.each(function () {\\n            var name = $(this).prop('name');\\n            var value = $(this).val();\\n\\n            if (themeSettings[name] === value) {\\n                $(this).prop(\\\"checked\\\", true);\\n            }\\n            else {\\n                $(this).prop(\\\"checked\\\", false);\\n            }\\n        });\\n    }\\n\\n    /************************************************\\n     *            Update theme color\\n     *************************************************/\\n    function setThemeColor() {\\n        config.chart.colorPrimary = tinycolor($ref.find(\\\".chart .color-primary\\\").css(\\\"color\\\"));\\n        config.chart.colorSecondary = tinycolor($ref.find(\\\".chart .color-secondary\\\").css(\\\"color\\\"));\\n    }\\n\\n    /************************************************\\n     *                Storage Functions\\n     *************************************************/\\n\\n    function getThemeSettings() {\\n        var settings = (localStorage.getItem('themeSettings')) ? JSON.parse(localStorage.getItem('themeSettings')) : {};\\n\\n        settings.headerPosition = settings.headerPosition || '';\\n        settings.sidebarPosition = settings.sidebarPosition || '';\\n        settings.footerPosition = settings.footerPosition || '';\\n\\n        return settings;\\n    }\\n\\n    function saveThemeSettings() {\\n        localStorage.setItem('themeSettings', JSON.stringify(themeSettings));\\n    }\\n\\n});\\n$(function () {\\n\\n    $(\\\"body\\\").addClass(\\\"loaded\\\");\\n\\n});\\n\\n\\n/***********************************************\\n *        NProgress Settings\\n ***********************************************/\\n\\n// start load bar\\nNProgress.start();\\n\\n// end loading bar \\nNProgress.done();\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/source-map-loader!./lib/modular-admin/app.js\n// module id = 491\n// module chunks = 2","module.exports = \"/*!\\n * jQuery JavaScript Library v2.1.4\\n * http://jquery.com/\\n *\\n * Includes Sizzle.js\\n * http://sizzlejs.com/\\n *\\n * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors\\n * Released under the MIT license\\n * http://jquery.org/license\\n *\\n * Date: 2015-04-28T16:01Z\\n */\\n\\n(function (global, factory) {\\n\\n    if (typeof module === \\\"object\\\" && typeof module.exports === \\\"object\\\") {\\n        // For CommonJS and CommonJS-like environments where a proper `window`\\n        // is present, execute the factory and get jQuery.\\n        // For environments that do not have a `window` with a `document`\\n        // (such as Node.js), expose a factory as module.exports.\\n        // This accentuates the need for the creation of a real `window`.\\n        // e.g. var jQuery = require(\\\"jquery\\\")(window);\\n        // See ticket #14549 for more info.\\n        module.exports = global.document ?\\n            factory(global, true) :\\n            function (w) {\\n                if (!w.document) {\\n                    throw new Error(\\\"jQuery requires a window with a document\\\");\\n                }\\n                return factory(w);\\n            };\\n    } else {\\n        factory(global);\\n    }\\n\\n// Pass this if window is not defined yet\\n}(typeof window !== \\\"undefined\\\" ? window : this, function (window, noGlobal) {\\n\\n// Support: Firefox 18+\\n// Can't be in strict mode, several libs including ASP.NET trace\\n// the stack via arguments.caller.callee and Firefox dies if\\n// you try to trace through \\\"use strict\\\" call chains. (#13335)\\n//\\n\\n    var arr = [];\\n\\n    var slice = arr.slice;\\n\\n    var concat = arr.concat;\\n\\n    var push = arr.push;\\n\\n    var indexOf = arr.indexOf;\\n\\n    var class2type = {};\\n\\n    var toString = class2type.toString;\\n\\n    var hasOwn = class2type.hasOwnProperty;\\n\\n    var support = {};\\n\\n\\n    var\\n        // Use the correct document accordingly with window argument (sandbox)\\n        document = window.document,\\n\\n        version = \\\"2.1.4\\\",\\n\\n        // Define a local copy of jQuery\\n        jQuery = function (selector, context) {\\n            // The jQuery object is actually just the init constructor 'enhanced'\\n            // Need init if jQuery is called (just allow error to be thrown if not included)\\n            return new jQuery.fn.init(selector, context);\\n        },\\n\\n        // Support: Android<4.1\\n        // Make sure we trim BOM and NBSP\\n        rtrim = /^[\\\\s\\\\uFEFF\\\\xA0]+|[\\\\s\\\\uFEFF\\\\xA0]+$/g,\\n\\n        // Matches dashed string for camelizing\\n        rmsPrefix = /^-ms-/,\\n        rdashAlpha = /-([\\\\da-z])/gi,\\n\\n        // Used by jQuery.camelCase as callback to replace()\\n        fcamelCase = function (all, letter) {\\n            return letter.toUpperCase();\\n        };\\n\\n    jQuery.fn = jQuery.prototype = {\\n        // The current version of jQuery being used\\n        jquery: version,\\n\\n        constructor: jQuery,\\n\\n        // Start with an empty selector\\n        selector: \\\"\\\",\\n\\n        // The default length of a jQuery object is 0\\n        length: 0,\\n\\n        toArray: function () {\\n            return slice.call(this);\\n        },\\n\\n        // Get the Nth element in the matched element set OR\\n        // Get the whole matched element set as a clean array\\n        get: function (num) {\\n            return num != null ?\\n\\n                // Return just the one element from the set\\n                ( num < 0 ? this[num + this.length] : this[num] ) :\\n\\n                // Return all the elements in a clean array\\n                slice.call(this);\\n        },\\n\\n        // Take an array of elements and push it onto the stack\\n        // (returning the new matched element set)\\n        pushStack: function (elems) {\\n\\n            // Build a new jQuery matched element set\\n            var ret = jQuery.merge(this.constructor(), elems);\\n\\n            // Add the old object onto the stack (as a reference)\\n            ret.prevObject = this;\\n            ret.context = this.context;\\n\\n            // Return the newly-formed element set\\n            return ret;\\n        },\\n\\n        // Execute a callback for every element in the matched set.\\n        // (You can seed the arguments with an array of args, but this is\\n        // only used internally.)\\n        each: function (callback, args) {\\n            return jQuery.each(this, callback, args);\\n        },\\n\\n        map: function (callback) {\\n            return this.pushStack(jQuery.map(this, function (elem, i) {\\n                return callback.call(elem, i, elem);\\n            }));\\n        },\\n\\n        slice: function () {\\n            return this.pushStack(slice.apply(this, arguments));\\n        },\\n\\n        first: function () {\\n            return this.eq(0);\\n        },\\n\\n        last: function () {\\n            return this.eq(-1);\\n        },\\n\\n        eq: function (i) {\\n            var len = this.length,\\n                j = +i + ( i < 0 ? len : 0 );\\n            return this.pushStack(j >= 0 && j < len ? [this[j]] : []);\\n        },\\n\\n        end: function () {\\n            return this.prevObject || this.constructor(null);\\n        },\\n\\n        // For internal use only.\\n        // Behaves like an Array's method, not like a jQuery method.\\n        push: push,\\n        sort: arr.sort,\\n        splice: arr.splice\\n    };\\n\\n    jQuery.extend = jQuery.fn.extend = function () {\\n        var options, name, src, copy, copyIsArray, clone,\\n            target = arguments[0] || {},\\n            i = 1,\\n            length = arguments.length,\\n            deep = false;\\n\\n        // Handle a deep copy situation\\n        if (typeof target === \\\"boolean\\\") {\\n            deep = target;\\n\\n            // Skip the boolean and the target\\n            target = arguments[i] || {};\\n            i++;\\n        }\\n\\n        // Handle case when target is a string or something (possible in deep copy)\\n        if (typeof target !== \\\"object\\\" && !jQuery.isFunction(target)) {\\n            target = {};\\n        }\\n\\n        // Extend jQuery itself if only one argument is passed\\n        if (i === length) {\\n            target = this;\\n            i--;\\n        }\\n\\n        for (; i < length; i++) {\\n            // Only deal with non-null/undefined values\\n            if ((options = arguments[i]) != null) {\\n                // Extend the base object\\n                for (name in options) {\\n                    src = target[name];\\n                    copy = options[name];\\n\\n                    // Prevent never-ending loop\\n                    if (target === copy) {\\n                        continue;\\n                    }\\n\\n                    // Recurse if we're merging plain objects or arrays\\n                    if (deep && copy && ( jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)) )) {\\n                        if (copyIsArray) {\\n                            copyIsArray = false;\\n                            clone = src && jQuery.isArray(src) ? src : [];\\n\\n                        } else {\\n                            clone = src && jQuery.isPlainObject(src) ? src : {};\\n                        }\\n\\n                        // Never move original objects, clone them\\n                        target[name] = jQuery.extend(deep, clone, copy);\\n\\n                        // Don't bring in undefined values\\n                    } else if (copy !== undefined) {\\n                        target[name] = copy;\\n                    }\\n                }\\n            }\\n        }\\n\\n        // Return the modified object\\n        return target;\\n    };\\n\\n    jQuery.extend({\\n        // Unique for each copy of jQuery on the page\\n        expando: \\\"jQuery\\\" + ( version + Math.random() ).replace(/\\\\D/g, \\\"\\\"),\\n\\n        // Assume jQuery is ready without the ready module\\n        isReady: true,\\n\\n        error: function (msg) {\\n            throw new Error(msg);\\n        },\\n\\n        noop: function () {\\n        },\\n\\n        isFunction: function (obj) {\\n            return jQuery.type(obj) === \\\"function\\\";\\n        },\\n\\n        isArray: Array.isArray,\\n\\n        isWindow: function (obj) {\\n            return obj != null && obj === obj.window;\\n        },\\n\\n        isNumeric: function (obj) {\\n            // parseFloat NaNs numeric-cast false positives (null|true|false|\\\"\\\")\\n            // ...but misinterprets leading-number strings, particularly hex literals (\\\"0x...\\\")\\n            // subtraction forces infinities to NaN\\n            // adding 1 corrects loss of precision from parseFloat (#15100)\\n            return !jQuery.isArray(obj) && (obj - parseFloat(obj) + 1) >= 0;\\n        },\\n\\n        isPlainObject: function (obj) {\\n            // Not plain objects:\\n            // - Any object or value whose internal [[Class]] property is not \\\"[object Object]\\\"\\n            // - DOM nodes\\n            // - window\\n            if (jQuery.type(obj) !== \\\"object\\\" || obj.nodeType || jQuery.isWindow(obj)) {\\n                return false;\\n            }\\n\\n            if (obj.constructor && !hasOwn.call(obj.constructor.prototype, \\\"isPrototypeOf\\\")) {\\n                return false;\\n            }\\n\\n            // If the function hasn't returned already, we're confident that\\n            // |obj| is a plain object, created by {} or constructed with new Object\\n            return true;\\n        },\\n\\n        isEmptyObject: function (obj) {\\n            var name;\\n            for (name in obj) {\\n                return false;\\n            }\\n            return true;\\n        },\\n\\n        type: function (obj) {\\n            if (obj == null) {\\n                return obj + \\\"\\\";\\n            }\\n            // Support: Android<4.0, iOS<6 (functionish RegExp)\\n            return typeof obj === \\\"object\\\" || typeof obj === \\\"function\\\" ?\\n                class2type[toString.call(obj)] || \\\"object\\\" :\\n                typeof obj;\\n        },\\n\\n        // Evaluates a script in a global context\\n        globalEval: function (code) {\\n            var script,\\n                indirect = eval;\\n\\n            code = jQuery.trim(code);\\n\\n            if (code) {\\n                // If the code includes a valid, prologue position\\n                // strict mode pragma, execute code by injecting a\\n                // script tag into the document.\\n                if (code.indexOf(\\\"use strict\\\") === 1) {\\n                    script = document.createElement(\\\"script\\\");\\n                    script.text = code;\\n                    document.head.appendChild(script).parentNode.removeChild(script);\\n                } else {\\n                    // Otherwise, avoid the DOM node creation, insertion\\n                    // and removal by using an indirect global eval\\n                    indirect(code);\\n                }\\n            }\\n        },\\n\\n        // Convert dashed to camelCase; used by the css and data modules\\n        // Support: IE9-11+\\n        // Microsoft forgot to hump their vendor prefix (#9572)\\n        camelCase: function (string) {\\n            return string.replace(rmsPrefix, \\\"ms-\\\").replace(rdashAlpha, fcamelCase);\\n        },\\n\\n        nodeName: function (elem, name) {\\n            return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();\\n        },\\n\\n        // args is for internal usage only\\n        each: function (obj, callback, args) {\\n            var value,\\n                i = 0,\\n                length = obj.length,\\n                isArray = isArraylike(obj);\\n\\n            if (args) {\\n                if (isArray) {\\n                    for (; i < length; i++) {\\n                        value = callback.apply(obj[i], args);\\n\\n                        if (value === false) {\\n                            break;\\n                        }\\n                    }\\n                } else {\\n                    for (i in obj) {\\n                        value = callback.apply(obj[i], args);\\n\\n                        if (value === false) {\\n                            break;\\n                        }\\n                    }\\n                }\\n\\n                // A special, fast, case for the most common use of each\\n            } else {\\n                if (isArray) {\\n                    for (; i < length; i++) {\\n                        value = callback.call(obj[i], i, obj[i]);\\n\\n                        if (value === false) {\\n                            break;\\n                        }\\n                    }\\n                } else {\\n                    for (i in obj) {\\n                        value = callback.call(obj[i], i, obj[i]);\\n\\n                        if (value === false) {\\n                            break;\\n                        }\\n                    }\\n                }\\n            }\\n\\n            return obj;\\n        },\\n\\n        // Support: Android<4.1\\n        trim: function (text) {\\n            return text == null ?\\n                \\\"\\\" :\\n                ( text + \\\"\\\" ).replace(rtrim, \\\"\\\");\\n        },\\n\\n        // results is for internal usage only\\n        makeArray: function (arr, results) {\\n            var ret = results || [];\\n\\n            if (arr != null) {\\n                if (isArraylike(Object(arr))) {\\n                    jQuery.merge(ret,\\n                        typeof arr === \\\"string\\\" ?\\n                            [arr] : arr\\n                    );\\n                } else {\\n                    push.call(ret, arr);\\n                }\\n            }\\n\\n            return ret;\\n        },\\n\\n        inArray: function (elem, arr, i) {\\n            return arr == null ? -1 : indexOf.call(arr, elem, i);\\n        },\\n\\n        merge: function (first, second) {\\n            var len = +second.length,\\n                j = 0,\\n                i = first.length;\\n\\n            for (; j < len; j++) {\\n                first[i++] = second[j];\\n            }\\n\\n            first.length = i;\\n\\n            return first;\\n        },\\n\\n        grep: function (elems, callback, invert) {\\n            var callbackInverse,\\n                matches = [],\\n                i = 0,\\n                length = elems.length,\\n                callbackExpect = !invert;\\n\\n            // Go through the array, only saving the items\\n            // that pass the validator function\\n            for (; i < length; i++) {\\n                callbackInverse = !callback(elems[i], i);\\n                if (callbackInverse !== callbackExpect) {\\n                    matches.push(elems[i]);\\n                }\\n            }\\n\\n            return matches;\\n        },\\n\\n        // arg is for internal usage only\\n        map: function (elems, callback, arg) {\\n            var value,\\n                i = 0,\\n                length = elems.length,\\n                isArray = isArraylike(elems),\\n                ret = [];\\n\\n            // Go through the array, translating each of the items to their new values\\n            if (isArray) {\\n                for (; i < length; i++) {\\n                    value = callback(elems[i], i, arg);\\n\\n                    if (value != null) {\\n                        ret.push(value);\\n                    }\\n                }\\n\\n                // Go through every key on the object,\\n            } else {\\n                for (i in elems) {\\n                    value = callback(elems[i], i, arg);\\n\\n                    if (value != null) {\\n                        ret.push(value);\\n                    }\\n                }\\n            }\\n\\n            // Flatten any nested arrays\\n            return concat.apply([], ret);\\n        },\\n\\n        // A global GUID counter for objects\\n        guid: 1,\\n\\n        // Bind a function to a context, optionally partially applying any\\n        // arguments.\\n        proxy: function (fn, context) {\\n            var tmp, args, proxy;\\n\\n            if (typeof context === \\\"string\\\") {\\n                tmp = fn[context];\\n                context = fn;\\n                fn = tmp;\\n            }\\n\\n            // Quick check to determine if target is callable, in the spec\\n            // this throws a TypeError, but we will just return undefined.\\n            if (!jQuery.isFunction(fn)) {\\n                return undefined;\\n            }\\n\\n            // Simulated bind\\n            args = slice.call(arguments, 2);\\n            proxy = function () {\\n                return fn.apply(context || this, args.concat(slice.call(arguments)));\\n            };\\n\\n            // Set the guid of unique handler to the same of original handler, so it can be removed\\n            proxy.guid = fn.guid = fn.guid || jQuery.guid++;\\n\\n            return proxy;\\n        },\\n\\n        now: Date.now,\\n\\n        // jQuery.support is not used in Core but other projects attach their\\n        // properties to it so it needs to exist.\\n        support: support\\n    });\\n\\n// Populate the class2type map\\n    jQuery.each(\\\"Boolean Number String Function Array Date RegExp Object Error\\\".split(\\\" \\\"), function (i, name) {\\n        class2type[\\\"[object \\\" + name + \\\"]\\\"] = name.toLowerCase();\\n    });\\n\\n    function isArraylike(obj) {\\n\\n        // Support: iOS 8.2 (not reproducible in simulator)\\n        // `in` check used to prevent JIT error (gh-2145)\\n        // hasOwn isn't used here due to false negatives\\n        // regarding Nodelist length in IE\\n        var length = \\\"length\\\" in obj && obj.length,\\n            type = jQuery.type(obj);\\n\\n        if (type === \\\"function\\\" || jQuery.isWindow(obj)) {\\n            return false;\\n        }\\n\\n        if (obj.nodeType === 1 && length) {\\n            return true;\\n        }\\n\\n        return type === \\\"array\\\" || length === 0 ||\\n            typeof length === \\\"number\\\" && length > 0 && ( length - 1 ) in obj;\\n    }\\n\\n    var Sizzle =\\n        /*!\\n         * Sizzle CSS Selector Engine v2.2.0-pre\\n         * http://sizzlejs.com/\\n         *\\n         * Copyright 2008, 2014 jQuery Foundation, Inc. and other contributors\\n         * Released under the MIT license\\n         * http://jquery.org/license\\n         *\\n         * Date: 2014-12-16\\n         */\\n        (function (window) {\\n\\n            var i,\\n                support,\\n                Expr,\\n                getText,\\n                isXML,\\n                tokenize,\\n                compile,\\n                select,\\n                outermostContext,\\n                sortInput,\\n                hasDuplicate,\\n\\n                // Local document vars\\n                setDocument,\\n                document,\\n                docElem,\\n                documentIsHTML,\\n                rbuggyQSA,\\n                rbuggyMatches,\\n                matches,\\n                contains,\\n\\n                // Instance-specific data\\n                expando = \\\"sizzle\\\" + 1 * new Date(),\\n                preferredDoc = window.document,\\n                dirruns = 0,\\n                done = 0,\\n                classCache = createCache(),\\n                tokenCache = createCache(),\\n                compilerCache = createCache(),\\n                sortOrder = function (a, b) {\\n                    if (a === b) {\\n                        hasDuplicate = true;\\n                    }\\n                    return 0;\\n                },\\n\\n                // General-purpose constants\\n                MAX_NEGATIVE = 1 << 31,\\n\\n                // Instance methods\\n                hasOwn = ({}).hasOwnProperty,\\n                arr = [],\\n                pop = arr.pop,\\n                push_native = arr.push,\\n                push = arr.push,\\n                slice = arr.slice,\\n                // Use a stripped-down indexOf as it's faster than native\\n                // http://jsperf.com/thor-indexof-vs-for/5\\n                indexOf = function (list, elem) {\\n                    var i = 0,\\n                        len = list.length;\\n                    for (; i < len; i++) {\\n                        if (list[i] === elem) {\\n                            return i;\\n                        }\\n                    }\\n                    return -1;\\n                },\\n\\n                booleans = \\\"checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped\\\",\\n\\n                // Regular expressions\\n\\n                // Whitespace characters http://www.w3.org/TR/css3-selectors/#whitespace\\n                whitespace = \\\"[\\\\\\\\x20\\\\\\\\t\\\\\\\\r\\\\\\\\n\\\\\\\\f]\\\",\\n                // http://www.w3.org/TR/css3-syntax/#characters\\n                characterEncoding = \\\"(?:\\\\\\\\\\\\\\\\.|[\\\\\\\\w-]|[^\\\\\\\\x00-\\\\\\\\xa0])+\\\",\\n\\n                // Loosely modeled on CSS identifier characters\\n                // An unquoted value should be a CSS identifier http://www.w3.org/TR/css3-selectors/#attribute-selectors\\n                // Proper syntax: http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier\\n                identifier = characterEncoding.replace(\\\"w\\\", \\\"w#\\\"),\\n\\n                // Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors\\n                attributes = \\\"\\\\\\\\[\\\" + whitespace + \\\"*(\\\" + characterEncoding + \\\")(?:\\\" + whitespace +\\n                    // Operator (capture 2)\\n                    \\\"*([*^$|!~]?=)\\\" + whitespace +\\n                    // \\\"Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]\\\"\\n                    \\\"*(?:'((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\"|(\\\" + identifier + \\\"))|)\\\" + whitespace +\\n                    \\\"*\\\\\\\\]\\\",\\n\\n                pseudos = \\\":(\\\" + characterEncoding + \\\")(?:\\\\\\\\((\\\" +\\n                    // To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:\\n                    // 1. quoted (capture 3; capture 4 or capture 5)\\n                    \\\"('((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\'])*)'|\\\\\\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\\\\\\\\"])*)\\\\\\\")|\\\" +\\n                    // 2. simple (capture 6)\\n                    \\\"((?:\\\\\\\\\\\\\\\\.|[^\\\\\\\\\\\\\\\\()[\\\\\\\\]]|\\\" + attributes + \\\")*)|\\\" +\\n                    // 3. anything else (capture 2)\\n                    \\\".*\\\" +\\n                    \\\")\\\\\\\\)|)\\\",\\n\\n                // Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter\\n                rwhitespace = new RegExp(whitespace + \\\"+\\\", \\\"g\\\"),\\n                rtrim = new RegExp(\\\"^\\\" + whitespace + \\\"+|((?:^|[^\\\\\\\\\\\\\\\\])(?:\\\\\\\\\\\\\\\\.)*)\\\" + whitespace + \\\"+$\\\", \\\"g\\\"),\\n\\n                rcomma = new RegExp(\\\"^\\\" + whitespace + \\\"*,\\\" + whitespace + \\\"*\\\"),\\n                rcombinators = new RegExp(\\\"^\\\" + whitespace + \\\"*([>+~]|\\\" + whitespace + \\\")\\\" + whitespace + \\\"*\\\"),\\n\\n                rattributeQuotes = new RegExp(\\\"=\\\" + whitespace + \\\"*([^\\\\\\\\]'\\\\\\\"]*?)\\\" + whitespace + \\\"*\\\\\\\\]\\\", \\\"g\\\"),\\n\\n                rpseudo = new RegExp(pseudos),\\n                ridentifier = new RegExp(\\\"^\\\" + identifier + \\\"$\\\"),\\n\\n                matchExpr = {\\n                    \\\"ID\\\": new RegExp(\\\"^#(\\\" + characterEncoding + \\\")\\\"),\\n                    \\\"CLASS\\\": new RegExp(\\\"^\\\\\\\\.(\\\" + characterEncoding + \\\")\\\"),\\n                    \\\"TAG\\\": new RegExp(\\\"^(\\\" + characterEncoding.replace(\\\"w\\\", \\\"w*\\\") + \\\")\\\"),\\n                    \\\"ATTR\\\": new RegExp(\\\"^\\\" + attributes),\\n                    \\\"PSEUDO\\\": new RegExp(\\\"^\\\" + pseudos),\\n                    \\\"CHILD\\\": new RegExp(\\\"^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\\\\\\\(\\\" + whitespace +\\n                        \\\"*(even|odd|(([+-]|)(\\\\\\\\d*)n|)\\\" + whitespace + \\\"*(?:([+-]|)\\\" + whitespace +\\n                        \\\"*(\\\\\\\\d+)|))\\\" + whitespace + \\\"*\\\\\\\\)|)\\\", \\\"i\\\"),\\n                    \\\"bool\\\": new RegExp(\\\"^(?:\\\" + booleans + \\\")$\\\", \\\"i\\\"),\\n                    // For use in libraries implementing .is()\\n                    // We use this for POS matching in `select`\\n                    \\\"needsContext\\\": new RegExp(\\\"^\\\" + whitespace + \\\"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\\\\\\\(\\\" +\\n                        whitespace + \\\"*((?:-\\\\\\\\d)?\\\\\\\\d*)\\\" + whitespace + \\\"*\\\\\\\\)|)(?=[^-]|$)\\\", \\\"i\\\")\\n                },\\n\\n                rinputs = /^(?:input|select|textarea|button)$/i,\\n                rheader = /^h\\\\d$/i,\\n\\n                rnative = /^[^{]+\\\\{\\\\s*\\\\[native \\\\w/,\\n\\n                // Easily-parseable/retrievable ID or TAG or CLASS selectors\\n                rquickExpr = /^(?:#([\\\\w-]+)|(\\\\w+)|\\\\.([\\\\w-]+))$/,\\n\\n                rsibling = /[+~]/,\\n                rescape = /'|\\\\\\\\/g,\\n\\n                // CSS escapes http://www.w3.org/TR/CSS21/syndata.html#escaped-characters\\n                runescape = new RegExp(\\\"\\\\\\\\\\\\\\\\([\\\\\\\\da-f]{1,6}\\\" + whitespace + \\\"?|(\\\" + whitespace + \\\")|.)\\\", \\\"ig\\\"),\\n                funescape = function (_, escaped, escapedWhitespace) {\\n                    var high = \\\"0x\\\" + escaped - 0x10000;\\n                    // NaN means non-codepoint\\n                    // Support: Firefox<24\\n                    // Workaround erroneous numeric interpretation of +\\\"0x\\\"\\n                    return high !== high || escapedWhitespace ?\\n                        escaped :\\n                        high < 0 ?\\n                            // BMP codepoint\\n                            String.fromCharCode(high + 0x10000) :\\n                            // Supplemental Plane codepoint (surrogate pair)\\n                            String.fromCharCode(high >> 10 | 0xD800, high & 0x3FF | 0xDC00);\\n                },\\n\\n                // Used for iframes\\n                // See setDocument()\\n                // Removing the function wrapper causes a \\\"Permission Denied\\\"\\n                // error in IE\\n                unloadHandler = function () {\\n                    setDocument();\\n                };\\n\\n// Optimize for push.apply( _, NodeList )\\n            try {\\n                push.apply(\\n                    (arr = slice.call(preferredDoc.childNodes)),\\n                    preferredDoc.childNodes\\n                );\\n                // Support: Android<4.0\\n                // Detect silently failing push.apply\\n                arr[preferredDoc.childNodes.length].nodeType;\\n            } catch (e) {\\n                push = {\\n                    apply: arr.length ?\\n\\n                        // Leverage slice if possible\\n                        function (target, els) {\\n                            push_native.apply(target, slice.call(els));\\n                        } :\\n\\n                        // Support: IE<9\\n                        // Otherwise append directly\\n                        function (target, els) {\\n                            var j = target.length,\\n                                i = 0;\\n                            // Can't trust NodeList.length\\n                            while ((target[j++] = els[i++])) {\\n                            }\\n                            target.length = j - 1;\\n                        }\\n                };\\n            }\\n\\n            function Sizzle(selector, context, results, seed) {\\n                var match, elem, m, nodeType,\\n                    // QSA vars\\n                    i, groups, old, nid, newContext, newSelector;\\n\\n                if (( context ? context.ownerDocument || context : preferredDoc ) !== document) {\\n                    setDocument(context);\\n                }\\n\\n                context = context || document;\\n                results = results || [];\\n                nodeType = context.nodeType;\\n\\n                if (typeof selector !== \\\"string\\\" || !selector ||\\n                    nodeType !== 1 && nodeType !== 9 && nodeType !== 11) {\\n\\n                    return results;\\n                }\\n\\n                if (!seed && documentIsHTML) {\\n\\n                    // Try to shortcut find operations when possible (e.g., not under DocumentFragment)\\n                    if (nodeType !== 11 && (match = rquickExpr.exec(selector))) {\\n                        // Speed-up: Sizzle(\\\"#ID\\\")\\n                        if ((m = match[1])) {\\n                            if (nodeType === 9) {\\n                                elem = context.getElementById(m);\\n                                // Check parentNode to catch when Blackberry 4.6 returns\\n                                // nodes that are no longer in the document (jQuery #6963)\\n                                if (elem && elem.parentNode) {\\n                                    // Handle the case where IE, Opera, and Webkit return items\\n                                    // by name instead of ID\\n                                    if (elem.id === m) {\\n                                        results.push(elem);\\n                                        return results;\\n                                    }\\n                                } else {\\n                                    return results;\\n                                }\\n                            } else {\\n                                // Context is not a document\\n                                if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) &&\\n                                    contains(context, elem) && elem.id === m) {\\n                                    results.push(elem);\\n                                    return results;\\n                                }\\n                            }\\n\\n                            // Speed-up: Sizzle(\\\"TAG\\\")\\n                        } else if (match[2]) {\\n                            push.apply(results, context.getElementsByTagName(selector));\\n                            return results;\\n\\n                            // Speed-up: Sizzle(\\\".CLASS\\\")\\n                        } else if ((m = match[3]) && support.getElementsByClassName) {\\n                            push.apply(results, context.getElementsByClassName(m));\\n                            return results;\\n                        }\\n                    }\\n\\n                    // QSA path\\n                    if (support.qsa && (!rbuggyQSA || !rbuggyQSA.test(selector))) {\\n                        nid = old = expando;\\n                        newContext = context;\\n                        newSelector = nodeType !== 1 && selector;\\n\\n                        // qSA works strangely on Element-rooted queries\\n                        // We can work around this by specifying an extra ID on the root\\n                        // and working up from there (Thanks to Andrew Dupont for the technique)\\n                        // IE 8 doesn't work on object elements\\n                        if (nodeType === 1 && context.nodeName.toLowerCase() !== \\\"object\\\") {\\n                            groups = tokenize(selector);\\n\\n                            if ((old = context.getAttribute(\\\"id\\\"))) {\\n                                nid = old.replace(rescape, \\\"\\\\\\\\$&\\\");\\n                            } else {\\n                                context.setAttribute(\\\"id\\\", nid);\\n                            }\\n                            nid = \\\"[id='\\\" + nid + \\\"'] \\\";\\n\\n                            i = groups.length;\\n                            while (i--) {\\n                                groups[i] = nid + toSelector(groups[i]);\\n                            }\\n                            newContext = rsibling.test(selector) && testContext(context.parentNode) || context;\\n                            newSelector = groups.join(\\\",\\\");\\n                        }\\n\\n                        if (newSelector) {\\n                            try {\\n                                push.apply(results,\\n                                    newContext.querySelectorAll(newSelector)\\n                                );\\n                                return results;\\n                            } catch (qsaError) {\\n                            } finally {\\n                                if (!old) {\\n                                    context.removeAttribute(\\\"id\\\");\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n\\n                // All others\\n                return select(selector.replace(rtrim, \\\"$1\\\"), context, results, seed);\\n            }\\n\\n            /**\\n             * Create key-value caches of limited size\\n             * @returns {Function(string, Object)} Returns the Object data after storing it on itself with\\n             *    property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)\\n             *    deleting the oldest entry\\n             */\\n            function createCache() {\\n                var keys = [];\\n\\n                function cache(key, value) {\\n                    // Use (key + \\\" \\\") to avoid collision with native prototype properties (see Issue #157)\\n                    if (keys.push(key + \\\" \\\") > Expr.cacheLength) {\\n                        // Only keep the most recent entries\\n                        delete cache[keys.shift()];\\n                    }\\n                    return (cache[key + \\\" \\\"] = value);\\n                }\\n\\n                return cache;\\n            }\\n\\n            /**\\n             * Mark a function for special use by Sizzle\\n             * @param {Function} fn The function to mark\\n             */\\n            function markFunction(fn) {\\n                fn[expando] = true;\\n                return fn;\\n            }\\n\\n            /**\\n             * Support testing using an element\\n             * @param {Function} fn Passed the created div and expects a boolean result\\n             */\\n            function assert(fn) {\\n                var div = document.createElement(\\\"div\\\");\\n\\n                try {\\n                    return !!fn(div);\\n                } catch (e) {\\n                    return false;\\n                } finally {\\n                    // Remove from its parent by default\\n                    if (div.parentNode) {\\n                        div.parentNode.removeChild(div);\\n                    }\\n                    // release memory in IE\\n                    div = null;\\n                }\\n            }\\n\\n            /**\\n             * Adds the same handler for all of the specified attrs\\n             * @param {String} attrs Pipe-separated list of attributes\\n             * @param {Function} handler The method that will be applied\\n             */\\n            function addHandle(attrs, handler) {\\n                var arr = attrs.split(\\\"|\\\"),\\n                    i = attrs.length;\\n\\n                while (i--) {\\n                    Expr.attrHandle[arr[i]] = handler;\\n                }\\n            }\\n\\n            /**\\n             * Checks document order of two siblings\\n             * @param {Element} a\\n             * @param {Element} b\\n             * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b\\n             */\\n            function siblingCheck(a, b) {\\n                var cur = b && a,\\n                    diff = cur && a.nodeType === 1 && b.nodeType === 1 &&\\n                        ( ~b.sourceIndex || MAX_NEGATIVE ) -\\n                        ( ~a.sourceIndex || MAX_NEGATIVE );\\n\\n                // Use IE sourceIndex if available on both nodes\\n                if (diff) {\\n                    return diff;\\n                }\\n\\n                // Check if b follows a\\n                if (cur) {\\n                    while ((cur = cur.nextSibling)) {\\n                        if (cur === b) {\\n                            return -1;\\n                        }\\n                    }\\n                }\\n\\n                return a ? 1 : -1;\\n            }\\n\\n            /**\\n             * Returns a function to use in pseudos for input types\\n             * @param {String} type\\n             */\\n            function createInputPseudo(type) {\\n                return function (elem) {\\n                    var name = elem.nodeName.toLowerCase();\\n                    return name === \\\"input\\\" && elem.type === type;\\n                };\\n            }\\n\\n            /**\\n             * Returns a function to use in pseudos for buttons\\n             * @param {String} type\\n             */\\n            function createButtonPseudo(type) {\\n                return function (elem) {\\n                    var name = elem.nodeName.toLowerCase();\\n                    return (name === \\\"input\\\" || name === \\\"button\\\") && elem.type === type;\\n                };\\n            }\\n\\n            /**\\n             * Returns a function to use in pseudos for positionals\\n             * @param {Function} fn\\n             */\\n            function createPositionalPseudo(fn) {\\n                return markFunction(function (argument) {\\n                    argument = +argument;\\n                    return markFunction(function (seed, matches) {\\n                        var j,\\n                            matchIndexes = fn([], seed.length, argument),\\n                            i = matchIndexes.length;\\n\\n                        // Match elements found at the specified indexes\\n                        while (i--) {\\n                            if (seed[(j = matchIndexes[i])]) {\\n                                seed[j] = !(matches[j] = seed[j]);\\n                            }\\n                        }\\n                    });\\n                });\\n            }\\n\\n            /**\\n             * Checks a node for validity as a Sizzle context\\n             * @param {Element|Object=} context\\n             * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value\\n             */\\n            function testContext(context) {\\n                return context && typeof context.getElementsByTagName !== \\\"undefined\\\" && context;\\n            }\\n\\n// Expose support vars for convenience\\n            support = Sizzle.support = {};\\n\\n            /**\\n             * Detects XML nodes\\n             * @param {Element|Object} elem An element or a document\\n             * @returns {Boolean} True iff elem is a non-HTML XML node\\n             */\\n            isXML = Sizzle.isXML = function (elem) {\\n                // documentElement is verified for cases where it doesn't yet exist\\n                // (such as loading iframes in IE - #4833)\\n                var documentElement = elem && (elem.ownerDocument || elem).documentElement;\\n                return documentElement ? documentElement.nodeName !== \\\"HTML\\\" : false;\\n            };\\n\\n            /**\\n             * Sets document-related variables once based on the current document\\n             * @param {Element|Object} [doc] An element or document object to use to set the document\\n             * @returns {Object} Returns the current document\\n             */\\n            setDocument = Sizzle.setDocument = function (node) {\\n                var hasCompare, parent,\\n                    doc = node ? node.ownerDocument || node : preferredDoc;\\n\\n                // If no document and documentElement is available, return\\n                if (doc === document || doc.nodeType !== 9 || !doc.documentElement) {\\n                    return document;\\n                }\\n\\n                // Set our document\\n                document = doc;\\n                docElem = doc.documentElement;\\n                parent = doc.defaultView;\\n\\n                // Support: IE>8\\n                // If iframe document is assigned to \\\"document\\\" variable and if iframe has been reloaded,\\n                // IE will throw \\\"permission denied\\\" error when accessing \\\"document\\\" variable, see jQuery #13936\\n                // IE6-8 do not support the defaultView property so parent will be undefined\\n                if (parent && parent !== parent.top) {\\n                    // IE11 does not have attachEvent, so all must suffer\\n                    if (parent.addEventListener) {\\n                        parent.addEventListener(\\\"unload\\\", unloadHandler, false);\\n                    } else if (parent.attachEvent) {\\n                        parent.attachEvent(\\\"onunload\\\", unloadHandler);\\n                    }\\n                }\\n\\n                /* Support tests\\n                 ---------------------------------------------------------------------- */\\n                documentIsHTML = !isXML(doc);\\n\\n                /* Attributes\\n                 ---------------------------------------------------------------------- */\\n\\n                // Support: IE<8\\n                // Verify that getAttribute really returns attributes and not properties\\n                // (excepting IE8 booleans)\\n                support.attributes = assert(function (div) {\\n                    div.className = \\\"i\\\";\\n                    return !div.getAttribute(\\\"className\\\");\\n                });\\n\\n                /* getElement(s)By*\\n                 ---------------------------------------------------------------------- */\\n\\n                // Check if getElementsByTagName(\\\"*\\\") returns only elements\\n                support.getElementsByTagName = assert(function (div) {\\n                    div.appendChild(doc.createComment(\\\"\\\"));\\n                    return !div.getElementsByTagName(\\\"*\\\").length;\\n                });\\n\\n                // Support: IE<9\\n                support.getElementsByClassName = rnative.test(doc.getElementsByClassName);\\n\\n                // Support: IE<10\\n                // Check if getElementById returns elements by name\\n                // The broken getElementById methods don't pick up programatically-set names,\\n                // so use a roundabout getElementsByName test\\n                support.getById = assert(function (div) {\\n                    docElem.appendChild(div).id = expando;\\n                    return !doc.getElementsByName || !doc.getElementsByName(expando).length;\\n                });\\n\\n                // ID find and filter\\n                if (support.getById) {\\n                    Expr.find[\\\"ID\\\"] = function (id, context) {\\n                        if (typeof context.getElementById !== \\\"undefined\\\" && documentIsHTML) {\\n                            var m = context.getElementById(id);\\n                            // Check parentNode to catch when Blackberry 4.6 returns\\n                            // nodes that are no longer in the document #6963\\n                            return m && m.parentNode ? [m] : [];\\n                        }\\n                    };\\n                    Expr.filter[\\\"ID\\\"] = function (id) {\\n                        var attrId = id.replace(runescape, funescape);\\n                        return function (elem) {\\n                            return elem.getAttribute(\\\"id\\\") === attrId;\\n                        };\\n                    };\\n                } else {\\n                    // Support: IE6/7\\n                    // getElementById is not reliable as a find shortcut\\n                    delete Expr.find[\\\"ID\\\"];\\n\\n                    Expr.filter[\\\"ID\\\"] = function (id) {\\n                        var attrId = id.replace(runescape, funescape);\\n                        return function (elem) {\\n                            var node = typeof elem.getAttributeNode !== \\\"undefined\\\" && elem.getAttributeNode(\\\"id\\\");\\n                            return node && node.value === attrId;\\n                        };\\n                    };\\n                }\\n\\n                // Tag\\n                Expr.find[\\\"TAG\\\"] = support.getElementsByTagName ?\\n                    function (tag, context) {\\n                        if (typeof context.getElementsByTagName !== \\\"undefined\\\") {\\n                            return context.getElementsByTagName(tag);\\n\\n                            // DocumentFragment nodes don't have gEBTN\\n                        } else if (support.qsa) {\\n                            return context.querySelectorAll(tag);\\n                        }\\n                    } :\\n\\n                    function (tag, context) {\\n                        var elem,\\n                            tmp = [],\\n                            i = 0,\\n                            // By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too\\n                            results = context.getElementsByTagName(tag);\\n\\n                        // Filter out possible comments\\n                        if (tag === \\\"*\\\") {\\n                            while ((elem = results[i++])) {\\n                                if (elem.nodeType === 1) {\\n                                    tmp.push(elem);\\n                                }\\n                            }\\n\\n                            return tmp;\\n                        }\\n                        return results;\\n                    };\\n\\n                // Class\\n                Expr.find[\\\"CLASS\\\"] = support.getElementsByClassName && function (className, context) {\\n                        if (documentIsHTML) {\\n                            return context.getElementsByClassName(className);\\n                        }\\n                    };\\n\\n                /* QSA/matchesSelector\\n                 ---------------------------------------------------------------------- */\\n\\n                // QSA and matchesSelector support\\n\\n                // matchesSelector(:active) reports false when true (IE9/Opera 11.5)\\n                rbuggyMatches = [];\\n\\n                // qSa(:focus) reports false when true (Chrome 21)\\n                // We allow this because of a bug in IE8/9 that throws an error\\n                // whenever `document.activeElement` is accessed on an iframe\\n                // So, we allow :focus to pass through QSA all the time to avoid the IE error\\n                // See http://bugs.jquery.com/ticket/13378\\n                rbuggyQSA = [];\\n\\n                if ((support.qsa = rnative.test(doc.querySelectorAll))) {\\n                    // Build QSA regex\\n                    // Regex strategy adopted from Diego Perini\\n                    assert(function (div) {\\n                        // Select is set to empty string on purpose\\n                        // This is to test IE's treatment of not explicitly\\n                        // setting a boolean content attribute,\\n                        // since its presence should be enough\\n                        // http://bugs.jquery.com/ticket/12359\\n                        docElem.appendChild(div).innerHTML = \\\"<a id='\\\" + expando + \\\"'></a>\\\" +\\n                            \\\"<select id='\\\" + expando + \\\"-\\\\f]' msallowcapture=''>\\\" +\\n                            \\\"<option selected=''></option></select>\\\";\\n\\n                        // Support: IE8, Opera 11-12.16\\n                        // Nothing should be selected when empty strings follow ^= or $= or *=\\n                        // The test attribute must be unknown in Opera but \\\"safe\\\" for WinRT\\n                        // http://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section\\n                        if (div.querySelectorAll(\\\"[msallowcapture^='']\\\").length) {\\n                            rbuggyQSA.push(\\\"[*^$]=\\\" + whitespace + \\\"*(?:''|\\\\\\\"\\\\\\\")\\\");\\n                        }\\n\\n                        // Support: IE8\\n                        // Boolean attributes and \\\"value\\\" are not treated correctly\\n                        if (!div.querySelectorAll(\\\"[selected]\\\").length) {\\n                            rbuggyQSA.push(\\\"\\\\\\\\[\\\" + whitespace + \\\"*(?:value|\\\" + booleans + \\\")\\\");\\n                        }\\n\\n                        // Support: Chrome<29, Android<4.2+, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.7+\\n                        if (!div.querySelectorAll(\\\"[id~=\\\" + expando + \\\"-]\\\").length) {\\n                            rbuggyQSA.push(\\\"~=\\\");\\n                        }\\n\\n                        // Webkit/Opera - :checked should return selected option elements\\n                        // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\n                        // IE8 throws error here and will not see later tests\\n                        if (!div.querySelectorAll(\\\":checked\\\").length) {\\n                            rbuggyQSA.push(\\\":checked\\\");\\n                        }\\n\\n                        // Support: Safari 8+, iOS 8+\\n                        // https://bugs.webkit.org/show_bug.cgi?id=136851\\n                        // In-page `selector#id sibing-combinator selector` fails\\n                        if (!div.querySelectorAll(\\\"a#\\\" + expando + \\\"+*\\\").length) {\\n                            rbuggyQSA.push(\\\".#.+[+~]\\\");\\n                        }\\n                    });\\n\\n                    assert(function (div) {\\n                        // Support: Windows 8 Native Apps\\n                        // The type and name attributes are restricted during .innerHTML assignment\\n                        var input = doc.createElement(\\\"input\\\");\\n                        input.setAttribute(\\\"type\\\", \\\"hidden\\\");\\n                        div.appendChild(input).setAttribute(\\\"name\\\", \\\"D\\\");\\n\\n                        // Support: IE8\\n                        // Enforce case-sensitivity of name attribute\\n                        if (div.querySelectorAll(\\\"[name=d]\\\").length) {\\n                            rbuggyQSA.push(\\\"name\\\" + whitespace + \\\"*[*^$|!~]?=\\\");\\n                        }\\n\\n                        // FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)\\n                        // IE8 throws error here and will not see later tests\\n                        if (!div.querySelectorAll(\\\":enabled\\\").length) {\\n                            rbuggyQSA.push(\\\":enabled\\\", \\\":disabled\\\");\\n                        }\\n\\n                        // Opera 10-11 does not throw on post-comma invalid pseudos\\n                        div.querySelectorAll(\\\"*,:x\\\");\\n                        rbuggyQSA.push(\\\",.*:\\\");\\n                    });\\n                }\\n\\n                if ((support.matchesSelector = rnative.test((matches = docElem.matches ||\\n                        docElem.webkitMatchesSelector ||\\n                        docElem.mozMatchesSelector ||\\n                        docElem.oMatchesSelector ||\\n                        docElem.msMatchesSelector)))) {\\n\\n                    assert(function (div) {\\n                        // Check to see if it's possible to do matchesSelector\\n                        // on a disconnected node (IE 9)\\n                        support.disconnectedMatch = matches.call(div, \\\"div\\\");\\n\\n                        // This should fail with an exception\\n                        // Gecko does not error, returns false instead\\n                        matches.call(div, \\\"[s!='']:x\\\");\\n                        rbuggyMatches.push(\\\"!=\\\", pseudos);\\n                    });\\n                }\\n\\n                rbuggyQSA = rbuggyQSA.length && new RegExp(rbuggyQSA.join(\\\"|\\\"));\\n                rbuggyMatches = rbuggyMatches.length && new RegExp(rbuggyMatches.join(\\\"|\\\"));\\n\\n                /* Contains\\n                 ---------------------------------------------------------------------- */\\n                hasCompare = rnative.test(docElem.compareDocumentPosition);\\n\\n                // Element contains another\\n                // Purposefully does not implement inclusive descendent\\n                // As in, an element does not contain itself\\n                contains = hasCompare || rnative.test(docElem.contains) ?\\n                    function (a, b) {\\n                        var adown = a.nodeType === 9 ? a.documentElement : a,\\n                            bup = b && b.parentNode;\\n                        return a === bup || !!( bup && bup.nodeType === 1 && (\\n                                adown.contains ?\\n                                    adown.contains(bup) :\\n                                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\\n                            ));\\n                    } :\\n                    function (a, b) {\\n                        if (b) {\\n                            while ((b = b.parentNode)) {\\n                                if (b === a) {\\n                                    return true;\\n                                }\\n                            }\\n                        }\\n                        return false;\\n                    };\\n\\n                /* Sorting\\n                 ---------------------------------------------------------------------- */\\n\\n                // Document order sorting\\n                sortOrder = hasCompare ?\\n                    function (a, b) {\\n\\n                        // Flag for duplicate removal\\n                        if (a === b) {\\n                            hasDuplicate = true;\\n                            return 0;\\n                        }\\n\\n                        // Sort on method existence if only one input has compareDocumentPosition\\n                        var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;\\n                        if (compare) {\\n                            return compare;\\n                        }\\n\\n                        // Calculate position if both inputs belong to the same document\\n                        compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?\\n                            a.compareDocumentPosition(b) :\\n\\n                            // Otherwise we know they are disconnected\\n                            1;\\n\\n                        // Disconnected nodes\\n                        if (compare & 1 ||\\n                            (!support.sortDetached && b.compareDocumentPosition(a) === compare)) {\\n\\n                            // Choose the first element that is related to our preferred document\\n                            if (a === doc || a.ownerDocument === preferredDoc && contains(preferredDoc, a)) {\\n                                return -1;\\n                            }\\n                            if (b === doc || b.ownerDocument === preferredDoc && contains(preferredDoc, b)) {\\n                                return 1;\\n                            }\\n\\n                            // Maintain original order\\n                            return sortInput ?\\n                                ( indexOf(sortInput, a) - indexOf(sortInput, b) ) :\\n                                0;\\n                        }\\n\\n                        return compare & 4 ? -1 : 1;\\n                    } :\\n                    function (a, b) {\\n                        // Exit early if the nodes are identical\\n                        if (a === b) {\\n                            hasDuplicate = true;\\n                            return 0;\\n                        }\\n\\n                        var cur,\\n                            i = 0,\\n                            aup = a.parentNode,\\n                            bup = b.parentNode,\\n                            ap = [a],\\n                            bp = [b];\\n\\n                        // Parentless nodes are either documents or disconnected\\n                        if (!aup || !bup) {\\n                            return a === doc ? -1 :\\n                                b === doc ? 1 :\\n                                    aup ? -1 :\\n                                        bup ? 1 :\\n                                            sortInput ?\\n                                                ( indexOf(sortInput, a) - indexOf(sortInput, b) ) :\\n                                                0;\\n\\n                            // If the nodes are siblings, we can do a quick check\\n                        } else if (aup === bup) {\\n                            return siblingCheck(a, b);\\n                        }\\n\\n                        // Otherwise we need full lists of their ancestors for comparison\\n                        cur = a;\\n                        while ((cur = cur.parentNode)) {\\n                            ap.unshift(cur);\\n                        }\\n                        cur = b;\\n                        while ((cur = cur.parentNode)) {\\n                            bp.unshift(cur);\\n                        }\\n\\n                        // Walk down the tree looking for a discrepancy\\n                        while (ap[i] === bp[i]) {\\n                            i++;\\n                        }\\n\\n                        return i ?\\n                            // Do a sibling check if the nodes have a common ancestor\\n                            siblingCheck(ap[i], bp[i]) :\\n\\n                            // Otherwise nodes in our document sort first\\n                            ap[i] === preferredDoc ? -1 :\\n                                bp[i] === preferredDoc ? 1 :\\n                                    0;\\n                    };\\n\\n                return doc;\\n            };\\n\\n            Sizzle.matches = function (expr, elements) {\\n                return Sizzle(expr, null, null, elements);\\n            };\\n\\n            Sizzle.matchesSelector = function (elem, expr) {\\n                // Set document vars if needed\\n                if (( elem.ownerDocument || elem ) !== document) {\\n                    setDocument(elem);\\n                }\\n\\n                // Make sure that attribute selectors are quoted\\n                expr = expr.replace(rattributeQuotes, \\\"='$1']\\\");\\n\\n                if (support.matchesSelector && documentIsHTML &&\\n                    ( !rbuggyMatches || !rbuggyMatches.test(expr) ) &&\\n                    ( !rbuggyQSA || !rbuggyQSA.test(expr) )) {\\n\\n                    try {\\n                        var ret = matches.call(elem, expr);\\n\\n                        // IE 9's matchesSelector returns false on disconnected nodes\\n                        if (ret || support.disconnectedMatch ||\\n                            // As well, disconnected nodes are said to be in a document\\n                            // fragment in IE 9\\n                            elem.document && elem.document.nodeType !== 11) {\\n                            return ret;\\n                        }\\n                    } catch (e) {\\n                    }\\n                }\\n\\n                return Sizzle(expr, document, null, [elem]).length > 0;\\n            };\\n\\n            Sizzle.contains = function (context, elem) {\\n                // Set document vars if needed\\n                if (( context.ownerDocument || context ) !== document) {\\n                    setDocument(context);\\n                }\\n                return contains(context, elem);\\n            };\\n\\n            Sizzle.attr = function (elem, name) {\\n                // Set document vars if needed\\n                if (( elem.ownerDocument || elem ) !== document) {\\n                    setDocument(elem);\\n                }\\n\\n                var fn = Expr.attrHandle[name.toLowerCase()],\\n                    // Don't get fooled by Object.prototype properties (jQuery #13807)\\n                    val = fn && hasOwn.call(Expr.attrHandle, name.toLowerCase()) ?\\n                        fn(elem, name, !documentIsHTML) :\\n                        undefined;\\n\\n                return val !== undefined ?\\n                    val :\\n                    support.attributes || !documentIsHTML ?\\n                        elem.getAttribute(name) :\\n                        (val = elem.getAttributeNode(name)) && val.specified ?\\n                            val.value :\\n                            null;\\n            };\\n\\n            Sizzle.error = function (msg) {\\n                throw new Error(\\\"Syntax error, unrecognized expression: \\\" + msg);\\n            };\\n\\n            /**\\n             * Document sorting and removing duplicates\\n             * @param {ArrayLike} results\\n             */\\n            Sizzle.uniqueSort = function (results) {\\n                var elem,\\n                    duplicates = [],\\n                    j = 0,\\n                    i = 0;\\n\\n                // Unless we *know* we can detect duplicates, assume their presence\\n                hasDuplicate = !support.detectDuplicates;\\n                sortInput = !support.sortStable && results.slice(0);\\n                results.sort(sortOrder);\\n\\n                if (hasDuplicate) {\\n                    while ((elem = results[i++])) {\\n                        if (elem === results[i]) {\\n                            j = duplicates.push(i);\\n                        }\\n                    }\\n                    while (j--) {\\n                        results.splice(duplicates[j], 1);\\n                    }\\n                }\\n\\n                // Clear input after sorting to release objects\\n                // See https://github.com/jquery/sizzle/pull/225\\n                sortInput = null;\\n\\n                return results;\\n            };\\n\\n            /**\\n             * Utility function for retrieving the text value of an array of DOM nodes\\n             * @param {Array|Element} elem\\n             */\\n            getText = Sizzle.getText = function (elem) {\\n                var node,\\n                    ret = \\\"\\\",\\n                    i = 0,\\n                    nodeType = elem.nodeType;\\n\\n                if (!nodeType) {\\n                    // If no nodeType, this is expected to be an array\\n                    while ((node = elem[i++])) {\\n                        // Do not traverse comment nodes\\n                        ret += getText(node);\\n                    }\\n                } else if (nodeType === 1 || nodeType === 9 || nodeType === 11) {\\n                    // Use textContent for elements\\n                    // innerText usage removed for consistency of new lines (jQuery #11153)\\n                    if (typeof elem.textContent === \\\"string\\\") {\\n                        return elem.textContent;\\n                    } else {\\n                        // Traverse its children\\n                        for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\\n                            ret += getText(elem);\\n                        }\\n                    }\\n                } else if (nodeType === 3 || nodeType === 4) {\\n                    return elem.nodeValue;\\n                }\\n                // Do not include comment or processing instruction nodes\\n\\n                return ret;\\n            };\\n\\n            Expr = Sizzle.selectors = {\\n\\n                // Can be adjusted by the user\\n                cacheLength: 50,\\n\\n                createPseudo: markFunction,\\n\\n                match: matchExpr,\\n\\n                attrHandle: {},\\n\\n                find: {},\\n\\n                relative: {\\n                    \\\">\\\": {dir: \\\"parentNode\\\", first: true},\\n                    \\\" \\\": {dir: \\\"parentNode\\\"},\\n                    \\\"+\\\": {dir: \\\"previousSibling\\\", first: true},\\n                    \\\"~\\\": {dir: \\\"previousSibling\\\"}\\n                },\\n\\n                preFilter: {\\n                    \\\"ATTR\\\": function (match) {\\n                        match[1] = match[1].replace(runescape, funescape);\\n\\n                        // Move the given value to match[3] whether quoted or unquoted\\n                        match[3] = ( match[3] || match[4] || match[5] || \\\"\\\" ).replace(runescape, funescape);\\n\\n                        if (match[2] === \\\"~=\\\") {\\n                            match[3] = \\\" \\\" + match[3] + \\\" \\\";\\n                        }\\n\\n                        return match.slice(0, 4);\\n                    },\\n\\n                    \\\"CHILD\\\": function (match) {\\n                        /* matches from matchExpr[\\\"CHILD\\\"]\\n                         1 type (only|nth|...)\\n                         2 what (child|of-type)\\n                         3 argument (even|odd|\\\\d*|\\\\d*n([+-]\\\\d+)?|...)\\n                         4 xn-component of xn+y argument ([+-]?\\\\d*n|)\\n                         5 sign of xn-component\\n                         6 x of xn-component\\n                         7 sign of y-component\\n                         8 y of y-component\\n                         */\\n                        match[1] = match[1].toLowerCase();\\n\\n                        if (match[1].slice(0, 3) === \\\"nth\\\") {\\n                            // nth-* requires argument\\n                            if (!match[3]) {\\n                                Sizzle.error(match[0]);\\n                            }\\n\\n                            // numeric x and y parameters for Expr.filter.CHILD\\n                            // remember that false/true cast respectively to 0/1\\n                            match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === \\\"even\\\" || match[3] === \\\"odd\\\" ) );\\n                            match[5] = +( ( match[7] + match[8] ) || match[3] === \\\"odd\\\" );\\n\\n                            // other types prohibit arguments\\n                        } else if (match[3]) {\\n                            Sizzle.error(match[0]);\\n                        }\\n\\n                        return match;\\n                    },\\n\\n                    \\\"PSEUDO\\\": function (match) {\\n                        var excess,\\n                            unquoted = !match[6] && match[2];\\n\\n                        if (matchExpr[\\\"CHILD\\\"].test(match[0])) {\\n                            return null;\\n                        }\\n\\n                        // Accept quoted arguments as-is\\n                        if (match[3]) {\\n                            match[2] = match[4] || match[5] || \\\"\\\";\\n\\n                            // Strip excess characters from unquoted arguments\\n                        } else if (unquoted && rpseudo.test(unquoted) &&\\n                            // Get excess from tokenize (recursively)\\n                            (excess = tokenize(unquoted, true)) &&\\n                            // advance to the next closing parenthesis\\n                            (excess = unquoted.indexOf(\\\")\\\", unquoted.length - excess) - unquoted.length)) {\\n\\n                            // excess is a negative index\\n                            match[0] = match[0].slice(0, excess);\\n                            match[2] = unquoted.slice(0, excess);\\n                        }\\n\\n                        // Return only captures needed by the pseudo filter method (type and argument)\\n                        return match.slice(0, 3);\\n                    }\\n                },\\n\\n                filter: {\\n\\n                    \\\"TAG\\\": function (nodeNameSelector) {\\n                        var nodeName = nodeNameSelector.replace(runescape, funescape).toLowerCase();\\n                        return nodeNameSelector === \\\"*\\\" ?\\n                            function () {\\n                                return true;\\n                            } :\\n                            function (elem) {\\n                                return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;\\n                            };\\n                    },\\n\\n                    \\\"CLASS\\\": function (className) {\\n                        var pattern = classCache[className + \\\" \\\"];\\n\\n                        return pattern ||\\n                            (pattern = new RegExp(\\\"(^|\\\" + whitespace + \\\")\\\" + className + \\\"(\\\" + whitespace + \\\"|$)\\\")) &&\\n                            classCache(className, function (elem) {\\n                                return pattern.test(typeof elem.className === \\\"string\\\" && elem.className || typeof elem.getAttribute !== \\\"undefined\\\" && elem.getAttribute(\\\"class\\\") || \\\"\\\");\\n                            });\\n                    },\\n\\n                    \\\"ATTR\\\": function (name, operator, check) {\\n                        return function (elem) {\\n                            var result = Sizzle.attr(elem, name);\\n\\n                            if (result == null) {\\n                                return operator === \\\"!=\\\";\\n                            }\\n                            if (!operator) {\\n                                return true;\\n                            }\\n\\n                            result += \\\"\\\";\\n\\n                            return operator === \\\"=\\\" ? result === check :\\n                                operator === \\\"!=\\\" ? result !== check :\\n                                    operator === \\\"^=\\\" ? check && result.indexOf(check) === 0 :\\n                                        operator === \\\"*=\\\" ? check && result.indexOf(check) > -1 :\\n                                            operator === \\\"$=\\\" ? check && result.slice(-check.length) === check :\\n                                                operator === \\\"~=\\\" ? ( \\\" \\\" + result.replace(rwhitespace, \\\" \\\") + \\\" \\\" ).indexOf(check) > -1 :\\n                                                    operator === \\\"|=\\\" ? result === check || result.slice(0, check.length + 1) === check + \\\"-\\\" :\\n                                                        false;\\n                        };\\n                    },\\n\\n                    \\\"CHILD\\\": function (type, what, argument, first, last) {\\n                        var simple = type.slice(0, 3) !== \\\"nth\\\",\\n                            forward = type.slice(-4) !== \\\"last\\\",\\n                            ofType = what === \\\"of-type\\\";\\n\\n                        return first === 1 && last === 0 ?\\n\\n                            // Shortcut for :nth-*(n)\\n                            function (elem) {\\n                                return !!elem.parentNode;\\n                            } :\\n\\n                            function (elem, context, xml) {\\n                                var cache, outerCache, node, diff, nodeIndex, start,\\n                                    dir = simple !== forward ? \\\"nextSibling\\\" : \\\"previousSibling\\\",\\n                                    parent = elem.parentNode,\\n                                    name = ofType && elem.nodeName.toLowerCase(),\\n                                    useCache = !xml && !ofType;\\n\\n                                if (parent) {\\n\\n                                    // :(first|last|only)-(child|of-type)\\n                                    if (simple) {\\n                                        while (dir) {\\n                                            node = elem;\\n                                            while ((node = node[dir])) {\\n                                                if (ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1) {\\n                                                    return false;\\n                                                }\\n                                            }\\n                                            // Reverse direction for :only-* (if we haven't yet done so)\\n                                            start = dir = type === \\\"only\\\" && !start && \\\"nextSibling\\\";\\n                                        }\\n                                        return true;\\n                                    }\\n\\n                                    start = [forward ? parent.firstChild : parent.lastChild];\\n\\n                                    // non-xml :nth-child(...) stores cache data on `parent`\\n                                    if (forward && useCache) {\\n                                        // Seek `elem` from a previously-cached index\\n                                        outerCache = parent[expando] || (parent[expando] = {});\\n                                        cache = outerCache[type] || [];\\n                                        nodeIndex = cache[0] === dirruns && cache[1];\\n                                        diff = cache[0] === dirruns && cache[2];\\n                                        node = nodeIndex && parent.childNodes[nodeIndex];\\n\\n                                        while ((node = ++nodeIndex && node && node[dir] ||\\n\\n                                            // Fallback to seeking `elem` from the start\\n                                            (diff = nodeIndex = 0) || start.pop())) {\\n\\n                                            // When found, cache indexes on `parent` and break\\n                                            if (node.nodeType === 1 && ++diff && node === elem) {\\n                                                outerCache[type] = [dirruns, nodeIndex, diff];\\n                                                break;\\n                                            }\\n                                        }\\n\\n                                        // Use previously-cached element index if available\\n                                    } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) {\\n                                        diff = cache[1];\\n\\n                                        // xml :nth-child(...) or :nth-last-child(...) or :nth(-last)?-of-type(...)\\n                                    } else {\\n                                        // Use the same loop as above to seek `elem` from the start\\n                                        while ((node = ++nodeIndex && node && node[dir] ||\\n                                            (diff = nodeIndex = 0) || start.pop())) {\\n\\n                                            if (( ofType ? node.nodeName.toLowerCase() === name : node.nodeType === 1 ) && ++diff) {\\n                                                // Cache the index of each encountered element\\n                                                if (useCache) {\\n                                                    (node[expando] || (node[expando] = {}))[type] = [dirruns, diff];\\n                                                }\\n\\n                                                if (node === elem) {\\n                                                    break;\\n                                                }\\n                                            }\\n                                        }\\n                                    }\\n\\n                                    // Incorporate the offset, then check against cycle size\\n                                    diff -= last;\\n                                    return diff === first || ( diff % first === 0 && diff / first >= 0 );\\n                                }\\n                            };\\n                    },\\n\\n                    \\\"PSEUDO\\\": function (pseudo, argument) {\\n                        // pseudo-class names are case-insensitive\\n                        // http://www.w3.org/TR/selectors/#pseudo-classes\\n                        // Prioritize by case sensitivity in case custom pseudos are added with uppercase letters\\n                        // Remember that setFilters inherits from pseudos\\n                        var args,\\n                            fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] ||\\n                                Sizzle.error(\\\"unsupported pseudo: \\\" + pseudo);\\n\\n                        // The user may use createPseudo to indicate that\\n                        // arguments are needed to create the filter function\\n                        // just as Sizzle does\\n                        if (fn[expando]) {\\n                            return fn(argument);\\n                        }\\n\\n                        // But maintain support for old signatures\\n                        if (fn.length > 1) {\\n                            args = [pseudo, pseudo, \\\"\\\", argument];\\n                            return Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ?\\n                                markFunction(function (seed, matches) {\\n                                    var idx,\\n                                        matched = fn(seed, argument),\\n                                        i = matched.length;\\n                                    while (i--) {\\n                                        idx = indexOf(seed, matched[i]);\\n                                        seed[idx] = !( matches[idx] = matched[i] );\\n                                    }\\n                                }) :\\n                                function (elem) {\\n                                    return fn(elem, 0, args);\\n                                };\\n                        }\\n\\n                        return fn;\\n                    }\\n                },\\n\\n                pseudos: {\\n                    // Potentially complex pseudos\\n                    \\\"not\\\": markFunction(function (selector) {\\n                        // Trim the selector passed to compile\\n                        // to avoid treating leading and trailing\\n                        // spaces as combinators\\n                        var input = [],\\n                            results = [],\\n                            matcher = compile(selector.replace(rtrim, \\\"$1\\\"));\\n\\n                        return matcher[expando] ?\\n                            markFunction(function (seed, matches, context, xml) {\\n                                var elem,\\n                                    unmatched = matcher(seed, null, xml, []),\\n                                    i = seed.length;\\n\\n                                // Match elements unmatched by `matcher`\\n                                while (i--) {\\n                                    if ((elem = unmatched[i])) {\\n                                        seed[i] = !(matches[i] = elem);\\n                                    }\\n                                }\\n                            }) :\\n                            function (elem, context, xml) {\\n                                input[0] = elem;\\n                                matcher(input, null, xml, results);\\n                                // Don't keep the element (issue #299)\\n                                input[0] = null;\\n                                return !results.pop();\\n                            };\\n                    }),\\n\\n                    \\\"has\\\": markFunction(function (selector) {\\n                        return function (elem) {\\n                            return Sizzle(selector, elem).length > 0;\\n                        };\\n                    }),\\n\\n                    \\\"contains\\\": markFunction(function (text) {\\n                        text = text.replace(runescape, funescape);\\n                        return function (elem) {\\n                            return ( elem.textContent || elem.innerText || getText(elem) ).indexOf(text) > -1;\\n                        };\\n                    }),\\n\\n                    // \\\"Whether an element is represented by a :lang() selector\\n                    // is based solely on the element's language value\\n                    // being equal to the identifier C,\\n                    // or beginning with the identifier C immediately followed by \\\"-\\\".\\n                    // The matching of C against the element's language value is performed case-insensitively.\\n                    // The identifier C does not have to be a valid language name.\\\"\\n                    // http://www.w3.org/TR/selectors/#lang-pseudo\\n                    \\\"lang\\\": markFunction(function (lang) {\\n                        // lang value must be a valid identifier\\n                        if (!ridentifier.test(lang || \\\"\\\")) {\\n                            Sizzle.error(\\\"unsupported lang: \\\" + lang);\\n                        }\\n                        lang = lang.replace(runescape, funescape).toLowerCase();\\n                        return function (elem) {\\n                            var elemLang;\\n                            do {\\n                                if ((elemLang = documentIsHTML ?\\n                                        elem.lang :\\n                                        elem.getAttribute(\\\"xml:lang\\\") || elem.getAttribute(\\\"lang\\\"))) {\\n\\n                                    elemLang = elemLang.toLowerCase();\\n                                    return elemLang === lang || elemLang.indexOf(lang + \\\"-\\\") === 0;\\n                                }\\n                            } while ((elem = elem.parentNode) && elem.nodeType === 1);\\n                            return false;\\n                        };\\n                    }),\\n\\n                    // Miscellaneous\\n                    \\\"target\\\": function (elem) {\\n                        var hash = window.location && window.location.hash;\\n                        return hash && hash.slice(1) === elem.id;\\n                    },\\n\\n                    \\\"root\\\": function (elem) {\\n                        return elem === docElem;\\n                    },\\n\\n                    \\\"focus\\\": function (elem) {\\n                        return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);\\n                    },\\n\\n                    // Boolean properties\\n                    \\\"enabled\\\": function (elem) {\\n                        return elem.disabled === false;\\n                    },\\n\\n                    \\\"disabled\\\": function (elem) {\\n                        return elem.disabled === true;\\n                    },\\n\\n                    \\\"checked\\\": function (elem) {\\n                        // In CSS3, :checked should return both checked and selected elements\\n                        // http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked\\n                        var nodeName = elem.nodeName.toLowerCase();\\n                        return (nodeName === \\\"input\\\" && !!elem.checked) || (nodeName === \\\"option\\\" && !!elem.selected);\\n                    },\\n\\n                    \\\"selected\\\": function (elem) {\\n                        // Accessing this property makes selected-by-default\\n                        // options in Safari work properly\\n                        if (elem.parentNode) {\\n                            elem.parentNode.selectedIndex;\\n                        }\\n\\n                        return elem.selected === true;\\n                    },\\n\\n                    // Contents\\n                    \\\"empty\\\": function (elem) {\\n                        // http://www.w3.org/TR/selectors/#empty-pseudo\\n                        // :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),\\n                        //   but not by others (comment: 8; processing instruction: 7; etc.)\\n                        // nodeType < 6 works because attributes (2) do not appear as children\\n                        for (elem = elem.firstChild; elem; elem = elem.nextSibling) {\\n                            if (elem.nodeType < 6) {\\n                                return false;\\n                            }\\n                        }\\n                        return true;\\n                    },\\n\\n                    \\\"parent\\\": function (elem) {\\n                        return !Expr.pseudos[\\\"empty\\\"](elem);\\n                    },\\n\\n                    // Element/input types\\n                    \\\"header\\\": function (elem) {\\n                        return rheader.test(elem.nodeName);\\n                    },\\n\\n                    \\\"input\\\": function (elem) {\\n                        return rinputs.test(elem.nodeName);\\n                    },\\n\\n                    \\\"button\\\": function (elem) {\\n                        var name = elem.nodeName.toLowerCase();\\n                        return name === \\\"input\\\" && elem.type === \\\"button\\\" || name === \\\"button\\\";\\n                    },\\n\\n                    \\\"text\\\": function (elem) {\\n                        var attr;\\n                        return elem.nodeName.toLowerCase() === \\\"input\\\" &&\\n                            elem.type === \\\"text\\\" &&\\n\\n                            // Support: IE<8\\n                            // New HTML5 attribute values (e.g., \\\"search\\\") appear with elem.type === \\\"text\\\"\\n                            ( (attr = elem.getAttribute(\\\"type\\\")) == null || attr.toLowerCase() === \\\"text\\\" );\\n                    },\\n\\n                    // Position-in-collection\\n                    \\\"first\\\": createPositionalPseudo(function () {\\n                        return [0];\\n                    }),\\n\\n                    \\\"last\\\": createPositionalPseudo(function (matchIndexes, length) {\\n                        return [length - 1];\\n                    }),\\n\\n                    \\\"eq\\\": createPositionalPseudo(function (matchIndexes, length, argument) {\\n                        return [argument < 0 ? argument + length : argument];\\n                    }),\\n\\n                    \\\"even\\\": createPositionalPseudo(function (matchIndexes, length) {\\n                        var i = 0;\\n                        for (; i < length; i += 2) {\\n                            matchIndexes.push(i);\\n                        }\\n                        return matchIndexes;\\n                    }),\\n\\n                    \\\"odd\\\": createPositionalPseudo(function (matchIndexes, length) {\\n                        var i = 1;\\n                        for (; i < length; i += 2) {\\n                            matchIndexes.push(i);\\n                        }\\n                        return matchIndexes;\\n                    }),\\n\\n                    \\\"lt\\\": createPositionalPseudo(function (matchIndexes, length, argument) {\\n                        var i = argument < 0 ? argument + length : argument;\\n                        for (; --i >= 0;) {\\n                            matchIndexes.push(i);\\n                        }\\n                        return matchIndexes;\\n                    }),\\n\\n                    \\\"gt\\\": createPositionalPseudo(function (matchIndexes, length, argument) {\\n                        var i = argument < 0 ? argument + length : argument;\\n                        for (; ++i < length;) {\\n                            matchIndexes.push(i);\\n                        }\\n                        return matchIndexes;\\n                    })\\n                }\\n            };\\n\\n            Expr.pseudos[\\\"nth\\\"] = Expr.pseudos[\\\"eq\\\"];\\n\\n// Add button/input type pseudos\\n            for (i in {radio: true, checkbox: true, file: true, password: true, image: true}) {\\n                Expr.pseudos[i] = createInputPseudo(i);\\n            }\\n            for (i in {submit: true, reset: true}) {\\n                Expr.pseudos[i] = createButtonPseudo(i);\\n            }\\n\\n// Easy API for creating new setFilters\\n            function setFilters() {\\n            }\\n\\n            setFilters.prototype = Expr.filters = Expr.pseudos;\\n            Expr.setFilters = new setFilters();\\n\\n            tokenize = Sizzle.tokenize = function (selector, parseOnly) {\\n                var matched, match, tokens, type,\\n                    soFar, groups, preFilters,\\n                    cached = tokenCache[selector + \\\" \\\"];\\n\\n                if (cached) {\\n                    return parseOnly ? 0 : cached.slice(0);\\n                }\\n\\n                soFar = selector;\\n                groups = [];\\n                preFilters = Expr.preFilter;\\n\\n                while (soFar) {\\n\\n                    // Comma and first run\\n                    if (!matched || (match = rcomma.exec(soFar))) {\\n                        if (match) {\\n                            // Don't consume trailing commas as valid\\n                            soFar = soFar.slice(match[0].length) || soFar;\\n                        }\\n                        groups.push((tokens = []));\\n                    }\\n\\n                    matched = false;\\n\\n                    // Combinators\\n                    if ((match = rcombinators.exec(soFar))) {\\n                        matched = match.shift();\\n                        tokens.push({\\n                            value: matched,\\n                            // Cast descendant combinators to space\\n                            type: match[0].replace(rtrim, \\\" \\\")\\n                        });\\n                        soFar = soFar.slice(matched.length);\\n                    }\\n\\n                    // Filters\\n                    for (type in Expr.filter) {\\n                        if ((match = matchExpr[type].exec(soFar)) && (!preFilters[type] ||\\n                            (match = preFilters[type](match)))) {\\n                            matched = match.shift();\\n                            tokens.push({\\n                                value: matched,\\n                                type: type,\\n                                matches: match\\n                            });\\n                            soFar = soFar.slice(matched.length);\\n                        }\\n                    }\\n\\n                    if (!matched) {\\n                        break;\\n                    }\\n                }\\n\\n                // Return the length of the invalid excess\\n                // if we're just parsing\\n                // Otherwise, throw an error or return tokens\\n                return parseOnly ?\\n                    soFar.length :\\n                    soFar ?\\n                        Sizzle.error(selector) :\\n                        // Cache the tokens\\n                        tokenCache(selector, groups).slice(0);\\n            };\\n\\n            function toSelector(tokens) {\\n                var i = 0,\\n                    len = tokens.length,\\n                    selector = \\\"\\\";\\n                for (; i < len; i++) {\\n                    selector += tokens[i].value;\\n                }\\n                return selector;\\n            }\\n\\n            function addCombinator(matcher, combinator, base) {\\n                var dir = combinator.dir,\\n                    checkNonElements = base && dir === \\\"parentNode\\\",\\n                    doneName = done++;\\n\\n                return combinator.first ?\\n                    // Check against closest ancestor/preceding element\\n                    function (elem, context, xml) {\\n                        while ((elem = elem[dir])) {\\n                            if (elem.nodeType === 1 || checkNonElements) {\\n                                return matcher(elem, context, xml);\\n                            }\\n                        }\\n                    } :\\n\\n                    // Check against all ancestor/preceding elements\\n                    function (elem, context, xml) {\\n                        var oldCache, outerCache,\\n                            newCache = [dirruns, doneName];\\n\\n                        // We can't set arbitrary data on XML nodes, so they don't benefit from dir caching\\n                        if (xml) {\\n                            while ((elem = elem[dir])) {\\n                                if (elem.nodeType === 1 || checkNonElements) {\\n                                    if (matcher(elem, context, xml)) {\\n                                        return true;\\n                                    }\\n                                }\\n                            }\\n                        } else {\\n                            while ((elem = elem[dir])) {\\n                                if (elem.nodeType === 1 || checkNonElements) {\\n                                    outerCache = elem[expando] || (elem[expando] = {});\\n                                    if ((oldCache = outerCache[dir]) &&\\n                                        oldCache[0] === dirruns && oldCache[1] === doneName) {\\n\\n                                        // Assign to newCache so results back-propagate to previous elements\\n                                        return (newCache[2] = oldCache[2]);\\n                                    } else {\\n                                        // Reuse newcache so results back-propagate to previous elements\\n                                        outerCache[dir] = newCache;\\n\\n                                        // A match means we're done; a fail means we have to keep checking\\n                                        if ((newCache[2] = matcher(elem, context, xml))) {\\n                                            return true;\\n                                        }\\n                                    }\\n                                }\\n                            }\\n                        }\\n                    };\\n            }\\n\\n            function elementMatcher(matchers) {\\n                return matchers.length > 1 ?\\n                    function (elem, context, xml) {\\n                        var i = matchers.length;\\n                        while (i--) {\\n                            if (!matchers[i](elem, context, xml)) {\\n                                return false;\\n                            }\\n                        }\\n                        return true;\\n                    } :\\n                    matchers[0];\\n            }\\n\\n            function multipleContexts(selector, contexts, results) {\\n                var i = 0,\\n                    len = contexts.length;\\n                for (; i < len; i++) {\\n                    Sizzle(selector, contexts[i], results);\\n                }\\n                return results;\\n            }\\n\\n            function condense(unmatched, map, filter, context, xml) {\\n                var elem,\\n                    newUnmatched = [],\\n                    i = 0,\\n                    len = unmatched.length,\\n                    mapped = map != null;\\n\\n                for (; i < len; i++) {\\n                    if ((elem = unmatched[i])) {\\n                        if (!filter || filter(elem, context, xml)) {\\n                            newUnmatched.push(elem);\\n                            if (mapped) {\\n                                map.push(i);\\n                            }\\n                        }\\n                    }\\n                }\\n\\n                return newUnmatched;\\n            }\\n\\n            function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {\\n                if (postFilter && !postFilter[expando]) {\\n                    postFilter = setMatcher(postFilter);\\n                }\\n                if (postFinder && !postFinder[expando]) {\\n                    postFinder = setMatcher(postFinder, postSelector);\\n                }\\n                return markFunction(function (seed, results, context, xml) {\\n                    var temp, i, elem,\\n                        preMap = [],\\n                        postMap = [],\\n                        preexisting = results.length,\\n\\n                        // Get initial elements from seed or context\\n                        elems = seed || multipleContexts(selector || \\\"*\\\", context.nodeType ? [context] : context, []),\\n\\n                        // Prefilter to get matcher input, preserving a map for seed-results synchronization\\n                        matcherIn = preFilter && ( seed || !selector ) ?\\n                            condense(elems, preMap, preFilter, context, xml) :\\n                            elems,\\n\\n                        matcherOut = matcher ?\\n                            // If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,\\n                            postFinder || ( seed ? preFilter : preexisting || postFilter ) ?\\n\\n                                // ...intermediate processing is necessary\\n                                [] :\\n\\n                                // ...otherwise use results directly\\n                                results :\\n                            matcherIn;\\n\\n                    // Find primary matches\\n                    if (matcher) {\\n                        matcher(matcherIn, matcherOut, context, xml);\\n                    }\\n\\n                    // Apply postFilter\\n                    if (postFilter) {\\n                        temp = condense(matcherOut, postMap);\\n                        postFilter(temp, [], context, xml);\\n\\n                        // Un-match failing elements by moving them back to matcherIn\\n                        i = temp.length;\\n                        while (i--) {\\n                            if ((elem = temp[i])) {\\n                                matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem);\\n                            }\\n                        }\\n                    }\\n\\n                    if (seed) {\\n                        if (postFinder || preFilter) {\\n                            if (postFinder) {\\n                                // Get the final matcherOut by condensing this intermediate into postFinder contexts\\n                                temp = [];\\n                                i = matcherOut.length;\\n                                while (i--) {\\n                                    if ((elem = matcherOut[i])) {\\n                                        // Restore matcherIn since elem is not yet a final match\\n                                        temp.push((matcherIn[i] = elem));\\n                                    }\\n                                }\\n                                postFinder(null, (matcherOut = []), temp, xml);\\n                            }\\n\\n                            // Move matched elements from seed to results to keep them synchronized\\n                            i = matcherOut.length;\\n                            while (i--) {\\n                                if ((elem = matcherOut[i]) &&\\n                                    (temp = postFinder ? indexOf(seed, elem) : preMap[i]) > -1) {\\n\\n                                    seed[temp] = !(results[temp] = elem);\\n                                }\\n                            }\\n                        }\\n\\n                        // Add elements to results, through postFinder if defined\\n                    } else {\\n                        matcherOut = condense(\\n                            matcherOut === results ?\\n                                matcherOut.splice(preexisting, matcherOut.length) :\\n                                matcherOut\\n                        );\\n                        if (postFinder) {\\n                            postFinder(null, results, matcherOut, xml);\\n                        } else {\\n                            push.apply(results, matcherOut);\\n                        }\\n                    }\\n                });\\n            }\\n\\n            function matcherFromTokens(tokens) {\\n                var checkContext, matcher, j,\\n                    len = tokens.length,\\n                    leadingRelative = Expr.relative[tokens[0].type],\\n                    implicitRelative = leadingRelative || Expr.relative[\\\" \\\"],\\n                    i = leadingRelative ? 1 : 0,\\n\\n                    // The foundational matcher ensures that elements are reachable from top-level context(s)\\n                    matchContext = addCombinator(function (elem) {\\n                        return elem === checkContext;\\n                    }, implicitRelative, true),\\n                    matchAnyContext = addCombinator(function (elem) {\\n                        return indexOf(checkContext, elem) > -1;\\n                    }, implicitRelative, true),\\n                    matchers = [function (elem, context, xml) {\\n                        var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (\\n                                (checkContext = context).nodeType ?\\n                                    matchContext(elem, context, xml) :\\n                                    matchAnyContext(elem, context, xml) );\\n                        // Avoid hanging onto element (issue #299)\\n                        checkContext = null;\\n                        return ret;\\n                    }];\\n\\n                for (; i < len; i++) {\\n                    if ((matcher = Expr.relative[tokens[i].type])) {\\n                        matchers = [addCombinator(elementMatcher(matchers), matcher)];\\n                    } else {\\n                        matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches);\\n\\n                        // Return special upon seeing a positional matcher\\n                        if (matcher[expando]) {\\n                            // Find the next relative operator (if any) for proper handling\\n                            j = ++i;\\n                            for (; j < len; j++) {\\n                                if (Expr.relative[tokens[j].type]) {\\n                                    break;\\n                                }\\n                            }\\n                            return setMatcher(\\n                                i > 1 && elementMatcher(matchers),\\n                                i > 1 && toSelector(\\n                                    // If the preceding token was a descendant combinator, insert an implicit any-element `*`\\n                                    tokens.slice(0, i - 1).concat({value: tokens[i - 2].type === \\\" \\\" ? \\\"*\\\" : \\\"\\\"})\\n                                ).replace(rtrim, \\\"$1\\\"),\\n                                matcher,\\n                                i < j && matcherFromTokens(tokens.slice(i, j)),\\n                                j < len && matcherFromTokens((tokens = tokens.slice(j))),\\n                                j < len && toSelector(tokens)\\n                            );\\n                        }\\n                        matchers.push(matcher);\\n                    }\\n                }\\n\\n                return elementMatcher(matchers);\\n            }\\n\\n            function matcherFromGroupMatchers(elementMatchers, setMatchers) {\\n                var bySet = setMatchers.length > 0,\\n                    byElement = elementMatchers.length > 0,\\n                    superMatcher = function (seed, context, xml, results, outermost) {\\n                        var elem, j, matcher,\\n                            matchedCount = 0,\\n                            i = \\\"0\\\",\\n                            unmatched = seed && [],\\n                            setMatched = [],\\n                            contextBackup = outermostContext,\\n                            // We must always have either seed elements or outermost context\\n                            elems = seed || byElement && Expr.find[\\\"TAG\\\"](\\\"*\\\", outermost),\\n                            // Use integer dirruns iff this is the outermost matcher\\n                            dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),\\n                            len = elems.length;\\n\\n                        if (outermost) {\\n                            outermostContext = context !== document && context;\\n                        }\\n\\n                        // Add elements passing elementMatchers directly to results\\n                        // Keep `i` a string if there are no elements so `matchedCount` will be \\\"00\\\" below\\n                        // Support: IE<9, Safari\\n                        // Tolerate NodeList properties (IE: \\\"length\\\"; Safari: <number>) matching elements by id\\n                        for (; i !== len && (elem = elems[i]) != null; i++) {\\n                            if (byElement && elem) {\\n                                j = 0;\\n                                while ((matcher = elementMatchers[j++])) {\\n                                    if (matcher(elem, context, xml)) {\\n                                        results.push(elem);\\n                                        break;\\n                                    }\\n                                }\\n                                if (outermost) {\\n                                    dirruns = dirrunsUnique;\\n                                }\\n                            }\\n\\n                            // Track unmatched elements for set filters\\n                            if (bySet) {\\n                                // They will have gone through all possible matchers\\n                                if ((elem = !matcher && elem)) {\\n                                    matchedCount--;\\n                                }\\n\\n                                // Lengthen the array for every element, matched or not\\n                                if (seed) {\\n                                    unmatched.push(elem);\\n                                }\\n                            }\\n                        }\\n\\n                        // Apply set filters to unmatched elements\\n                        matchedCount += i;\\n                        if (bySet && i !== matchedCount) {\\n                            j = 0;\\n                            while ((matcher = setMatchers[j++])) {\\n                                matcher(unmatched, setMatched, context, xml);\\n                            }\\n\\n                            if (seed) {\\n                                // Reintegrate element matches to eliminate the need for sorting\\n                                if (matchedCount > 0) {\\n                                    while (i--) {\\n                                        if (!(unmatched[i] || setMatched[i])) {\\n                                            setMatched[i] = pop.call(results);\\n                                        }\\n                                    }\\n                                }\\n\\n                                // Discard index placeholder values to get only actual matches\\n                                setMatched = condense(setMatched);\\n                            }\\n\\n                            // Add matches to results\\n                            push.apply(results, setMatched);\\n\\n                            // Seedless set matches succeeding multiple successful matchers stipulate sorting\\n                            if (outermost && !seed && setMatched.length > 0 &&\\n                                ( matchedCount + setMatchers.length ) > 1) {\\n\\n                                Sizzle.uniqueSort(results);\\n                            }\\n                        }\\n\\n                        // Override manipulation of globals by nested matchers\\n                        if (outermost) {\\n                            dirruns = dirrunsUnique;\\n                            outermostContext = contextBackup;\\n                        }\\n\\n                        return unmatched;\\n                    };\\n\\n                return bySet ?\\n                    markFunction(superMatcher) :\\n                    superMatcher;\\n            }\\n\\n            compile = Sizzle.compile = function (selector, match /* Internal Use Only */) {\\n                var i,\\n                    setMatchers = [],\\n                    elementMatchers = [],\\n                    cached = compilerCache[selector + \\\" \\\"];\\n\\n                if (!cached) {\\n                    // Generate a function of recursive functions that can be used to check each element\\n                    if (!match) {\\n                        match = tokenize(selector);\\n                    }\\n                    i = match.length;\\n                    while (i--) {\\n                        cached = matcherFromTokens(match[i]);\\n                        if (cached[expando]) {\\n                            setMatchers.push(cached);\\n                        } else {\\n                            elementMatchers.push(cached);\\n                        }\\n                    }\\n\\n                    // Cache the compiled function\\n                    cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));\\n\\n                    // Save selector and tokenization\\n                    cached.selector = selector;\\n                }\\n                return cached;\\n            };\\n\\n            /**\\n             * A low-level selection function that works with Sizzle's compiled\\n             *  selector functions\\n             * @param {String|Function} selector A selector or a pre-compiled\\n             *  selector function built with Sizzle.compile\\n             * @param {Element} context\\n             * @param {Array} [results]\\n             * @param {Array} [seed] A set of elements to match against\\n             */\\n            select = Sizzle.select = function (selector, context, results, seed) {\\n                var i, tokens, token, type, find,\\n                    compiled = typeof selector === \\\"function\\\" && selector,\\n                    match = !seed && tokenize((selector = compiled.selector || selector));\\n\\n                results = results || [];\\n\\n                // Try to minimize operations if there is no seed and only one group\\n                if (match.length === 1) {\\n\\n                    // Take a shortcut and set the context if the root selector is an ID\\n                    tokens = match[0] = match[0].slice(0);\\n                    if (tokens.length > 2 && (token = tokens[0]).type === \\\"ID\\\" &&\\n                        support.getById && context.nodeType === 9 && documentIsHTML &&\\n                        Expr.relative[tokens[1].type]) {\\n\\n                        context = ( Expr.find[\\\"ID\\\"](token.matches[0].replace(runescape, funescape), context) || [] )[0];\\n                        if (!context) {\\n                            return results;\\n\\n                            // Precompiled matchers will still verify ancestry, so step up a level\\n                        } else if (compiled) {\\n                            context = context.parentNode;\\n                        }\\n\\n                        selector = selector.slice(tokens.shift().value.length);\\n                    }\\n\\n                    // Fetch a seed set for right-to-left matching\\n                    i = matchExpr[\\\"needsContext\\\"].test(selector) ? 0 : tokens.length;\\n                    while (i--) {\\n                        token = tokens[i];\\n\\n                        // Abort if we hit a combinator\\n                        if (Expr.relative[(type = token.type)]) {\\n                            break;\\n                        }\\n                        if ((find = Expr.find[type])) {\\n                            // Search, expanding context for leading sibling combinators\\n                            if ((seed = find(\\n                                    token.matches[0].replace(runescape, funescape),\\n                                    rsibling.test(tokens[0].type) && testContext(context.parentNode) || context\\n                                ))) {\\n\\n                                // If seed is empty or no tokens remain, we can return early\\n                                tokens.splice(i, 1);\\n                                selector = seed.length && toSelector(tokens);\\n                                if (!selector) {\\n                                    push.apply(results, seed);\\n                                    return results;\\n                                }\\n\\n                                break;\\n                            }\\n                        }\\n                    }\\n                }\\n\\n                // Compile and execute a filtering function if one is not provided\\n                // Provide `match` to avoid retokenization if we modified the selector above\\n                ( compiled || compile(selector, match) )(\\n                    seed,\\n                    context,\\n                    !documentIsHTML,\\n                    results,\\n                    rsibling.test(selector) && testContext(context.parentNode) || context\\n                );\\n                return results;\\n            };\\n\\n// One-time assignments\\n\\n// Sort stability\\n            support.sortStable = expando.split(\\\"\\\").sort(sortOrder).join(\\\"\\\") === expando;\\n\\n// Support: Chrome 14-35+\\n// Always assume duplicates if they aren't passed to the comparison function\\n            support.detectDuplicates = !!hasDuplicate;\\n\\n// Initialize against the default document\\n            setDocument();\\n\\n// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)\\n// Detached nodes confoundingly follow *each other*\\n            support.sortDetached = assert(function (div1) {\\n                // Should return 1, but returns 4 (following)\\n                return div1.compareDocumentPosition(document.createElement(\\\"div\\\")) & 1;\\n            });\\n\\n// Support: IE<8\\n// Prevent attribute/property \\\"interpolation\\\"\\n// http://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx\\n            if (!assert(function (div) {\\n                    div.innerHTML = \\\"<a href='#'></a>\\\";\\n                    return div.firstChild.getAttribute(\\\"href\\\") === \\\"#\\\";\\n                })) {\\n                addHandle(\\\"type|href|height|width\\\", function (elem, name, isXML) {\\n                    if (!isXML) {\\n                        return elem.getAttribute(name, name.toLowerCase() === \\\"type\\\" ? 1 : 2);\\n                    }\\n                });\\n            }\\n\\n// Support: IE<9\\n// Use defaultValue in place of getAttribute(\\\"value\\\")\\n            if (!support.attributes || !assert(function (div) {\\n                    div.innerHTML = \\\"<input/>\\\";\\n                    div.firstChild.setAttribute(\\\"value\\\", \\\"\\\");\\n                    return div.firstChild.getAttribute(\\\"value\\\") === \\\"\\\";\\n                })) {\\n                addHandle(\\\"value\\\", function (elem, name, isXML) {\\n                    if (!isXML && elem.nodeName.toLowerCase() === \\\"input\\\") {\\n                        return elem.defaultValue;\\n                    }\\n                });\\n            }\\n\\n// Support: IE<9\\n// Use getAttributeNode to fetch booleans when getAttribute lies\\n            if (!assert(function (div) {\\n                    return div.getAttribute(\\\"disabled\\\") == null;\\n                })) {\\n                addHandle(booleans, function (elem, name, isXML) {\\n                    var val;\\n                    if (!isXML) {\\n                        return elem[name] === true ? name.toLowerCase() :\\n                            (val = elem.getAttributeNode(name)) && val.specified ?\\n                                val.value :\\n                                null;\\n                    }\\n                });\\n            }\\n\\n            return Sizzle;\\n\\n        })(window);\\n\\n\\n    jQuery.find = Sizzle;\\n    jQuery.expr = Sizzle.selectors;\\n    jQuery.expr[\\\":\\\"] = jQuery.expr.pseudos;\\n    jQuery.unique = Sizzle.uniqueSort;\\n    jQuery.text = Sizzle.getText;\\n    jQuery.isXMLDoc = Sizzle.isXML;\\n    jQuery.contains = Sizzle.contains;\\n\\n\\n    var rneedsContext = jQuery.expr.match.needsContext;\\n\\n    var rsingleTag = (/^<(\\\\w+)\\\\s*\\\\/?>(?:<\\\\/\\\\1>|)$/);\\n\\n\\n    var risSimple = /^.[^:#\\\\[\\\\.,]*$/;\\n\\n// Implement the identical functionality for filter and not\\n    function winnow(elements, qualifier, not) {\\n        if (jQuery.isFunction(qualifier)) {\\n            return jQuery.grep(elements, function (elem, i) {\\n                /* jshint -W018 */\\n                return !!qualifier.call(elem, i, elem) !== not;\\n            });\\n\\n        }\\n\\n        if (qualifier.nodeType) {\\n            return jQuery.grep(elements, function (elem) {\\n                return ( elem === qualifier ) !== not;\\n            });\\n\\n        }\\n\\n        if (typeof qualifier === \\\"string\\\") {\\n            if (risSimple.test(qualifier)) {\\n                return jQuery.filter(qualifier, elements, not);\\n            }\\n\\n            qualifier = jQuery.filter(qualifier, elements);\\n        }\\n\\n        return jQuery.grep(elements, function (elem) {\\n            return ( indexOf.call(qualifier, elem) >= 0 ) !== not;\\n        });\\n    }\\n\\n    jQuery.filter = function (expr, elems, not) {\\n        var elem = elems[0];\\n\\n        if (not) {\\n            expr = \\\":not(\\\" + expr + \\\")\\\";\\n        }\\n\\n        return elems.length === 1 && elem.nodeType === 1 ?\\n            jQuery.find.matchesSelector(elem, expr) ? [elem] : [] :\\n            jQuery.find.matches(expr, jQuery.grep(elems, function (elem) {\\n                return elem.nodeType === 1;\\n            }));\\n    };\\n\\n    jQuery.fn.extend({\\n        find: function (selector) {\\n            var i,\\n                len = this.length,\\n                ret = [],\\n                self = this;\\n\\n            if (typeof selector !== \\\"string\\\") {\\n                return this.pushStack(jQuery(selector).filter(function () {\\n                    for (i = 0; i < len; i++) {\\n                        if (jQuery.contains(self[i], this)) {\\n                            return true;\\n                        }\\n                    }\\n                }));\\n            }\\n\\n            for (i = 0; i < len; i++) {\\n                jQuery.find(selector, self[i], ret);\\n            }\\n\\n            // Needed because $( selector, context ) becomes $( context ).find( selector )\\n            ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret);\\n            ret.selector = this.selector ? this.selector + \\\" \\\" + selector : selector;\\n            return ret;\\n        },\\n        filter: function (selector) {\\n            return this.pushStack(winnow(this, selector || [], false));\\n        },\\n        not: function (selector) {\\n            return this.pushStack(winnow(this, selector || [], true));\\n        },\\n        is: function (selector) {\\n            return !!winnow(\\n                this,\\n\\n                // If this is a positional/relative selector, check membership in the returned set\\n                // so $(\\\"p:first\\\").is(\\\"p:last\\\") won't return true for a doc with two \\\"p\\\".\\n                typeof selector === \\\"string\\\" && rneedsContext.test(selector) ?\\n                    jQuery(selector) :\\n                    selector || [],\\n                false\\n            ).length;\\n        }\\n    });\\n\\n\\n// Initialize a jQuery object\\n\\n\\n// A central reference to the root jQuery(document)\\n    var rootjQuery,\\n\\n        // A simple way to check for HTML strings\\n        // Prioritize #id over <tag> to avoid XSS via location.hash (#9521)\\n        // Strict HTML recognition (#11290: must start with <)\\n        rquickExpr = /^(?:\\\\s*(<[\\\\w\\\\W]+>)[^>]*|#([\\\\w-]*))$/,\\n\\n        init = jQuery.fn.init = function (selector, context) {\\n            var match, elem;\\n\\n            // HANDLE: $(\\\"\\\"), $(null), $(undefined), $(false)\\n            if (!selector) {\\n                return this;\\n            }\\n\\n            // Handle HTML strings\\n            if (typeof selector === \\\"string\\\") {\\n                if (selector[0] === \\\"<\\\" && selector[selector.length - 1] === \\\">\\\" && selector.length >= 3) {\\n                    // Assume that strings that start and end with <> are HTML and skip the regex check\\n                    match = [null, selector, null];\\n\\n                } else {\\n                    match = rquickExpr.exec(selector);\\n                }\\n\\n                // Match html or make sure no context is specified for #id\\n                if (match && (match[1] || !context)) {\\n\\n                    // HANDLE: $(html) -> $(array)\\n                    if (match[1]) {\\n                        context = context instanceof jQuery ? context[0] : context;\\n\\n                        // Option to run scripts is true for back-compat\\n                        // Intentionally let the error be thrown if parseHTML is not present\\n                        jQuery.merge(this, jQuery.parseHTML(\\n                            match[1],\\n                            context && context.nodeType ? context.ownerDocument || context : document,\\n                            true\\n                        ));\\n\\n                        // HANDLE: $(html, props)\\n                        if (rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) {\\n                            for (match in context) {\\n                                // Properties of context are called as methods if possible\\n                                if (jQuery.isFunction(this[match])) {\\n                                    this[match](context[match]);\\n\\n                                    // ...and otherwise set as attributes\\n                                } else {\\n                                    this.attr(match, context[match]);\\n                                }\\n                            }\\n                        }\\n\\n                        return this;\\n\\n                        // HANDLE: $(#id)\\n                    } else {\\n                        elem = document.getElementById(match[2]);\\n\\n                        // Support: Blackberry 4.6\\n                        // gEBID returns nodes no longer in the document (#6963)\\n                        if (elem && elem.parentNode) {\\n                            // Inject the element directly into the jQuery object\\n                            this.length = 1;\\n                            this[0] = elem;\\n                        }\\n\\n                        this.context = document;\\n                        this.selector = selector;\\n                        return this;\\n                    }\\n\\n                    // HANDLE: $(expr, $(...))\\n                } else if (!context || context.jquery) {\\n                    return ( context || rootjQuery ).find(selector);\\n\\n                    // HANDLE: $(expr, context)\\n                    // (which is just equivalent to: $(context).find(expr)\\n                } else {\\n                    return this.constructor(context).find(selector);\\n                }\\n\\n                // HANDLE: $(DOMElement)\\n            } else if (selector.nodeType) {\\n                this.context = this[0] = selector;\\n                this.length = 1;\\n                return this;\\n\\n                // HANDLE: $(function)\\n                // Shortcut for document ready\\n            } else if (jQuery.isFunction(selector)) {\\n                return typeof rootjQuery.ready !== \\\"undefined\\\" ?\\n                    rootjQuery.ready(selector) :\\n                    // Execute immediately if ready is not present\\n                    selector(jQuery);\\n            }\\n\\n            if (selector.selector !== undefined) {\\n                this.selector = selector.selector;\\n                this.context = selector.context;\\n            }\\n\\n            return jQuery.makeArray(selector, this);\\n        };\\n\\n// Give the init function the jQuery prototype for later instantiation\\n    init.prototype = jQuery.fn;\\n\\n// Initialize central reference\\n    rootjQuery = jQuery(document);\\n\\n\\n    var rparentsprev = /^(?:parents|prev(?:Until|All))/,\\n        // Methods guaranteed to produce a unique set when starting from a unique set\\n        guaranteedUnique = {\\n            children: true,\\n            contents: true,\\n            next: true,\\n            prev: true\\n        };\\n\\n    jQuery.extend({\\n        dir: function (elem, dir, until) {\\n            var matched = [],\\n                truncate = until !== undefined;\\n\\n            while ((elem = elem[dir]) && elem.nodeType !== 9) {\\n                if (elem.nodeType === 1) {\\n                    if (truncate && jQuery(elem).is(until)) {\\n                        break;\\n                    }\\n                    matched.push(elem);\\n                }\\n            }\\n            return matched;\\n        },\\n\\n        sibling: function (n, elem) {\\n            var matched = [];\\n\\n            for (; n; n = n.nextSibling) {\\n                if (n.nodeType === 1 && n !== elem) {\\n                    matched.push(n);\\n                }\\n            }\\n\\n            return matched;\\n        }\\n    });\\n\\n    jQuery.fn.extend({\\n        has: function (target) {\\n            var targets = jQuery(target, this),\\n                l = targets.length;\\n\\n            return this.filter(function () {\\n                var i = 0;\\n                for (; i < l; i++) {\\n                    if (jQuery.contains(this, targets[i])) {\\n                        return true;\\n                    }\\n                }\\n            });\\n        },\\n\\n        closest: function (selectors, context) {\\n            var cur,\\n                i = 0,\\n                l = this.length,\\n                matched = [],\\n                pos = rneedsContext.test(selectors) || typeof selectors !== \\\"string\\\" ?\\n                    jQuery(selectors, context || this.context) :\\n                    0;\\n\\n            for (; i < l; i++) {\\n                for (cur = this[i]; cur && cur !== context; cur = cur.parentNode) {\\n                    // Always skip document fragments\\n                    if (cur.nodeType < 11 && (pos ?\\n                            pos.index(cur) > -1 :\\n\\n                            // Don't pass non-elements to Sizzle\\n                            cur.nodeType === 1 &&\\n                            jQuery.find.matchesSelector(cur, selectors))) {\\n\\n                        matched.push(cur);\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            return this.pushStack(matched.length > 1 ? jQuery.unique(matched) : matched);\\n        },\\n\\n        // Determine the position of an element within the set\\n        index: function (elem) {\\n\\n            // No argument, return index in parent\\n            if (!elem) {\\n                return ( this[0] && this[0].parentNode ) ? this.first().prevAll().length : -1;\\n            }\\n\\n            // Index in selector\\n            if (typeof elem === \\\"string\\\") {\\n                return indexOf.call(jQuery(elem), this[0]);\\n            }\\n\\n            // Locate the position of the desired element\\n            return indexOf.call(this,\\n\\n                // If it receives a jQuery object, the first element is used\\n                elem.jquery ? elem[0] : elem\\n            );\\n        },\\n\\n        add: function (selector, context) {\\n            return this.pushStack(\\n                jQuery.unique(\\n                    jQuery.merge(this.get(), jQuery(selector, context))\\n                )\\n            );\\n        },\\n\\n        addBack: function (selector) {\\n            return this.add(selector == null ?\\n                this.prevObject : this.prevObject.filter(selector)\\n            );\\n        }\\n    });\\n\\n    function sibling(cur, dir) {\\n        while ((cur = cur[dir]) && cur.nodeType !== 1) {\\n        }\\n        return cur;\\n    }\\n\\n    jQuery.each({\\n        parent: function (elem) {\\n            var parent = elem.parentNode;\\n            return parent && parent.nodeType !== 11 ? parent : null;\\n        },\\n        parents: function (elem) {\\n            return jQuery.dir(elem, \\\"parentNode\\\");\\n        },\\n        parentsUntil: function (elem, i, until) {\\n            return jQuery.dir(elem, \\\"parentNode\\\", until);\\n        },\\n        next: function (elem) {\\n            return sibling(elem, \\\"nextSibling\\\");\\n        },\\n        prev: function (elem) {\\n            return sibling(elem, \\\"previousSibling\\\");\\n        },\\n        nextAll: function (elem) {\\n            return jQuery.dir(elem, \\\"nextSibling\\\");\\n        },\\n        prevAll: function (elem) {\\n            return jQuery.dir(elem, \\\"previousSibling\\\");\\n        },\\n        nextUntil: function (elem, i, until) {\\n            return jQuery.dir(elem, \\\"nextSibling\\\", until);\\n        },\\n        prevUntil: function (elem, i, until) {\\n            return jQuery.dir(elem, \\\"previousSibling\\\", until);\\n        },\\n        siblings: function (elem) {\\n            return jQuery.sibling(( elem.parentNode || {} ).firstChild, elem);\\n        },\\n        children: function (elem) {\\n            return jQuery.sibling(elem.firstChild);\\n        },\\n        contents: function (elem) {\\n            return elem.contentDocument || jQuery.merge([], elem.childNodes);\\n        }\\n    }, function (name, fn) {\\n        jQuery.fn[name] = function (until, selector) {\\n            var matched = jQuery.map(this, fn, until);\\n\\n            if (name.slice(-5) !== \\\"Until\\\") {\\n                selector = until;\\n            }\\n\\n            if (selector && typeof selector === \\\"string\\\") {\\n                matched = jQuery.filter(selector, matched);\\n            }\\n\\n            if (this.length > 1) {\\n                // Remove duplicates\\n                if (!guaranteedUnique[name]) {\\n                    jQuery.unique(matched);\\n                }\\n\\n                // Reverse order for parents* and prev-derivatives\\n                if (rparentsprev.test(name)) {\\n                    matched.reverse();\\n                }\\n            }\\n\\n            return this.pushStack(matched);\\n        };\\n    });\\n    var rnotwhite = (/\\\\S+/g);\\n\\n\\n// String to Object options format cache\\n    var optionsCache = {};\\n\\n// Convert String-formatted options into Object-formatted ones and store in cache\\n    function createOptions(options) {\\n        var object = optionsCache[options] = {};\\n        jQuery.each(options.match(rnotwhite) || [], function (_, flag) {\\n            object[flag] = true;\\n        });\\n        return object;\\n    }\\n\\n    /*\\n     * Create a callback list using the following parameters:\\n     *\\n     *\\toptions: an optional list of space-separated options that will change how\\n     *\\t\\t\\tthe callback list behaves or a more traditional option object\\n     *\\n     * By default a callback list will act like an event callback list and can be\\n     * \\\"fired\\\" multiple times.\\n     *\\n     * Possible options:\\n     *\\n     *\\tonce:\\t\\t\\twill ensure the callback list can only be fired once (like a Deferred)\\n     *\\n     *\\tmemory:\\t\\t\\twill keep track of previous values and will call any callback added\\n     *\\t\\t\\t\\t\\tafter the list has been fired right away with the latest \\\"memorized\\\"\\n     *\\t\\t\\t\\t\\tvalues (like a Deferred)\\n     *\\n     *\\tunique:\\t\\t\\twill ensure a callback can only be added once (no duplicate in the list)\\n     *\\n     *\\tstopOnFalse:\\tinterrupt callings when a callback returns false\\n     *\\n     */\\n    jQuery.Callbacks = function (options) {\\n\\n        // Convert options from String-formatted to Object-formatted if needed\\n        // (we check in cache first)\\n        options = typeof options === \\\"string\\\" ?\\n            ( optionsCache[options] || createOptions(options) ) :\\n            jQuery.extend({}, options);\\n\\n        var // Last fire value (for non-forgettable lists)\\n            memory,\\n            // Flag to know if list was already fired\\n            fired,\\n            // Flag to know if list is currently firing\\n            firing,\\n            // First callback to fire (used internally by add and fireWith)\\n            firingStart,\\n            // End of the loop when firing\\n            firingLength,\\n            // Index of currently firing callback (modified by remove if needed)\\n            firingIndex,\\n            // Actual callback list\\n            list = [],\\n            // Stack of fire calls for repeatable lists\\n            stack = !options.once && [],\\n            // Fire callbacks\\n            fire = function (data) {\\n                memory = options.memory && data;\\n                fired = true;\\n                firingIndex = firingStart || 0;\\n                firingStart = 0;\\n                firingLength = list.length;\\n                firing = true;\\n                for (; list && firingIndex < firingLength; firingIndex++) {\\n                    if (list[firingIndex].apply(data[0], data[1]) === false && options.stopOnFalse) {\\n                        memory = false; // To prevent further calls using add\\n                        break;\\n                    }\\n                }\\n                firing = false;\\n                if (list) {\\n                    if (stack) {\\n                        if (stack.length) {\\n                            fire(stack.shift());\\n                        }\\n                    } else if (memory) {\\n                        list = [];\\n                    } else {\\n                        self.disable();\\n                    }\\n                }\\n            },\\n            // Actual Callbacks object\\n            self = {\\n                // Add a callback or a collection of callbacks to the list\\n                add: function () {\\n                    if (list) {\\n                        // First, we save the current length\\n                        var start = list.length;\\n                        (function add(args) {\\n                            jQuery.each(args, function (_, arg) {\\n                                var type = jQuery.type(arg);\\n                                if (type === \\\"function\\\") {\\n                                    if (!options.unique || !self.has(arg)) {\\n                                        list.push(arg);\\n                                    }\\n                                } else if (arg && arg.length && type !== \\\"string\\\") {\\n                                    // Inspect recursively\\n                                    add(arg);\\n                                }\\n                            });\\n                        })(arguments);\\n                        // Do we need to add the callbacks to the\\n                        // current firing batch?\\n                        if (firing) {\\n                            firingLength = list.length;\\n                            // With memory, if we're not firing then\\n                            // we should call right away\\n                        } else if (memory) {\\n                            firingStart = start;\\n                            fire(memory);\\n                        }\\n                    }\\n                    return this;\\n                },\\n                // Remove a callback from the list\\n                remove: function () {\\n                    if (list) {\\n                        jQuery.each(arguments, function (_, arg) {\\n                            var index;\\n                            while (( index = jQuery.inArray(arg, list, index) ) > -1) {\\n                                list.splice(index, 1);\\n                                // Handle firing indexes\\n                                if (firing) {\\n                                    if (index <= firingLength) {\\n                                        firingLength--;\\n                                    }\\n                                    if (index <= firingIndex) {\\n                                        firingIndex--;\\n                                    }\\n                                }\\n                            }\\n                        });\\n                    }\\n                    return this;\\n                },\\n                // Check if a given callback is in the list.\\n                // If no argument is given, return whether or not list has callbacks attached.\\n                has: function (fn) {\\n                    return fn ? jQuery.inArray(fn, list) > -1 : !!( list && list.length );\\n                },\\n                // Remove all callbacks from the list\\n                empty: function () {\\n                    list = [];\\n                    firingLength = 0;\\n                    return this;\\n                },\\n                // Have the list do nothing anymore\\n                disable: function () {\\n                    list = stack = memory = undefined;\\n                    return this;\\n                },\\n                // Is it disabled?\\n                disabled: function () {\\n                    return !list;\\n                },\\n                // Lock the list in its current state\\n                lock: function () {\\n                    stack = undefined;\\n                    if (!memory) {\\n                        self.disable();\\n                    }\\n                    return this;\\n                },\\n                // Is it locked?\\n                locked: function () {\\n                    return !stack;\\n                },\\n                // Call all callbacks with the given context and arguments\\n                fireWith: function (context, args) {\\n                    if (list && ( !fired || stack )) {\\n                        args = args || [];\\n                        args = [context, args.slice ? args.slice() : args];\\n                        if (firing) {\\n                            stack.push(args);\\n                        } else {\\n                            fire(args);\\n                        }\\n                    }\\n                    return this;\\n                },\\n                // Call all the callbacks with the given arguments\\n                fire: function () {\\n                    self.fireWith(this, arguments);\\n                    return this;\\n                },\\n                // To know if the callbacks have already been called at least once\\n                fired: function () {\\n                    return !!fired;\\n                }\\n            };\\n\\n        return self;\\n    };\\n\\n\\n    jQuery.extend({\\n\\n        Deferred: function (func) {\\n            var tuples = [\\n                    // action, add listener, listener list, final state\\n                    [\\\"resolve\\\", \\\"done\\\", jQuery.Callbacks(\\\"once memory\\\"), \\\"resolved\\\"],\\n                    [\\\"reject\\\", \\\"fail\\\", jQuery.Callbacks(\\\"once memory\\\"), \\\"rejected\\\"],\\n                    [\\\"notify\\\", \\\"progress\\\", jQuery.Callbacks(\\\"memory\\\")]\\n                ],\\n                state = \\\"pending\\\",\\n                promise = {\\n                    state: function () {\\n                        return state;\\n                    },\\n                    always: function () {\\n                        deferred.done(arguments).fail(arguments);\\n                        return this;\\n                    },\\n                    then: function (/* fnDone, fnFail, fnProgress */) {\\n                        var fns = arguments;\\n                        return jQuery.Deferred(function (newDefer) {\\n                            jQuery.each(tuples, function (i, tuple) {\\n                                var fn = jQuery.isFunction(fns[i]) && fns[i];\\n                                // deferred[ done | fail | progress ] for forwarding actions to newDefer\\n                                deferred[tuple[1]](function () {\\n                                    var returned = fn && fn.apply(this, arguments);\\n                                    if (returned && jQuery.isFunction(returned.promise)) {\\n                                        returned.promise()\\n                                            .done(newDefer.resolve)\\n                                            .fail(newDefer.reject)\\n                                            .progress(newDefer.notify);\\n                                    } else {\\n                                        newDefer[tuple[0] + \\\"With\\\"](this === promise ? newDefer.promise() : this, fn ? [returned] : arguments);\\n                                    }\\n                                });\\n                            });\\n                            fns = null;\\n                        }).promise();\\n                    },\\n                    // Get a promise for this deferred\\n                    // If obj is provided, the promise aspect is added to the object\\n                    promise: function (obj) {\\n                        return obj != null ? jQuery.extend(obj, promise) : promise;\\n                    }\\n                },\\n                deferred = {};\\n\\n            // Keep pipe for back-compat\\n            promise.pipe = promise.then;\\n\\n            // Add list-specific methods\\n            jQuery.each(tuples, function (i, tuple) {\\n                var list = tuple[2],\\n                    stateString = tuple[3];\\n\\n                // promise[ done | fail | progress ] = list.add\\n                promise[tuple[1]] = list.add;\\n\\n                // Handle state\\n                if (stateString) {\\n                    list.add(function () {\\n                        // state = [ resolved | rejected ]\\n                        state = stateString;\\n\\n                        // [ reject_list | resolve_list ].disable; progress_list.lock\\n                    }, tuples[i ^ 1][2].disable, tuples[2][2].lock);\\n                }\\n\\n                // deferred[ resolve | reject | notify ]\\n                deferred[tuple[0]] = function () {\\n                    deferred[tuple[0] + \\\"With\\\"](this === deferred ? promise : this, arguments);\\n                    return this;\\n                };\\n                deferred[tuple[0] + \\\"With\\\"] = list.fireWith;\\n            });\\n\\n            // Make the deferred a promise\\n            promise.promise(deferred);\\n\\n            // Call given func if any\\n            if (func) {\\n                func.call(deferred, deferred);\\n            }\\n\\n            // All done!\\n            return deferred;\\n        },\\n\\n        // Deferred helper\\n        when: function (subordinate /* , ..., subordinateN */) {\\n            var i = 0,\\n                resolveValues = slice.call(arguments),\\n                length = resolveValues.length,\\n\\n                // the count of uncompleted subordinates\\n                remaining = length !== 1 || ( subordinate && jQuery.isFunction(subordinate.promise) ) ? length : 0,\\n\\n                // the master Deferred. If resolveValues consist of only a single Deferred, just use that.\\n                deferred = remaining === 1 ? subordinate : jQuery.Deferred(),\\n\\n                // Update function for both resolve and progress values\\n                updateFunc = function (i, contexts, values) {\\n                    return function (value) {\\n                        contexts[i] = this;\\n                        values[i] = arguments.length > 1 ? slice.call(arguments) : value;\\n                        if (values === progressValues) {\\n                            deferred.notifyWith(contexts, values);\\n                        } else if (!( --remaining )) {\\n                            deferred.resolveWith(contexts, values);\\n                        }\\n                    };\\n                },\\n\\n                progressValues, progressContexts, resolveContexts;\\n\\n            // Add listeners to Deferred subordinates; treat others as resolved\\n            if (length > 1) {\\n                progressValues = new Array(length);\\n                progressContexts = new Array(length);\\n                resolveContexts = new Array(length);\\n                for (; i < length; i++) {\\n                    if (resolveValues[i] && jQuery.isFunction(resolveValues[i].promise)) {\\n                        resolveValues[i].promise()\\n                            .done(updateFunc(i, resolveContexts, resolveValues))\\n                            .fail(deferred.reject)\\n                            .progress(updateFunc(i, progressContexts, progressValues));\\n                    } else {\\n                        --remaining;\\n                    }\\n                }\\n            }\\n\\n            // If we're not waiting on anything, resolve the master\\n            if (!remaining) {\\n                deferred.resolveWith(resolveContexts, resolveValues);\\n            }\\n\\n            return deferred.promise();\\n        }\\n    });\\n\\n\\n// The deferred used on DOM ready\\n    var readyList;\\n\\n    jQuery.fn.ready = function (fn) {\\n        // Add the callback\\n        jQuery.ready.promise().done(fn);\\n\\n        return this;\\n    };\\n\\n    jQuery.extend({\\n        // Is the DOM ready to be used? Set to true once it occurs.\\n        isReady: false,\\n\\n        // A counter to track how many items to wait for before\\n        // the ready event fires. See #6781\\n        readyWait: 1,\\n\\n        // Hold (or release) the ready event\\n        holdReady: function (hold) {\\n            if (hold) {\\n                jQuery.readyWait++;\\n            } else {\\n                jQuery.ready(true);\\n            }\\n        },\\n\\n        // Handle when the DOM is ready\\n        ready: function (wait) {\\n\\n            // Abort if there are pending holds or we're already ready\\n            if (wait === true ? --jQuery.readyWait : jQuery.isReady) {\\n                return;\\n            }\\n\\n            // Remember that the DOM is ready\\n            jQuery.isReady = true;\\n\\n            // If a normal DOM Ready event fired, decrement, and wait if need be\\n            if (wait !== true && --jQuery.readyWait > 0) {\\n                return;\\n            }\\n\\n            // If there are functions bound, to execute\\n            readyList.resolveWith(document, [jQuery]);\\n\\n            // Trigger any bound ready events\\n            if (jQuery.fn.triggerHandler) {\\n                jQuery(document).triggerHandler(\\\"ready\\\");\\n                jQuery(document).off(\\\"ready\\\");\\n            }\\n        }\\n    });\\n\\n    /**\\n     * The ready event handler and self cleanup method\\n     */\\n    function completed() {\\n        document.removeEventListener(\\\"DOMContentLoaded\\\", completed, false);\\n        window.removeEventListener(\\\"load\\\", completed, false);\\n        jQuery.ready();\\n    }\\n\\n    jQuery.ready.promise = function (obj) {\\n        if (!readyList) {\\n\\n            readyList = jQuery.Deferred();\\n\\n            // Catch cases where $(document).ready() is called after the browser event has already occurred.\\n            // We once tried to use readyState \\\"interactive\\\" here, but it caused issues like the one\\n            // discovered by ChrisS here: http://bugs.jquery.com/ticket/12282#comment:15\\n            if (document.readyState === \\\"complete\\\") {\\n                // Handle it asynchronously to allow scripts the opportunity to delay ready\\n                setTimeout(jQuery.ready);\\n\\n            } else {\\n\\n                // Use the handy event callback\\n                document.addEventListener(\\\"DOMContentLoaded\\\", completed, false);\\n\\n                // A fallback to window.onload, that will always work\\n                window.addEventListener(\\\"load\\\", completed, false);\\n            }\\n        }\\n        return readyList.promise(obj);\\n    };\\n\\n// Kick off the DOM ready check even if the user does not\\n    jQuery.ready.promise();\\n\\n\\n// Multifunctional method to get and set values of a collection\\n// The value/s can optionally be executed if it's a function\\n    var access = jQuery.access = function (elems, fn, key, value, chainable, emptyGet, raw) {\\n        var i = 0,\\n            len = elems.length,\\n            bulk = key == null;\\n\\n        // Sets many values\\n        if (jQuery.type(key) === \\\"object\\\") {\\n            chainable = true;\\n            for (i in key) {\\n                jQuery.access(elems, fn, i, key[i], true, emptyGet, raw);\\n            }\\n\\n            // Sets one value\\n        } else if (value !== undefined) {\\n            chainable = true;\\n\\n            if (!jQuery.isFunction(value)) {\\n                raw = true;\\n            }\\n\\n            if (bulk) {\\n                // Bulk operations run against the entire set\\n                if (raw) {\\n                    fn.call(elems, value);\\n                    fn = null;\\n\\n                    // ...except when executing function values\\n                } else {\\n                    bulk = fn;\\n                    fn = function (elem, key, value) {\\n                        return bulk.call(jQuery(elem), value);\\n                    };\\n                }\\n            }\\n\\n            if (fn) {\\n                for (; i < len; i++) {\\n                    fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));\\n                }\\n            }\\n        }\\n\\n        return chainable ?\\n            elems :\\n\\n            // Gets\\n            bulk ?\\n                fn.call(elems) :\\n                len ? fn(elems[0], key) : emptyGet;\\n    };\\n\\n\\n    /**\\n     * Determines whether an object can have data\\n     */\\n    jQuery.acceptData = function (owner) {\\n        // Accepts only:\\n        //  - Node\\n        //    - Node.ELEMENT_NODE\\n        //    - Node.DOCUMENT_NODE\\n        //  - Object\\n        //    - Any\\n        /* jshint -W018 */\\n        return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );\\n    };\\n\\n\\n    function Data() {\\n        // Support: Android<4,\\n        // Old WebKit does not have Object.preventExtensions/freeze method,\\n        // return new empty object instead with no [[set]] accessor\\n        Object.defineProperty(this.cache = {}, 0, {\\n            get: function () {\\n                return {};\\n            }\\n        });\\n\\n        this.expando = jQuery.expando + Data.uid++;\\n    }\\n\\n    Data.uid = 1;\\n    Data.accepts = jQuery.acceptData;\\n\\n    Data.prototype = {\\n        key: function (owner) {\\n            // We can accept data for non-element nodes in modern browsers,\\n            // but we should not, see #8335.\\n            // Always return the key for a frozen object.\\n            if (!Data.accepts(owner)) {\\n                return 0;\\n            }\\n\\n            var descriptor = {},\\n                // Check if the owner object already has a cache key\\n                unlock = owner[this.expando];\\n\\n            // If not, create one\\n            if (!unlock) {\\n                unlock = Data.uid++;\\n\\n                // Secure it in a non-enumerable, non-writable property\\n                try {\\n                    descriptor[this.expando] = {value: unlock};\\n                    Object.defineProperties(owner, descriptor);\\n\\n                    // Support: Android<4\\n                    // Fallback to a less secure definition\\n                } catch (e) {\\n                    descriptor[this.expando] = unlock;\\n                    jQuery.extend(owner, descriptor);\\n                }\\n            }\\n\\n            // Ensure the cache object\\n            if (!this.cache[unlock]) {\\n                this.cache[unlock] = {};\\n            }\\n\\n            return unlock;\\n        },\\n        set: function (owner, data, value) {\\n            var prop,\\n                // There may be an unlock assigned to this node,\\n                // if there is no entry for this \\\"owner\\\", create one inline\\n                // and set the unlock as though an owner entry had always existed\\n                unlock = this.key(owner),\\n                cache = this.cache[unlock];\\n\\n            // Handle: [ owner, key, value ] args\\n            if (typeof data === \\\"string\\\") {\\n                cache[data] = value;\\n\\n                // Handle: [ owner, { properties } ] args\\n            } else {\\n                // Fresh assignments by object are shallow copied\\n                if (jQuery.isEmptyObject(cache)) {\\n                    jQuery.extend(this.cache[unlock], data);\\n                    // Otherwise, copy the properties one-by-one to the cache object\\n                } else {\\n                    for (prop in data) {\\n                        cache[prop] = data[prop];\\n                    }\\n                }\\n            }\\n            return cache;\\n        },\\n        get: function (owner, key) {\\n            // Either a valid cache is found, or will be created.\\n            // New caches will be created and the unlock returned,\\n            // allowing direct access to the newly created\\n            // empty data object. A valid owner object must be provided.\\n            var cache = this.cache[this.key(owner)];\\n\\n            return key === undefined ?\\n                cache : cache[key];\\n        },\\n        access: function (owner, key, value) {\\n            var stored;\\n            // In cases where either:\\n            //\\n            //   1. No key was specified\\n            //   2. A string key was specified, but no value provided\\n            //\\n            // Take the \\\"read\\\" path and allow the get method to determine\\n            // which value to return, respectively either:\\n            //\\n            //   1. The entire cache object\\n            //   2. The data stored at the key\\n            //\\n            if (key === undefined ||\\n                ((key && typeof key === \\\"string\\\") && value === undefined)) {\\n\\n                stored = this.get(owner, key);\\n\\n                return stored !== undefined ?\\n                    stored : this.get(owner, jQuery.camelCase(key));\\n            }\\n\\n            // [*]When the key is not a string, or both a key and value\\n            // are specified, set or extend (existing objects) with either:\\n            //\\n            //   1. An object of properties\\n            //   2. A key and value\\n            //\\n            this.set(owner, key, value);\\n\\n            // Since the \\\"set\\\" path can have two possible entry points\\n            // return the expected data based on which path was taken[*]\\n            return value !== undefined ? value : key;\\n        },\\n        remove: function (owner, key) {\\n            var i, name, camel,\\n                unlock = this.key(owner),\\n                cache = this.cache[unlock];\\n\\n            if (key === undefined) {\\n                this.cache[unlock] = {};\\n\\n            } else {\\n                // Support array or space separated string of keys\\n                if (jQuery.isArray(key)) {\\n                    // If \\\"name\\\" is an array of keys...\\n                    // When data is initially created, via (\\\"key\\\", \\\"val\\\") signature,\\n                    // keys will be converted to camelCase.\\n                    // Since there is no way to tell _how_ a key was added, remove\\n                    // both plain key and camelCase key. #12786\\n                    // This will only penalize the array argument path.\\n                    name = key.concat(key.map(jQuery.camelCase));\\n                } else {\\n                    camel = jQuery.camelCase(key);\\n                    // Try the string as a key before any manipulation\\n                    if (key in cache) {\\n                        name = [key, camel];\\n                    } else {\\n                        // If a key with the spaces exists, use it.\\n                        // Otherwise, create an array by matching non-whitespace\\n                        name = camel;\\n                        name = name in cache ?\\n                            [name] : ( name.match(rnotwhite) || [] );\\n                    }\\n                }\\n\\n                i = name.length;\\n                while (i--) {\\n                    delete cache[name[i]];\\n                }\\n            }\\n        },\\n        hasData: function (owner) {\\n            return !jQuery.isEmptyObject(\\n                this.cache[owner[this.expando]] || {}\\n            );\\n        },\\n        discard: function (owner) {\\n            if (owner[this.expando]) {\\n                delete this.cache[owner[this.expando]];\\n            }\\n        }\\n    };\\n    var data_priv = new Data();\\n\\n    var data_user = new Data();\\n\\n\\n//\\tImplementation Summary\\n//\\n//\\t1. Enforce API surface and semantic compatibility with 1.9.x branch\\n//\\t2. Improve the module's maintainability by reducing the storage\\n//\\t\\tpaths to a single mechanism.\\n//\\t3. Use the same single mechanism to support \\\"private\\\" and \\\"user\\\" data.\\n//\\t4. _Never_ expose \\\"private\\\" data to user code (TODO: Drop _data, _removeData)\\n//\\t5. Avoid exposing implementation details on user objects (eg. expando properties)\\n//\\t6. Provide a clear path for implementation upgrade to WeakMap in 2014\\n\\n    var rbrace = /^(?:\\\\{[\\\\w\\\\W]*\\\\}|\\\\[[\\\\w\\\\W]*\\\\])$/,\\n        rmultiDash = /([A-Z])/g;\\n\\n    function dataAttr(elem, key, data) {\\n        var name;\\n\\n        // If nothing was found internally, try to fetch any\\n        // data from the HTML5 data-* attribute\\n        if (data === undefined && elem.nodeType === 1) {\\n            name = \\\"data-\\\" + key.replace(rmultiDash, \\\"-$1\\\").toLowerCase();\\n            data = elem.getAttribute(name);\\n\\n            if (typeof data === \\\"string\\\") {\\n                try {\\n                    data = data === \\\"true\\\" ? true :\\n                        data === \\\"false\\\" ? false :\\n                            data === \\\"null\\\" ? null :\\n                                // Only convert to a number if it doesn't change the string\\n                                +data + \\\"\\\" === data ? +data :\\n                                    rbrace.test(data) ? jQuery.parseJSON(data) :\\n                                        data;\\n                } catch (e) {\\n                }\\n\\n                // Make sure we set the data so it isn't changed later\\n                data_user.set(elem, key, data);\\n            } else {\\n                data = undefined;\\n            }\\n        }\\n        return data;\\n    }\\n\\n    jQuery.extend({\\n        hasData: function (elem) {\\n            return data_user.hasData(elem) || data_priv.hasData(elem);\\n        },\\n\\n        data: function (elem, name, data) {\\n            return data_user.access(elem, name, data);\\n        },\\n\\n        removeData: function (elem, name) {\\n            data_user.remove(elem, name);\\n        },\\n\\n        // TODO: Now that all calls to _data and _removeData have been replaced\\n        // with direct calls to data_priv methods, these can be deprecated.\\n        _data: function (elem, name, data) {\\n            return data_priv.access(elem, name, data);\\n        },\\n\\n        _removeData: function (elem, name) {\\n            data_priv.remove(elem, name);\\n        }\\n    });\\n\\n    jQuery.fn.extend({\\n        data: function (key, value) {\\n            var i, name, data,\\n                elem = this[0],\\n                attrs = elem && elem.attributes;\\n\\n            // Gets all values\\n            if (key === undefined) {\\n                if (this.length) {\\n                    data = data_user.get(elem);\\n\\n                    if (elem.nodeType === 1 && !data_priv.get(elem, \\\"hasDataAttrs\\\")) {\\n                        i = attrs.length;\\n                        while (i--) {\\n\\n                            // Support: IE11+\\n                            // The attrs elements can be null (#14894)\\n                            if (attrs[i]) {\\n                                name = attrs[i].name;\\n                                if (name.indexOf(\\\"data-\\\") === 0) {\\n                                    name = jQuery.camelCase(name.slice(5));\\n                                    dataAttr(elem, name, data[name]);\\n                                }\\n                            }\\n                        }\\n                        data_priv.set(elem, \\\"hasDataAttrs\\\", true);\\n                    }\\n                }\\n\\n                return data;\\n            }\\n\\n            // Sets multiple values\\n            if (typeof key === \\\"object\\\") {\\n                return this.each(function () {\\n                    data_user.set(this, key);\\n                });\\n            }\\n\\n            return access(this, function (value) {\\n                var data,\\n                    camelKey = jQuery.camelCase(key);\\n\\n                // The calling jQuery object (element matches) is not empty\\n                // (and therefore has an element appears at this[ 0 ]) and the\\n                // `value` parameter was not undefined. An empty jQuery object\\n                // will result in `undefined` for elem = this[ 0 ] which will\\n                // throw an exception if an attempt to read a data cache is made.\\n                if (elem && value === undefined) {\\n                    // Attempt to get data from the cache\\n                    // with the key as-is\\n                    data = data_user.get(elem, key);\\n                    if (data !== undefined) {\\n                        return data;\\n                    }\\n\\n                    // Attempt to get data from the cache\\n                    // with the key camelized\\n                    data = data_user.get(elem, camelKey);\\n                    if (data !== undefined) {\\n                        return data;\\n                    }\\n\\n                    // Attempt to \\\"discover\\\" the data in\\n                    // HTML5 custom data-* attrs\\n                    data = dataAttr(elem, camelKey, undefined);\\n                    if (data !== undefined) {\\n                        return data;\\n                    }\\n\\n                    // We tried really hard, but the data doesn't exist.\\n                    return;\\n                }\\n\\n                // Set the data...\\n                this.each(function () {\\n                    // First, attempt to store a copy or reference of any\\n                    // data that might've been store with a camelCased key.\\n                    var data = data_user.get(this, camelKey);\\n\\n                    // For HTML5 data-* attribute interop, we have to\\n                    // store property names with dashes in a camelCase form.\\n                    // This might not apply to all properties...*\\n                    data_user.set(this, camelKey, value);\\n\\n                    // *... In the case of properties that might _actually_\\n                    // have dashes, we need to also store a copy of that\\n                    // unchanged property.\\n                    if (key.indexOf(\\\"-\\\") !== -1 && data !== undefined) {\\n                        data_user.set(this, key, value);\\n                    }\\n                });\\n            }, null, value, arguments.length > 1, null, true);\\n        },\\n\\n        removeData: function (key) {\\n            return this.each(function () {\\n                data_user.remove(this, key);\\n            });\\n        }\\n    });\\n\\n\\n    jQuery.extend({\\n        queue: function (elem, type, data) {\\n            var queue;\\n\\n            if (elem) {\\n                type = ( type || \\\"fx\\\" ) + \\\"queue\\\";\\n                queue = data_priv.get(elem, type);\\n\\n                // Speed up dequeue by getting out quickly if this is just a lookup\\n                if (data) {\\n                    if (!queue || jQuery.isArray(data)) {\\n                        queue = data_priv.access(elem, type, jQuery.makeArray(data));\\n                    } else {\\n                        queue.push(data);\\n                    }\\n                }\\n                return queue || [];\\n            }\\n        },\\n\\n        dequeue: function (elem, type) {\\n            type = type || \\\"fx\\\";\\n\\n            var queue = jQuery.queue(elem, type),\\n                startLength = queue.length,\\n                fn = queue.shift(),\\n                hooks = jQuery._queueHooks(elem, type),\\n                next = function () {\\n                    jQuery.dequeue(elem, type);\\n                };\\n\\n            // If the fx queue is dequeued, always remove the progress sentinel\\n            if (fn === \\\"inprogress\\\") {\\n                fn = queue.shift();\\n                startLength--;\\n            }\\n\\n            if (fn) {\\n\\n                // Add a progress sentinel to prevent the fx queue from being\\n                // automatically dequeued\\n                if (type === \\\"fx\\\") {\\n                    queue.unshift(\\\"inprogress\\\");\\n                }\\n\\n                // Clear up the last queue stop function\\n                delete hooks.stop;\\n                fn.call(elem, next, hooks);\\n            }\\n\\n            if (!startLength && hooks) {\\n                hooks.empty.fire();\\n            }\\n        },\\n\\n        // Not public - generate a queueHooks object, or return the current one\\n        _queueHooks: function (elem, type) {\\n            var key = type + \\\"queueHooks\\\";\\n            return data_priv.get(elem, key) || data_priv.access(elem, key, {\\n                    empty: jQuery.Callbacks(\\\"once memory\\\").add(function () {\\n                        data_priv.remove(elem, [type + \\\"queue\\\", key]);\\n                    })\\n                });\\n        }\\n    });\\n\\n    jQuery.fn.extend({\\n        queue: function (type, data) {\\n            var setter = 2;\\n\\n            if (typeof type !== \\\"string\\\") {\\n                data = type;\\n                type = \\\"fx\\\";\\n                setter--;\\n            }\\n\\n            if (arguments.length < setter) {\\n                return jQuery.queue(this[0], type);\\n            }\\n\\n            return data === undefined ?\\n                this :\\n                this.each(function () {\\n                    var queue = jQuery.queue(this, type, data);\\n\\n                    // Ensure a hooks for this queue\\n                    jQuery._queueHooks(this, type);\\n\\n                    if (type === \\\"fx\\\" && queue[0] !== \\\"inprogress\\\") {\\n                        jQuery.dequeue(this, type);\\n                    }\\n                });\\n        },\\n        dequeue: function (type) {\\n            return this.each(function () {\\n                jQuery.dequeue(this, type);\\n            });\\n        },\\n        clearQueue: function (type) {\\n            return this.queue(type || \\\"fx\\\", []);\\n        },\\n        // Get a promise resolved when queues of a certain type\\n        // are emptied (fx is the type by default)\\n        promise: function (type, obj) {\\n            var tmp,\\n                count = 1,\\n                defer = jQuery.Deferred(),\\n                elements = this,\\n                i = this.length,\\n                resolve = function () {\\n                    if (!( --count )) {\\n                        defer.resolveWith(elements, [elements]);\\n                    }\\n                };\\n\\n            if (typeof type !== \\\"string\\\") {\\n                obj = type;\\n                type = undefined;\\n            }\\n            type = type || \\\"fx\\\";\\n\\n            while (i--) {\\n                tmp = data_priv.get(elements[i], type + \\\"queueHooks\\\");\\n                if (tmp && tmp.empty) {\\n                    count++;\\n                    tmp.empty.add(resolve);\\n                }\\n            }\\n            resolve();\\n            return defer.promise(obj);\\n        }\\n    });\\n    var pnum = (/[+-]?(?:\\\\d*\\\\.|)\\\\d+(?:[eE][+-]?\\\\d+|)/).source;\\n\\n    var cssExpand = [\\\"Top\\\", \\\"Right\\\", \\\"Bottom\\\", \\\"Left\\\"];\\n\\n    var isHidden = function (elem, el) {\\n        // isHidden might be called from jQuery#filter function;\\n        // in that case, element will be second argument\\n        elem = el || elem;\\n        return jQuery.css(elem, \\\"display\\\") === \\\"none\\\" || !jQuery.contains(elem.ownerDocument, elem);\\n    };\\n\\n    var rcheckableType = (/^(?:checkbox|radio)$/i);\\n\\n\\n    (function () {\\n        var fragment = document.createDocumentFragment(),\\n            div = fragment.appendChild(document.createElement(\\\"div\\\")),\\n            input = document.createElement(\\\"input\\\");\\n\\n        // Support: Safari<=5.1\\n        // Check state lost if the name is set (#11217)\\n        // Support: Windows Web Apps (WWA)\\n        // `name` and `type` must use .setAttribute for WWA (#14901)\\n        input.setAttribute(\\\"type\\\", \\\"radio\\\");\\n        input.setAttribute(\\\"checked\\\", \\\"checked\\\");\\n        input.setAttribute(\\\"name\\\", \\\"t\\\");\\n\\n        div.appendChild(input);\\n\\n        // Support: Safari<=5.1, Android<4.2\\n        // Older WebKit doesn't clone checked state correctly in fragments\\n        support.checkClone = div.cloneNode(true).cloneNode(true).lastChild.checked;\\n\\n        // Support: IE<=11+\\n        // Make sure textarea (and checkbox) defaultValue is properly cloned\\n        div.innerHTML = \\\"<textarea>x</textarea>\\\";\\n        support.noCloneChecked = !!div.cloneNode(true).lastChild.defaultValue;\\n    })();\\n    var strundefined = typeof undefined;\\n\\n\\n    support.focusinBubbles = \\\"onfocusin\\\" in window;\\n\\n\\n    var\\n        rkeyEvent = /^key/,\\n        rmouseEvent = /^(?:mouse|pointer|contextmenu)|click/,\\n        rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,\\n        rtypenamespace = /^([^.]*)(?:\\\\.(.+)|)$/;\\n\\n    function returnTrue() {\\n        return true;\\n    }\\n\\n    function returnFalse() {\\n        return false;\\n    }\\n\\n    function safeActiveElement() {\\n        try {\\n            return document.activeElement;\\n        } catch (err) {\\n        }\\n    }\\n\\n    /*\\n     * Helper functions for managing events -- not part of the public interface.\\n     * Props to Dean Edwards' addEvent library for many of the ideas.\\n     */\\n    jQuery.event = {\\n\\n        global: {},\\n\\n        add: function (elem, types, handler, data, selector) {\\n\\n            var handleObjIn, eventHandle, tmp,\\n                events, t, handleObj,\\n                special, handlers, type, namespaces, origType,\\n                elemData = data_priv.get(elem);\\n\\n            // Don't attach events to noData or text/comment nodes (but allow plain objects)\\n            if (!elemData) {\\n                return;\\n            }\\n\\n            // Caller can pass in an object of custom data in lieu of the handler\\n            if (handler.handler) {\\n                handleObjIn = handler;\\n                handler = handleObjIn.handler;\\n                selector = handleObjIn.selector;\\n            }\\n\\n            // Make sure that the handler has a unique ID, used to find/remove it later\\n            if (!handler.guid) {\\n                handler.guid = jQuery.guid++;\\n            }\\n\\n            // Init the element's event structure and main handler, if this is the first\\n            if (!(events = elemData.events)) {\\n                events = elemData.events = {};\\n            }\\n            if (!(eventHandle = elemData.handle)) {\\n                eventHandle = elemData.handle = function (e) {\\n                    // Discard the second event of a jQuery.event.trigger() and\\n                    // when an event is called after a page has unloaded\\n                    return typeof jQuery !== strundefined && jQuery.event.triggered !== e.type ?\\n                        jQuery.event.dispatch.apply(elem, arguments) : undefined;\\n                };\\n            }\\n\\n            // Handle multiple events separated by a space\\n            types = ( types || \\\"\\\" ).match(rnotwhite) || [\\\"\\\"];\\n            t = types.length;\\n            while (t--) {\\n                tmp = rtypenamespace.exec(types[t]) || [];\\n                type = origType = tmp[1];\\n                namespaces = ( tmp[2] || \\\"\\\" ).split(\\\".\\\").sort();\\n\\n                // There *must* be a type, no attaching namespace-only handlers\\n                if (!type) {\\n                    continue;\\n                }\\n\\n                // If event changes its type, use the special event handlers for the changed type\\n                special = jQuery.event.special[type] || {};\\n\\n                // If selector defined, determine special event api type, otherwise given type\\n                type = ( selector ? special.delegateType : special.bindType ) || type;\\n\\n                // Update special based on newly reset type\\n                special = jQuery.event.special[type] || {};\\n\\n                // handleObj is passed to all event handlers\\n                handleObj = jQuery.extend({\\n                    type: type,\\n                    origType: origType,\\n                    data: data,\\n                    handler: handler,\\n                    guid: handler.guid,\\n                    selector: selector,\\n                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),\\n                    namespace: namespaces.join(\\\".\\\")\\n                }, handleObjIn);\\n\\n                // Init the event handler queue if we're the first\\n                if (!(handlers = events[type])) {\\n                    handlers = events[type] = [];\\n                    handlers.delegateCount = 0;\\n\\n                    // Only use addEventListener if the special events handler returns false\\n                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {\\n                        if (elem.addEventListener) {\\n                            elem.addEventListener(type, eventHandle, false);\\n                        }\\n                    }\\n                }\\n\\n                if (special.add) {\\n                    special.add.call(elem, handleObj);\\n\\n                    if (!handleObj.handler.guid) {\\n                        handleObj.handler.guid = handler.guid;\\n                    }\\n                }\\n\\n                // Add to the element's handler list, delegates in front\\n                if (selector) {\\n                    handlers.splice(handlers.delegateCount++, 0, handleObj);\\n                } else {\\n                    handlers.push(handleObj);\\n                }\\n\\n                // Keep track of which events have ever been used, for event optimization\\n                jQuery.event.global[type] = true;\\n            }\\n\\n        },\\n\\n        // Detach an event or set of events from an element\\n        remove: function (elem, types, handler, selector, mappedTypes) {\\n\\n            var j, origCount, tmp,\\n                events, t, handleObj,\\n                special, handlers, type, namespaces, origType,\\n                elemData = data_priv.hasData(elem) && data_priv.get(elem);\\n\\n            if (!elemData || !(events = elemData.events)) {\\n                return;\\n            }\\n\\n            // Once for each type.namespace in types; type may be omitted\\n            types = ( types || \\\"\\\" ).match(rnotwhite) || [\\\"\\\"];\\n            t = types.length;\\n            while (t--) {\\n                tmp = rtypenamespace.exec(types[t]) || [];\\n                type = origType = tmp[1];\\n                namespaces = ( tmp[2] || \\\"\\\" ).split(\\\".\\\").sort();\\n\\n                // Unbind all events (on this namespace, if provided) for the element\\n                if (!type) {\\n                    for (type in events) {\\n                        jQuery.event.remove(elem, type + types[t], handler, selector, true);\\n                    }\\n                    continue;\\n                }\\n\\n                special = jQuery.event.special[type] || {};\\n                type = ( selector ? special.delegateType : special.bindType ) || type;\\n                handlers = events[type] || [];\\n                tmp = tmp[2] && new RegExp(\\\"(^|\\\\\\\\.)\\\" + namespaces.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\") + \\\"(\\\\\\\\.|$)\\\");\\n\\n                // Remove matching events\\n                origCount = j = handlers.length;\\n                while (j--) {\\n                    handleObj = handlers[j];\\n\\n                    if (( mappedTypes || origType === handleObj.origType ) &&\\n                        ( !handler || handler.guid === handleObj.guid ) &&\\n                        ( !tmp || tmp.test(handleObj.namespace) ) &&\\n                        ( !selector || selector === handleObj.selector || selector === \\\"**\\\" && handleObj.selector )) {\\n                        handlers.splice(j, 1);\\n\\n                        if (handleObj.selector) {\\n                            handlers.delegateCount--;\\n                        }\\n                        if (special.remove) {\\n                            special.remove.call(elem, handleObj);\\n                        }\\n                    }\\n                }\\n\\n                // Remove generic event handler if we removed something and no more handlers exist\\n                // (avoids potential for endless recursion during removal of special event handlers)\\n                if (origCount && !handlers.length) {\\n                    if (!special.teardown || special.teardown.call(elem, namespaces, elemData.handle) === false) {\\n                        jQuery.removeEvent(elem, type, elemData.handle);\\n                    }\\n\\n                    delete events[type];\\n                }\\n            }\\n\\n            // Remove the expando if it's no longer used\\n            if (jQuery.isEmptyObject(events)) {\\n                delete elemData.handle;\\n                data_priv.remove(elem, \\\"events\\\");\\n            }\\n        },\\n\\n        trigger: function (event, data, elem, onlyHandlers) {\\n\\n            var i, cur, tmp, bubbleType, ontype, handle, special,\\n                eventPath = [elem || document],\\n                type = hasOwn.call(event, \\\"type\\\") ? event.type : event,\\n                namespaces = hasOwn.call(event, \\\"namespace\\\") ? event.namespace.split(\\\".\\\") : [];\\n\\n            cur = tmp = elem = elem || document;\\n\\n            // Don't do events on text and comment nodes\\n            if (elem.nodeType === 3 || elem.nodeType === 8) {\\n                return;\\n            }\\n\\n            // focus/blur morphs to focusin/out; ensure we're not firing them right now\\n            if (rfocusMorph.test(type + jQuery.event.triggered)) {\\n                return;\\n            }\\n\\n            if (type.indexOf(\\\".\\\") >= 0) {\\n                // Namespaced trigger; create a regexp to match event type in handle()\\n                namespaces = type.split(\\\".\\\");\\n                type = namespaces.shift();\\n                namespaces.sort();\\n            }\\n            ontype = type.indexOf(\\\":\\\") < 0 && \\\"on\\\" + type;\\n\\n            // Caller can pass in a jQuery.Event object, Object, or just an event type string\\n            event = event[jQuery.expando] ?\\n                event :\\n                new jQuery.Event(type, typeof event === \\\"object\\\" && event);\\n\\n            // Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)\\n            event.isTrigger = onlyHandlers ? 2 : 3;\\n            event.namespace = namespaces.join(\\\".\\\");\\n            event.namespace_re = event.namespace ?\\n                new RegExp(\\\"(^|\\\\\\\\.)\\\" + namespaces.join(\\\"\\\\\\\\.(?:.*\\\\\\\\.|)\\\") + \\\"(\\\\\\\\.|$)\\\") :\\n                null;\\n\\n            // Clean up the event in case it is being reused\\n            event.result = undefined;\\n            if (!event.target) {\\n                event.target = elem;\\n            }\\n\\n            // Clone any incoming data and prepend the event, creating the handler arg list\\n            data = data == null ?\\n                [event] :\\n                jQuery.makeArray(data, [event]);\\n\\n            // Allow special events to draw outside the lines\\n            special = jQuery.event.special[type] || {};\\n            if (!onlyHandlers && special.trigger && special.trigger.apply(elem, data) === false) {\\n                return;\\n            }\\n\\n            // Determine event propagation path in advance, per W3C events spec (#9951)\\n            // Bubble up to document, then to window; watch for a global ownerDocument var (#9724)\\n            if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {\\n\\n                bubbleType = special.delegateType || type;\\n                if (!rfocusMorph.test(bubbleType + type)) {\\n                    cur = cur.parentNode;\\n                }\\n                for (; cur; cur = cur.parentNode) {\\n                    eventPath.push(cur);\\n                    tmp = cur;\\n                }\\n\\n                // Only add window if we got to document (e.g., not plain obj or detached DOM)\\n                if (tmp === (elem.ownerDocument || document)) {\\n                    eventPath.push(tmp.defaultView || tmp.parentWindow || window);\\n                }\\n            }\\n\\n            // Fire handlers on the event path\\n            i = 0;\\n            while ((cur = eventPath[i++]) && !event.isPropagationStopped()) {\\n\\n                event.type = i > 1 ?\\n                    bubbleType :\\n                    special.bindType || type;\\n\\n                // jQuery handler\\n                handle = ( data_priv.get(cur, \\\"events\\\") || {} )[event.type] && data_priv.get(cur, \\\"handle\\\");\\n                if (handle) {\\n                    handle.apply(cur, data);\\n                }\\n\\n                // Native handler\\n                handle = ontype && cur[ontype];\\n                if (handle && handle.apply && jQuery.acceptData(cur)) {\\n                    event.result = handle.apply(cur, data);\\n                    if (event.result === false) {\\n                        event.preventDefault();\\n                    }\\n                }\\n            }\\n            event.type = type;\\n\\n            // If nobody prevented the default action, do it now\\n            if (!onlyHandlers && !event.isDefaultPrevented()) {\\n\\n                if ((!special._default || special._default.apply(eventPath.pop(), data) === false) &&\\n                    jQuery.acceptData(elem)) {\\n\\n                    // Call a native DOM method on the target with the same name name as the event.\\n                    // Don't do default actions on window, that's where global variables be (#6170)\\n                    if (ontype && jQuery.isFunction(elem[type]) && !jQuery.isWindow(elem)) {\\n\\n                        // Don't re-trigger an onFOO event when we call its FOO() method\\n                        tmp = elem[ontype];\\n\\n                        if (tmp) {\\n                            elem[ontype] = null;\\n                        }\\n\\n                        // Prevent re-triggering of the same event, since we already bubbled it above\\n                        jQuery.event.triggered = type;\\n                        elem[type]();\\n                        jQuery.event.triggered = undefined;\\n\\n                        if (tmp) {\\n                            elem[ontype] = tmp;\\n                        }\\n                    }\\n                }\\n            }\\n\\n            return event.result;\\n        },\\n\\n        dispatch: function (event) {\\n\\n            // Make a writable jQuery.Event from the native event object\\n            event = jQuery.event.fix(event);\\n\\n            var i, j, ret, matched, handleObj,\\n                handlerQueue = [],\\n                args = slice.call(arguments),\\n                handlers = ( data_priv.get(this, \\\"events\\\") || {} )[event.type] || [],\\n                special = jQuery.event.special[event.type] || {};\\n\\n            // Use the fix-ed jQuery.Event rather than the (read-only) native event\\n            args[0] = event;\\n            event.delegateTarget = this;\\n\\n            // Call the preDispatch hook for the mapped type, and let it bail if desired\\n            if (special.preDispatch && special.preDispatch.call(this, event) === false) {\\n                return;\\n            }\\n\\n            // Determine handlers\\n            handlerQueue = jQuery.event.handlers.call(this, event, handlers);\\n\\n            // Run delegates first; they may want to stop propagation beneath us\\n            i = 0;\\n            while ((matched = handlerQueue[i++]) && !event.isPropagationStopped()) {\\n                event.currentTarget = matched.elem;\\n\\n                j = 0;\\n                while ((handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped()) {\\n\\n                    // Triggered event must either 1) have no namespace, or 2) have namespace(s)\\n                    // a subset or equal to those in the bound event (both can have no namespace).\\n                    if (!event.namespace_re || event.namespace_re.test(handleObj.namespace)) {\\n\\n                        event.handleObj = handleObj;\\n                        event.data = handleObj.data;\\n\\n                        ret = ( (jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler )\\n                            .apply(matched.elem, args);\\n\\n                        if (ret !== undefined) {\\n                            if ((event.result = ret) === false) {\\n                                event.preventDefault();\\n                                event.stopPropagation();\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n\\n            // Call the postDispatch hook for the mapped type\\n            if (special.postDispatch) {\\n                special.postDispatch.call(this, event);\\n            }\\n\\n            return event.result;\\n        },\\n\\n        handlers: function (event, handlers) {\\n            var i, matches, sel, handleObj,\\n                handlerQueue = [],\\n                delegateCount = handlers.delegateCount,\\n                cur = event.target;\\n\\n            // Find delegate handlers\\n            // Black-hole SVG <use> instance trees (#13180)\\n            // Avoid non-left-click bubbling in Firefox (#3861)\\n            if (delegateCount && cur.nodeType && (!event.button || event.type !== \\\"click\\\")) {\\n\\n                for (; cur !== this; cur = cur.parentNode || this) {\\n\\n                    // Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)\\n                    if (cur.disabled !== true || event.type !== \\\"click\\\") {\\n                        matches = [];\\n                        for (i = 0; i < delegateCount; i++) {\\n                            handleObj = handlers[i];\\n\\n                            // Don't conflict with Object.prototype properties (#13203)\\n                            sel = handleObj.selector + \\\" \\\";\\n\\n                            if (matches[sel] === undefined) {\\n                                matches[sel] = handleObj.needsContext ?\\n                                    jQuery(sel, this).index(cur) >= 0 :\\n                                    jQuery.find(sel, this, null, [cur]).length;\\n                            }\\n                            if (matches[sel]) {\\n                                matches.push(handleObj);\\n                            }\\n                        }\\n                        if (matches.length) {\\n                            handlerQueue.push({elem: cur, handlers: matches});\\n                        }\\n                    }\\n                }\\n            }\\n\\n            // Add the remaining (directly-bound) handlers\\n            if (delegateCount < handlers.length) {\\n                handlerQueue.push({elem: this, handlers: handlers.slice(delegateCount)});\\n            }\\n\\n            return handlerQueue;\\n        },\\n\\n        // Includes some event props shared by KeyEvent and MouseEvent\\n        props: \\\"altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which\\\".split(\\\" \\\"),\\n\\n        fixHooks: {},\\n\\n        keyHooks: {\\n            props: \\\"char charCode key keyCode\\\".split(\\\" \\\"),\\n            filter: function (event, original) {\\n\\n                // Add which for key events\\n                if (event.which == null) {\\n                    event.which = original.charCode != null ? original.charCode : original.keyCode;\\n                }\\n\\n                return event;\\n            }\\n        },\\n\\n        mouseHooks: {\\n            props: \\\"button buttons clientX clientY offsetX offsetY pageX pageY screenX screenY toElement\\\".split(\\\" \\\"),\\n            filter: function (event, original) {\\n                var eventDoc, doc, body,\\n                    button = original.button;\\n\\n                // Calculate pageX/Y if missing and clientX/Y available\\n                if (event.pageX == null && original.clientX != null) {\\n                    eventDoc = event.target.ownerDocument || document;\\n                    doc = eventDoc.documentElement;\\n                    body = eventDoc.body;\\n\\n                    event.pageX = original.clientX + ( doc && doc.scrollLeft || body && body.scrollLeft || 0 ) - ( doc && doc.clientLeft || body && body.clientLeft || 0 );\\n                    event.pageY = original.clientY + ( doc && doc.scrollTop || body && body.scrollTop || 0 ) - ( doc && doc.clientTop || body && body.clientTop || 0 );\\n                }\\n\\n                // Add which for click: 1 === left; 2 === middle; 3 === right\\n                // Note: button is not normalized, so don't use it\\n                if (!event.which && button !== undefined) {\\n                    event.which = ( button & 1 ? 1 : ( button & 2 ? 3 : ( button & 4 ? 2 : 0 ) ) );\\n                }\\n\\n                return event;\\n            }\\n        },\\n\\n        fix: function (event) {\\n            if (event[jQuery.expando]) {\\n                return event;\\n            }\\n\\n            // Create a writable copy of the event object and normalize some properties\\n            var i, prop, copy,\\n                type = event.type,\\n                originalEvent = event,\\n                fixHook = this.fixHooks[type];\\n\\n            if (!fixHook) {\\n                this.fixHooks[type] = fixHook =\\n                    rmouseEvent.test(type) ? this.mouseHooks :\\n                        rkeyEvent.test(type) ? this.keyHooks :\\n                            {};\\n            }\\n            copy = fixHook.props ? this.props.concat(fixHook.props) : this.props;\\n\\n            event = new jQuery.Event(originalEvent);\\n\\n            i = copy.length;\\n            while (i--) {\\n                prop = copy[i];\\n                event[prop] = originalEvent[prop];\\n            }\\n\\n            // Support: Cordova 2.5 (WebKit) (#13255)\\n            // All events should have a target; Cordova deviceready doesn't\\n            if (!event.target) {\\n                event.target = document;\\n            }\\n\\n            // Support: Safari 6.0+, Chrome<28\\n            // Target should not be a text node (#504, #13143)\\n            if (event.target.nodeType === 3) {\\n                event.target = event.target.parentNode;\\n            }\\n\\n            return fixHook.filter ? fixHook.filter(event, originalEvent) : event;\\n        },\\n\\n        special: {\\n            load: {\\n                // Prevent triggered image.load events from bubbling to window.load\\n                noBubble: true\\n            },\\n            focus: {\\n                // Fire native event if possible so blur/focus sequence is correct\\n                trigger: function () {\\n                    if (this !== safeActiveElement() && this.focus) {\\n                        this.focus();\\n                        return false;\\n                    }\\n                },\\n                delegateType: \\\"focusin\\\"\\n            },\\n            blur: {\\n                trigger: function () {\\n                    if (this === safeActiveElement() && this.blur) {\\n                        this.blur();\\n                        return false;\\n                    }\\n                },\\n                delegateType: \\\"focusout\\\"\\n            },\\n            click: {\\n                // For checkbox, fire native event so checked state will be right\\n                trigger: function () {\\n                    if (this.type === \\\"checkbox\\\" && this.click && jQuery.nodeName(this, \\\"input\\\")) {\\n                        this.click();\\n                        return false;\\n                    }\\n                },\\n\\n                // For cross-browser consistency, don't fire native .click() on links\\n                _default: function (event) {\\n                    return jQuery.nodeName(event.target, \\\"a\\\");\\n                }\\n            },\\n\\n            beforeunload: {\\n                postDispatch: function (event) {\\n\\n                    // Support: Firefox 20+\\n                    // Firefox doesn't alert if the returnValue field is not set.\\n                    if (event.result !== undefined && event.originalEvent) {\\n                        event.originalEvent.returnValue = event.result;\\n                    }\\n                }\\n            }\\n        },\\n\\n        simulate: function (type, elem, event, bubble) {\\n            // Piggyback on a donor event to simulate a different one.\\n            // Fake originalEvent to avoid donor's stopPropagation, but if the\\n            // simulated event prevents default then we do the same on the donor.\\n            var e = jQuery.extend(\\n                new jQuery.Event(),\\n                event,\\n                {\\n                    type: type,\\n                    isSimulated: true,\\n                    originalEvent: {}\\n                }\\n            );\\n            if (bubble) {\\n                jQuery.event.trigger(e, null, elem);\\n            } else {\\n                jQuery.event.dispatch.call(elem, e);\\n            }\\n            if (e.isDefaultPrevented()) {\\n                event.preventDefault();\\n            }\\n        }\\n    };\\n\\n    jQuery.removeEvent = function (elem, type, handle) {\\n        if (elem.removeEventListener) {\\n            elem.removeEventListener(type, handle, false);\\n        }\\n    };\\n\\n    jQuery.Event = function (src, props) {\\n        // Allow instantiation without the 'new' keyword\\n        if (!(this instanceof jQuery.Event)) {\\n            return new jQuery.Event(src, props);\\n        }\\n\\n        // Event object\\n        if (src && src.type) {\\n            this.originalEvent = src;\\n            this.type = src.type;\\n\\n            // Events bubbling up the document may have been marked as prevented\\n            // by a handler lower down the tree; reflect the correct value.\\n            this.isDefaultPrevented = src.defaultPrevented ||\\n            src.defaultPrevented === undefined &&\\n            // Support: Android<4.0\\n            src.returnValue === false ?\\n                returnTrue :\\n                returnFalse;\\n\\n            // Event type\\n        } else {\\n            this.type = src;\\n        }\\n\\n        // Put explicitly provided properties onto the event object\\n        if (props) {\\n            jQuery.extend(this, props);\\n        }\\n\\n        // Create a timestamp if incoming event doesn't have one\\n        this.timeStamp = src && src.timeStamp || jQuery.now();\\n\\n        // Mark it as fixed\\n        this[jQuery.expando] = true;\\n    };\\n\\n// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding\\n// http://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html\\n    jQuery.Event.prototype = {\\n        isDefaultPrevented: returnFalse,\\n        isPropagationStopped: returnFalse,\\n        isImmediatePropagationStopped: returnFalse,\\n\\n        preventDefault: function () {\\n            var e = this.originalEvent;\\n\\n            this.isDefaultPrevented = returnTrue;\\n\\n            if (e && e.preventDefault) {\\n                e.preventDefault();\\n            }\\n        },\\n        stopPropagation: function () {\\n            var e = this.originalEvent;\\n\\n            this.isPropagationStopped = returnTrue;\\n\\n            if (e && e.stopPropagation) {\\n                e.stopPropagation();\\n            }\\n        },\\n        stopImmediatePropagation: function () {\\n            var e = this.originalEvent;\\n\\n            this.isImmediatePropagationStopped = returnTrue;\\n\\n            if (e && e.stopImmediatePropagation) {\\n                e.stopImmediatePropagation();\\n            }\\n\\n            this.stopPropagation();\\n        }\\n    };\\n\\n// Create mouseenter/leave events using mouseover/out and event-time checks\\n// Support: Chrome 15+\\n    jQuery.each({\\n        mouseenter: \\\"mouseover\\\",\\n        mouseleave: \\\"mouseout\\\",\\n        pointerenter: \\\"pointerover\\\",\\n        pointerleave: \\\"pointerout\\\"\\n    }, function (orig, fix) {\\n        jQuery.event.special[orig] = {\\n            delegateType: fix,\\n            bindType: fix,\\n\\n            handle: function (event) {\\n                var ret,\\n                    target = this,\\n                    related = event.relatedTarget,\\n                    handleObj = event.handleObj;\\n\\n                // For mousenter/leave call the handler if related is outside the target.\\n                // NB: No relatedTarget if the mouse left/entered the browser window\\n                if (!related || (related !== target && !jQuery.contains(target, related))) {\\n                    event.type = handleObj.origType;\\n                    ret = handleObj.handler.apply(this, arguments);\\n                    event.type = fix;\\n                }\\n                return ret;\\n            }\\n        };\\n    });\\n\\n// Support: Firefox, Chrome, Safari\\n// Create \\\"bubbling\\\" focus and blur events\\n    if (!support.focusinBubbles) {\\n        jQuery.each({focus: \\\"focusin\\\", blur: \\\"focusout\\\"}, function (orig, fix) {\\n\\n            // Attach a single capturing handler on the document while someone wants focusin/focusout\\n            var handler = function (event) {\\n                jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), true);\\n            };\\n\\n            jQuery.event.special[fix] = {\\n                setup: function () {\\n                    var doc = this.ownerDocument || this,\\n                        attaches = data_priv.access(doc, fix);\\n\\n                    if (!attaches) {\\n                        doc.addEventListener(orig, handler, true);\\n                    }\\n                    data_priv.access(doc, fix, ( attaches || 0 ) + 1);\\n                },\\n                teardown: function () {\\n                    var doc = this.ownerDocument || this,\\n                        attaches = data_priv.access(doc, fix) - 1;\\n\\n                    if (!attaches) {\\n                        doc.removeEventListener(orig, handler, true);\\n                        data_priv.remove(doc, fix);\\n\\n                    } else {\\n                        data_priv.access(doc, fix, attaches);\\n                    }\\n                }\\n            };\\n        });\\n    }\\n\\n    jQuery.fn.extend({\\n\\n        on: function (types, selector, data, fn, /*INTERNAL*/ one) {\\n            var origFn, type;\\n\\n            // Types can be a map of types/handlers\\n            if (typeof types === \\\"object\\\") {\\n                // ( types-Object, selector, data )\\n                if (typeof selector !== \\\"string\\\") {\\n                    // ( types-Object, data )\\n                    data = data || selector;\\n                    selector = undefined;\\n                }\\n                for (type in types) {\\n                    this.on(type, selector, data, types[type], one);\\n                }\\n                return this;\\n            }\\n\\n            if (data == null && fn == null) {\\n                // ( types, fn )\\n                fn = selector;\\n                data = selector = undefined;\\n            } else if (fn == null) {\\n                if (typeof selector === \\\"string\\\") {\\n                    // ( types, selector, fn )\\n                    fn = data;\\n                    data = undefined;\\n                } else {\\n                    // ( types, data, fn )\\n                    fn = data;\\n                    data = selector;\\n                    selector = undefined;\\n                }\\n            }\\n            if (fn === false) {\\n                fn = returnFalse;\\n            } else if (!fn) {\\n                return this;\\n            }\\n\\n            if (one === 1) {\\n                origFn = fn;\\n                fn = function (event) {\\n                    // Can use an empty set, since event contains the info\\n                    jQuery().off(event);\\n                    return origFn.apply(this, arguments);\\n                };\\n                // Use same guid so caller can remove using origFn\\n                fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );\\n            }\\n            return this.each(function () {\\n                jQuery.event.add(this, types, fn, data, selector);\\n            });\\n        },\\n        one: function (types, selector, data, fn) {\\n            return this.on(types, selector, data, fn, 1);\\n        },\\n        off: function (types, selector, fn) {\\n            var handleObj, type;\\n            if (types && types.preventDefault && types.handleObj) {\\n                // ( event )  dispatched jQuery.Event\\n                handleObj = types.handleObj;\\n                jQuery(types.delegateTarget).off(\\n                    handleObj.namespace ? handleObj.origType + \\\".\\\" + handleObj.namespace : handleObj.origType,\\n                    handleObj.selector,\\n                    handleObj.handler\\n                );\\n                return this;\\n            }\\n            if (typeof types === \\\"object\\\") {\\n                // ( types-object [, selector] )\\n                for (type in types) {\\n                    this.off(type, selector, types[type]);\\n                }\\n                return this;\\n            }\\n            if (selector === false || typeof selector === \\\"function\\\") {\\n                // ( types [, fn] )\\n                fn = selector;\\n                selector = undefined;\\n            }\\n            if (fn === false) {\\n                fn = returnFalse;\\n            }\\n            return this.each(function () {\\n                jQuery.event.remove(this, types, fn, selector);\\n            });\\n        },\\n\\n        trigger: function (type, data) {\\n            return this.each(function () {\\n                jQuery.event.trigger(type, data, this);\\n            });\\n        },\\n        triggerHandler: function (type, data) {\\n            var elem = this[0];\\n            if (elem) {\\n                return jQuery.event.trigger(type, data, elem, true);\\n            }\\n        }\\n    });\\n\\n\\n    var\\n        rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\\\\w:]+)[^>]*)\\\\/>/gi,\\n        rtagName = /<([\\\\w:]+)/,\\n        rhtml = /<|&#?\\\\w+;/,\\n        rnoInnerhtml = /<(?:script|style|link)/i,\\n        // checked=\\\"checked\\\" or checked\\n        rchecked = /checked\\\\s*(?:[^=]|=\\\\s*.checked.)/i,\\n        rscriptType = /^$|\\\\/(?:java|ecma)script/i,\\n        rscriptTypeMasked = /^true\\\\/(.*)/,\\n        rcleanScript = /^\\\\s*<!(?:\\\\[CDATA\\\\[|--)|(?:\\\\]\\\\]|--)>\\\\s*$/g,\\n\\n        // We have to close these tags to support XHTML (#13200)\\n        wrapMap = {\\n\\n            // Support: IE9\\n            option: [1, \\\"<select multiple='multiple'>\\\", \\\"</select>\\\"],\\n\\n            thead: [1, \\\"<table>\\\", \\\"</table>\\\"],\\n            col: [2, \\\"<table><colgroup>\\\", \\\"</colgroup></table>\\\"],\\n            tr: [2, \\\"<table><tbody>\\\", \\\"</tbody></table>\\\"],\\n            td: [3, \\\"<table><tbody><tr>\\\", \\\"</tr></tbody></table>\\\"],\\n\\n            _default: [0, \\\"\\\", \\\"\\\"]\\n        };\\n\\n// Support: IE9\\n    wrapMap.optgroup = wrapMap.option;\\n\\n    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;\\n    wrapMap.th = wrapMap.td;\\n\\n// Support: 1.x compatibility\\n// Manipulating tables requires a tbody\\n    function manipulationTarget(elem, content) {\\n        return jQuery.nodeName(elem, \\\"table\\\") &&\\n        jQuery.nodeName(content.nodeType !== 11 ? content : content.firstChild, \\\"tr\\\") ?\\n\\n            elem.getElementsByTagName(\\\"tbody\\\")[0] ||\\n            elem.appendChild(elem.ownerDocument.createElement(\\\"tbody\\\")) :\\n            elem;\\n    }\\n\\n// Replace/restore the type attribute of script elements for safe DOM manipulation\\n    function disableScript(elem) {\\n        elem.type = (elem.getAttribute(\\\"type\\\") !== null) + \\\"/\\\" + elem.type;\\n        return elem;\\n    }\\n\\n    function restoreScript(elem) {\\n        var match = rscriptTypeMasked.exec(elem.type);\\n\\n        if (match) {\\n            elem.type = match[1];\\n        } else {\\n            elem.removeAttribute(\\\"type\\\");\\n        }\\n\\n        return elem;\\n    }\\n\\n// Mark scripts as having already been evaluated\\n    function setGlobalEval(elems, refElements) {\\n        var i = 0,\\n            l = elems.length;\\n\\n        for (; i < l; i++) {\\n            data_priv.set(\\n                elems[i], \\\"globalEval\\\", !refElements || data_priv.get(refElements[i], \\\"globalEval\\\")\\n            );\\n        }\\n    }\\n\\n    function cloneCopyEvent(src, dest) {\\n        var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;\\n\\n        if (dest.nodeType !== 1) {\\n            return;\\n        }\\n\\n        // 1. Copy private data: events, handlers, etc.\\n        if (data_priv.hasData(src)) {\\n            pdataOld = data_priv.access(src);\\n            pdataCur = data_priv.set(dest, pdataOld);\\n            events = pdataOld.events;\\n\\n            if (events) {\\n                delete pdataCur.handle;\\n                pdataCur.events = {};\\n\\n                for (type in events) {\\n                    for (i = 0, l = events[type].length; i < l; i++) {\\n                        jQuery.event.add(dest, type, events[type][i]);\\n                    }\\n                }\\n            }\\n        }\\n\\n        // 2. Copy user data\\n        if (data_user.hasData(src)) {\\n            udataOld = data_user.access(src);\\n            udataCur = jQuery.extend({}, udataOld);\\n\\n            data_user.set(dest, udataCur);\\n        }\\n    }\\n\\n    function getAll(context, tag) {\\n        var ret = context.getElementsByTagName ? context.getElementsByTagName(tag || \\\"*\\\") :\\n            context.querySelectorAll ? context.querySelectorAll(tag || \\\"*\\\") :\\n                [];\\n\\n        return tag === undefined || tag && jQuery.nodeName(context, tag) ?\\n            jQuery.merge([context], ret) :\\n            ret;\\n    }\\n\\n// Fix IE bugs, see support tests\\n    function fixInput(src, dest) {\\n        var nodeName = dest.nodeName.toLowerCase();\\n\\n        // Fails to persist the checked state of a cloned checkbox or radio button.\\n        if (nodeName === \\\"input\\\" && rcheckableType.test(src.type)) {\\n            dest.checked = src.checked;\\n\\n            // Fails to return the selected option to the default selected state when cloning options\\n        } else if (nodeName === \\\"input\\\" || nodeName === \\\"textarea\\\") {\\n            dest.defaultValue = src.defaultValue;\\n        }\\n    }\\n\\n    jQuery.extend({\\n        clone: function (elem, dataAndEvents, deepDataAndEvents) {\\n            var i, l, srcElements, destElements,\\n                clone = elem.cloneNode(true),\\n                inPage = jQuery.contains(elem.ownerDocument, elem);\\n\\n            // Fix IE cloning issues\\n            if (!support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) && !jQuery.isXMLDoc(elem)) {\\n\\n                // We eschew Sizzle here for performance reasons: http://jsperf.com/getall-vs-sizzle/2\\n                destElements = getAll(clone);\\n                srcElements = getAll(elem);\\n\\n                for (i = 0, l = srcElements.length; i < l; i++) {\\n                    fixInput(srcElements[i], destElements[i]);\\n                }\\n            }\\n\\n            // Copy the events from the original to the clone\\n            if (dataAndEvents) {\\n                if (deepDataAndEvents) {\\n                    srcElements = srcElements || getAll(elem);\\n                    destElements = destElements || getAll(clone);\\n\\n                    for (i = 0, l = srcElements.length; i < l; i++) {\\n                        cloneCopyEvent(srcElements[i], destElements[i]);\\n                    }\\n                } else {\\n                    cloneCopyEvent(elem, clone);\\n                }\\n            }\\n\\n            // Preserve script evaluation history\\n            destElements = getAll(clone, \\\"script\\\");\\n            if (destElements.length > 0) {\\n                setGlobalEval(destElements, !inPage && getAll(elem, \\\"script\\\"));\\n            }\\n\\n            // Return the cloned set\\n            return clone;\\n        },\\n\\n        buildFragment: function (elems, context, scripts, selection) {\\n            var elem, tmp, tag, wrap, contains, j,\\n                fragment = context.createDocumentFragment(),\\n                nodes = [],\\n                i = 0,\\n                l = elems.length;\\n\\n            for (; i < l; i++) {\\n                elem = elems[i];\\n\\n                if (elem || elem === 0) {\\n\\n                    // Add nodes directly\\n                    if (jQuery.type(elem) === \\\"object\\\") {\\n                        // Support: QtWebKit, PhantomJS\\n                        // push.apply(_, arraylike) throws on ancient WebKit\\n                        jQuery.merge(nodes, elem.nodeType ? [elem] : elem);\\n\\n                        // Convert non-html into a text node\\n                    } else if (!rhtml.test(elem)) {\\n                        nodes.push(context.createTextNode(elem));\\n\\n                        // Convert html into DOM nodes\\n                    } else {\\n                        tmp = tmp || fragment.appendChild(context.createElement(\\\"div\\\"));\\n\\n                        // Deserialize a standard representation\\n                        tag = ( rtagName.exec(elem) || [\\\"\\\", \\\"\\\"] )[1].toLowerCase();\\n                        wrap = wrapMap[tag] || wrapMap._default;\\n                        tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, \\\"<$1></$2>\\\") + wrap[2];\\n\\n                        // Descend through wrappers to the right content\\n                        j = wrap[0];\\n                        while (j--) {\\n                            tmp = tmp.lastChild;\\n                        }\\n\\n                        // Support: QtWebKit, PhantomJS\\n                        // push.apply(_, arraylike) throws on ancient WebKit\\n                        jQuery.merge(nodes, tmp.childNodes);\\n\\n                        // Remember the top-level container\\n                        tmp = fragment.firstChild;\\n\\n                        // Ensure the created nodes are orphaned (#12392)\\n                        tmp.textContent = \\\"\\\";\\n                    }\\n                }\\n            }\\n\\n            // Remove wrapper from fragment\\n            fragment.textContent = \\\"\\\";\\n\\n            i = 0;\\n            while ((elem = nodes[i++])) {\\n\\n                // #4087 - If origin and destination elements are the same, and this is\\n                // that element, do not do anything\\n                if (selection && jQuery.inArray(elem, selection) !== -1) {\\n                    continue;\\n                }\\n\\n                contains = jQuery.contains(elem.ownerDocument, elem);\\n\\n                // Append to fragment\\n                tmp = getAll(fragment.appendChild(elem), \\\"script\\\");\\n\\n                // Preserve script evaluation history\\n                if (contains) {\\n                    setGlobalEval(tmp);\\n                }\\n\\n                // Capture executables\\n                if (scripts) {\\n                    j = 0;\\n                    while ((elem = tmp[j++])) {\\n                        if (rscriptType.test(elem.type || \\\"\\\")) {\\n                            scripts.push(elem);\\n                        }\\n                    }\\n                }\\n            }\\n\\n            return fragment;\\n        },\\n\\n        cleanData: function (elems) {\\n            var data, elem, type, key,\\n                special = jQuery.event.special,\\n                i = 0;\\n\\n            for (; (elem = elems[i]) !== undefined; i++) {\\n                if (jQuery.acceptData(elem)) {\\n                    key = elem[data_priv.expando];\\n\\n                    if (key && (data = data_priv.cache[key])) {\\n                        if (data.events) {\\n                            for (type in data.events) {\\n                                if (special[type]) {\\n                                    jQuery.event.remove(elem, type);\\n\\n                                    // This is a shortcut to avoid jQuery.event.remove's overhead\\n                                } else {\\n                                    jQuery.removeEvent(elem, type, data.handle);\\n                                }\\n                            }\\n                        }\\n                        if (data_priv.cache[key]) {\\n                            // Discard any remaining `private` data\\n                            delete data_priv.cache[key];\\n                        }\\n                    }\\n                }\\n                // Discard any remaining `user` data\\n                delete data_user.cache[elem[data_user.expando]];\\n            }\\n        }\\n    });\\n\\n    jQuery.fn.extend({\\n        text: function (value) {\\n            return access(this, function (value) {\\n                return value === undefined ?\\n                    jQuery.text(this) :\\n                    this.empty().each(function () {\\n                        if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\\n                            this.textContent = value;\\n                        }\\n                    });\\n            }, null, value, arguments.length);\\n        },\\n\\n        append: function () {\\n            return this.domManip(arguments, function (elem) {\\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\\n                    var target = manipulationTarget(this, elem);\\n                    target.appendChild(elem);\\n                }\\n            });\\n        },\\n\\n        prepend: function () {\\n            return this.domManip(arguments, function (elem) {\\n                if (this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9) {\\n                    var target = manipulationTarget(this, elem);\\n                    target.insertBefore(elem, target.firstChild);\\n                }\\n            });\\n        },\\n\\n        before: function () {\\n            return this.domManip(arguments, function (elem) {\\n                if (this.parentNode) {\\n                    this.parentNode.insertBefore(elem, this);\\n                }\\n            });\\n        },\\n\\n        after: function () {\\n            return this.domManip(arguments, function (elem) {\\n                if (this.parentNode) {\\n                    this.parentNode.insertBefore(elem, this.nextSibling);\\n                }\\n            });\\n        },\\n\\n        remove: function (selector, keepData /* Internal Use Only */) {\\n            var elem,\\n                elems = selector ? jQuery.filter(selector, this) : this,\\n                i = 0;\\n\\n            for (; (elem = elems[i]) != null; i++) {\\n                if (!keepData && elem.nodeType === 1) {\\n                    jQuery.cleanData(getAll(elem));\\n                }\\n\\n                if (elem.parentNode) {\\n                    if (keepData && jQuery.contains(elem.ownerDocument, elem)) {\\n                        setGlobalEval(getAll(elem, \\\"script\\\"));\\n                    }\\n                    elem.parentNode.removeChild(elem);\\n                }\\n            }\\n\\n            return this;\\n        },\\n\\n        empty: function () {\\n            var elem,\\n                i = 0;\\n\\n            for (; (elem = this[i]) != null; i++) {\\n                if (elem.nodeType === 1) {\\n\\n                    // Prevent memory leaks\\n                    jQuery.cleanData(getAll(elem, false));\\n\\n                    // Remove any remaining nodes\\n                    elem.textContent = \\\"\\\";\\n                }\\n            }\\n\\n            return this;\\n        },\\n\\n        clone: function (dataAndEvents, deepDataAndEvents) {\\n            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;\\n            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;\\n\\n            return this.map(function () {\\n                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);\\n            });\\n        },\\n\\n        html: function (value) {\\n            return access(this, function (value) {\\n                var elem = this[0] || {},\\n                    i = 0,\\n                    l = this.length;\\n\\n                if (value === undefined && elem.nodeType === 1) {\\n                    return elem.innerHTML;\\n                }\\n\\n                // See if we can take a shortcut and just use innerHTML\\n                if (typeof value === \\\"string\\\" && !rnoInnerhtml.test(value) && !wrapMap[( rtagName.exec(value) || [\\\"\\\", \\\"\\\"] )[1].toLowerCase()]) {\\n\\n                    value = value.replace(rxhtmlTag, \\\"<$1></$2>\\\");\\n\\n                    try {\\n                        for (; i < l; i++) {\\n                            elem = this[i] || {};\\n\\n                            // Remove element nodes and prevent memory leaks\\n                            if (elem.nodeType === 1) {\\n                                jQuery.cleanData(getAll(elem, false));\\n                                elem.innerHTML = value;\\n                            }\\n                        }\\n\\n                        elem = 0;\\n\\n                        // If using innerHTML throws an exception, use the fallback method\\n                    } catch (e) {\\n                    }\\n                }\\n\\n                if (elem) {\\n                    this.empty().append(value);\\n                }\\n            }, null, value, arguments.length);\\n        },\\n\\n        replaceWith: function () {\\n            var arg = arguments[0];\\n\\n            // Make the changes, replacing each context element with the new content\\n            this.domManip(arguments, function (elem) {\\n                arg = this.parentNode;\\n\\n                jQuery.cleanData(getAll(this));\\n\\n                if (arg) {\\n                    arg.replaceChild(elem, this);\\n                }\\n            });\\n\\n            // Force removal if there was no new content (e.g., from empty arguments)\\n            return arg && (arg.length || arg.nodeType) ? this : this.remove();\\n        },\\n\\n        detach: function (selector) {\\n            return this.remove(selector, true);\\n        },\\n\\n        domManip: function (args, callback) {\\n\\n            // Flatten any nested arrays\\n            args = concat.apply([], args);\\n\\n            var fragment, first, scripts, hasScripts, node, doc,\\n                i = 0,\\n                l = this.length,\\n                set = this,\\n                iNoClone = l - 1,\\n                value = args[0],\\n                isFunction = jQuery.isFunction(value);\\n\\n            // We can't cloneNode fragments that contain checked, in WebKit\\n            if (isFunction ||\\n                ( l > 1 && typeof value === \\\"string\\\" && !support.checkClone && rchecked.test(value) )) {\\n                return this.each(function (index) {\\n                    var self = set.eq(index);\\n                    if (isFunction) {\\n                        args[0] = value.call(this, index, self.html());\\n                    }\\n                    self.domManip(args, callback);\\n                });\\n            }\\n\\n            if (l) {\\n                fragment = jQuery.buildFragment(args, this[0].ownerDocument, false, this);\\n                first = fragment.firstChild;\\n\\n                if (fragment.childNodes.length === 1) {\\n                    fragment = first;\\n                }\\n\\n                if (first) {\\n                    scripts = jQuery.map(getAll(fragment, \\\"script\\\"), disableScript);\\n                    hasScripts = scripts.length;\\n\\n                    // Use the original fragment for the last item instead of the first because it can end up\\n                    // being emptied incorrectly in certain situations (#8070).\\n                    for (; i < l; i++) {\\n                        node = fragment;\\n\\n                        if (i !== iNoClone) {\\n                            node = jQuery.clone(node, true, true);\\n\\n                            // Keep references to cloned scripts for later restoration\\n                            if (hasScripts) {\\n                                // Support: QtWebKit\\n                                // jQuery.merge because push.apply(_, arraylike) throws\\n                                jQuery.merge(scripts, getAll(node, \\\"script\\\"));\\n                            }\\n                        }\\n\\n                        callback.call(this[i], node, i);\\n                    }\\n\\n                    if (hasScripts) {\\n                        doc = scripts[scripts.length - 1].ownerDocument;\\n\\n                        // Reenable scripts\\n                        jQuery.map(scripts, restoreScript);\\n\\n                        // Evaluate executable scripts on first document insertion\\n                        for (i = 0; i < hasScripts; i++) {\\n                            node = scripts[i];\\n                            if (rscriptType.test(node.type || \\\"\\\") && !data_priv.access(node, \\\"globalEval\\\") && jQuery.contains(doc, node)) {\\n\\n                                if (node.src) {\\n                                    // Optional AJAX dependency, but won't run scripts if not present\\n                                    if (jQuery._evalUrl) {\\n                                        jQuery._evalUrl(node.src);\\n                                    }\\n                                } else {\\n                                    jQuery.globalEval(node.textContent.replace(rcleanScript, \\\"\\\"));\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n\\n            return this;\\n        }\\n    });\\n\\n    jQuery.each({\\n        appendTo: \\\"append\\\",\\n        prependTo: \\\"prepend\\\",\\n        insertBefore: \\\"before\\\",\\n        insertAfter: \\\"after\\\",\\n        replaceAll: \\\"replaceWith\\\"\\n    }, function (name, original) {\\n        jQuery.fn[name] = function (selector) {\\n            var elems,\\n                ret = [],\\n                insert = jQuery(selector),\\n                last = insert.length - 1,\\n                i = 0;\\n\\n            for (; i <= last; i++) {\\n                elems = i === last ? this : this.clone(true);\\n                jQuery(insert[i])[original](elems);\\n\\n                // Support: QtWebKit\\n                // .get() because push.apply(_, arraylike) throws\\n                push.apply(ret, elems.get());\\n            }\\n\\n            return this.pushStack(ret);\\n        };\\n    });\\n\\n\\n    var iframe,\\n        elemdisplay = {};\\n\\n    /**\\n     * Retrieve the actual display of a element\\n     * @param {String} name nodeName of the element\\n     * @param {Object} doc Document object\\n     */\\n// Called only from within defaultDisplay\\n    function actualDisplay(name, doc) {\\n        var style,\\n            elem = jQuery(doc.createElement(name)).appendTo(doc.body),\\n\\n            // getDefaultComputedStyle might be reliably used only on attached element\\n            display = window.getDefaultComputedStyle && ( style = window.getDefaultComputedStyle(elem[0]) ) ?\\n\\n                // Use of this method is a temporary fix (more like optimization) until something better comes along,\\n                // since it was removed from specification and supported only in FF\\n                style.display : jQuery.css(elem[0], \\\"display\\\");\\n\\n        // We don't have any data stored on the element,\\n        // so use \\\"detach\\\" method as fast way to get rid of the element\\n        elem.detach();\\n\\n        return display;\\n    }\\n\\n    /**\\n     * Try to determine the default display value of an element\\n     * @param {String} nodeName\\n     */\\n    function defaultDisplay(nodeName) {\\n        var doc = document,\\n            display = elemdisplay[nodeName];\\n\\n        if (!display) {\\n            display = actualDisplay(nodeName, doc);\\n\\n            // If the simple way fails, read from inside an iframe\\n            if (display === \\\"none\\\" || !display) {\\n\\n                // Use the already-created iframe if possible\\n                iframe = (iframe || jQuery(\\\"<iframe frameborder='0' width='0' height='0'/>\\\")).appendTo(doc.documentElement);\\n\\n                // Always write a new HTML skeleton so Webkit and Firefox don't choke on reuse\\n                doc = iframe[0].contentDocument;\\n\\n                // Support: IE\\n                doc.write();\\n                doc.close();\\n\\n                display = actualDisplay(nodeName, doc);\\n                iframe.detach();\\n            }\\n\\n            // Store the correct default display\\n            elemdisplay[nodeName] = display;\\n        }\\n\\n        return display;\\n    }\\n\\n    var rmargin = (/^margin/);\\n\\n    var rnumnonpx = new RegExp(\\\"^(\\\" + pnum + \\\")(?!px)[a-z%]+$\\\", \\\"i\\\");\\n\\n    var getStyles = function (elem) {\\n        // Support: IE<=11+, Firefox<=30+ (#15098, #14150)\\n        // IE throws on elements created in popups\\n        // FF meanwhile throws on frame elements through \\\"defaultView.getComputedStyle\\\"\\n        if (elem.ownerDocument.defaultView.opener) {\\n            return elem.ownerDocument.defaultView.getComputedStyle(elem, null);\\n        }\\n\\n        return window.getComputedStyle(elem, null);\\n    };\\n\\n\\n    function curCSS(elem, name, computed) {\\n        var width, minWidth, maxWidth, ret,\\n            style = elem.style;\\n\\n        computed = computed || getStyles(elem);\\n\\n        // Support: IE9\\n        // getPropertyValue is only needed for .css('filter') (#12537)\\n        if (computed) {\\n            ret = computed.getPropertyValue(name) || computed[name];\\n        }\\n\\n        if (computed) {\\n\\n            if (ret === \\\"\\\" && !jQuery.contains(elem.ownerDocument, elem)) {\\n                ret = jQuery.style(elem, name);\\n            }\\n\\n            // Support: iOS < 6\\n            // A tribute to the \\\"awesome hack by Dean Edwards\\\"\\n            // iOS < 6 (at least) returns percentage for a larger set of values, but width seems to be reliably pixels\\n            // this is against the CSSOM draft spec: http://dev.w3.org/csswg/cssom/#resolved-values\\n            if (rnumnonpx.test(ret) && rmargin.test(name)) {\\n\\n                // Remember the original values\\n                width = style.width;\\n                minWidth = style.minWidth;\\n                maxWidth = style.maxWidth;\\n\\n                // Put in the new values to get a computed value out\\n                style.minWidth = style.maxWidth = style.width = ret;\\n                ret = computed.width;\\n\\n                // Revert the changed values\\n                style.width = width;\\n                style.minWidth = minWidth;\\n                style.maxWidth = maxWidth;\\n            }\\n        }\\n\\n        return ret !== undefined ?\\n            // Support: IE\\n            // IE returns zIndex value as an integer.\\n            ret + \\\"\\\" :\\n            ret;\\n    }\\n\\n\\n    function addGetHookIf(conditionFn, hookFn) {\\n        // Define the hook, we'll check on the first run if it's really needed.\\n        return {\\n            get: function () {\\n                if (conditionFn()) {\\n                    // Hook not needed (or it's not possible to use it due\\n                    // to missing dependency), remove it.\\n                    delete this.get;\\n                    return;\\n                }\\n\\n                // Hook needed; redefine it so that the support test is not executed again.\\n                return (this.get = hookFn).apply(this, arguments);\\n            }\\n        };\\n    }\\n\\n\\n    (function () {\\n        var pixelPositionVal, boxSizingReliableVal,\\n            docElem = document.documentElement,\\n            container = document.createElement(\\\"div\\\"),\\n            div = document.createElement(\\\"div\\\");\\n\\n        if (!div.style) {\\n            return;\\n        }\\n\\n        // Support: IE9-11+\\n        // Style of cloned element affects source element cloned (#8908)\\n        div.style.backgroundClip = \\\"content-box\\\";\\n        div.cloneNode(true).style.backgroundClip = \\\"\\\";\\n        support.clearCloneStyle = div.style.backgroundClip === \\\"content-box\\\";\\n\\n        container.style.cssText = \\\"border:0;width:0;height:0;top:0;left:-9999px;margin-top:1px;\\\" +\\n            \\\"position:absolute\\\";\\n        container.appendChild(div);\\n\\n        // Executing both pixelPosition & boxSizingReliable tests require only one layout\\n        // so they're executed at the same time to save the second computation.\\n        function computePixelPositionAndBoxSizingReliable() {\\n            div.style.cssText =\\n                // Support: Firefox<29, Android 2.3\\n                // Vendor-prefix box-sizing\\n                \\\"-webkit-box-sizing:border-box;-moz-box-sizing:border-box;\\\" +\\n                \\\"box-sizing:border-box;display:block;margin-top:1%;top:1%;\\\" +\\n                \\\"border:1px;padding:1px;width:4px;position:absolute\\\";\\n            div.innerHTML = \\\"\\\";\\n            docElem.appendChild(container);\\n\\n            var divStyle = window.getComputedStyle(div, null);\\n            pixelPositionVal = divStyle.top !== \\\"1%\\\";\\n            boxSizingReliableVal = divStyle.width === \\\"4px\\\";\\n\\n            docElem.removeChild(container);\\n        }\\n\\n        // Support: node.js jsdom\\n        // Don't assume that getComputedStyle is a property of the global object\\n        if (window.getComputedStyle) {\\n            jQuery.extend(support, {\\n                pixelPosition: function () {\\n\\n                    // This test is executed only once but we still do memoizing\\n                    // since we can use the boxSizingReliable pre-computing.\\n                    // No need to check if the test was already performed, though.\\n                    computePixelPositionAndBoxSizingReliable();\\n                    return pixelPositionVal;\\n                },\\n                boxSizingReliable: function () {\\n                    if (boxSizingReliableVal == null) {\\n                        computePixelPositionAndBoxSizingReliable();\\n                    }\\n                    return boxSizingReliableVal;\\n                },\\n                reliableMarginRight: function () {\\n\\n                    // Support: Android 2.3\\n                    // Check if div with explicit width and no margin-right incorrectly\\n                    // gets computed margin-right based on width of container. (#3333)\\n                    // WebKit Bug 13343 - getComputedStyle returns wrong value for margin-right\\n                    // This support function is only executed once so no memoizing is needed.\\n                    var ret,\\n                        marginDiv = div.appendChild(document.createElement(\\\"div\\\"));\\n\\n                    // Reset CSS: box-sizing; display; margin; border; padding\\n                    marginDiv.style.cssText = div.style.cssText =\\n                        // Support: Firefox<29, Android 2.3\\n                        // Vendor-prefix box-sizing\\n                        \\\"-webkit-box-sizing:content-box;-moz-box-sizing:content-box;\\\" +\\n                        \\\"box-sizing:content-box;display:block;margin:0;border:0;padding:0\\\";\\n                    marginDiv.style.marginRight = marginDiv.style.width = \\\"0\\\";\\n                    div.style.width = \\\"1px\\\";\\n                    docElem.appendChild(container);\\n\\n                    ret = !parseFloat(window.getComputedStyle(marginDiv, null).marginRight);\\n\\n                    docElem.removeChild(container);\\n                    div.removeChild(marginDiv);\\n\\n                    return ret;\\n                }\\n            });\\n        }\\n    })();\\n\\n\\n// A method for quickly swapping in/out CSS properties to get correct calculations.\\n    jQuery.swap = function (elem, options, callback, args) {\\n        var ret, name,\\n            old = {};\\n\\n        // Remember the old values, and insert the new ones\\n        for (name in options) {\\n            old[name] = elem.style[name];\\n            elem.style[name] = options[name];\\n        }\\n\\n        ret = callback.apply(elem, args || []);\\n\\n        // Revert the old values\\n        for (name in options) {\\n            elem.style[name] = old[name];\\n        }\\n\\n        return ret;\\n    };\\n\\n\\n    var\\n        // Swappable if display is none or starts with table except \\\"table\\\", \\\"table-cell\\\", or \\\"table-caption\\\"\\n        // See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display\\n        rdisplayswap = /^(none|table(?!-c[ea]).+)/,\\n        rnumsplit = new RegExp(\\\"^(\\\" + pnum + \\\")(.*)$\\\", \\\"i\\\"),\\n        rrelNum = new RegExp(\\\"^([+-])=(\\\" + pnum + \\\")\\\", \\\"i\\\"),\\n\\n        cssShow = {position: \\\"absolute\\\", visibility: \\\"hidden\\\", display: \\\"block\\\"},\\n        cssNormalTransform = {\\n            letterSpacing: \\\"0\\\",\\n            fontWeight: \\\"400\\\"\\n        },\\n\\n        cssPrefixes = [\\\"Webkit\\\", \\\"O\\\", \\\"Moz\\\", \\\"ms\\\"];\\n\\n// Return a css property mapped to a potentially vendor prefixed property\\n    function vendorPropName(style, name) {\\n\\n        // Shortcut for names that are not vendor prefixed\\n        if (name in style) {\\n            return name;\\n        }\\n\\n        // Check for vendor prefixed names\\n        var capName = name[0].toUpperCase() + name.slice(1),\\n            origName = name,\\n            i = cssPrefixes.length;\\n\\n        while (i--) {\\n            name = cssPrefixes[i] + capName;\\n            if (name in style) {\\n                return name;\\n            }\\n        }\\n\\n        return origName;\\n    }\\n\\n    function setPositiveNumber(elem, value, subtract) {\\n        var matches = rnumsplit.exec(value);\\n        return matches ?\\n            // Guard against undefined \\\"subtract\\\", e.g., when used as in cssHooks\\n            Math.max(0, matches[1] - ( subtract || 0 )) + ( matches[2] || \\\"px\\\" ) :\\n            value;\\n    }\\n\\n    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {\\n        var i = extra === ( isBorderBox ? \\\"border\\\" : \\\"content\\\" ) ?\\n                // If we already have the right measurement, avoid augmentation\\n                4 :\\n                // Otherwise initialize for horizontal or vertical properties\\n                name === \\\"width\\\" ? 1 : 0,\\n\\n            val = 0;\\n\\n        for (; i < 4; i += 2) {\\n            // Both box models exclude margin, so add it if we want it\\n            if (extra === \\\"margin\\\") {\\n                val += jQuery.css(elem, extra + cssExpand[i], true, styles);\\n            }\\n\\n            if (isBorderBox) {\\n                // border-box includes padding, so remove it if we want content\\n                if (extra === \\\"content\\\") {\\n                    val -= jQuery.css(elem, \\\"padding\\\" + cssExpand[i], true, styles);\\n                }\\n\\n                // At this point, extra isn't border nor margin, so remove border\\n                if (extra !== \\\"margin\\\") {\\n                    val -= jQuery.css(elem, \\\"border\\\" + cssExpand[i] + \\\"Width\\\", true, styles);\\n                }\\n            } else {\\n                // At this point, extra isn't content, so add padding\\n                val += jQuery.css(elem, \\\"padding\\\" + cssExpand[i], true, styles);\\n\\n                // At this point, extra isn't content nor padding, so add border\\n                if (extra !== \\\"padding\\\") {\\n                    val += jQuery.css(elem, \\\"border\\\" + cssExpand[i] + \\\"Width\\\", true, styles);\\n                }\\n            }\\n        }\\n\\n        return val;\\n    }\\n\\n    function getWidthOrHeight(elem, name, extra) {\\n\\n        // Start with offset property, which is equivalent to the border-box value\\n        var valueIsBorderBox = true,\\n            val = name === \\\"width\\\" ? elem.offsetWidth : elem.offsetHeight,\\n            styles = getStyles(elem),\\n            isBorderBox = jQuery.css(elem, \\\"boxSizing\\\", false, styles) === \\\"border-box\\\";\\n\\n        // Some non-html elements return undefined for offsetWidth, so check for null/undefined\\n        // svg - https://bugzilla.mozilla.org/show_bug.cgi?id=649285\\n        // MathML - https://bugzilla.mozilla.org/show_bug.cgi?id=491668\\n        if (val <= 0 || val == null) {\\n            // Fall back to computed then uncomputed css if necessary\\n            val = curCSS(elem, name, styles);\\n            if (val < 0 || val == null) {\\n                val = elem.style[name];\\n            }\\n\\n            // Computed unit is not pixels. Stop here and return.\\n            if (rnumnonpx.test(val)) {\\n                return val;\\n            }\\n\\n            // Check for style in case a browser which returns unreliable values\\n            // for getComputedStyle silently falls back to the reliable elem.style\\n            valueIsBorderBox = isBorderBox &&\\n                ( support.boxSizingReliable() || val === elem.style[name] );\\n\\n            // Normalize \\\"\\\", auto, and prepare for extra\\n            val = parseFloat(val) || 0;\\n        }\\n\\n        // Use the active box-sizing model to add/subtract irrelevant styles\\n        return ( val +\\n                augmentWidthOrHeight(\\n                    elem,\\n                    name,\\n                    extra || ( isBorderBox ? \\\"border\\\" : \\\"content\\\" ),\\n                    valueIsBorderBox,\\n                    styles\\n                )\\n            ) + \\\"px\\\";\\n    }\\n\\n    function showHide(elements, show) {\\n        var display, elem, hidden,\\n            values = [],\\n            index = 0,\\n            length = elements.length;\\n\\n        for (; index < length; index++) {\\n            elem = elements[index];\\n            if (!elem.style) {\\n                continue;\\n            }\\n\\n            values[index] = data_priv.get(elem, \\\"olddisplay\\\");\\n            display = elem.style.display;\\n            if (show) {\\n                // Reset the inline display of this element to learn if it is\\n                // being hidden by cascaded rules or not\\n                if (!values[index] && display === \\\"none\\\") {\\n                    elem.style.display = \\\"\\\";\\n                }\\n\\n                // Set elements which have been overridden with display: none\\n                // in a stylesheet to whatever the default browser style is\\n                // for such an element\\n                if (elem.style.display === \\\"\\\" && isHidden(elem)) {\\n                    values[index] = data_priv.access(elem, \\\"olddisplay\\\", defaultDisplay(elem.nodeName));\\n                }\\n            } else {\\n                hidden = isHidden(elem);\\n\\n                if (display !== \\\"none\\\" || !hidden) {\\n                    data_priv.set(elem, \\\"olddisplay\\\", hidden ? display : jQuery.css(elem, \\\"display\\\"));\\n                }\\n            }\\n        }\\n\\n        // Set the display of most of the elements in a second loop\\n        // to avoid the constant reflow\\n        for (index = 0; index < length; index++) {\\n            elem = elements[index];\\n            if (!elem.style) {\\n                continue;\\n            }\\n            if (!show || elem.style.display === \\\"none\\\" || elem.style.display === \\\"\\\") {\\n                elem.style.display = show ? values[index] || \\\"\\\" : \\\"none\\\";\\n            }\\n        }\\n\\n        return elements;\\n    }\\n\\n    jQuery.extend({\\n\\n        // Add in style property hooks for overriding the default\\n        // behavior of getting and setting a style property\\n        cssHooks: {\\n            opacity: {\\n                get: function (elem, computed) {\\n                    if (computed) {\\n\\n                        // We should always get a number back from opacity\\n                        var ret = curCSS(elem, \\\"opacity\\\");\\n                        return ret === \\\"\\\" ? \\\"1\\\" : ret;\\n                    }\\n                }\\n            }\\n        },\\n\\n        // Don't automatically add \\\"px\\\" to these possibly-unitless properties\\n        cssNumber: {\\n            \\\"columnCount\\\": true,\\n            \\\"fillOpacity\\\": true,\\n            \\\"flexGrow\\\": true,\\n            \\\"flexShrink\\\": true,\\n            \\\"fontWeight\\\": true,\\n            \\\"lineHeight\\\": true,\\n            \\\"opacity\\\": true,\\n            \\\"order\\\": true,\\n            \\\"orphans\\\": true,\\n            \\\"widows\\\": true,\\n            \\\"zIndex\\\": true,\\n            \\\"zoom\\\": true\\n        },\\n\\n        // Add in properties whose names you wish to fix before\\n        // setting or getting the value\\n        cssProps: {\\n            \\\"float\\\": \\\"cssFloat\\\"\\n        },\\n\\n        // Get and set the style property on a DOM Node\\n        style: function (elem, name, value, extra) {\\n\\n            // Don't set styles on text and comment nodes\\n            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {\\n                return;\\n            }\\n\\n            // Make sure that we're working with the right name\\n            var ret, type, hooks,\\n                origName = jQuery.camelCase(name),\\n                style = elem.style;\\n\\n            name = jQuery.cssProps[origName] || ( jQuery.cssProps[origName] = vendorPropName(style, origName) );\\n\\n            // Gets hook for the prefixed version, then unprefixed version\\n            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\\n\\n            // Check if we're setting a value\\n            if (value !== undefined) {\\n                type = typeof value;\\n\\n                // Convert \\\"+=\\\" or \\\"-=\\\" to relative numbers (#7345)\\n                if (type === \\\"string\\\" && (ret = rrelNum.exec(value))) {\\n                    value = ( ret[1] + 1 ) * ret[2] + parseFloat(jQuery.css(elem, name));\\n                    // Fixes bug #9237\\n                    type = \\\"number\\\";\\n                }\\n\\n                // Make sure that null and NaN values aren't set (#7116)\\n                if (value == null || value !== value) {\\n                    return;\\n                }\\n\\n                // If a number, add 'px' to the (except for certain CSS properties)\\n                if (type === \\\"number\\\" && !jQuery.cssNumber[origName]) {\\n                    value += \\\"px\\\";\\n                }\\n\\n                // Support: IE9-11+\\n                // background-* props affect original clone's values\\n                if (!support.clearCloneStyle && value === \\\"\\\" && name.indexOf(\\\"background\\\") === 0) {\\n                    style[name] = \\\"inherit\\\";\\n                }\\n\\n                // If a hook was provided, use that value, otherwise just set the specified value\\n                if (!hooks || !(\\\"set\\\" in hooks) || (value = hooks.set(elem, value, extra)) !== undefined) {\\n                    style[name] = value;\\n                }\\n\\n            } else {\\n                // If a hook was provided get the non-computed value from there\\n                if (hooks && \\\"get\\\" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {\\n                    return ret;\\n                }\\n\\n                // Otherwise just get the value from the style object\\n                return style[name];\\n            }\\n        },\\n\\n        css: function (elem, name, extra, styles) {\\n            var val, num, hooks,\\n                origName = jQuery.camelCase(name);\\n\\n            // Make sure that we're working with the right name\\n            name = jQuery.cssProps[origName] || ( jQuery.cssProps[origName] = vendorPropName(elem.style, origName) );\\n\\n            // Try prefixed name followed by the unprefixed name\\n            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName];\\n\\n            // If a hook was provided get the computed value from there\\n            if (hooks && \\\"get\\\" in hooks) {\\n                val = hooks.get(elem, true, extra);\\n            }\\n\\n            // Otherwise, if a way to get the computed value exists, use that\\n            if (val === undefined) {\\n                val = curCSS(elem, name, styles);\\n            }\\n\\n            // Convert \\\"normal\\\" to computed value\\n            if (val === \\\"normal\\\" && name in cssNormalTransform) {\\n                val = cssNormalTransform[name];\\n            }\\n\\n            // Make numeric if forced or a qualifier was provided and val looks numeric\\n            if (extra === \\\"\\\" || extra) {\\n                num = parseFloat(val);\\n                return extra === true || jQuery.isNumeric(num) ? num || 0 : val;\\n            }\\n            return val;\\n        }\\n    });\\n\\n    jQuery.each([\\\"height\\\", \\\"width\\\"], function (i, name) {\\n        jQuery.cssHooks[name] = {\\n            get: function (elem, computed, extra) {\\n                if (computed) {\\n\\n                    // Certain elements can have dimension info if we invisibly show them\\n                    // but it must have a current display style that would benefit\\n                    return rdisplayswap.test(jQuery.css(elem, \\\"display\\\")) && elem.offsetWidth === 0 ?\\n                        jQuery.swap(elem, cssShow, function () {\\n                            return getWidthOrHeight(elem, name, extra);\\n                        }) :\\n                        getWidthOrHeight(elem, name, extra);\\n                }\\n            },\\n\\n            set: function (elem, value, extra) {\\n                var styles = extra && getStyles(elem);\\n                return setPositiveNumber(elem, value, extra ?\\n                    augmentWidthOrHeight(\\n                        elem,\\n                        name,\\n                        extra,\\n                        jQuery.css(elem, \\\"boxSizing\\\", false, styles) === \\\"border-box\\\",\\n                        styles\\n                    ) : 0\\n                );\\n            }\\n        };\\n    });\\n\\n// Support: Android 2.3\\n    jQuery.cssHooks.marginRight = addGetHookIf(support.reliableMarginRight,\\n        function (elem, computed) {\\n            if (computed) {\\n                return jQuery.swap(elem, {\\\"display\\\": \\\"inline-block\\\"},\\n                    curCSS, [elem, \\\"marginRight\\\"]);\\n            }\\n        }\\n    );\\n\\n// These hooks are used by animate to expand properties\\n    jQuery.each({\\n        margin: \\\"\\\",\\n        padding: \\\"\\\",\\n        border: \\\"Width\\\"\\n    }, function (prefix, suffix) {\\n        jQuery.cssHooks[prefix + suffix] = {\\n            expand: function (value) {\\n                var i = 0,\\n                    expanded = {},\\n\\n                    // Assumes a single number if not a string\\n                    parts = typeof value === \\\"string\\\" ? value.split(\\\" \\\") : [value];\\n\\n                for (; i < 4; i++) {\\n                    expanded[prefix + cssExpand[i] + suffix] =\\n                        parts[i] || parts[i - 2] || parts[0];\\n                }\\n\\n                return expanded;\\n            }\\n        };\\n\\n        if (!rmargin.test(prefix)) {\\n            jQuery.cssHooks[prefix + suffix].set = setPositiveNumber;\\n        }\\n    });\\n\\n    jQuery.fn.extend({\\n        css: function (name, value) {\\n            return access(this, function (elem, name, value) {\\n                var styles, len,\\n                    map = {},\\n                    i = 0;\\n\\n                if (jQuery.isArray(name)) {\\n                    styles = getStyles(elem);\\n                    len = name.length;\\n\\n                    for (; i < len; i++) {\\n                        map[name[i]] = jQuery.css(elem, name[i], false, styles);\\n                    }\\n\\n                    return map;\\n                }\\n\\n                return value !== undefined ?\\n                    jQuery.style(elem, name, value) :\\n                    jQuery.css(elem, name);\\n            }, name, value, arguments.length > 1);\\n        },\\n        show: function () {\\n            return showHide(this, true);\\n        },\\n        hide: function () {\\n            return showHide(this);\\n        },\\n        toggle: function (state) {\\n            if (typeof state === \\\"boolean\\\") {\\n                return state ? this.show() : this.hide();\\n            }\\n\\n            return this.each(function () {\\n                if (isHidden(this)) {\\n                    jQuery(this).show();\\n                } else {\\n                    jQuery(this).hide();\\n                }\\n            });\\n        }\\n    });\\n\\n\\n    function Tween(elem, options, prop, end, easing) {\\n        return new Tween.prototype.init(elem, options, prop, end, easing);\\n    }\\n\\n    jQuery.Tween = Tween;\\n\\n    Tween.prototype = {\\n        constructor: Tween,\\n        init: function (elem, options, prop, end, easing, unit) {\\n            this.elem = elem;\\n            this.prop = prop;\\n            this.easing = easing || \\\"swing\\\";\\n            this.options = options;\\n            this.start = this.now = this.cur();\\n            this.end = end;\\n            this.unit = unit || ( jQuery.cssNumber[prop] ? \\\"\\\" : \\\"px\\\" );\\n        },\\n        cur: function () {\\n            var hooks = Tween.propHooks[this.prop];\\n\\n            return hooks && hooks.get ?\\n                hooks.get(this) :\\n                Tween.propHooks._default.get(this);\\n        },\\n        run: function (percent) {\\n            var eased,\\n                hooks = Tween.propHooks[this.prop];\\n\\n            if (this.options.duration) {\\n                this.pos = eased = jQuery.easing[this.easing](\\n                    percent, this.options.duration * percent, 0, 1, this.options.duration\\n                );\\n            } else {\\n                this.pos = eased = percent;\\n            }\\n            this.now = ( this.end - this.start ) * eased + this.start;\\n\\n            if (this.options.step) {\\n                this.options.step.call(this.elem, this.now, this);\\n            }\\n\\n            if (hooks && hooks.set) {\\n                hooks.set(this);\\n            } else {\\n                Tween.propHooks._default.set(this);\\n            }\\n            return this;\\n        }\\n    };\\n\\n    Tween.prototype.init.prototype = Tween.prototype;\\n\\n    Tween.propHooks = {\\n        _default: {\\n            get: function (tween) {\\n                var result;\\n\\n                if (tween.elem[tween.prop] != null &&\\n                    (!tween.elem.style || tween.elem.style[tween.prop] == null)) {\\n                    return tween.elem[tween.prop];\\n                }\\n\\n                // Passing an empty string as a 3rd parameter to .css will automatically\\n                // attempt a parseFloat and fallback to a string if the parse fails.\\n                // Simple values such as \\\"10px\\\" are parsed to Float;\\n                // complex values such as \\\"rotate(1rad)\\\" are returned as-is.\\n                result = jQuery.css(tween.elem, tween.prop, \\\"\\\");\\n                // Empty strings, null, undefined and \\\"auto\\\" are converted to 0.\\n                return !result || result === \\\"auto\\\" ? 0 : result;\\n            },\\n            set: function (tween) {\\n                // Use step hook for back compat.\\n                // Use cssHook if its there.\\n                // Use .style if available and use plain properties where available.\\n                if (jQuery.fx.step[tween.prop]) {\\n                    jQuery.fx.step[tween.prop](tween);\\n                } else if (tween.elem.style && ( tween.elem.style[jQuery.cssProps[tween.prop]] != null || jQuery.cssHooks[tween.prop] )) {\\n                    jQuery.style(tween.elem, tween.prop, tween.now + tween.unit);\\n                } else {\\n                    tween.elem[tween.prop] = tween.now;\\n                }\\n            }\\n        }\\n    };\\n\\n// Support: IE9\\n// Panic based approach to setting things on disconnected nodes\\n    Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {\\n        set: function (tween) {\\n            if (tween.elem.nodeType && tween.elem.parentNode) {\\n                tween.elem[tween.prop] = tween.now;\\n            }\\n        }\\n    };\\n\\n    jQuery.easing = {\\n        linear: function (p) {\\n            return p;\\n        },\\n        swing: function (p) {\\n            return 0.5 - Math.cos(p * Math.PI) / 2;\\n        }\\n    };\\n\\n    jQuery.fx = Tween.prototype.init;\\n\\n// Back Compat <1.8 extension point\\n    jQuery.fx.step = {};\\n\\n\\n    var\\n        fxNow, timerId,\\n        rfxtypes = /^(?:toggle|show|hide)$/,\\n        rfxnum = new RegExp(\\\"^(?:([+-])=|)(\\\" + pnum + \\\")([a-z%]*)$\\\", \\\"i\\\"),\\n        rrun = /queueHooks$/,\\n        animationPrefilters = [defaultPrefilter],\\n        tweeners = {\\n            \\\"*\\\": [function (prop, value) {\\n                var tween = this.createTween(prop, value),\\n                    target = tween.cur(),\\n                    parts = rfxnum.exec(value),\\n                    unit = parts && parts[3] || ( jQuery.cssNumber[prop] ? \\\"\\\" : \\\"px\\\" ),\\n\\n                    // Starting value computation is required for potential unit mismatches\\n                    start = ( jQuery.cssNumber[prop] || unit !== \\\"px\\\" && +target ) &&\\n                        rfxnum.exec(jQuery.css(tween.elem, prop)),\\n                    scale = 1,\\n                    maxIterations = 20;\\n\\n                if (start && start[3] !== unit) {\\n                    // Trust units reported by jQuery.css\\n                    unit = unit || start[3];\\n\\n                    // Make sure we update the tween properties later on\\n                    parts = parts || [];\\n\\n                    // Iteratively approximate from a nonzero starting point\\n                    start = +target || 1;\\n\\n                    do {\\n                        // If previous iteration zeroed out, double until we get *something*.\\n                        // Use string for doubling so we don't accidentally see scale as unchanged below\\n                        scale = scale || \\\".5\\\";\\n\\n                        // Adjust and apply\\n                        start = start / scale;\\n                        jQuery.style(tween.elem, prop, start + unit);\\n\\n                        // Update scale, tolerating zero or NaN from tween.cur(),\\n                        // break the loop if scale is unchanged or perfect, or if we've just had enough\\n                    } while (scale !== (scale = tween.cur() / target) && scale !== 1 && --maxIterations);\\n                }\\n\\n                // Update tween properties\\n                if (parts) {\\n                    start = tween.start = +start || +target || 0;\\n                    tween.unit = unit;\\n                    // If a +=/-= token was provided, we're doing a relative animation\\n                    tween.end = parts[1] ?\\n                        start + ( parts[1] + 1 ) * parts[2] :\\n                        +parts[2];\\n                }\\n\\n                return tween;\\n            }]\\n        };\\n\\n// Animations created synchronously will run synchronously\\n    function createFxNow() {\\n        setTimeout(function () {\\n            fxNow = undefined;\\n        });\\n        return ( fxNow = jQuery.now() );\\n    }\\n\\n// Generate parameters to create a standard animation\\n    function genFx(type, includeWidth) {\\n        var which,\\n            i = 0,\\n            attrs = {height: type};\\n\\n        // If we include width, step value is 1 to do all cssExpand values,\\n        // otherwise step value is 2 to skip over Left and Right\\n        includeWidth = includeWidth ? 1 : 0;\\n        for (; i < 4; i += 2 - includeWidth) {\\n            which = cssExpand[i];\\n            attrs[\\\"margin\\\" + which] = attrs[\\\"padding\\\" + which] = type;\\n        }\\n\\n        if (includeWidth) {\\n            attrs.opacity = attrs.width = type;\\n        }\\n\\n        return attrs;\\n    }\\n\\n    function createTween(value, prop, animation) {\\n        var tween,\\n            collection = ( tweeners[prop] || [] ).concat(tweeners[\\\"*\\\"]),\\n            index = 0,\\n            length = collection.length;\\n        for (; index < length; index++) {\\n            if ((tween = collection[index].call(animation, prop, value))) {\\n\\n                // We're done with this property\\n                return tween;\\n            }\\n        }\\n    }\\n\\n    function defaultPrefilter(elem, props, opts) {\\n        /* jshint validthis: true */\\n        var prop, value, toggle, tween, hooks, oldfire, display, checkDisplay,\\n            anim = this,\\n            orig = {},\\n            style = elem.style,\\n            hidden = elem.nodeType && isHidden(elem),\\n            dataShow = data_priv.get(elem, \\\"fxshow\\\");\\n\\n        // Handle queue: false promises\\n        if (!opts.queue) {\\n            hooks = jQuery._queueHooks(elem, \\\"fx\\\");\\n            if (hooks.unqueued == null) {\\n                hooks.unqueued = 0;\\n                oldfire = hooks.empty.fire;\\n                hooks.empty.fire = function () {\\n                    if (!hooks.unqueued) {\\n                        oldfire();\\n                    }\\n                };\\n            }\\n            hooks.unqueued++;\\n\\n            anim.always(function () {\\n                // Ensure the complete handler is called before this completes\\n                anim.always(function () {\\n                    hooks.unqueued--;\\n                    if (!jQuery.queue(elem, \\\"fx\\\").length) {\\n                        hooks.empty.fire();\\n                    }\\n                });\\n            });\\n        }\\n\\n        // Height/width overflow pass\\n        if (elem.nodeType === 1 && ( \\\"height\\\" in props || \\\"width\\\" in props )) {\\n            // Make sure that nothing sneaks out\\n            // Record all 3 overflow attributes because IE9-10 do not\\n            // change the overflow attribute when overflowX and\\n            // overflowY are set to the same value\\n            opts.overflow = [style.overflow, style.overflowX, style.overflowY];\\n\\n            // Set display property to inline-block for height/width\\n            // animations on inline elements that are having width/height animated\\n            display = jQuery.css(elem, \\\"display\\\");\\n\\n            // Test default display if display is currently \\\"none\\\"\\n            checkDisplay = display === \\\"none\\\" ?\\n                data_priv.get(elem, \\\"olddisplay\\\") || defaultDisplay(elem.nodeName) : display;\\n\\n            if (checkDisplay === \\\"inline\\\" && jQuery.css(elem, \\\"float\\\") === \\\"none\\\") {\\n                style.display = \\\"inline-block\\\";\\n            }\\n        }\\n\\n        if (opts.overflow) {\\n            style.overflow = \\\"hidden\\\";\\n            anim.always(function () {\\n                style.overflow = opts.overflow[0];\\n                style.overflowX = opts.overflow[1];\\n                style.overflowY = opts.overflow[2];\\n            });\\n        }\\n\\n        // show/hide pass\\n        for (prop in props) {\\n            value = props[prop];\\n            if (rfxtypes.exec(value)) {\\n                delete props[prop];\\n                toggle = toggle || value === \\\"toggle\\\";\\n                if (value === ( hidden ? \\\"hide\\\" : \\\"show\\\" )) {\\n\\n                    // If there is dataShow left over from a stopped hide or show and we are going to proceed with show, we should pretend to be hidden\\n                    if (value === \\\"show\\\" && dataShow && dataShow[prop] !== undefined) {\\n                        hidden = true;\\n                    } else {\\n                        continue;\\n                    }\\n                }\\n                orig[prop] = dataShow && dataShow[prop] || jQuery.style(elem, prop);\\n\\n                // Any non-fx value stops us from restoring the original display value\\n            } else {\\n                display = undefined;\\n            }\\n        }\\n\\n        if (!jQuery.isEmptyObject(orig)) {\\n            if (dataShow) {\\n                if (\\\"hidden\\\" in dataShow) {\\n                    hidden = dataShow.hidden;\\n                }\\n            } else {\\n                dataShow = data_priv.access(elem, \\\"fxshow\\\", {});\\n            }\\n\\n            // Store state if its toggle - enables .stop().toggle() to \\\"reverse\\\"\\n            if (toggle) {\\n                dataShow.hidden = !hidden;\\n            }\\n            if (hidden) {\\n                jQuery(elem).show();\\n            } else {\\n                anim.done(function () {\\n                    jQuery(elem).hide();\\n                });\\n            }\\n            anim.done(function () {\\n                var prop;\\n\\n                data_priv.remove(elem, \\\"fxshow\\\");\\n                for (prop in orig) {\\n                    jQuery.style(elem, prop, orig[prop]);\\n                }\\n            });\\n            for (prop in orig) {\\n                tween = createTween(hidden ? dataShow[prop] : 0, prop, anim);\\n\\n                if (!( prop in dataShow )) {\\n                    dataShow[prop] = tween.start;\\n                    if (hidden) {\\n                        tween.end = tween.start;\\n                        tween.start = prop === \\\"width\\\" || prop === \\\"height\\\" ? 1 : 0;\\n                    }\\n                }\\n            }\\n\\n            // If this is a noop like .hide().hide(), restore an overwritten display value\\n        } else if ((display === \\\"none\\\" ? defaultDisplay(elem.nodeName) : display) === \\\"inline\\\") {\\n            style.display = display;\\n        }\\n    }\\n\\n    function propFilter(props, specialEasing) {\\n        var index, name, easing, value, hooks;\\n\\n        // camelCase, specialEasing and expand cssHook pass\\n        for (index in props) {\\n            name = jQuery.camelCase(index);\\n            easing = specialEasing[name];\\n            value = props[index];\\n            if (jQuery.isArray(value)) {\\n                easing = value[1];\\n                value = props[index] = value[0];\\n            }\\n\\n            if (index !== name) {\\n                props[name] = value;\\n                delete props[index];\\n            }\\n\\n            hooks = jQuery.cssHooks[name];\\n            if (hooks && \\\"expand\\\" in hooks) {\\n                value = hooks.expand(value);\\n                delete props[name];\\n\\n                // Not quite $.extend, this won't overwrite existing keys.\\n                // Reusing 'index' because we have the correct \\\"name\\\"\\n                for (index in value) {\\n                    if (!( index in props )) {\\n                        props[index] = value[index];\\n                        specialEasing[index] = easing;\\n                    }\\n                }\\n            } else {\\n                specialEasing[name] = easing;\\n            }\\n        }\\n    }\\n\\n    function Animation(elem, properties, options) {\\n        var result,\\n            stopped,\\n            index = 0,\\n            length = animationPrefilters.length,\\n            deferred = jQuery.Deferred().always(function () {\\n                // Don't match elem in the :animated selector\\n                delete tick.elem;\\n            }),\\n            tick = function () {\\n                if (stopped) {\\n                    return false;\\n                }\\n                var currentTime = fxNow || createFxNow(),\\n                    remaining = Math.max(0, animation.startTime + animation.duration - currentTime),\\n                    // Support: Android 2.3\\n                    // Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)\\n                    temp = remaining / animation.duration || 0,\\n                    percent = 1 - temp,\\n                    index = 0,\\n                    length = animation.tweens.length;\\n\\n                for (; index < length; index++) {\\n                    animation.tweens[index].run(percent);\\n                }\\n\\n                deferred.notifyWith(elem, [animation, percent, remaining]);\\n\\n                if (percent < 1 && length) {\\n                    return remaining;\\n                } else {\\n                    deferred.resolveWith(elem, [animation]);\\n                    return false;\\n                }\\n            },\\n            animation = deferred.promise({\\n                elem: elem,\\n                props: jQuery.extend({}, properties),\\n                opts: jQuery.extend(true, {specialEasing: {}}, options),\\n                originalProperties: properties,\\n                originalOptions: options,\\n                startTime: fxNow || createFxNow(),\\n                duration: options.duration,\\n                tweens: [],\\n                createTween: function (prop, end) {\\n                    var tween = jQuery.Tween(elem, animation.opts, prop, end,\\n                        animation.opts.specialEasing[prop] || animation.opts.easing);\\n                    animation.tweens.push(tween);\\n                    return tween;\\n                },\\n                stop: function (gotoEnd) {\\n                    var index = 0,\\n                        // If we are going to the end, we want to run all the tweens\\n                        // otherwise we skip this part\\n                        length = gotoEnd ? animation.tweens.length : 0;\\n                    if (stopped) {\\n                        return this;\\n                    }\\n                    stopped = true;\\n                    for (; index < length; index++) {\\n                        animation.tweens[index].run(1);\\n                    }\\n\\n                    // Resolve when we played the last frame; otherwise, reject\\n                    if (gotoEnd) {\\n                        deferred.resolveWith(elem, [animation, gotoEnd]);\\n                    } else {\\n                        deferred.rejectWith(elem, [animation, gotoEnd]);\\n                    }\\n                    return this;\\n                }\\n            }),\\n            props = animation.props;\\n\\n        propFilter(props, animation.opts.specialEasing);\\n\\n        for (; index < length; index++) {\\n            result = animationPrefilters[index].call(animation, elem, props, animation.opts);\\n            if (result) {\\n                return result;\\n            }\\n        }\\n\\n        jQuery.map(props, createTween, animation);\\n\\n        if (jQuery.isFunction(animation.opts.start)) {\\n            animation.opts.start.call(elem, animation);\\n        }\\n\\n        jQuery.fx.timer(\\n            jQuery.extend(tick, {\\n                elem: elem,\\n                anim: animation,\\n                queue: animation.opts.queue\\n            })\\n        );\\n\\n        // attach callbacks from options\\n        return animation.progress(animation.opts.progress)\\n            .done(animation.opts.done, animation.opts.complete)\\n            .fail(animation.opts.fail)\\n            .always(animation.opts.always);\\n    }\\n\\n    jQuery.Animation = jQuery.extend(Animation, {\\n\\n        tweener: function (props, callback) {\\n            if (jQuery.isFunction(props)) {\\n                callback = props;\\n                props = [\\\"*\\\"];\\n            } else {\\n                props = props.split(\\\" \\\");\\n            }\\n\\n            var prop,\\n                index = 0,\\n                length = props.length;\\n\\n            for (; index < length; index++) {\\n                prop = props[index];\\n                tweeners[prop] = tweeners[prop] || [];\\n                tweeners[prop].unshift(callback);\\n            }\\n        },\\n\\n        prefilter: function (callback, prepend) {\\n            if (prepend) {\\n                animationPrefilters.unshift(callback);\\n            } else {\\n                animationPrefilters.push(callback);\\n            }\\n        }\\n    });\\n\\n    jQuery.speed = function (speed, easing, fn) {\\n        var opt = speed && typeof speed === \\\"object\\\" ? jQuery.extend({}, speed) : {\\n                complete: fn || !fn && easing ||\\n                jQuery.isFunction(speed) && speed,\\n                duration: speed,\\n                easing: fn && easing || easing && !jQuery.isFunction(easing) && easing\\n            };\\n\\n        opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === \\\"number\\\" ? opt.duration :\\n                opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;\\n\\n        // Normalize opt.queue - true/undefined/null -> \\\"fx\\\"\\n        if (opt.queue == null || opt.queue === true) {\\n            opt.queue = \\\"fx\\\";\\n        }\\n\\n        // Queueing\\n        opt.old = opt.complete;\\n\\n        opt.complete = function () {\\n            if (jQuery.isFunction(opt.old)) {\\n                opt.old.call(this);\\n            }\\n\\n            if (opt.queue) {\\n                jQuery.dequeue(this, opt.queue);\\n            }\\n        };\\n\\n        return opt;\\n    };\\n\\n    jQuery.fn.extend({\\n        fadeTo: function (speed, to, easing, callback) {\\n\\n            // Show any hidden elements after setting opacity to 0\\n            return this.filter(isHidden).css(\\\"opacity\\\", 0).show()\\n\\n            // Animate to the value specified\\n                .end().animate({opacity: to}, speed, easing, callback);\\n        },\\n        animate: function (prop, speed, easing, callback) {\\n            var empty = jQuery.isEmptyObject(prop),\\n                optall = jQuery.speed(speed, easing, callback),\\n                doAnimation = function () {\\n                    // Operate on a copy of prop so per-property easing won't be lost\\n                    var anim = Animation(this, jQuery.extend({}, prop), optall);\\n\\n                    // Empty animations, or finishing resolves immediately\\n                    if (empty || data_priv.get(this, \\\"finish\\\")) {\\n                        anim.stop(true);\\n                    }\\n                };\\n            doAnimation.finish = doAnimation;\\n\\n            return empty || optall.queue === false ?\\n                this.each(doAnimation) :\\n                this.queue(optall.queue, doAnimation);\\n        },\\n        stop: function (type, clearQueue, gotoEnd) {\\n            var stopQueue = function (hooks) {\\n                var stop = hooks.stop;\\n                delete hooks.stop;\\n                stop(gotoEnd);\\n            };\\n\\n            if (typeof type !== \\\"string\\\") {\\n                gotoEnd = clearQueue;\\n                clearQueue = type;\\n                type = undefined;\\n            }\\n            if (clearQueue && type !== false) {\\n                this.queue(type || \\\"fx\\\", []);\\n            }\\n\\n            return this.each(function () {\\n                var dequeue = true,\\n                    index = type != null && type + \\\"queueHooks\\\",\\n                    timers = jQuery.timers,\\n                    data = data_priv.get(this);\\n\\n                if (index) {\\n                    if (data[index] && data[index].stop) {\\n                        stopQueue(data[index]);\\n                    }\\n                } else {\\n                    for (index in data) {\\n                        if (data[index] && data[index].stop && rrun.test(index)) {\\n                            stopQueue(data[index]);\\n                        }\\n                    }\\n                }\\n\\n                for (index = timers.length; index--;) {\\n                    if (timers[index].elem === this && (type == null || timers[index].queue === type)) {\\n                        timers[index].anim.stop(gotoEnd);\\n                        dequeue = false;\\n                        timers.splice(index, 1);\\n                    }\\n                }\\n\\n                // Start the next in the queue if the last step wasn't forced.\\n                // Timers currently will call their complete callbacks, which\\n                // will dequeue but only if they were gotoEnd.\\n                if (dequeue || !gotoEnd) {\\n                    jQuery.dequeue(this, type);\\n                }\\n            });\\n        },\\n        finish: function (type) {\\n            if (type !== false) {\\n                type = type || \\\"fx\\\";\\n            }\\n            return this.each(function () {\\n                var index,\\n                    data = data_priv.get(this),\\n                    queue = data[type + \\\"queue\\\"],\\n                    hooks = data[type + \\\"queueHooks\\\"],\\n                    timers = jQuery.timers,\\n                    length = queue ? queue.length : 0;\\n\\n                // Enable finishing flag on private data\\n                data.finish = true;\\n\\n                // Empty the queue first\\n                jQuery.queue(this, type, []);\\n\\n                if (hooks && hooks.stop) {\\n                    hooks.stop.call(this, true);\\n                }\\n\\n                // Look for any active animations, and finish them\\n                for (index = timers.length; index--;) {\\n                    if (timers[index].elem === this && timers[index].queue === type) {\\n                        timers[index].anim.stop(true);\\n                        timers.splice(index, 1);\\n                    }\\n                }\\n\\n                // Look for any animations in the old queue and finish them\\n                for (index = 0; index < length; index++) {\\n                    if (queue[index] && queue[index].finish) {\\n                        queue[index].finish.call(this);\\n                    }\\n                }\\n\\n                // Turn off finishing flag\\n                delete data.finish;\\n            });\\n        }\\n    });\\n\\n    jQuery.each([\\\"toggle\\\", \\\"show\\\", \\\"hide\\\"], function (i, name) {\\n        var cssFn = jQuery.fn[name];\\n        jQuery.fn[name] = function (speed, easing, callback) {\\n            return speed == null || typeof speed === \\\"boolean\\\" ?\\n                cssFn.apply(this, arguments) :\\n                this.animate(genFx(name, true), speed, easing, callback);\\n        };\\n    });\\n\\n// Generate shortcuts for custom animations\\n    jQuery.each({\\n        slideDown: genFx(\\\"show\\\"),\\n        slideUp: genFx(\\\"hide\\\"),\\n        slideToggle: genFx(\\\"toggle\\\"),\\n        fadeIn: {opacity: \\\"show\\\"},\\n        fadeOut: {opacity: \\\"hide\\\"},\\n        fadeToggle: {opacity: \\\"toggle\\\"}\\n    }, function (name, props) {\\n        jQuery.fn[name] = function (speed, easing, callback) {\\n            return this.animate(props, speed, easing, callback);\\n        };\\n    });\\n\\n    jQuery.timers = [];\\n    jQuery.fx.tick = function () {\\n        var timer,\\n            i = 0,\\n            timers = jQuery.timers;\\n\\n        fxNow = jQuery.now();\\n\\n        for (; i < timers.length; i++) {\\n            timer = timers[i];\\n            // Checks the timer has not already been removed\\n            if (!timer() && timers[i] === timer) {\\n                timers.splice(i--, 1);\\n            }\\n        }\\n\\n        if (!timers.length) {\\n            jQuery.fx.stop();\\n        }\\n        fxNow = undefined;\\n    };\\n\\n    jQuery.fx.timer = function (timer) {\\n        jQuery.timers.push(timer);\\n        if (timer()) {\\n            jQuery.fx.start();\\n        } else {\\n            jQuery.timers.pop();\\n        }\\n    };\\n\\n    jQuery.fx.interval = 13;\\n\\n    jQuery.fx.start = function () {\\n        if (!timerId) {\\n            timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval);\\n        }\\n    };\\n\\n    jQuery.fx.stop = function () {\\n        clearInterval(timerId);\\n        timerId = null;\\n    };\\n\\n    jQuery.fx.speeds = {\\n        slow: 600,\\n        fast: 200,\\n        // Default speed\\n        _default: 400\\n    };\\n\\n\\n// Based off of the plugin by Clint Helfers, with permission.\\n// http://blindsignals.com/index.php/2009/07/jquery-delay/\\n    jQuery.fn.delay = function (time, type) {\\n        time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;\\n        type = type || \\\"fx\\\";\\n\\n        return this.queue(type, function (next, hooks) {\\n            var timeout = setTimeout(next, time);\\n            hooks.stop = function () {\\n                clearTimeout(timeout);\\n            };\\n        });\\n    };\\n\\n\\n    (function () {\\n        var input = document.createElement(\\\"input\\\"),\\n            select = document.createElement(\\\"select\\\"),\\n            opt = select.appendChild(document.createElement(\\\"option\\\"));\\n\\n        input.type = \\\"checkbox\\\";\\n\\n        // Support: iOS<=5.1, Android<=4.2+\\n        // Default value for a checkbox should be \\\"on\\\"\\n        support.checkOn = input.value !== \\\"\\\";\\n\\n        // Support: IE<=11+\\n        // Must access selectedIndex to make default options select\\n        support.optSelected = opt.selected;\\n\\n        // Support: Android<=2.3\\n        // Options inside disabled selects are incorrectly marked as disabled\\n        select.disabled = true;\\n        support.optDisabled = !opt.disabled;\\n\\n        // Support: IE<=11+\\n        // An input loses its value after becoming a radio\\n        input = document.createElement(\\\"input\\\");\\n        input.value = \\\"t\\\";\\n        input.type = \\\"radio\\\";\\n        support.radioValue = input.value === \\\"t\\\";\\n    })();\\n\\n\\n    var nodeHook, boolHook,\\n        attrHandle = jQuery.expr.attrHandle;\\n\\n    jQuery.fn.extend({\\n        attr: function (name, value) {\\n            return access(this, jQuery.attr, name, value, arguments.length > 1);\\n        },\\n\\n        removeAttr: function (name) {\\n            return this.each(function () {\\n                jQuery.removeAttr(this, name);\\n            });\\n        }\\n    });\\n\\n    jQuery.extend({\\n        attr: function (elem, name, value) {\\n            var hooks, ret,\\n                nType = elem.nodeType;\\n\\n            // don't get/set attributes on text, comment and attribute nodes\\n            if (!elem || nType === 3 || nType === 8 || nType === 2) {\\n                return;\\n            }\\n\\n            // Fallback to prop when attributes are not supported\\n            if (typeof elem.getAttribute === strundefined) {\\n                return jQuery.prop(elem, name, value);\\n            }\\n\\n            // All attributes are lowercase\\n            // Grab necessary hook if one is defined\\n            if (nType !== 1 || !jQuery.isXMLDoc(elem)) {\\n                name = name.toLowerCase();\\n                hooks = jQuery.attrHooks[name] ||\\n                    ( jQuery.expr.match.bool.test(name) ? boolHook : nodeHook );\\n            }\\n\\n            if (value !== undefined) {\\n\\n                if (value === null) {\\n                    jQuery.removeAttr(elem, name);\\n\\n                } else if (hooks && \\\"set\\\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {\\n                    return ret;\\n\\n                } else {\\n                    elem.setAttribute(name, value + \\\"\\\");\\n                    return value;\\n                }\\n\\n            } else if (hooks && \\\"get\\\" in hooks && (ret = hooks.get(elem, name)) !== null) {\\n                return ret;\\n\\n            } else {\\n                ret = jQuery.find.attr(elem, name);\\n\\n                // Non-existent attributes return null, we normalize to undefined\\n                return ret == null ?\\n                    undefined :\\n                    ret;\\n            }\\n        },\\n\\n        removeAttr: function (elem, value) {\\n            var name, propName,\\n                i = 0,\\n                attrNames = value && value.match(rnotwhite);\\n\\n            if (attrNames && elem.nodeType === 1) {\\n                while ((name = attrNames[i++])) {\\n                    propName = jQuery.propFix[name] || name;\\n\\n                    // Boolean attributes get special treatment (#10870)\\n                    if (jQuery.expr.match.bool.test(name)) {\\n                        // Set corresponding property to false\\n                        elem[propName] = false;\\n                    }\\n\\n                    elem.removeAttribute(name);\\n                }\\n            }\\n        },\\n\\n        attrHooks: {\\n            type: {\\n                set: function (elem, value) {\\n                    if (!support.radioValue && value === \\\"radio\\\" &&\\n                        jQuery.nodeName(elem, \\\"input\\\")) {\\n                        var val = elem.value;\\n                        elem.setAttribute(\\\"type\\\", value);\\n                        if (val) {\\n                            elem.value = val;\\n                        }\\n                        return value;\\n                    }\\n                }\\n            }\\n        }\\n    });\\n\\n// Hooks for boolean attributes\\n    boolHook = {\\n        set: function (elem, value, name) {\\n            if (value === false) {\\n                // Remove boolean attributes when set to false\\n                jQuery.removeAttr(elem, name);\\n            } else {\\n                elem.setAttribute(name, name);\\n            }\\n            return name;\\n        }\\n    };\\n    jQuery.each(jQuery.expr.match.bool.source.match(/\\\\w+/g), function (i, name) {\\n        var getter = attrHandle[name] || jQuery.find.attr;\\n\\n        attrHandle[name] = function (elem, name, isXML) {\\n            var ret, handle;\\n            if (!isXML) {\\n                // Avoid an infinite loop by temporarily removing this function from the getter\\n                handle = attrHandle[name];\\n                attrHandle[name] = ret;\\n                ret = getter(elem, name, isXML) != null ?\\n                    name.toLowerCase() :\\n                    null;\\n                attrHandle[name] = handle;\\n            }\\n            return ret;\\n        };\\n    });\\n\\n\\n    var rfocusable = /^(?:input|select|textarea|button)$/i;\\n\\n    jQuery.fn.extend({\\n        prop: function (name, value) {\\n            return access(this, jQuery.prop, name, value, arguments.length > 1);\\n        },\\n\\n        removeProp: function (name) {\\n            return this.each(function () {\\n                delete this[jQuery.propFix[name] || name];\\n            });\\n        }\\n    });\\n\\n    jQuery.extend({\\n        propFix: {\\n            \\\"for\\\": \\\"htmlFor\\\",\\n            \\\"class\\\": \\\"className\\\"\\n        },\\n\\n        prop: function (elem, name, value) {\\n            var ret, hooks, notxml,\\n                nType = elem.nodeType;\\n\\n            // Don't get/set properties on text, comment and attribute nodes\\n            if (!elem || nType === 3 || nType === 8 || nType === 2) {\\n                return;\\n            }\\n\\n            notxml = nType !== 1 || !jQuery.isXMLDoc(elem);\\n\\n            if (notxml) {\\n                // Fix name and attach hooks\\n                name = jQuery.propFix[name] || name;\\n                hooks = jQuery.propHooks[name];\\n            }\\n\\n            if (value !== undefined) {\\n                return hooks && \\\"set\\\" in hooks && (ret = hooks.set(elem, value, name)) !== undefined ?\\n                    ret :\\n                    ( elem[name] = value );\\n\\n            } else {\\n                return hooks && \\\"get\\\" in hooks && (ret = hooks.get(elem, name)) !== null ?\\n                    ret :\\n                    elem[name];\\n            }\\n        },\\n\\n        propHooks: {\\n            tabIndex: {\\n                get: function (elem) {\\n                    return elem.hasAttribute(\\\"tabindex\\\") || rfocusable.test(elem.nodeName) || elem.href ?\\n                        elem.tabIndex :\\n                        -1;\\n                }\\n            }\\n        }\\n    });\\n\\n    if (!support.optSelected) {\\n        jQuery.propHooks.selected = {\\n            get: function (elem) {\\n                var parent = elem.parentNode;\\n                if (parent && parent.parentNode) {\\n                    parent.parentNode.selectedIndex;\\n                }\\n                return null;\\n            }\\n        };\\n    }\\n\\n    jQuery.each([\\n        \\\"tabIndex\\\",\\n        \\\"readOnly\\\",\\n        \\\"maxLength\\\",\\n        \\\"cellSpacing\\\",\\n        \\\"cellPadding\\\",\\n        \\\"rowSpan\\\",\\n        \\\"colSpan\\\",\\n        \\\"useMap\\\",\\n        \\\"frameBorder\\\",\\n        \\\"contentEditable\\\"\\n    ], function () {\\n        jQuery.propFix[this.toLowerCase()] = this;\\n    });\\n\\n\\n    var rclass = /[\\\\t\\\\r\\\\n\\\\f]/g;\\n\\n    jQuery.fn.extend({\\n        addClass: function (value) {\\n            var classes, elem, cur, clazz, j, finalValue,\\n                proceed = typeof value === \\\"string\\\" && value,\\n                i = 0,\\n                len = this.length;\\n\\n            if (jQuery.isFunction(value)) {\\n                return this.each(function (j) {\\n                    jQuery(this).addClass(value.call(this, j, this.className));\\n                });\\n            }\\n\\n            if (proceed) {\\n                // The disjunction here is for better compressibility (see removeClass)\\n                classes = ( value || \\\"\\\" ).match(rnotwhite) || [];\\n\\n                for (; i < len; i++) {\\n                    elem = this[i];\\n                    cur = elem.nodeType === 1 && ( elem.className ?\\n                                ( \\\" \\\" + elem.className + \\\" \\\" ).replace(rclass, \\\" \\\") :\\n                                \\\" \\\"\\n                        );\\n\\n                    if (cur) {\\n                        j = 0;\\n                        while ((clazz = classes[j++])) {\\n                            if (cur.indexOf(\\\" \\\" + clazz + \\\" \\\") < 0) {\\n                                cur += clazz + \\\" \\\";\\n                            }\\n                        }\\n\\n                        // only assign if different to avoid unneeded rendering.\\n                        finalValue = jQuery.trim(cur);\\n                        if (elem.className !== finalValue) {\\n                            elem.className = finalValue;\\n                        }\\n                    }\\n                }\\n            }\\n\\n            return this;\\n        },\\n\\n        removeClass: function (value) {\\n            var classes, elem, cur, clazz, j, finalValue,\\n                proceed = arguments.length === 0 || typeof value === \\\"string\\\" && value,\\n                i = 0,\\n                len = this.length;\\n\\n            if (jQuery.isFunction(value)) {\\n                return this.each(function (j) {\\n                    jQuery(this).removeClass(value.call(this, j, this.className));\\n                });\\n            }\\n            if (proceed) {\\n                classes = ( value || \\\"\\\" ).match(rnotwhite) || [];\\n\\n                for (; i < len; i++) {\\n                    elem = this[i];\\n                    // This expression is here for better compressibility (see addClass)\\n                    cur = elem.nodeType === 1 && ( elem.className ?\\n                                ( \\\" \\\" + elem.className + \\\" \\\" ).replace(rclass, \\\" \\\") :\\n                                \\\"\\\"\\n                        );\\n\\n                    if (cur) {\\n                        j = 0;\\n                        while ((clazz = classes[j++])) {\\n                            // Remove *all* instances\\n                            while (cur.indexOf(\\\" \\\" + clazz + \\\" \\\") >= 0) {\\n                                cur = cur.replace(\\\" \\\" + clazz + \\\" \\\", \\\" \\\");\\n                            }\\n                        }\\n\\n                        // Only assign if different to avoid unneeded rendering.\\n                        finalValue = value ? jQuery.trim(cur) : \\\"\\\";\\n                        if (elem.className !== finalValue) {\\n                            elem.className = finalValue;\\n                        }\\n                    }\\n                }\\n            }\\n\\n            return this;\\n        },\\n\\n        toggleClass: function (value, stateVal) {\\n            var type = typeof value;\\n\\n            if (typeof stateVal === \\\"boolean\\\" && type === \\\"string\\\") {\\n                return stateVal ? this.addClass(value) : this.removeClass(value);\\n            }\\n\\n            if (jQuery.isFunction(value)) {\\n                return this.each(function (i) {\\n                    jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);\\n                });\\n            }\\n\\n            return this.each(function () {\\n                if (type === \\\"string\\\") {\\n                    // Toggle individual class names\\n                    var className,\\n                        i = 0,\\n                        self = jQuery(this),\\n                        classNames = value.match(rnotwhite) || [];\\n\\n                    while ((className = classNames[i++])) {\\n                        // Check each className given, space separated list\\n                        if (self.hasClass(className)) {\\n                            self.removeClass(className);\\n                        } else {\\n                            self.addClass(className);\\n                        }\\n                    }\\n\\n                    // Toggle whole class name\\n                } else if (type === strundefined || type === \\\"boolean\\\") {\\n                    if (this.className) {\\n                        // store className if set\\n                        data_priv.set(this, \\\"__className__\\\", this.className);\\n                    }\\n\\n                    // If the element has a class name or if we're passed `false`,\\n                    // then remove the whole classname (if there was one, the above saved it).\\n                    // Otherwise bring back whatever was previously saved (if anything),\\n                    // falling back to the empty string if nothing was stored.\\n                    this.className = this.className || value === false ? \\\"\\\" : data_priv.get(this, \\\"__className__\\\") || \\\"\\\";\\n                }\\n            });\\n        },\\n\\n        hasClass: function (selector) {\\n            var className = \\\" \\\" + selector + \\\" \\\",\\n                i = 0,\\n                l = this.length;\\n            for (; i < l; i++) {\\n                if (this[i].nodeType === 1 && (\\\" \\\" + this[i].className + \\\" \\\").replace(rclass, \\\" \\\").indexOf(className) >= 0) {\\n                    return true;\\n                }\\n            }\\n\\n            return false;\\n        }\\n    });\\n\\n\\n    var rreturn = /\\\\r/g;\\n\\n    jQuery.fn.extend({\\n        val: function (value) {\\n            var hooks, ret, isFunction,\\n                elem = this[0];\\n\\n            if (!arguments.length) {\\n                if (elem) {\\n                    hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()];\\n\\n                    if (hooks && \\\"get\\\" in hooks && (ret = hooks.get(elem, \\\"value\\\")) !== undefined) {\\n                        return ret;\\n                    }\\n\\n                    ret = elem.value;\\n\\n                    return typeof ret === \\\"string\\\" ?\\n                        // Handle most common string cases\\n                        ret.replace(rreturn, \\\"\\\") :\\n                        // Handle cases where value is null/undef or number\\n                        ret == null ? \\\"\\\" : ret;\\n                }\\n\\n                return;\\n            }\\n\\n            isFunction = jQuery.isFunction(value);\\n\\n            return this.each(function (i) {\\n                var val;\\n\\n                if (this.nodeType !== 1) {\\n                    return;\\n                }\\n\\n                if (isFunction) {\\n                    val = value.call(this, i, jQuery(this).val());\\n                } else {\\n                    val = value;\\n                }\\n\\n                // Treat null/undefined as \\\"\\\"; convert numbers to string\\n                if (val == null) {\\n                    val = \\\"\\\";\\n\\n                } else if (typeof val === \\\"number\\\") {\\n                    val += \\\"\\\";\\n\\n                } else if (jQuery.isArray(val)) {\\n                    val = jQuery.map(val, function (value) {\\n                        return value == null ? \\\"\\\" : value + \\\"\\\";\\n                    });\\n                }\\n\\n                hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()];\\n\\n                // If set returns undefined, fall back to normal setting\\n                if (!hooks || !(\\\"set\\\" in hooks) || hooks.set(this, val, \\\"value\\\") === undefined) {\\n                    this.value = val;\\n                }\\n            });\\n        }\\n    });\\n\\n    jQuery.extend({\\n        valHooks: {\\n            option: {\\n                get: function (elem) {\\n                    var val = jQuery.find.attr(elem, \\\"value\\\");\\n                    return val != null ?\\n                        val :\\n                        // Support: IE10-11+\\n                        // option.text throws exceptions (#14686, #14858)\\n                        jQuery.trim(jQuery.text(elem));\\n                }\\n            },\\n            select: {\\n                get: function (elem) {\\n                    var value, option,\\n                        options = elem.options,\\n                        index = elem.selectedIndex,\\n                        one = elem.type === \\\"select-one\\\" || index < 0,\\n                        values = one ? null : [],\\n                        max = one ? index + 1 : options.length,\\n                        i = index < 0 ?\\n                            max :\\n                            one ? index : 0;\\n\\n                    // Loop through all the selected options\\n                    for (; i < max; i++) {\\n                        option = options[i];\\n\\n                        // IE6-9 doesn't update selected after form reset (#2551)\\n                        if (( option.selected || i === index ) &&\\n                            // Don't return options that are disabled or in a disabled optgroup\\n                            ( support.optDisabled ? !option.disabled : option.getAttribute(\\\"disabled\\\") === null ) &&\\n                            ( !option.parentNode.disabled || !jQuery.nodeName(option.parentNode, \\\"optgroup\\\") )) {\\n\\n                            // Get the specific value for the option\\n                            value = jQuery(option).val();\\n\\n                            // We don't need an array for one selects\\n                            if (one) {\\n                                return value;\\n                            }\\n\\n                            // Multi-Selects return an array\\n                            values.push(value);\\n                        }\\n                    }\\n\\n                    return values;\\n                },\\n\\n                set: function (elem, value) {\\n                    var optionSet, option,\\n                        options = elem.options,\\n                        values = jQuery.makeArray(value),\\n                        i = options.length;\\n\\n                    while (i--) {\\n                        option = options[i];\\n                        if ((option.selected = jQuery.inArray(option.value, values) >= 0)) {\\n                            optionSet = true;\\n                        }\\n                    }\\n\\n                    // Force browsers to behave consistently when non-matching value is set\\n                    if (!optionSet) {\\n                        elem.selectedIndex = -1;\\n                    }\\n                    return values;\\n                }\\n            }\\n        }\\n    });\\n\\n// Radios and checkboxes getter/setter\\n    jQuery.each([\\\"radio\\\", \\\"checkbox\\\"], function () {\\n        jQuery.valHooks[this] = {\\n            set: function (elem, value) {\\n                if (jQuery.isArray(value)) {\\n                    return ( elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0 );\\n                }\\n            }\\n        };\\n        if (!support.checkOn) {\\n            jQuery.valHooks[this].get = function (elem) {\\n                return elem.getAttribute(\\\"value\\\") === null ? \\\"on\\\" : elem.value;\\n            };\\n        }\\n    });\\n\\n\\n// Return jQuery for attributes-only inclusion\\n\\n\\n    jQuery.each((\\\"blur focus focusin focusout load resize scroll unload click dblclick \\\" +\\n    \\\"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave \\\" +\\n    \\\"change select submit keydown keypress keyup error contextmenu\\\").split(\\\" \\\"), function (i, name) {\\n\\n        // Handle event binding\\n        jQuery.fn[name] = function (data, fn) {\\n            return arguments.length > 0 ?\\n                this.on(name, null, data, fn) :\\n                this.trigger(name);\\n        };\\n    });\\n\\n    jQuery.fn.extend({\\n        hover: function (fnOver, fnOut) {\\n            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);\\n        },\\n\\n        bind: function (types, data, fn) {\\n            return this.on(types, null, data, fn);\\n        },\\n        unbind: function (types, fn) {\\n            return this.off(types, null, fn);\\n        },\\n\\n        delegate: function (selector, types, data, fn) {\\n            return this.on(types, selector, data, fn);\\n        },\\n        undelegate: function (selector, types, fn) {\\n            // ( namespace ) or ( selector, types [, fn] )\\n            return arguments.length === 1 ? this.off(selector, \\\"**\\\") : this.off(types, selector || \\\"**\\\", fn);\\n        }\\n    });\\n\\n\\n    var nonce = jQuery.now();\\n\\n    var rquery = (/\\\\?/);\\n\\n\\n// Support: Android 2.3\\n// Workaround failure to string-cast null input\\n    jQuery.parseJSON = function (data) {\\n        return JSON.parse(data + \\\"\\\");\\n    };\\n\\n\\n// Cross-browser xml parsing\\n    jQuery.parseXML = function (data) {\\n        var xml, tmp;\\n        if (!data || typeof data !== \\\"string\\\") {\\n            return null;\\n        }\\n\\n        // Support: IE9\\n        try {\\n            tmp = new DOMParser();\\n            xml = tmp.parseFromString(data, \\\"text/xml\\\");\\n        } catch (e) {\\n            xml = undefined;\\n        }\\n\\n        if (!xml || xml.getElementsByTagName(\\\"parsererror\\\").length) {\\n            jQuery.error(\\\"Invalid XML: \\\" + data);\\n        }\\n        return xml;\\n    };\\n\\n\\n    var\\n        rhash = /#.*$/,\\n        rts = /([?&])_=[^&]*/,\\n        rheaders = /^(.*?):[ \\\\t]*([^\\\\r\\\\n]*)$/mg,\\n        // #7653, #8125, #8152: local protocol detection\\n        rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,\\n        rnoContent = /^(?:GET|HEAD)$/,\\n        rprotocol = /^\\\\/\\\\//,\\n        rurl = /^([\\\\w.+-]+:)(?:\\\\/\\\\/(?:[^\\\\/?#]*@|)([^\\\\/?#:]*)(?::(\\\\d+)|)|)/,\\n\\n        /* Prefilters\\n         * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)\\n         * 2) These are called:\\n         *    - BEFORE asking for a transport\\n         *    - AFTER param serialization (s.data is a string if s.processData is true)\\n         * 3) key is the dataType\\n         * 4) the catchall symbol \\\"*\\\" can be used\\n         * 5) execution will start with transport dataType and THEN continue down to \\\"*\\\" if needed\\n         */\\n        prefilters = {},\\n\\n        /* Transports bindings\\n         * 1) key is the dataType\\n         * 2) the catchall symbol \\\"*\\\" can be used\\n         * 3) selection will start with transport dataType and THEN go to \\\"*\\\" if needed\\n         */\\n        transports = {},\\n\\n        // Avoid comment-prolog char sequence (#10098); must appease lint and evade compression\\n        allTypes = \\\"*/\\\".concat(\\\"*\\\"),\\n\\n        // Document location\\n        ajaxLocation = window.location.href,\\n\\n        // Segment location into parts\\n        ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];\\n\\n// Base \\\"constructor\\\" for jQuery.ajaxPrefilter and jQuery.ajaxTransport\\n    function addToPrefiltersOrTransports(structure) {\\n\\n        // dataTypeExpression is optional and defaults to \\\"*\\\"\\n        return function (dataTypeExpression, func) {\\n\\n            if (typeof dataTypeExpression !== \\\"string\\\") {\\n                func = dataTypeExpression;\\n                dataTypeExpression = \\\"*\\\";\\n            }\\n\\n            var dataType,\\n                i = 0,\\n                dataTypes = dataTypeExpression.toLowerCase().match(rnotwhite) || [];\\n\\n            if (jQuery.isFunction(func)) {\\n                // For each dataType in the dataTypeExpression\\n                while ((dataType = dataTypes[i++])) {\\n                    // Prepend if requested\\n                    if (dataType[0] === \\\"+\\\") {\\n                        dataType = dataType.slice(1) || \\\"*\\\";\\n                        (structure[dataType] = structure[dataType] || []).unshift(func);\\n\\n                        // Otherwise append\\n                    } else {\\n                        (structure[dataType] = structure[dataType] || []).push(func);\\n                    }\\n                }\\n            }\\n        };\\n    }\\n\\n// Base inspection function for prefilters and transports\\n    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {\\n\\n        var inspected = {},\\n            seekingTransport = ( structure === transports );\\n\\n        function inspect(dataType) {\\n            var selected;\\n            inspected[dataType] = true;\\n            jQuery.each(structure[dataType] || [], function (_, prefilterOrFactory) {\\n                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);\\n                if (typeof dataTypeOrTransport === \\\"string\\\" && !seekingTransport && !inspected[dataTypeOrTransport]) {\\n                    options.dataTypes.unshift(dataTypeOrTransport);\\n                    inspect(dataTypeOrTransport);\\n                    return false;\\n                } else if (seekingTransport) {\\n                    return !( selected = dataTypeOrTransport );\\n                }\\n            });\\n            return selected;\\n        }\\n\\n        return inspect(options.dataTypes[0]) || !inspected[\\\"*\\\"] && inspect(\\\"*\\\");\\n    }\\n\\n// A special extend for ajax options\\n// that takes \\\"flat\\\" options (not to be deep extended)\\n// Fixes #9887\\n    function ajaxExtend(target, src) {\\n        var key, deep,\\n            flatOptions = jQuery.ajaxSettings.flatOptions || {};\\n\\n        for (key in src) {\\n            if (src[key] !== undefined) {\\n                ( flatOptions[key] ? target : ( deep || (deep = {}) ) )[key] = src[key];\\n            }\\n        }\\n        if (deep) {\\n            jQuery.extend(true, target, deep);\\n        }\\n\\n        return target;\\n    }\\n\\n    /* Handles responses to an ajax request:\\n     * - finds the right dataType (mediates between content-type and expected dataType)\\n     * - returns the corresponding response\\n     */\\n    function ajaxHandleResponses(s, jqXHR, responses) {\\n\\n        var ct, type, finalDataType, firstDataType,\\n            contents = s.contents,\\n            dataTypes = s.dataTypes;\\n\\n        // Remove auto dataType and get content-type in the process\\n        while (dataTypes[0] === \\\"*\\\") {\\n            dataTypes.shift();\\n            if (ct === undefined) {\\n                ct = s.mimeType || jqXHR.getResponseHeader(\\\"Content-Type\\\");\\n            }\\n        }\\n\\n        // Check if we're dealing with a known content-type\\n        if (ct) {\\n            for (type in contents) {\\n                if (contents[type] && contents[type].test(ct)) {\\n                    dataTypes.unshift(type);\\n                    break;\\n                }\\n            }\\n        }\\n\\n        // Check to see if we have a response for the expected dataType\\n        if (dataTypes[0] in responses) {\\n            finalDataType = dataTypes[0];\\n        } else {\\n            // Try convertible dataTypes\\n            for (type in responses) {\\n                if (!dataTypes[0] || s.converters[type + \\\" \\\" + dataTypes[0]]) {\\n                    finalDataType = type;\\n                    break;\\n                }\\n                if (!firstDataType) {\\n                    firstDataType = type;\\n                }\\n            }\\n            // Or just use first one\\n            finalDataType = finalDataType || firstDataType;\\n        }\\n\\n        // If we found a dataType\\n        // We add the dataType to the list if needed\\n        // and return the corresponding response\\n        if (finalDataType) {\\n            if (finalDataType !== dataTypes[0]) {\\n                dataTypes.unshift(finalDataType);\\n            }\\n            return responses[finalDataType];\\n        }\\n    }\\n\\n    /* Chain conversions given the request and the original response\\n     * Also sets the responseXXX fields on the jqXHR instance\\n     */\\n    function ajaxConvert(s, response, jqXHR, isSuccess) {\\n        var conv2, current, conv, tmp, prev,\\n            converters = {},\\n            // Work with a copy of dataTypes in case we need to modify it for conversion\\n            dataTypes = s.dataTypes.slice();\\n\\n        // Create converters map with lowercased keys\\n        if (dataTypes[1]) {\\n            for (conv in s.converters) {\\n                converters[conv.toLowerCase()] = s.converters[conv];\\n            }\\n        }\\n\\n        current = dataTypes.shift();\\n\\n        // Convert to each sequential dataType\\n        while (current) {\\n\\n            if (s.responseFields[current]) {\\n                jqXHR[s.responseFields[current]] = response;\\n            }\\n\\n            // Apply the dataFilter if provided\\n            if (!prev && isSuccess && s.dataFilter) {\\n                response = s.dataFilter(response, s.dataType);\\n            }\\n\\n            prev = current;\\n            current = dataTypes.shift();\\n\\n            if (current) {\\n\\n                // There's only work to do if current dataType is non-auto\\n                if (current === \\\"*\\\") {\\n\\n                    current = prev;\\n\\n                    // Convert response if prev dataType is non-auto and differs from current\\n                } else if (prev !== \\\"*\\\" && prev !== current) {\\n\\n                    // Seek a direct converter\\n                    conv = converters[prev + \\\" \\\" + current] || converters[\\\"* \\\" + current];\\n\\n                    // If none found, seek a pair\\n                    if (!conv) {\\n                        for (conv2 in converters) {\\n\\n                            // If conv2 outputs current\\n                            tmp = conv2.split(\\\" \\\");\\n                            if (tmp[1] === current) {\\n\\n                                // If prev can be converted to accepted input\\n                                conv = converters[prev + \\\" \\\" + tmp[0]] ||\\n                                    converters[\\\"* \\\" + tmp[0]];\\n                                if (conv) {\\n                                    // Condense equivalence converters\\n                                    if (conv === true) {\\n                                        conv = converters[conv2];\\n\\n                                        // Otherwise, insert the intermediate dataType\\n                                    } else if (converters[conv2] !== true) {\\n                                        current = tmp[0];\\n                                        dataTypes.unshift(tmp[1]);\\n                                    }\\n                                    break;\\n                                }\\n                            }\\n                        }\\n                    }\\n\\n                    // Apply converter (if not an equivalence)\\n                    if (conv !== true) {\\n\\n                        // Unless errors are allowed to bubble, catch and return them\\n                        if (conv && s[\\\"throws\\\"]) {\\n                            response = conv(response);\\n                        } else {\\n                            try {\\n                                response = conv(response);\\n                            } catch (e) {\\n                                return {\\n                                    state: \\\"parsererror\\\",\\n                                    error: conv ? e : \\\"No conversion from \\\" + prev + \\\" to \\\" + current\\n                                };\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        }\\n\\n        return {state: \\\"success\\\", data: response};\\n    }\\n\\n    jQuery.extend({\\n\\n        // Counter for holding the number of active queries\\n        active: 0,\\n\\n        // Last-Modified header cache for next request\\n        lastModified: {},\\n        etag: {},\\n\\n        ajaxSettings: {\\n            url: ajaxLocation,\\n            type: \\\"GET\\\",\\n            isLocal: rlocalProtocol.test(ajaxLocParts[1]),\\n            global: true,\\n            processData: true,\\n            async: true,\\n            contentType: \\\"application/x-www-form-urlencoded; charset=UTF-8\\\",\\n            /*\\n             timeout: 0,\\n             data: null,\\n             dataType: null,\\n             username: null,\\n             password: null,\\n             cache: null,\\n             throws: false,\\n             traditional: false,\\n             headers: {},\\n             */\\n\\n            accepts: {\\n                \\\"*\\\": allTypes,\\n                text: \\\"text/plain\\\",\\n                html: \\\"text/html\\\",\\n                xml: \\\"application/xml, text/xml\\\",\\n                json: \\\"application/json, text/javascript\\\"\\n            },\\n\\n            contents: {\\n                xml: /xml/,\\n                html: /html/,\\n                json: /json/\\n            },\\n\\n            responseFields: {\\n                xml: \\\"responseXML\\\",\\n                text: \\\"responseText\\\",\\n                json: \\\"responseJSON\\\"\\n            },\\n\\n            // Data converters\\n            // Keys separate source (or catchall \\\"*\\\") and destination types with a single space\\n            converters: {\\n\\n                // Convert anything to text\\n                \\\"* text\\\": String,\\n\\n                // Text to html (true = no transformation)\\n                \\\"text html\\\": true,\\n\\n                // Evaluate text as a json expression\\n                \\\"text json\\\": jQuery.parseJSON,\\n\\n                // Parse text as xml\\n                \\\"text xml\\\": jQuery.parseXML\\n            },\\n\\n            // For options that shouldn't be deep extended:\\n            // you can add your own custom options here if\\n            // and when you create one that shouldn't be\\n            // deep extended (see ajaxExtend)\\n            flatOptions: {\\n                url: true,\\n                context: true\\n            }\\n        },\\n\\n        // Creates a full fledged settings object into target\\n        // with both ajaxSettings and settings fields.\\n        // If target is omitted, writes into ajaxSettings.\\n        ajaxSetup: function (target, settings) {\\n            return settings ?\\n\\n                // Building a settings object\\n                ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) :\\n\\n                // Extending ajaxSettings\\n                ajaxExtend(jQuery.ajaxSettings, target);\\n        },\\n\\n        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),\\n        ajaxTransport: addToPrefiltersOrTransports(transports),\\n\\n        // Main method\\n        ajax: function (url, options) {\\n\\n            // If url is an object, simulate pre-1.5 signature\\n            if (typeof url === \\\"object\\\") {\\n                options = url;\\n                url = undefined;\\n            }\\n\\n            // Force options to be an object\\n            options = options || {};\\n\\n            var transport,\\n                // URL without anti-cache param\\n                cacheURL,\\n                // Response headers\\n                responseHeadersString,\\n                responseHeaders,\\n                // timeout handle\\n                timeoutTimer,\\n                // Cross-domain detection vars\\n                parts,\\n                // To know if global events are to be dispatched\\n                fireGlobals,\\n                // Loop variable\\n                i,\\n                // Create the final options object\\n                s = jQuery.ajaxSetup({}, options),\\n                // Callbacks context\\n                callbackContext = s.context || s,\\n                // Context for global events is callbackContext if it is a DOM node or jQuery collection\\n                globalEventContext = s.context && ( callbackContext.nodeType || callbackContext.jquery ) ?\\n                    jQuery(callbackContext) :\\n                    jQuery.event,\\n                // Deferreds\\n                deferred = jQuery.Deferred(),\\n                completeDeferred = jQuery.Callbacks(\\\"once memory\\\"),\\n                // Status-dependent callbacks\\n                statusCode = s.statusCode || {},\\n                // Headers (they are sent all at once)\\n                requestHeaders = {},\\n                requestHeadersNames = {},\\n                // The jqXHR state\\n                state = 0,\\n                // Default abort message\\n                strAbort = \\\"canceled\\\",\\n                // Fake xhr\\n                jqXHR = {\\n                    readyState: 0,\\n\\n                    // Builds headers hashtable if needed\\n                    getResponseHeader: function (key) {\\n                        var match;\\n                        if (state === 2) {\\n                            if (!responseHeaders) {\\n                                responseHeaders = {};\\n                                while ((match = rheaders.exec(responseHeadersString))) {\\n                                    responseHeaders[match[1].toLowerCase()] = match[2];\\n                                }\\n                            }\\n                            match = responseHeaders[key.toLowerCase()];\\n                        }\\n                        return match == null ? null : match;\\n                    },\\n\\n                    // Raw string\\n                    getAllResponseHeaders: function () {\\n                        return state === 2 ? responseHeadersString : null;\\n                    },\\n\\n                    // Caches the header\\n                    setRequestHeader: function (name, value) {\\n                        var lname = name.toLowerCase();\\n                        if (!state) {\\n                            name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;\\n                            requestHeaders[name] = value;\\n                        }\\n                        return this;\\n                    },\\n\\n                    // Overrides response content-type header\\n                    overrideMimeType: function (type) {\\n                        if (!state) {\\n                            s.mimeType = type;\\n                        }\\n                        return this;\\n                    },\\n\\n                    // Status-dependent callbacks\\n                    statusCode: function (map) {\\n                        var code;\\n                        if (map) {\\n                            if (state < 2) {\\n                                for (code in map) {\\n                                    // Lazy-add the new callback in a way that preserves old ones\\n                                    statusCode[code] = [statusCode[code], map[code]];\\n                                }\\n                            } else {\\n                                // Execute the appropriate callbacks\\n                                jqXHR.always(map[jqXHR.status]);\\n                            }\\n                        }\\n                        return this;\\n                    },\\n\\n                    // Cancel the request\\n                    abort: function (statusText) {\\n                        var finalText = statusText || strAbort;\\n                        if (transport) {\\n                            transport.abort(finalText);\\n                        }\\n                        done(0, finalText);\\n                        return this;\\n                    }\\n                };\\n\\n            // Attach deferreds\\n            deferred.promise(jqXHR).complete = completeDeferred.add;\\n            jqXHR.success = jqXHR.done;\\n            jqXHR.error = jqXHR.fail;\\n\\n            // Remove hash character (#7531: and string promotion)\\n            // Add protocol if not provided (prefilters might expect it)\\n            // Handle falsy url in the settings object (#10093: consistency with old signature)\\n            // We also use the url parameter if available\\n            s.url = ( ( url || s.url || ajaxLocation ) + \\\"\\\" ).replace(rhash, \\\"\\\")\\n                .replace(rprotocol, ajaxLocParts[1] + \\\"//\\\");\\n\\n            // Alias method option to type as per ticket #12004\\n            s.type = options.method || options.type || s.method || s.type;\\n\\n            // Extract dataTypes list\\n            s.dataTypes = jQuery.trim(s.dataType || \\\"*\\\").toLowerCase().match(rnotwhite) || [\\\"\\\"];\\n\\n            // A cross-domain request is in order when we have a protocol:host:port mismatch\\n            if (s.crossDomain == null) {\\n                parts = rurl.exec(s.url.toLowerCase());\\n                s.crossDomain = !!( parts &&\\n                    ( parts[1] !== ajaxLocParts[1] || parts[2] !== ajaxLocParts[2] ||\\n                    ( parts[3] || ( parts[1] === \\\"http:\\\" ? \\\"80\\\" : \\\"443\\\" ) ) !==\\n                    ( ajaxLocParts[3] || ( ajaxLocParts[1] === \\\"http:\\\" ? \\\"80\\\" : \\\"443\\\" ) ) )\\n                );\\n            }\\n\\n            // Convert data if not already a string\\n            if (s.data && s.processData && typeof s.data !== \\\"string\\\") {\\n                s.data = jQuery.param(s.data, s.traditional);\\n            }\\n\\n            // Apply prefilters\\n            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);\\n\\n            // If request was aborted inside a prefilter, stop there\\n            if (state === 2) {\\n                return jqXHR;\\n            }\\n\\n            // We can fire global events as of now if asked to\\n            // Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)\\n            fireGlobals = jQuery.event && s.global;\\n\\n            // Watch for a new set of requests\\n            if (fireGlobals && jQuery.active++ === 0) {\\n                jQuery.event.trigger(\\\"ajaxStart\\\");\\n            }\\n\\n            // Uppercase the type\\n            s.type = s.type.toUpperCase();\\n\\n            // Determine if request has content\\n            s.hasContent = !rnoContent.test(s.type);\\n\\n            // Save the URL in case we're toying with the If-Modified-Since\\n            // and/or If-None-Match header later on\\n            cacheURL = s.url;\\n\\n            // More options handling for requests with no content\\n            if (!s.hasContent) {\\n\\n                // If data is available, append data to url\\n                if (s.data) {\\n                    cacheURL = ( s.url += ( rquery.test(cacheURL) ? \\\"&\\\" : \\\"?\\\" ) + s.data );\\n                    // #9682: remove data so that it's not used in an eventual retry\\n                    delete s.data;\\n                }\\n\\n                // Add anti-cache in url if needed\\n                if (s.cache === false) {\\n                    s.url = rts.test(cacheURL) ?\\n\\n                        // If there is already a '_' parameter, set its value\\n                        cacheURL.replace(rts, \\\"$1_=\\\" + nonce++) :\\n\\n                        // Otherwise add one to the end\\n                        cacheURL + ( rquery.test(cacheURL) ? \\\"&\\\" : \\\"?\\\" ) + \\\"_=\\\" + nonce++;\\n                }\\n            }\\n\\n            // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\\n            if (s.ifModified) {\\n                if (jQuery.lastModified[cacheURL]) {\\n                    jqXHR.setRequestHeader(\\\"If-Modified-Since\\\", jQuery.lastModified[cacheURL]);\\n                }\\n                if (jQuery.etag[cacheURL]) {\\n                    jqXHR.setRequestHeader(\\\"If-None-Match\\\", jQuery.etag[cacheURL]);\\n                }\\n            }\\n\\n            // Set the correct header, if data is being sent\\n            if (s.data && s.hasContent && s.contentType !== false || options.contentType) {\\n                jqXHR.setRequestHeader(\\\"Content-Type\\\", s.contentType);\\n            }\\n\\n            // Set the Accepts header for the server, depending on the dataType\\n            jqXHR.setRequestHeader(\\n                \\\"Accept\\\",\\n                s.dataTypes[0] && s.accepts[s.dataTypes[0]] ?\\n                    s.accepts[s.dataTypes[0]] + ( s.dataTypes[0] !== \\\"*\\\" ? \\\", \\\" + allTypes + \\\"; q=0.01\\\" : \\\"\\\" ) :\\n                    s.accepts[\\\"*\\\"]\\n            );\\n\\n            // Check for headers option\\n            for (i in s.headers) {\\n                jqXHR.setRequestHeader(i, s.headers[i]);\\n            }\\n\\n            // Allow custom headers/mimetypes and early abort\\n            if (s.beforeSend && ( s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2 )) {\\n                // Abort if not done already and return\\n                return jqXHR.abort();\\n            }\\n\\n            // Aborting is no longer a cancellation\\n            strAbort = \\\"abort\\\";\\n\\n            // Install callbacks on deferreds\\n            for (i in {success: 1, error: 1, complete: 1}) {\\n                jqXHR[i](s[i]);\\n            }\\n\\n            // Get transport\\n            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);\\n\\n            // If no transport, we auto-abort\\n            if (!transport) {\\n                done(-1, \\\"No Transport\\\");\\n            } else {\\n                jqXHR.readyState = 1;\\n\\n                // Send global event\\n                if (fireGlobals) {\\n                    globalEventContext.trigger(\\\"ajaxSend\\\", [jqXHR, s]);\\n                }\\n                // Timeout\\n                if (s.async && s.timeout > 0) {\\n                    timeoutTimer = setTimeout(function () {\\n                        jqXHR.abort(\\\"timeout\\\");\\n                    }, s.timeout);\\n                }\\n\\n                try {\\n                    state = 1;\\n                    transport.send(requestHeaders, done);\\n                } catch (e) {\\n                    // Propagate exception as error if not done\\n                    if (state < 2) {\\n                        done(-1, e);\\n                        // Simply rethrow otherwise\\n                    } else {\\n                        throw e;\\n                    }\\n                }\\n            }\\n\\n            // Callback for when everything is done\\n            function done(status, nativeStatusText, responses, headers) {\\n                var isSuccess, success, error, response, modified,\\n                    statusText = nativeStatusText;\\n\\n                // Called once\\n                if (state === 2) {\\n                    return;\\n                }\\n\\n                // State is \\\"done\\\" now\\n                state = 2;\\n\\n                // Clear timeout if it exists\\n                if (timeoutTimer) {\\n                    clearTimeout(timeoutTimer);\\n                }\\n\\n                // Dereference transport for early garbage collection\\n                // (no matter how long the jqXHR object will be used)\\n                transport = undefined;\\n\\n                // Cache response headers\\n                responseHeadersString = headers || \\\"\\\";\\n\\n                // Set readyState\\n                jqXHR.readyState = status > 0 ? 4 : 0;\\n\\n                // Determine if successful\\n                isSuccess = status >= 200 && status < 300 || status === 304;\\n\\n                // Get response data\\n                if (responses) {\\n                    response = ajaxHandleResponses(s, jqXHR, responses);\\n                }\\n\\n                // Convert no matter what (that way responseXXX fields are always set)\\n                response = ajaxConvert(s, response, jqXHR, isSuccess);\\n\\n                // If successful, handle type chaining\\n                if (isSuccess) {\\n\\n                    // Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.\\n                    if (s.ifModified) {\\n                        modified = jqXHR.getResponseHeader(\\\"Last-Modified\\\");\\n                        if (modified) {\\n                            jQuery.lastModified[cacheURL] = modified;\\n                        }\\n                        modified = jqXHR.getResponseHeader(\\\"etag\\\");\\n                        if (modified) {\\n                            jQuery.etag[cacheURL] = modified;\\n                        }\\n                    }\\n\\n                    // if no content\\n                    if (status === 204 || s.type === \\\"HEAD\\\") {\\n                        statusText = \\\"nocontent\\\";\\n\\n                        // if not modified\\n                    } else if (status === 304) {\\n                        statusText = \\\"notmodified\\\";\\n\\n                        // If we have data, let's convert it\\n                    } else {\\n                        statusText = response.state;\\n                        success = response.data;\\n                        error = response.error;\\n                        isSuccess = !error;\\n                    }\\n                } else {\\n                    // Extract error from statusText and normalize for non-aborts\\n                    error = statusText;\\n                    if (status || !statusText) {\\n                        statusText = \\\"error\\\";\\n                        if (status < 0) {\\n                            status = 0;\\n                        }\\n                    }\\n                }\\n\\n                // Set data for the fake xhr object\\n                jqXHR.status = status;\\n                jqXHR.statusText = ( nativeStatusText || statusText ) + \\\"\\\";\\n\\n                // Success/Error\\n                if (isSuccess) {\\n                    deferred.resolveWith(callbackContext, [success, statusText, jqXHR]);\\n                } else {\\n                    deferred.rejectWith(callbackContext, [jqXHR, statusText, error]);\\n                }\\n\\n                // Status-dependent callbacks\\n                jqXHR.statusCode(statusCode);\\n                statusCode = undefined;\\n\\n                if (fireGlobals) {\\n                    globalEventContext.trigger(isSuccess ? \\\"ajaxSuccess\\\" : \\\"ajaxError\\\",\\n                        [jqXHR, s, isSuccess ? success : error]);\\n                }\\n\\n                // Complete\\n                completeDeferred.fireWith(callbackContext, [jqXHR, statusText]);\\n\\n                if (fireGlobals) {\\n                    globalEventContext.trigger(\\\"ajaxComplete\\\", [jqXHR, s]);\\n                    // Handle the global AJAX counter\\n                    if (!( --jQuery.active )) {\\n                        jQuery.event.trigger(\\\"ajaxStop\\\");\\n                    }\\n                }\\n            }\\n\\n            return jqXHR;\\n        },\\n\\n        getJSON: function (url, data, callback) {\\n            return jQuery.get(url, data, callback, \\\"json\\\");\\n        },\\n\\n        getScript: function (url, callback) {\\n            return jQuery.get(url, undefined, callback, \\\"script\\\");\\n        }\\n    });\\n\\n    jQuery.each([\\\"get\\\", \\\"post\\\"], function (i, method) {\\n        jQuery[method] = function (url, data, callback, type) {\\n            // Shift arguments if data argument was omitted\\n            if (jQuery.isFunction(data)) {\\n                type = type || callback;\\n                callback = data;\\n                data = undefined;\\n            }\\n\\n            return jQuery.ajax({\\n                url: url,\\n                type: method,\\n                dataType: type,\\n                data: data,\\n                success: callback\\n            });\\n        };\\n    });\\n\\n\\n    jQuery._evalUrl = function (url) {\\n        return jQuery.ajax({\\n            url: url,\\n            type: \\\"GET\\\",\\n            dataType: \\\"script\\\",\\n            async: false,\\n            global: false,\\n            \\\"throws\\\": true\\n        });\\n    };\\n\\n\\n    jQuery.fn.extend({\\n        wrapAll: function (html) {\\n            var wrap;\\n\\n            if (jQuery.isFunction(html)) {\\n                return this.each(function (i) {\\n                    jQuery(this).wrapAll(html.call(this, i));\\n                });\\n            }\\n\\n            if (this[0]) {\\n\\n                // The elements to wrap the target around\\n                wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);\\n\\n                if (this[0].parentNode) {\\n                    wrap.insertBefore(this[0]);\\n                }\\n\\n                wrap.map(function () {\\n                    var elem = this;\\n\\n                    while (elem.firstElementChild) {\\n                        elem = elem.firstElementChild;\\n                    }\\n\\n                    return elem;\\n                }).append(this);\\n            }\\n\\n            return this;\\n        },\\n\\n        wrapInner: function (html) {\\n            if (jQuery.isFunction(html)) {\\n                return this.each(function (i) {\\n                    jQuery(this).wrapInner(html.call(this, i));\\n                });\\n            }\\n\\n            return this.each(function () {\\n                var self = jQuery(this),\\n                    contents = self.contents();\\n\\n                if (contents.length) {\\n                    contents.wrapAll(html);\\n\\n                } else {\\n                    self.append(html);\\n                }\\n            });\\n        },\\n\\n        wrap: function (html) {\\n            var isFunction = jQuery.isFunction(html);\\n\\n            return this.each(function (i) {\\n                jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);\\n            });\\n        },\\n\\n        unwrap: function () {\\n            return this.parent().each(function () {\\n                if (!jQuery.nodeName(this, \\\"body\\\")) {\\n                    jQuery(this).replaceWith(this.childNodes);\\n                }\\n            }).end();\\n        }\\n    });\\n\\n\\n    jQuery.expr.filters.hidden = function (elem) {\\n        // Support: Opera <= 12.12\\n        // Opera reports offsetWidths and offsetHeights less than zero on some elements\\n        return elem.offsetWidth <= 0 && elem.offsetHeight <= 0;\\n    };\\n    jQuery.expr.filters.visible = function (elem) {\\n        return !jQuery.expr.filters.hidden(elem);\\n    };\\n\\n\\n    var r20 = /%20/g,\\n        rbracket = /\\\\[\\\\]$/,\\n        rCRLF = /\\\\r?\\\\n/g,\\n        rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,\\n        rsubmittable = /^(?:input|select|textarea|keygen)/i;\\n\\n    function buildParams(prefix, obj, traditional, add) {\\n        var name;\\n\\n        if (jQuery.isArray(obj)) {\\n            // Serialize array item.\\n            jQuery.each(obj, function (i, v) {\\n                if (traditional || rbracket.test(prefix)) {\\n                    // Treat each array item as a scalar.\\n                    add(prefix, v);\\n\\n                } else {\\n                    // Item is non-scalar (array or object), encode its numeric index.\\n                    buildParams(prefix + \\\"[\\\" + ( typeof v === \\\"object\\\" ? i : \\\"\\\" ) + \\\"]\\\", v, traditional, add);\\n                }\\n            });\\n\\n        } else if (!traditional && jQuery.type(obj) === \\\"object\\\") {\\n            // Serialize object item.\\n            for (name in obj) {\\n                buildParams(prefix + \\\"[\\\" + name + \\\"]\\\", obj[name], traditional, add);\\n            }\\n\\n        } else {\\n            // Serialize scalar item.\\n            add(prefix, obj);\\n        }\\n    }\\n\\n// Serialize an array of form elements or a set of\\n// key/values into a query string\\n    jQuery.param = function (a, traditional) {\\n        var prefix,\\n            s = [],\\n            add = function (key, value) {\\n                // If value is a function, invoke it and return its value\\n                value = jQuery.isFunction(value) ? value() : ( value == null ? \\\"\\\" : value );\\n                s[s.length] = encodeURIComponent(key) + \\\"=\\\" + encodeURIComponent(value);\\n            };\\n\\n        // Set traditional to true for jQuery <= 1.3.2 behavior.\\n        if (traditional === undefined) {\\n            traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional;\\n        }\\n\\n        // If an array was passed in, assume that it is an array of form elements.\\n        if (jQuery.isArray(a) || ( a.jquery && !jQuery.isPlainObject(a) )) {\\n            // Serialize the form elements\\n            jQuery.each(a, function () {\\n                add(this.name, this.value);\\n            });\\n\\n        } else {\\n            // If traditional, encode the \\\"old\\\" way (the way 1.3.2 or older\\n            // did it), otherwise encode params recursively.\\n            for (prefix in a) {\\n                buildParams(prefix, a[prefix], traditional, add);\\n            }\\n        }\\n\\n        // Return the resulting serialization\\n        return s.join(\\\"&\\\").replace(r20, \\\"+\\\");\\n    };\\n\\n    jQuery.fn.extend({\\n        serialize: function () {\\n            return jQuery.param(this.serializeArray());\\n        },\\n        serializeArray: function () {\\n            return this.map(function () {\\n                // Can add propHook for \\\"elements\\\" to filter or add form elements\\n                var elements = jQuery.prop(this, \\\"elements\\\");\\n                return elements ? jQuery.makeArray(elements) : this;\\n            })\\n                .filter(function () {\\n                    var type = this.type;\\n\\n                    // Use .is( \\\":disabled\\\" ) so that fieldset[disabled] works\\n                    return this.name && !jQuery(this).is(\\\":disabled\\\") &&\\n                        rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) &&\\n                        ( this.checked || !rcheckableType.test(type) );\\n                })\\n                .map(function (i, elem) {\\n                    var val = jQuery(this).val();\\n\\n                    return val == null ?\\n                        null :\\n                        jQuery.isArray(val) ?\\n                            jQuery.map(val, function (val) {\\n                                return {name: elem.name, value: val.replace(rCRLF, \\\"\\\\r\\\\n\\\")};\\n                            }) :\\n                            {name: elem.name, value: val.replace(rCRLF, \\\"\\\\r\\\\n\\\")};\\n                }).get();\\n        }\\n    });\\n\\n\\n    jQuery.ajaxSettings.xhr = function () {\\n        try {\\n            return new XMLHttpRequest();\\n        } catch (e) {\\n        }\\n    };\\n\\n    var xhrId = 0,\\n        xhrCallbacks = {},\\n        xhrSuccessStatus = {\\n            // file protocol always yields status code 0, assume 200\\n            0: 200,\\n            // Support: IE9\\n            // #1450: sometimes IE returns 1223 when it should be 204\\n            1223: 204\\n        },\\n        xhrSupported = jQuery.ajaxSettings.xhr();\\n\\n// Support: IE9\\n// Open requests must be manually aborted on unload (#5280)\\n// See https://support.microsoft.com/kb/2856746 for more info\\n    if (window.attachEvent) {\\n        window.attachEvent(\\\"onunload\\\", function () {\\n            for (var key in xhrCallbacks) {\\n                xhrCallbacks[key]();\\n            }\\n        });\\n    }\\n\\n    support.cors = !!xhrSupported && ( \\\"withCredentials\\\" in xhrSupported );\\n    support.ajax = xhrSupported = !!xhrSupported;\\n\\n    jQuery.ajaxTransport(function (options) {\\n        var callback;\\n\\n        // Cross domain only allowed if supported through XMLHttpRequest\\n        if (support.cors || xhrSupported && !options.crossDomain) {\\n            return {\\n                send: function (headers, complete) {\\n                    var i,\\n                        xhr = options.xhr(),\\n                        id = ++xhrId;\\n\\n                    xhr.open(options.type, options.url, options.async, options.username, options.password);\\n\\n                    // Apply custom fields if provided\\n                    if (options.xhrFields) {\\n                        for (i in options.xhrFields) {\\n                            xhr[i] = options.xhrFields[i];\\n                        }\\n                    }\\n\\n                    // Override mime type if needed\\n                    if (options.mimeType && xhr.overrideMimeType) {\\n                        xhr.overrideMimeType(options.mimeType);\\n                    }\\n\\n                    // X-Requested-With header\\n                    // For cross-domain requests, seeing as conditions for a preflight are\\n                    // akin to a jigsaw puzzle, we simply never set it to be sure.\\n                    // (it can always be set on a per-request basis or even using ajaxSetup)\\n                    // For same-domain requests, won't change header if already provided.\\n                    if (!options.crossDomain && !headers[\\\"X-Requested-With\\\"]) {\\n                        headers[\\\"X-Requested-With\\\"] = \\\"XMLHttpRequest\\\";\\n                    }\\n\\n                    // Set headers\\n                    for (i in headers) {\\n                        xhr.setRequestHeader(i, headers[i]);\\n                    }\\n\\n                    // Callback\\n                    callback = function (type) {\\n                        return function () {\\n                            if (callback) {\\n                                delete xhrCallbacks[id];\\n                                callback = xhr.onload = xhr.onerror = null;\\n\\n                                if (type === \\\"abort\\\") {\\n                                    xhr.abort();\\n                                } else if (type === \\\"error\\\") {\\n                                    complete(\\n                                        // file: protocol always yields status 0; see #8605, #14207\\n                                        xhr.status,\\n                                        xhr.statusText\\n                                    );\\n                                } else {\\n                                    complete(\\n                                        xhrSuccessStatus[xhr.status] || xhr.status,\\n                                        xhr.statusText,\\n                                        // Support: IE9\\n                                        // Accessing binary-data responseText throws an exception\\n                                        // (#11426)\\n                                        typeof xhr.responseText === \\\"string\\\" ? {\\n                                                text: xhr.responseText\\n                                            } : undefined,\\n                                        xhr.getAllResponseHeaders()\\n                                    );\\n                                }\\n                            }\\n                        };\\n                    };\\n\\n                    // Listen to events\\n                    xhr.onload = callback();\\n                    xhr.onerror = callback(\\\"error\\\");\\n\\n                    // Create the abort callback\\n                    callback = xhrCallbacks[id] = callback(\\\"abort\\\");\\n\\n                    try {\\n                        // Do send the request (this may raise an exception)\\n                        xhr.send(options.hasContent && options.data || null);\\n                    } catch (e) {\\n                        // #14683: Only rethrow if this hasn't been notified as an error yet\\n                        if (callback) {\\n                            throw e;\\n                        }\\n                    }\\n                },\\n\\n                abort: function () {\\n                    if (callback) {\\n                        callback();\\n                    }\\n                }\\n            };\\n        }\\n    });\\n\\n\\n// Install script dataType\\n    jQuery.ajaxSetup({\\n        accepts: {\\n            script: \\\"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript\\\"\\n        },\\n        contents: {\\n            script: /(?:java|ecma)script/\\n        },\\n        converters: {\\n            \\\"text script\\\": function (text) {\\n                jQuery.globalEval(text);\\n                return text;\\n            }\\n        }\\n    });\\n\\n// Handle cache's special case and crossDomain\\n    jQuery.ajaxPrefilter(\\\"script\\\", function (s) {\\n        if (s.cache === undefined) {\\n            s.cache = false;\\n        }\\n        if (s.crossDomain) {\\n            s.type = \\\"GET\\\";\\n        }\\n    });\\n\\n// Bind script tag hack transport\\n    jQuery.ajaxTransport(\\\"script\\\", function (s) {\\n        // This transport only deals with cross domain requests\\n        if (s.crossDomain) {\\n            var script, callback;\\n            return {\\n                send: function (_, complete) {\\n                    script = jQuery(\\\"<script>\\\").prop({\\n                        async: true,\\n                        charset: s.scriptCharset,\\n                        src: s.url\\n                    }).on(\\n                        \\\"load error\\\",\\n                        callback = function (evt) {\\n                            script.remove();\\n                            callback = null;\\n                            if (evt) {\\n                                complete(evt.type === \\\"error\\\" ? 404 : 200, evt.type);\\n                            }\\n                        }\\n                    );\\n                    document.head.appendChild(script[0]);\\n                },\\n                abort: function () {\\n                    if (callback) {\\n                        callback();\\n                    }\\n                }\\n            };\\n        }\\n    });\\n\\n\\n    var oldCallbacks = [],\\n        rjsonp = /(=)\\\\?(?=&|$)|\\\\?\\\\?/;\\n\\n// Default jsonp settings\\n    jQuery.ajaxSetup({\\n        jsonp: \\\"callback\\\",\\n        jsonpCallback: function () {\\n            var callback = oldCallbacks.pop() || ( jQuery.expando + \\\"_\\\" + ( nonce++ ) );\\n            this[callback] = true;\\n            return callback;\\n        }\\n    });\\n\\n// Detect, normalize options and install callbacks for jsonp requests\\n    jQuery.ajaxPrefilter(\\\"json jsonp\\\", function (s, originalSettings, jqXHR) {\\n\\n        var callbackName, overwritten, responseContainer,\\n            jsonProp = s.jsonp !== false && ( rjsonp.test(s.url) ?\\n                        \\\"url\\\" :\\n                        typeof s.data === \\\"string\\\" && !( s.contentType || \\\"\\\" ).indexOf(\\\"application/x-www-form-urlencoded\\\") && rjsonp.test(s.data) && \\\"data\\\"\\n                );\\n\\n        // Handle iff the expected data type is \\\"jsonp\\\" or we have a parameter to set\\n        if (jsonProp || s.dataTypes[0] === \\\"jsonp\\\") {\\n\\n            // Get callback name, remembering preexisting value associated with it\\n            callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ?\\n                s.jsonpCallback() :\\n                s.jsonpCallback;\\n\\n            // Insert callback into url or form data\\n            if (jsonProp) {\\n                s[jsonProp] = s[jsonProp].replace(rjsonp, \\\"$1\\\" + callbackName);\\n            } else if (s.jsonp !== false) {\\n                s.url += ( rquery.test(s.url) ? \\\"&\\\" : \\\"?\\\" ) + s.jsonp + \\\"=\\\" + callbackName;\\n            }\\n\\n            // Use data converter to retrieve json after script execution\\n            s.converters[\\\"script json\\\"] = function () {\\n                if (!responseContainer) {\\n                    jQuery.error(callbackName + \\\" was not called\\\");\\n                }\\n                return responseContainer[0];\\n            };\\n\\n            // force json dataType\\n            s.dataTypes[0] = \\\"json\\\";\\n\\n            // Install callback\\n            overwritten = window[callbackName];\\n            window[callbackName] = function () {\\n                responseContainer = arguments;\\n            };\\n\\n            // Clean-up function (fires after converters)\\n            jqXHR.always(function () {\\n                // Restore preexisting value\\n                window[callbackName] = overwritten;\\n\\n                // Save back as free\\n                if (s[callbackName]) {\\n                    // make sure that re-using the options doesn't screw things around\\n                    s.jsonpCallback = originalSettings.jsonpCallback;\\n\\n                    // save the callback name for future use\\n                    oldCallbacks.push(callbackName);\\n                }\\n\\n                // Call if it was a function and we have a response\\n                if (responseContainer && jQuery.isFunction(overwritten)) {\\n                    overwritten(responseContainer[0]);\\n                }\\n\\n                responseContainer = overwritten = undefined;\\n            });\\n\\n            // Delegate to script\\n            return \\\"script\\\";\\n        }\\n    });\\n\\n\\n// data: string of html\\n// context (optional): If specified, the fragment will be created in this context, defaults to document\\n// keepScripts (optional): If true, will include scripts passed in the html string\\n    jQuery.parseHTML = function (data, context, keepScripts) {\\n        if (!data || typeof data !== \\\"string\\\") {\\n            return null;\\n        }\\n        if (typeof context === \\\"boolean\\\") {\\n            keepScripts = context;\\n            context = false;\\n        }\\n        context = context || document;\\n\\n        var parsed = rsingleTag.exec(data),\\n            scripts = !keepScripts && [];\\n\\n        // Single tag\\n        if (parsed) {\\n            return [context.createElement(parsed[1])];\\n        }\\n\\n        parsed = jQuery.buildFragment([data], context, scripts);\\n\\n        if (scripts && scripts.length) {\\n            jQuery(scripts).remove();\\n        }\\n\\n        return jQuery.merge([], parsed.childNodes);\\n    };\\n\\n\\n// Keep a copy of the old load method\\n    var _load = jQuery.fn.load;\\n\\n    /**\\n     * Load a url into a page\\n     */\\n    jQuery.fn.load = function (url, params, callback) {\\n        if (typeof url !== \\\"string\\\" && _load) {\\n            return _load.apply(this, arguments);\\n        }\\n\\n        var selector, type, response,\\n            self = this,\\n            off = url.indexOf(\\\" \\\");\\n\\n        if (off >= 0) {\\n            selector = jQuery.trim(url.slice(off));\\n            url = url.slice(0, off);\\n        }\\n\\n        // If it's a function\\n        if (jQuery.isFunction(params)) {\\n\\n            // We assume that it's the callback\\n            callback = params;\\n            params = undefined;\\n\\n            // Otherwise, build a param string\\n        } else if (params && typeof params === \\\"object\\\") {\\n            type = \\\"POST\\\";\\n        }\\n\\n        // If we have elements to modify, make the request\\n        if (self.length > 0) {\\n            jQuery.ajax({\\n                url: url,\\n\\n                // if \\\"type\\\" variable is undefined, then \\\"GET\\\" method will be used\\n                type: type,\\n                dataType: \\\"html\\\",\\n                data: params\\n            }).done(function (responseText) {\\n\\n                // Save response for use in complete callback\\n                response = arguments;\\n\\n                self.html(selector ?\\n\\n                    // If a selector was specified, locate the right elements in a dummy div\\n                    // Exclude scripts to avoid IE 'Permission Denied' errors\\n                    jQuery(\\\"<div>\\\").append(jQuery.parseHTML(responseText)).find(selector) :\\n\\n                    // Otherwise use the full result\\n                    responseText);\\n\\n            }).complete(callback && function (jqXHR, status) {\\n                    self.each(callback, response || [jqXHR.responseText, status, jqXHR]);\\n                });\\n        }\\n\\n        return this;\\n    };\\n\\n\\n// Attach a bunch of functions for handling common AJAX events\\n    jQuery.each([\\\"ajaxStart\\\", \\\"ajaxStop\\\", \\\"ajaxComplete\\\", \\\"ajaxError\\\", \\\"ajaxSuccess\\\", \\\"ajaxSend\\\"], function (i, type) {\\n        jQuery.fn[type] = function (fn) {\\n            return this.on(type, fn);\\n        };\\n    });\\n\\n\\n    jQuery.expr.filters.animated = function (elem) {\\n        return jQuery.grep(jQuery.timers, function (fn) {\\n            return elem === fn.elem;\\n        }).length;\\n    };\\n\\n\\n    var docElem = window.document.documentElement;\\n\\n    /**\\n     * Gets a window from an element\\n     */\\n    function getWindow(elem) {\\n        return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 && elem.defaultView;\\n    }\\n\\n    jQuery.offset = {\\n        setOffset: function (elem, options, i) {\\n            var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,\\n                position = jQuery.css(elem, \\\"position\\\"),\\n                curElem = jQuery(elem),\\n                props = {};\\n\\n            // Set position first, in-case top/left are set even on static elem\\n            if (position === \\\"static\\\") {\\n                elem.style.position = \\\"relative\\\";\\n            }\\n\\n            curOffset = curElem.offset();\\n            curCSSTop = jQuery.css(elem, \\\"top\\\");\\n            curCSSLeft = jQuery.css(elem, \\\"left\\\");\\n            calculatePosition = ( position === \\\"absolute\\\" || position === \\\"fixed\\\" ) &&\\n                ( curCSSTop + curCSSLeft ).indexOf(\\\"auto\\\") > -1;\\n\\n            // Need to be able to calculate position if either\\n            // top or left is auto and position is either absolute or fixed\\n            if (calculatePosition) {\\n                curPosition = curElem.position();\\n                curTop = curPosition.top;\\n                curLeft = curPosition.left;\\n\\n            } else {\\n                curTop = parseFloat(curCSSTop) || 0;\\n                curLeft = parseFloat(curCSSLeft) || 0;\\n            }\\n\\n            if (jQuery.isFunction(options)) {\\n                options = options.call(elem, i, curOffset);\\n            }\\n\\n            if (options.top != null) {\\n                props.top = ( options.top - curOffset.top ) + curTop;\\n            }\\n            if (options.left != null) {\\n                props.left = ( options.left - curOffset.left ) + curLeft;\\n            }\\n\\n            if (\\\"using\\\" in options) {\\n                options.using.call(elem, props);\\n\\n            } else {\\n                curElem.css(props);\\n            }\\n        }\\n    };\\n\\n    jQuery.fn.extend({\\n        offset: function (options) {\\n            if (arguments.length) {\\n                return options === undefined ?\\n                    this :\\n                    this.each(function (i) {\\n                        jQuery.offset.setOffset(this, options, i);\\n                    });\\n            }\\n\\n            var docElem, win,\\n                elem = this[0],\\n                box = {top: 0, left: 0},\\n                doc = elem && elem.ownerDocument;\\n\\n            if (!doc) {\\n                return;\\n            }\\n\\n            docElem = doc.documentElement;\\n\\n            // Make sure it's not a disconnected DOM node\\n            if (!jQuery.contains(docElem, elem)) {\\n                return box;\\n            }\\n\\n            // Support: BlackBerry 5, iOS 3 (original iPhone)\\n            // If we don't have gBCR, just use 0,0 rather than error\\n            if (typeof elem.getBoundingClientRect !== strundefined) {\\n                box = elem.getBoundingClientRect();\\n            }\\n            win = getWindow(doc);\\n            return {\\n                top: box.top + win.pageYOffset - docElem.clientTop,\\n                left: box.left + win.pageXOffset - docElem.clientLeft\\n            };\\n        },\\n\\n        position: function () {\\n            if (!this[0]) {\\n                return;\\n            }\\n\\n            var offsetParent, offset,\\n                elem = this[0],\\n                parentOffset = {top: 0, left: 0};\\n\\n            // Fixed elements are offset from window (parentOffset = {top:0, left: 0}, because it is its only offset parent\\n            if (jQuery.css(elem, \\\"position\\\") === \\\"fixed\\\") {\\n                // Assume getBoundingClientRect is there when computed position is fixed\\n                offset = elem.getBoundingClientRect();\\n\\n            } else {\\n                // Get *real* offsetParent\\n                offsetParent = this.offsetParent();\\n\\n                // Get correct offsets\\n                offset = this.offset();\\n                if (!jQuery.nodeName(offsetParent[0], \\\"html\\\")) {\\n                    parentOffset = offsetParent.offset();\\n                }\\n\\n                // Add offsetParent borders\\n                parentOffset.top += jQuery.css(offsetParent[0], \\\"borderTopWidth\\\", true);\\n                parentOffset.left += jQuery.css(offsetParent[0], \\\"borderLeftWidth\\\", true);\\n            }\\n\\n            // Subtract parent offsets and element margins\\n            return {\\n                top: offset.top - parentOffset.top - jQuery.css(elem, \\\"marginTop\\\", true),\\n                left: offset.left - parentOffset.left - jQuery.css(elem, \\\"marginLeft\\\", true)\\n            };\\n        },\\n\\n        offsetParent: function () {\\n            return this.map(function () {\\n                var offsetParent = this.offsetParent || docElem;\\n\\n                while (offsetParent && ( !jQuery.nodeName(offsetParent, \\\"html\\\") && jQuery.css(offsetParent, \\\"position\\\") === \\\"static\\\" )) {\\n                    offsetParent = offsetParent.offsetParent;\\n                }\\n\\n                return offsetParent || docElem;\\n            });\\n        }\\n    });\\n\\n// Create scrollLeft and scrollTop methods\\n    jQuery.each({scrollLeft: \\\"pageXOffset\\\", scrollTop: \\\"pageYOffset\\\"}, function (method, prop) {\\n        var top = \\\"pageYOffset\\\" === prop;\\n\\n        jQuery.fn[method] = function (val) {\\n            return access(this, function (elem, method, val) {\\n                var win = getWindow(elem);\\n\\n                if (val === undefined) {\\n                    return win ? win[prop] : elem[method];\\n                }\\n\\n                if (win) {\\n                    win.scrollTo(\\n                        !top ? val : window.pageXOffset,\\n                        top ? val : window.pageYOffset\\n                    );\\n\\n                } else {\\n                    elem[method] = val;\\n                }\\n            }, method, val, arguments.length, null);\\n        };\\n    });\\n\\n// Support: Safari<7+, Chrome<37+\\n// Add the top/left cssHooks using jQuery.fn.position\\n// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084\\n// Blink bug: https://code.google.com/p/chromium/issues/detail?id=229280\\n// getComputedStyle returns percent when specified for top/left/bottom/right;\\n// rather than make the css module depend on the offset module, just check for it here\\n    jQuery.each([\\\"top\\\", \\\"left\\\"], function (i, prop) {\\n        jQuery.cssHooks[prop] = addGetHookIf(support.pixelPosition,\\n            function (elem, computed) {\\n                if (computed) {\\n                    computed = curCSS(elem, prop);\\n                    // If curCSS returns percentage, fallback to offset\\n                    return rnumnonpx.test(computed) ?\\n                        jQuery(elem).position()[prop] + \\\"px\\\" :\\n                        computed;\\n                }\\n            }\\n        );\\n    });\\n\\n\\n// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods\\n    jQuery.each({Height: \\\"height\\\", Width: \\\"width\\\"}, function (name, type) {\\n        jQuery.each({padding: \\\"inner\\\" + name, content: type, \\\"\\\": \\\"outer\\\" + name}, function (defaultExtra, funcName) {\\n            // Margin is only for outerHeight, outerWidth\\n            jQuery.fn[funcName] = function (margin, value) {\\n                var chainable = arguments.length && ( defaultExtra || typeof margin !== \\\"boolean\\\" ),\\n                    extra = defaultExtra || ( margin === true || value === true ? \\\"margin\\\" : \\\"border\\\" );\\n\\n                return access(this, function (elem, type, value) {\\n                    var doc;\\n\\n                    if (jQuery.isWindow(elem)) {\\n                        // As of 5/8/2012 this will yield incorrect results for Mobile Safari, but there\\n                        // isn't a whole lot we can do. See pull request at this URL for discussion:\\n                        // https://github.com/jquery/jquery/pull/764\\n                        return elem.document.documentElement[\\\"client\\\" + name];\\n                    }\\n\\n                    // Get document width or height\\n                    if (elem.nodeType === 9) {\\n                        doc = elem.documentElement;\\n\\n                        // Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],\\n                        // whichever is greatest\\n                        return Math.max(\\n                            elem.body[\\\"scroll\\\" + name], doc[\\\"scroll\\\" + name],\\n                            elem.body[\\\"offset\\\" + name], doc[\\\"offset\\\" + name],\\n                            doc[\\\"client\\\" + name]\\n                        );\\n                    }\\n\\n                    return value === undefined ?\\n                        // Get width or height on the element, requesting but not forcing parseFloat\\n                        jQuery.css(elem, type, extra) :\\n\\n                        // Set width or height on the element\\n                        jQuery.style(elem, type, value, extra);\\n                }, type, chainable ? margin : undefined, chainable, null);\\n            };\\n        });\\n    });\\n\\n\\n// The number of elements contained in the matched element set\\n    jQuery.fn.size = function () {\\n        return this.length;\\n    };\\n\\n    jQuery.fn.andSelf = jQuery.fn.addBack;\\n\\n\\n// Register as a named AMD module, since jQuery can be concatenated with other\\n// files that may use define, but not via a proper concatenation script that\\n// understands anonymous AMD modules. A named AMD is safest and most robust\\n// way to register. Lowercase jquery is used because AMD module names are\\n// derived from file names, and jQuery is normally delivered in a lowercase\\n// file name. Do this after creating the global so that if an AMD module wants\\n// to call noConflict to hide this version of jQuery, it will work.\\n\\n// Note that for maximum portability, libraries that are not jQuery should\\n// declare themselves as anonymous modules, and avoid setting a global if an\\n// AMD loader is present. jQuery is a special case. For more information, see\\n// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon\\n\\n    if (typeof define === \\\"function\\\" && define.amd) {\\n        define(\\\"jquery\\\", [], function () {\\n            return jQuery;\\n        });\\n    }\\n\\n\\n    var\\n        // Map over jQuery in case of overwrite\\n        _jQuery = window.jQuery,\\n\\n        // Map over the $ in case of overwrite\\n        _$ = window.$;\\n\\n    jQuery.noConflict = function (deep) {\\n        if (window.$ === jQuery) {\\n            window.$ = _$;\\n        }\\n\\n        if (deep && window.jQuery === jQuery) {\\n            window.jQuery = _jQuery;\\n        }\\n\\n        return jQuery;\\n    };\\n\\n// Expose jQuery and $ identifiers, even in AMD\\n// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)\\n// and CommonJS for browser emulators (#13566)\\n    if (typeof noGlobal === strundefined) {\\n        window.jQuery = window.$ = jQuery;\\n    }\\n\\n\\n    return jQuery;\\n\\n}));\\n\\n/*! tether 1.3.9 */\\n\\n(function (root, factory) {\\n    if (typeof define === 'function' && define.amd) {\\n        define(factory);\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory(require, exports, module);\\n    } else {\\n        root.Tether = factory();\\n    }\\n}(this, function (require, exports, module) {\\n\\n    'use strict';\\n\\n    var _createClass = (function () {\\n        function defineProperties(target, props) {\\n            for (var i = 0; i < props.length; i++) {\\n                var descriptor = props[i];\\n                descriptor.enumerable = descriptor.enumerable || false;\\n                descriptor.configurable = true;\\n                if ('value' in descriptor) descriptor.writable = true;\\n                Object.defineProperty(target, descriptor.key, descriptor);\\n            }\\n        }\\n\\n        return function (Constructor, protoProps, staticProps) {\\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n            if (staticProps) defineProperties(Constructor, staticProps);\\n            return Constructor;\\n        };\\n    })();\\n\\n    function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n            throw new TypeError('Cannot call a class as a function');\\n        }\\n    }\\n\\n    var TetherBase = undefined;\\n    if (typeof TetherBase === 'undefined') {\\n        TetherBase = {modules: []};\\n    }\\n\\n    var zeroElement = null;\\n\\n// Same as native getBoundingClientRect, except it takes into account parent <frame> offsets\\n// if the element lies within a nested document (<frame> or <iframe>-like).\\n    function getActualBoundingClientRect(node) {\\n        var boundingRect = node.getBoundingClientRect();\\n\\n        // The original object returned by getBoundingClientRect is immutable, so we clone it\\n        // We can't use extend because the properties are not considered part of the object by hasOwnProperty in IE9\\n        var rect = {};\\n        for (var k in boundingRect) {\\n            rect[k] = boundingRect[k];\\n        }\\n\\n        if (node.ownerDocument !== document) {\\n            var _frameElement = node.ownerDocument.defaultView.frameElement;\\n            if (_frameElement) {\\n                var frameRect = getActualBoundingClientRect(_frameElement);\\n                rect.top += frameRect.top;\\n                rect.bottom += frameRect.top;\\n                rect.left += frameRect.left;\\n                rect.right += frameRect.left;\\n            }\\n        }\\n\\n        return rect;\\n    }\\n\\n    function getScrollParents(el) {\\n        // In firefox if the el is inside an iframe with display: none; window.getComputedStyle() will return null;\\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=548397\\n        var computedStyle = getComputedStyle(el) || {};\\n        var position = computedStyle.position;\\n        var parents = [];\\n\\n        if (position === 'fixed') {\\n            return [el];\\n        }\\n\\n        var parent = el;\\n        while ((parent = parent.parentNode) && parent && parent.nodeType === 1) {\\n            var style = undefined;\\n            try {\\n                style = getComputedStyle(parent);\\n            } catch (err) {\\n            }\\n\\n            if (typeof style === 'undefined' || style === null) {\\n                parents.push(parent);\\n                return parents;\\n            }\\n\\n            var _style = style;\\n            var overflow = _style.overflow;\\n            var overflowX = _style.overflowX;\\n            var overflowY = _style.overflowY;\\n\\n            if (/(auto|scroll)/.test(overflow + overflowY + overflowX)) {\\n                if (position !== 'absolute' || ['relative', 'absolute', 'fixed'].indexOf(style.position) >= 0) {\\n                    parents.push(parent);\\n                }\\n            }\\n        }\\n\\n        parents.push(el.ownerDocument.body);\\n\\n        // If the node is within a frame, account for the parent window scroll\\n        if (el.ownerDocument !== document) {\\n            parents.push(el.ownerDocument.defaultView);\\n        }\\n\\n        return parents;\\n    }\\n\\n    var uniqueId = (function () {\\n        var id = 0;\\n        return function () {\\n            return ++id;\\n        };\\n    })();\\n\\n    var zeroPosCache = {};\\n    var getOrigin = function getOrigin() {\\n        // getBoundingClientRect is unfortunately too accurate.  It introduces a pixel or two of\\n        // jitter as the user scrolls that messes with our ability to detect if two positions\\n        // are equivilant or not.  We place an element at the top left of the page that will\\n        // get the same jitter, so we can cancel the two out.\\n        var node = zeroElement;\\n        if (!node || !document.body.contains(node)) {\\n            node = document.createElement('div');\\n            node.setAttribute('data-tether-id', uniqueId());\\n            extend(node.style, {\\n                top: 0,\\n                left: 0,\\n                position: 'absolute'\\n            });\\n\\n            document.body.appendChild(node);\\n\\n            zeroElement = node;\\n        }\\n\\n        var id = node.getAttribute('data-tether-id');\\n        if (typeof zeroPosCache[id] === 'undefined') {\\n            zeroPosCache[id] = getActualBoundingClientRect(node);\\n\\n            // Clear the cache when this position call is done\\n            defer(function () {\\n                delete zeroPosCache[id];\\n            });\\n        }\\n\\n        return zeroPosCache[id];\\n    };\\n\\n    function removeUtilElements() {\\n        if (zeroElement) {\\n            document.body.removeChild(zeroElement);\\n        }\\n        zeroElement = null;\\n    };\\n\\n    function getBounds(el) {\\n        var doc = undefined;\\n        if (el === document) {\\n            doc = document;\\n            el = document.documentElement;\\n        } else {\\n            doc = el.ownerDocument;\\n        }\\n\\n        var docEl = doc.documentElement;\\n\\n        var box = getActualBoundingClientRect(el);\\n\\n        var origin = getOrigin();\\n\\n        box.top -= origin.top;\\n        box.left -= origin.left;\\n\\n        if (typeof box.width === 'undefined') {\\n            box.width = document.body.scrollWidth - box.left - box.right;\\n        }\\n        if (typeof box.height === 'undefined') {\\n            box.height = document.body.scrollHeight - box.top - box.bottom;\\n        }\\n\\n        box.top = box.top - docEl.clientTop;\\n        box.left = box.left - docEl.clientLeft;\\n        box.right = doc.body.clientWidth - box.width - box.left;\\n        box.bottom = doc.body.clientHeight - box.height - box.top;\\n\\n        return box;\\n    }\\n\\n    function getOffsetParent(el) {\\n        return el.offsetParent || document.documentElement;\\n    }\\n\\n    var _scrollBarSize = null;\\n\\n    function getScrollBarSize() {\\n        if (_scrollBarSize) {\\n            return _scrollBarSize;\\n        }\\n        var inner = document.createElement('div');\\n        inner.style.width = '100%';\\n        inner.style.height = '200px';\\n\\n        var outer = document.createElement('div');\\n        extend(outer.style, {\\n            position: 'absolute',\\n            top: 0,\\n            left: 0,\\n            pointerEvents: 'none',\\n            visibility: 'hidden',\\n            width: '200px',\\n            height: '150px',\\n            overflow: 'hidden'\\n        });\\n\\n        outer.appendChild(inner);\\n\\n        document.body.appendChild(outer);\\n\\n        var widthContained = inner.offsetWidth;\\n        outer.style.overflow = 'scroll';\\n        var widthScroll = inner.offsetWidth;\\n\\n        if (widthContained === widthScroll) {\\n            widthScroll = outer.clientWidth;\\n        }\\n\\n        document.body.removeChild(outer);\\n\\n        var width = widthContained - widthScroll;\\n\\n        _scrollBarSize = {width: width, height: width};\\n        return _scrollBarSize;\\n    }\\n\\n    function extend() {\\n        var out = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\\n\\n        var args = [];\\n\\n        Array.prototype.push.apply(args, arguments);\\n\\n        args.slice(1).forEach(function (obj) {\\n            if (obj) {\\n                for (var key in obj) {\\n                    if (({}).hasOwnProperty.call(obj, key)) {\\n                        out[key] = obj[key];\\n                    }\\n                }\\n            }\\n        });\\n\\n        return out;\\n    }\\n\\n    function removeClass(el, name) {\\n        if (typeof el.classList !== 'undefined') {\\n            name.split(' ').forEach(function (cls) {\\n                if (cls.trim()) {\\n                    el.classList.remove(cls);\\n                }\\n            });\\n        } else {\\n            var regex = new RegExp('(^| )' + name.split(' ').join('|') + '( |$)', 'gi');\\n            var className = getClassName(el).replace(regex, ' ');\\n            setClassName(el, className);\\n        }\\n    }\\n\\n    function addClass(el, name) {\\n        if (typeof el.classList !== 'undefined') {\\n            name.split(' ').forEach(function (cls) {\\n                if (cls.trim()) {\\n                    el.classList.add(cls);\\n                }\\n            });\\n        } else {\\n            removeClass(el, name);\\n            var cls = getClassName(el) + (' ' + name);\\n            setClassName(el, cls);\\n        }\\n    }\\n\\n    function hasClass(el, name) {\\n        if (typeof el.classList !== 'undefined') {\\n            return el.classList.contains(name);\\n        }\\n        var className = getClassName(el);\\n        return new RegExp('(^| )' + name + '( |$)', 'gi').test(className);\\n    }\\n\\n    function getClassName(el) {\\n        // Can't use just SVGAnimatedString here since nodes within a Frame in IE have\\n        // completely separately SVGAnimatedString base classes\\n        if (el.className instanceof el.ownerDocument.defaultView.SVGAnimatedString) {\\n            return el.className.baseVal;\\n        }\\n        return el.className;\\n    }\\n\\n    function setClassName(el, className) {\\n        el.setAttribute('class', className);\\n    }\\n\\n    function updateClasses(el, add, all) {\\n        // Of the set of 'all' classes, we need the 'add' classes, and only the\\n        // 'add' classes to be set.\\n        all.forEach(function (cls) {\\n            if (add.indexOf(cls) === -1 && hasClass(el, cls)) {\\n                removeClass(el, cls);\\n            }\\n        });\\n\\n        add.forEach(function (cls) {\\n            if (!hasClass(el, cls)) {\\n                addClass(el, cls);\\n            }\\n        });\\n    }\\n\\n    var deferred = [];\\n\\n    var defer = function defer(fn) {\\n        deferred.push(fn);\\n    };\\n\\n    var flush = function flush() {\\n        var fn = undefined;\\n        while (fn = deferred.pop()) {\\n            fn();\\n        }\\n    };\\n\\n    var Evented = (function () {\\n        function Evented() {\\n            _classCallCheck(this, Evented);\\n        }\\n\\n        _createClass(Evented, [{\\n            key: 'on',\\n            value: function on(event, handler, ctx) {\\n                var once = arguments.length <= 3 || arguments[3] === undefined ? false : arguments[3];\\n\\n                if (typeof this.bindings === 'undefined') {\\n                    this.bindings = {};\\n                }\\n                if (typeof this.bindings[event] === 'undefined') {\\n                    this.bindings[event] = [];\\n                }\\n                this.bindings[event].push({handler: handler, ctx: ctx, once: once});\\n            }\\n        }, {\\n            key: 'once',\\n            value: function once(event, handler, ctx) {\\n                this.on(event, handler, ctx, true);\\n            }\\n        }, {\\n            key: 'off',\\n            value: function off(event, handler) {\\n                if (typeof this.bindings === 'undefined' || typeof this.bindings[event] === 'undefined') {\\n                    return;\\n                }\\n\\n                if (typeof handler === 'undefined') {\\n                    delete this.bindings[event];\\n                } else {\\n                    var i = 0;\\n                    while (i < this.bindings[event].length) {\\n                        if (this.bindings[event][i].handler === handler) {\\n                            this.bindings[event].splice(i, 1);\\n                        } else {\\n                            ++i;\\n                        }\\n                    }\\n                }\\n            }\\n        }, {\\n            key: 'trigger',\\n            value: function trigger(event) {\\n                if (typeof this.bindings !== 'undefined' && this.bindings[event]) {\\n                    var i = 0;\\n\\n                    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\\n                        args[_key - 1] = arguments[_key];\\n                    }\\n\\n                    while (i < this.bindings[event].length) {\\n                        var _bindings$event$i = this.bindings[event][i];\\n                        var handler = _bindings$event$i.handler;\\n                        var ctx = _bindings$event$i.ctx;\\n                        var once = _bindings$event$i.once;\\n\\n                        var context = ctx;\\n                        if (typeof context === 'undefined') {\\n                            context = this;\\n                        }\\n\\n                        handler.apply(context, args);\\n\\n                        if (once) {\\n                            this.bindings[event].splice(i, 1);\\n                        } else {\\n                            ++i;\\n                        }\\n                    }\\n                }\\n            }\\n        }]);\\n\\n        return Evented;\\n    })();\\n\\n    TetherBase.Utils = {\\n        getActualBoundingClientRect: getActualBoundingClientRect,\\n        getScrollParents: getScrollParents,\\n        getBounds: getBounds,\\n        getOffsetParent: getOffsetParent,\\n        extend: extend,\\n        addClass: addClass,\\n        removeClass: removeClass,\\n        hasClass: hasClass,\\n        updateClasses: updateClasses,\\n        defer: defer,\\n        flush: flush,\\n        uniqueId: uniqueId,\\n        Evented: Evented,\\n        getScrollBarSize: getScrollBarSize,\\n        removeUtilElements: removeUtilElements\\n    };\\n    /* globals TetherBase, performance */\\n\\n    'use strict';\\n\\n    var _slicedToArray = (function () {\\n        function sliceIterator(arr, i) {\\n            var _arr = [];\\n            var _n = true;\\n            var _d = false;\\n            var _e = undefined;\\n            try {\\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n                    _arr.push(_s.value);\\n                    if (i && _arr.length === i) break;\\n                }\\n            } catch (err) {\\n                _d = true;\\n                _e = err;\\n            } finally {\\n                try {\\n                    if (!_n && _i['return']) _i['return']();\\n                } finally {\\n                    if (_d) throw _e;\\n                }\\n            }\\n            return _arr;\\n        }\\n\\n        return function (arr, i) {\\n            if (Array.isArray(arr)) {\\n                return arr;\\n            } else if (Symbol.iterator in Object(arr)) {\\n                return sliceIterator(arr, i);\\n            } else {\\n                throw new TypeError('Invalid attempt to destructure non-iterable instance');\\n            }\\n        };\\n    })();\\n\\n    var _createClass = (function () {\\n        function defineProperties(target, props) {\\n            for (var i = 0; i < props.length; i++) {\\n                var descriptor = props[i];\\n                descriptor.enumerable = descriptor.enumerable || false;\\n                descriptor.configurable = true;\\n                if ('value' in descriptor) descriptor.writable = true;\\n                Object.defineProperty(target, descriptor.key, descriptor);\\n            }\\n        }\\n\\n        return function (Constructor, protoProps, staticProps) {\\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n            if (staticProps) defineProperties(Constructor, staticProps);\\n            return Constructor;\\n        };\\n    })();\\n\\n    var _get = function get(_x6, _x7, _x8) {\\n        var _again = true;\\n        _function: while (_again) {\\n            var object = _x6, property = _x7, receiver = _x8;\\n            _again = false;\\n            if (object === null) object = Function.prototype;\\n            var desc = Object.getOwnPropertyDescriptor(object, property);\\n            if (desc === undefined) {\\n                var parent = Object.getPrototypeOf(object);\\n                if (parent === null) {\\n                    return undefined;\\n                } else {\\n                    _x6 = parent;\\n                    _x7 = property;\\n                    _x8 = receiver;\\n                    _again = true;\\n                    desc = parent = undefined;\\n                    continue _function;\\n                }\\n            } else if ('value' in desc) {\\n                return desc.value;\\n            } else {\\n                var getter = desc.get;\\n                if (getter === undefined) {\\n                    return undefined;\\n                }\\n                return getter.call(receiver);\\n            }\\n        }\\n    };\\n\\n    function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n            throw new TypeError('Cannot call a class as a function');\\n        }\\n    }\\n\\n    function _inherits(subClass, superClass) {\\n        if (typeof superClass !== 'function' && superClass !== null) {\\n            throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass);\\n        }\\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\\n            constructor: {\\n                value: subClass,\\n                enumerable: false,\\n                writable: true,\\n                configurable: true\\n            }\\n        });\\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n    }\\n\\n    if (typeof TetherBase === 'undefined') {\\n        throw new Error('You must include the utils.js file before tether.js');\\n    }\\n\\n    var _TetherBase$Utils = TetherBase.Utils;\\n    var getScrollParents = _TetherBase$Utils.getScrollParents;\\n    var getBounds = _TetherBase$Utils.getBounds;\\n    var getOffsetParent = _TetherBase$Utils.getOffsetParent;\\n    var extend = _TetherBase$Utils.extend;\\n    var addClass = _TetherBase$Utils.addClass;\\n    var removeClass = _TetherBase$Utils.removeClass;\\n    var updateClasses = _TetherBase$Utils.updateClasses;\\n    var defer = _TetherBase$Utils.defer;\\n    var flush = _TetherBase$Utils.flush;\\n    var getScrollBarSize = _TetherBase$Utils.getScrollBarSize;\\n    var removeUtilElements = _TetherBase$Utils.removeUtilElements;\\n\\n    function within(a, b) {\\n        var diff = arguments.length <= 2 || arguments[2] === undefined ? 1 : arguments[2];\\n\\n        return a + diff >= b && b >= a - diff;\\n    }\\n\\n    var transformKey = (function () {\\n        if (typeof document === 'undefined') {\\n            return '';\\n        }\\n        var el = document.createElement('div');\\n\\n        var transforms = ['transform', 'WebkitTransform', 'OTransform', 'MozTransform', 'msTransform'];\\n        for (var i = 0; i < transforms.length; ++i) {\\n            var key = transforms[i];\\n            if (el.style[key] !== undefined) {\\n                return key;\\n            }\\n        }\\n    })();\\n\\n    var tethers = [];\\n\\n    var position = function position() {\\n        tethers.forEach(function (tether) {\\n            tether.position(false);\\n        });\\n        flush();\\n    };\\n\\n    function now() {\\n        if (typeof performance !== 'undefined' && typeof performance.now !== 'undefined') {\\n            return performance.now();\\n        }\\n        return +new Date();\\n    }\\n\\n    (function () {\\n        var lastCall = null;\\n        var lastDuration = null;\\n        var pendingTimeout = null;\\n\\n        var tick = function tick() {\\n            if (typeof lastDuration !== 'undefined' && lastDuration > 16) {\\n                // We voluntarily throttle ourselves if we can't manage 60fps\\n                lastDuration = Math.min(lastDuration - 16, 250);\\n\\n                // Just in case this is the last event, remember to position just once more\\n                pendingTimeout = setTimeout(tick, 250);\\n                return;\\n            }\\n\\n            if (typeof lastCall !== 'undefined' && now() - lastCall < 10) {\\n                // Some browsers call events a little too frequently, refuse to run more than is reasonable\\n                return;\\n            }\\n\\n            if (pendingTimeout != null) {\\n                clearTimeout(pendingTimeout);\\n                pendingTimeout = null;\\n            }\\n\\n            lastCall = now();\\n            position();\\n            lastDuration = now() - lastCall;\\n        };\\n\\n        if (typeof window !== 'undefined' && typeof window.addEventListener !== 'undefined') {\\n            ['resize', 'scroll', 'touchmove'].forEach(function (event) {\\n                window.addEventListener(event, tick);\\n            });\\n        }\\n    })();\\n\\n    var MIRROR_LR = {\\n        center: 'center',\\n        left: 'right',\\n        right: 'left'\\n    };\\n\\n    var MIRROR_TB = {\\n        middle: 'middle',\\n        top: 'bottom',\\n        bottom: 'top'\\n    };\\n\\n    var OFFSET_MAP = {\\n        top: 0,\\n        left: 0,\\n        middle: '50%',\\n        center: '50%',\\n        bottom: '100%',\\n        right: '100%'\\n    };\\n\\n    var autoToFixedAttachment = function autoToFixedAttachment(attachment, relativeToAttachment) {\\n        var left = attachment.left;\\n        var top = attachment.top;\\n\\n        if (left === 'auto') {\\n            left = MIRROR_LR[relativeToAttachment.left];\\n        }\\n\\n        if (top === 'auto') {\\n            top = MIRROR_TB[relativeToAttachment.top];\\n        }\\n\\n        return {left: left, top: top};\\n    };\\n\\n    var attachmentToOffset = function attachmentToOffset(attachment) {\\n        var left = attachment.left;\\n        var top = attachment.top;\\n\\n        if (typeof OFFSET_MAP[attachment.left] !== 'undefined') {\\n            left = OFFSET_MAP[attachment.left];\\n        }\\n\\n        if (typeof OFFSET_MAP[attachment.top] !== 'undefined') {\\n            top = OFFSET_MAP[attachment.top];\\n        }\\n\\n        return {left: left, top: top};\\n    };\\n\\n    function addOffset() {\\n        var out = {top: 0, left: 0};\\n\\n        for (var _len = arguments.length, offsets = Array(_len), _key = 0; _key < _len; _key++) {\\n            offsets[_key] = arguments[_key];\\n        }\\n\\n        offsets.forEach(function (_ref) {\\n            var top = _ref.top;\\n            var left = _ref.left;\\n\\n            if (typeof top === 'string') {\\n                top = parseFloat(top, 10);\\n            }\\n            if (typeof left === 'string') {\\n                left = parseFloat(left, 10);\\n            }\\n\\n            out.top += top;\\n            out.left += left;\\n        });\\n\\n        return out;\\n    }\\n\\n    function offsetToPx(offset, size) {\\n        if (typeof offset.left === 'string' && offset.left.indexOf('%') !== -1) {\\n            offset.left = parseFloat(offset.left, 10) / 100 * size.width;\\n        }\\n        if (typeof offset.top === 'string' && offset.top.indexOf('%') !== -1) {\\n            offset.top = parseFloat(offset.top, 10) / 100 * size.height;\\n        }\\n\\n        return offset;\\n    }\\n\\n    var parseOffset = function parseOffset(value) {\\n        var _value$split = value.split(' ');\\n\\n        var _value$split2 = _slicedToArray(_value$split, 2);\\n\\n        var top = _value$split2[0];\\n        var left = _value$split2[1];\\n\\n        return {top: top, left: left};\\n    };\\n    var parseAttachment = parseOffset;\\n\\n    var TetherClass = (function (_Evented) {\\n        _inherits(TetherClass, _Evented);\\n\\n        function TetherClass(options) {\\n            var _this = this;\\n\\n            _classCallCheck(this, TetherClass);\\n\\n            _get(Object.getPrototypeOf(TetherClass.prototype), 'constructor', this).call(this);\\n            this.position = this.position.bind(this);\\n\\n            tethers.push(this);\\n\\n            this.history = [];\\n\\n            this.setOptions(options, false);\\n\\n            TetherBase.modules.forEach(function (module) {\\n                if (typeof module.initialize !== 'undefined') {\\n                    module.initialize.call(_this);\\n                }\\n            });\\n\\n            this.position();\\n        }\\n\\n        _createClass(TetherClass, [{\\n            key: 'getClass',\\n            value: function getClass() {\\n                var key = arguments.length <= 0 || arguments[0] === undefined ? '' : arguments[0];\\n                var classes = this.options.classes;\\n\\n                if (typeof classes !== 'undefined' && classes[key]) {\\n                    return this.options.classes[key];\\n                } else if (this.options.classPrefix) {\\n                    return this.options.classPrefix + '-' + key;\\n                } else {\\n                    return key;\\n                }\\n            }\\n        }, {\\n            key: 'setOptions',\\n            value: function setOptions(options) {\\n                var _this2 = this;\\n\\n                var pos = arguments.length <= 1 || arguments[1] === undefined ? true : arguments[1];\\n\\n                var defaults = {\\n                    offset: '0 0',\\n                    targetOffset: '0 0',\\n                    targetAttachment: 'auto auto',\\n                    classPrefix: 'tether'\\n                };\\n\\n                this.options = extend(defaults, options);\\n\\n                var _options = this.options;\\n                var element = _options.element;\\n                var target = _options.target;\\n                var targetModifier = _options.targetModifier;\\n\\n                this.element = element;\\n                this.target = target;\\n                this.targetModifier = targetModifier;\\n\\n                if (this.target === 'viewport') {\\n                    this.target = document.body;\\n                    this.targetModifier = 'visible';\\n                } else if (this.target === 'scroll-handle') {\\n                    this.target = document.body;\\n                    this.targetModifier = 'scroll-handle';\\n                }\\n\\n                ['element', 'target'].forEach(function (key) {\\n                    if (typeof _this2[key] === 'undefined') {\\n                        throw new Error('Tether Error: Both element and target must be defined');\\n                    }\\n\\n                    if (typeof _this2[key].jquery !== 'undefined') {\\n                        _this2[key] = _this2[key][0];\\n                    } else if (typeof _this2[key] === 'string') {\\n                        _this2[key] = document.querySelector(_this2[key]);\\n                    }\\n                });\\n\\n                addClass(this.element, this.getClass('element'));\\n                if (!(this.options.addTargetClasses === false)) {\\n                    addClass(this.target, this.getClass('target'));\\n                }\\n\\n                if (!this.options.attachment) {\\n                    throw new Error('Tether Error: You must provide an attachment');\\n                }\\n\\n                this.targetAttachment = parseAttachment(this.options.targetAttachment);\\n                this.attachment = parseAttachment(this.options.attachment);\\n                this.offset = parseOffset(this.options.offset);\\n                this.targetOffset = parseOffset(this.options.targetOffset);\\n\\n                if (typeof this.scrollParents !== 'undefined') {\\n                    this.disable();\\n                }\\n\\n                if (this.targetModifier === 'scroll-handle') {\\n                    this.scrollParents = [this.target];\\n                } else {\\n                    this.scrollParents = getScrollParents(this.target);\\n                }\\n\\n                if (!(this.options.enabled === false)) {\\n                    this.enable(pos);\\n                }\\n            }\\n        }, {\\n            key: 'getTargetBounds',\\n            value: function getTargetBounds() {\\n                if (typeof this.targetModifier !== 'undefined') {\\n                    if (this.targetModifier === 'visible') {\\n                        if (this.target === document.body) {\\n                            return {top: pageYOffset, left: pageXOffset, height: innerHeight, width: innerWidth};\\n                        } else {\\n                            var bounds = getBounds(this.target);\\n\\n                            var out = {\\n                                height: bounds.height,\\n                                width: bounds.width,\\n                                top: bounds.top,\\n                                left: bounds.left\\n                            };\\n\\n                            out.height = Math.min(out.height, bounds.height - (pageYOffset - bounds.top));\\n                            out.height = Math.min(out.height, bounds.height - (bounds.top + bounds.height - (pageYOffset + innerHeight)));\\n                            out.height = Math.min(innerHeight, out.height);\\n                            out.height -= 2;\\n\\n                            out.width = Math.min(out.width, bounds.width - (pageXOffset - bounds.left));\\n                            out.width = Math.min(out.width, bounds.width - (bounds.left + bounds.width - (pageXOffset + innerWidth)));\\n                            out.width = Math.min(innerWidth, out.width);\\n                            out.width -= 2;\\n\\n                            if (out.top < pageYOffset) {\\n                                out.top = pageYOffset;\\n                            }\\n                            if (out.left < pageXOffset) {\\n                                out.left = pageXOffset;\\n                            }\\n\\n                            return out;\\n                        }\\n                    } else if (this.targetModifier === 'scroll-handle') {\\n                        var bounds = undefined;\\n                        var target = this.target;\\n                        if (target === document.body) {\\n                            target = document.documentElement;\\n\\n                            bounds = {\\n                                left: pageXOffset,\\n                                top: pageYOffset,\\n                                height: innerHeight,\\n                                width: innerWidth\\n                            };\\n                        } else {\\n                            bounds = getBounds(target);\\n                        }\\n\\n                        var style = getComputedStyle(target);\\n\\n                        var hasBottomScroll = target.scrollWidth > target.clientWidth || [style.overflow, style.overflowX].indexOf('scroll') >= 0 || this.target !== document.body;\\n\\n                        var scrollBottom = 0;\\n                        if (hasBottomScroll) {\\n                            scrollBottom = 15;\\n                        }\\n\\n                        var height = bounds.height - parseFloat(style.borderTopWidth) - parseFloat(style.borderBottomWidth) - scrollBottom;\\n\\n                        var out = {\\n                            width: 15,\\n                            height: height * 0.975 * (height / target.scrollHeight),\\n                            left: bounds.left + bounds.width - parseFloat(style.borderLeftWidth) - 15\\n                        };\\n\\n                        var fitAdj = 0;\\n                        if (height < 408 && this.target === document.body) {\\n                            fitAdj = -0.00011 * Math.pow(height, 2) - 0.00727 * height + 22.58;\\n                        }\\n\\n                        if (this.target !== document.body) {\\n                            out.height = Math.max(out.height, 24);\\n                        }\\n\\n                        var scrollPercentage = this.target.scrollTop / (target.scrollHeight - height);\\n                        out.top = scrollPercentage * (height - out.height - fitAdj) + bounds.top + parseFloat(style.borderTopWidth);\\n\\n                        if (this.target === document.body) {\\n                            out.height = Math.max(out.height, 24);\\n                        }\\n\\n                        return out;\\n                    }\\n                } else {\\n                    return getBounds(this.target);\\n                }\\n            }\\n        }, {\\n            key: 'clearCache',\\n            value: function clearCache() {\\n                this._cache = {};\\n            }\\n        }, {\\n            key: 'cache',\\n            value: function cache(k, getter) {\\n                // More than one module will often need the same DOM info, so\\n                // we keep a cache which is cleared on each position call\\n                if (typeof this._cache === 'undefined') {\\n                    this._cache = {};\\n                }\\n\\n                if (typeof this._cache[k] === 'undefined') {\\n                    this._cache[k] = getter.call(this);\\n                }\\n\\n                return this._cache[k];\\n            }\\n        }, {\\n            key: 'enable',\\n            value: function enable() {\\n                var _this3 = this;\\n\\n                var pos = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\\n\\n                if (!(this.options.addTargetClasses === false)) {\\n                    addClass(this.target, this.getClass('enabled'));\\n                }\\n                addClass(this.element, this.getClass('enabled'));\\n                this.enabled = true;\\n\\n                this.scrollParents.forEach(function (parent) {\\n                    if (parent !== _this3.target.ownerDocument) {\\n                        parent.addEventListener('scroll', _this3.position);\\n                    }\\n                });\\n\\n                if (pos) {\\n                    this.position();\\n                }\\n            }\\n        }, {\\n            key: 'disable',\\n            value: function disable() {\\n                var _this4 = this;\\n\\n                removeClass(this.target, this.getClass('enabled'));\\n                removeClass(this.element, this.getClass('enabled'));\\n                this.enabled = false;\\n\\n                if (typeof this.scrollParents !== 'undefined') {\\n                    this.scrollParents.forEach(function (parent) {\\n                        parent.removeEventListener('scroll', _this4.position);\\n                    });\\n                }\\n            }\\n        }, {\\n            key: 'destroy',\\n            value: function destroy() {\\n                var _this5 = this;\\n\\n                this.disable();\\n\\n                tethers.forEach(function (tether, i) {\\n                    if (tether === _this5) {\\n                        tethers.splice(i, 1);\\n                    }\\n                });\\n\\n                // Remove any elements we were using for convenience from the DOM\\n                if (tethers.length === 0) {\\n                    removeUtilElements();\\n                }\\n            }\\n        }, {\\n            key: 'updateAttachClasses',\\n            value: function updateAttachClasses(elementAttach, targetAttach) {\\n                var _this6 = this;\\n\\n                elementAttach = elementAttach || this.attachment;\\n                targetAttach = targetAttach || this.targetAttachment;\\n                var sides = ['left', 'top', 'bottom', 'right', 'middle', 'center'];\\n\\n                if (typeof this._addAttachClasses !== 'undefined' && this._addAttachClasses.length) {\\n                    // updateAttachClasses can be called more than once in a position call, so\\n                    // we need to clean up after ourselves such that when the last defer gets\\n                    // ran it doesn't add any extra classes from previous calls.\\n                    this._addAttachClasses.splice(0, this._addAttachClasses.length);\\n                }\\n\\n                if (typeof this._addAttachClasses === 'undefined') {\\n                    this._addAttachClasses = [];\\n                }\\n                var add = this._addAttachClasses;\\n\\n                if (elementAttach.top) {\\n                    add.push(this.getClass('element-attached') + '-' + elementAttach.top);\\n                }\\n                if (elementAttach.left) {\\n                    add.push(this.getClass('element-attached') + '-' + elementAttach.left);\\n                }\\n                if (targetAttach.top) {\\n                    add.push(this.getClass('target-attached') + '-' + targetAttach.top);\\n                }\\n                if (targetAttach.left) {\\n                    add.push(this.getClass('target-attached') + '-' + targetAttach.left);\\n                }\\n\\n                var all = [];\\n                sides.forEach(function (side) {\\n                    all.push(_this6.getClass('element-attached') + '-' + side);\\n                    all.push(_this6.getClass('target-attached') + '-' + side);\\n                });\\n\\n                defer(function () {\\n                    if (!(typeof _this6._addAttachClasses !== 'undefined')) {\\n                        return;\\n                    }\\n\\n                    updateClasses(_this6.element, _this6._addAttachClasses, all);\\n                    if (!(_this6.options.addTargetClasses === false)) {\\n                        updateClasses(_this6.target, _this6._addAttachClasses, all);\\n                    }\\n\\n                    delete _this6._addAttachClasses;\\n                });\\n            }\\n        }, {\\n            key: 'position',\\n            value: function position() {\\n                var _this7 = this;\\n\\n                var flushChanges = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\\n\\n                // flushChanges commits the changes immediately, leave true unless you are positioning multiple\\n                // tethers (in which case call Tether.Utils.flush yourself when you're done)\\n\\n                if (!this.enabled) {\\n                    return;\\n                }\\n\\n                this.clearCache();\\n\\n                // Turn 'auto' attachments into the appropriate corner or edge\\n                var targetAttachment = autoToFixedAttachment(this.targetAttachment, this.attachment);\\n\\n                this.updateAttachClasses(this.attachment, targetAttachment);\\n\\n                var elementPos = this.cache('element-bounds', function () {\\n                    return getBounds(_this7.element);\\n                });\\n\\n                var width = elementPos.width;\\n                var height = elementPos.height;\\n\\n                if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\\n                    var _lastSize = this.lastSize;\\n\\n                    // We cache the height and width to make it possible to position elements that are\\n                    // getting hidden.\\n                    width = _lastSize.width;\\n                    height = _lastSize.height;\\n                } else {\\n                    this.lastSize = {width: width, height: height};\\n                }\\n\\n                var targetPos = this.cache('target-bounds', function () {\\n                    return _this7.getTargetBounds();\\n                });\\n                var targetSize = targetPos;\\n\\n                // Get an actual px offset from the attachment\\n                var offset = offsetToPx(attachmentToOffset(this.attachment), {width: width, height: height});\\n                var targetOffset = offsetToPx(attachmentToOffset(targetAttachment), targetSize);\\n\\n                var manualOffset = offsetToPx(this.offset, {width: width, height: height});\\n                var manualTargetOffset = offsetToPx(this.targetOffset, targetSize);\\n\\n                // Add the manually provided offset\\n                offset = addOffset(offset, manualOffset);\\n                targetOffset = addOffset(targetOffset, manualTargetOffset);\\n\\n                // It's now our goal to make (element position + offset) == (target position + target offset)\\n                var left = targetPos.left + targetOffset.left - offset.left;\\n                var top = targetPos.top + targetOffset.top - offset.top;\\n\\n                for (var i = 0; i < TetherBase.modules.length; ++i) {\\n                    var _module2 = TetherBase.modules[i];\\n                    var ret = _module2.position.call(this, {\\n                        left: left,\\n                        top: top,\\n                        targetAttachment: targetAttachment,\\n                        targetPos: targetPos,\\n                        elementPos: elementPos,\\n                        offset: offset,\\n                        targetOffset: targetOffset,\\n                        manualOffset: manualOffset,\\n                        manualTargetOffset: manualTargetOffset,\\n                        scrollbarSize: scrollbarSize,\\n                        attachment: this.attachment\\n                    });\\n\\n                    if (ret === false) {\\n                        return false;\\n                    } else if (typeof ret === 'undefined' || typeof ret !== 'object') {\\n                        continue;\\n                    } else {\\n                        top = ret.top;\\n                        left = ret.left;\\n                    }\\n                }\\n\\n                // We describe the position three different ways to give the optimizer\\n                // a chance to decide the best possible way to position the element\\n                // with the fewest repaints.\\n                var next = {\\n                    // It's position relative to the page (absolute positioning when\\n                    // the element is a child of the body)\\n                    page: {\\n                        top: top,\\n                        left: left\\n                    },\\n\\n                    // It's position relative to the viewport (fixed positioning)\\n                    viewport: {\\n                        top: top - pageYOffset,\\n                        bottom: pageYOffset - top - height + innerHeight,\\n                        left: left - pageXOffset,\\n                        right: pageXOffset - left - width + innerWidth\\n                    }\\n                };\\n\\n                var doc = this.target.ownerDocument;\\n                var win = doc.defaultView;\\n\\n                var scrollbarSize = undefined;\\n                if (win.innerHeight > doc.documentElement.clientHeight) {\\n                    scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\\n                    next.viewport.bottom -= scrollbarSize.height;\\n                }\\n\\n                if (win.innerWidth > doc.documentElement.clientWidth) {\\n                    scrollbarSize = this.cache('scrollbar-size', getScrollBarSize);\\n                    next.viewport.right -= scrollbarSize.width;\\n                }\\n\\n                if (['', 'static'].indexOf(doc.body.style.position) === -1 || ['', 'static'].indexOf(doc.body.parentElement.style.position) === -1) {\\n                    // Absolute positioning in the body will be relative to the page, not the 'initial containing block'\\n                    next.page.bottom = doc.body.scrollHeight - top - height;\\n                    next.page.right = doc.body.scrollWidth - left - width;\\n                }\\n\\n                if (typeof this.options.optimizations !== 'undefined' && this.options.optimizations.moveElement !== false && !(typeof this.targetModifier !== 'undefined')) {\\n                    (function () {\\n                        var offsetParent = _this7.cache('target-offsetparent', function () {\\n                            return getOffsetParent(_this7.target);\\n                        });\\n                        var offsetPosition = _this7.cache('target-offsetparent-bounds', function () {\\n                            return getBounds(offsetParent);\\n                        });\\n                        var offsetParentStyle = getComputedStyle(offsetParent);\\n                        var offsetParentSize = offsetPosition;\\n\\n                        var offsetBorder = {};\\n                        ['Top', 'Left', 'Bottom', 'Right'].forEach(function (side) {\\n                            offsetBorder[side.toLowerCase()] = parseFloat(offsetParentStyle['border' + side + 'Width']);\\n                        });\\n\\n                        offsetPosition.right = doc.body.scrollWidth - offsetPosition.left - offsetParentSize.width + offsetBorder.right;\\n                        offsetPosition.bottom = doc.body.scrollHeight - offsetPosition.top - offsetParentSize.height + offsetBorder.bottom;\\n\\n                        if (next.page.top >= offsetPosition.top + offsetBorder.top && next.page.bottom >= offsetPosition.bottom) {\\n                            if (next.page.left >= offsetPosition.left + offsetBorder.left && next.page.right >= offsetPosition.right) {\\n                                // We're within the visible part of the target's scroll parent\\n                                var scrollTop = offsetParent.scrollTop;\\n                                var scrollLeft = offsetParent.scrollLeft;\\n\\n                                // It's position relative to the target's offset parent (absolute positioning when\\n                                // the element is moved to be a child of the target's offset parent).\\n                                next.offset = {\\n                                    top: next.page.top - offsetPosition.top + scrollTop - offsetBorder.top,\\n                                    left: next.page.left - offsetPosition.left + scrollLeft - offsetBorder.left\\n                                };\\n                            }\\n                        }\\n                    })();\\n                }\\n\\n                // We could also travel up the DOM and try each containing context, rather than only\\n                // looking at the body, but we're gonna get diminishing returns.\\n\\n                this.move(next);\\n\\n                this.history.unshift(next);\\n\\n                if (this.history.length > 3) {\\n                    this.history.pop();\\n                }\\n\\n                if (flushChanges) {\\n                    flush();\\n                }\\n\\n                return true;\\n            }\\n\\n            // THE ISSUE\\n        }, {\\n            key: 'move',\\n            value: function move(pos) {\\n                var _this8 = this;\\n\\n                if (!(typeof this.element.parentNode !== 'undefined')) {\\n                    return;\\n                }\\n\\n                var same = {};\\n\\n                for (var type in pos) {\\n                    same[type] = {};\\n\\n                    for (var key in pos[type]) {\\n                        var found = false;\\n\\n                        for (var i = 0; i < this.history.length; ++i) {\\n                            var point = this.history[i];\\n                            if (typeof point[type] !== 'undefined' && !within(point[type][key], pos[type][key])) {\\n                                found = true;\\n                                break;\\n                            }\\n                        }\\n\\n                        if (!found) {\\n                            same[type][key] = true;\\n                        }\\n                    }\\n                }\\n\\n                var css = {top: '', left: '', right: '', bottom: ''};\\n\\n                var transcribe = function transcribe(_same, _pos) {\\n                    var hasOptimizations = typeof _this8.options.optimizations !== 'undefined';\\n                    var gpu = hasOptimizations ? _this8.options.optimizations.gpu : null;\\n                    if (gpu !== false) {\\n                        var yPos = undefined,\\n                            xPos = undefined;\\n                        if (_same.top) {\\n                            css.top = 0;\\n                            yPos = _pos.top;\\n                        } else {\\n                            css.bottom = 0;\\n                            yPos = -_pos.bottom;\\n                        }\\n\\n                        if (_same.left) {\\n                            css.left = 0;\\n                            xPos = _pos.left;\\n                        } else {\\n                            css.right = 0;\\n                            xPos = -_pos.right;\\n                        }\\n\\n                        if (window.matchMedia) {\\n                            // HubSpot/tether#207\\n                            var retina = window.matchMedia('only screen and (min-resolution: 1.3dppx)').matches || window.matchMedia('only screen and (-webkit-min-device-pixel-ratio: 1.3)').matches;\\n                            if (!retina) {\\n                                xPos = Math.round(xPos);\\n                                yPos = Math.round(yPos);\\n                            }\\n                        }\\n\\n                        css[transformKey] = 'translateX(' + xPos + 'px) translateY(' + yPos + 'px)';\\n\\n                        if (transformKey !== 'msTransform') {\\n                            // The Z transform will keep this in the GPU (faster, and prevents artifacts),\\n                            // but IE9 doesn't support 3d transforms and will choke.\\n                            css[transformKey] += \\\" translateZ(0)\\\";\\n                        }\\n                    } else {\\n                        if (_same.top) {\\n                            css.top = _pos.top + 'px';\\n                        } else {\\n                            css.bottom = _pos.bottom + 'px';\\n                        }\\n\\n                        if (_same.left) {\\n                            css.left = _pos.left + 'px';\\n                        } else {\\n                            css.right = _pos.right + 'px';\\n                        }\\n                    }\\n                };\\n\\n                var moved = false;\\n                if ((same.page.top || same.page.bottom) && (same.page.left || same.page.right)) {\\n                    css.position = 'absolute';\\n                    transcribe(same.page, pos.page);\\n                } else if ((same.viewport.top || same.viewport.bottom) && (same.viewport.left || same.viewport.right)) {\\n                    css.position = 'fixed';\\n                    transcribe(same.viewport, pos.viewport);\\n                } else if (typeof same.offset !== 'undefined' && same.offset.top && same.offset.left) {\\n                    (function () {\\n                        css.position = 'absolute';\\n                        var offsetParent = _this8.cache('target-offsetparent', function () {\\n                            return getOffsetParent(_this8.target);\\n                        });\\n\\n                        if (getOffsetParent(_this8.element) !== offsetParent) {\\n                            defer(function () {\\n                                _this8.element.parentNode.removeChild(_this8.element);\\n                                offsetParent.appendChild(_this8.element);\\n                            });\\n                        }\\n\\n                        transcribe(same.offset, pos.offset);\\n                        moved = true;\\n                    })();\\n                } else {\\n                    css.position = 'absolute';\\n                    transcribe({top: true, left: true}, pos.page);\\n                }\\n\\n                if (!moved) {\\n                    var offsetParentIsBody = true;\\n                    var currentNode = this.element.parentNode;\\n                    while (currentNode && currentNode.nodeType === 1 && currentNode.tagName !== 'BODY') {\\n                        if (getComputedStyle(currentNode).position !== 'static') {\\n                            offsetParentIsBody = false;\\n                            break;\\n                        }\\n\\n                        currentNode = currentNode.parentNode;\\n                    }\\n\\n                    if (!offsetParentIsBody) {\\n                        this.element.parentNode.removeChild(this.element);\\n                        this.element.ownerDocument.body.appendChild(this.element);\\n                    }\\n                }\\n\\n                // Any css change will trigger a repaint, so let's avoid one if nothing changed\\n                var writeCSS = {};\\n                var write = false;\\n                for (var key in css) {\\n                    var val = css[key];\\n                    var elVal = this.element.style[key];\\n\\n                    if (elVal !== val) {\\n                        write = true;\\n                        writeCSS[key] = val;\\n                    }\\n                }\\n\\n                if (write) {\\n                    defer(function () {\\n                        extend(_this8.element.style, writeCSS);\\n                        _this8.trigger('repositioned');\\n                    });\\n                }\\n            }\\n        }]);\\n\\n        return TetherClass;\\n    })(Evented);\\n\\n    TetherClass.modules = [];\\n\\n    TetherBase.position = position;\\n\\n    var Tether = extend(TetherClass, TetherBase);\\n    /* globals TetherBase */\\n\\n    'use strict';\\n\\n    var _slicedToArray = (function () {\\n        function sliceIterator(arr, i) {\\n            var _arr = [];\\n            var _n = true;\\n            var _d = false;\\n            var _e = undefined;\\n            try {\\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n                    _arr.push(_s.value);\\n                    if (i && _arr.length === i) break;\\n                }\\n            } catch (err) {\\n                _d = true;\\n                _e = err;\\n            } finally {\\n                try {\\n                    if (!_n && _i['return']) _i['return']();\\n                } finally {\\n                    if (_d) throw _e;\\n                }\\n            }\\n            return _arr;\\n        }\\n\\n        return function (arr, i) {\\n            if (Array.isArray(arr)) {\\n                return arr;\\n            } else if (Symbol.iterator in Object(arr)) {\\n                return sliceIterator(arr, i);\\n            } else {\\n                throw new TypeError('Invalid attempt to destructure non-iterable instance');\\n            }\\n        };\\n    })();\\n\\n    var _TetherBase$Utils = TetherBase.Utils;\\n    var getBounds = _TetherBase$Utils.getBounds;\\n    var extend = _TetherBase$Utils.extend;\\n    var updateClasses = _TetherBase$Utils.updateClasses;\\n    var defer = _TetherBase$Utils.defer;\\n\\n    var BOUNDS_FORMAT = ['left', 'top', 'right', 'bottom'];\\n\\n    function getBoundingRect(tether, to) {\\n        if (to === 'scrollParent') {\\n            to = tether.scrollParents[0];\\n        } else if (to === 'window') {\\n            to = [pageXOffset, pageYOffset, innerWidth + pageXOffset, innerHeight + pageYOffset];\\n        }\\n\\n        if (to === document) {\\n            to = to.documentElement;\\n        }\\n\\n        if (typeof to.nodeType !== 'undefined') {\\n            (function () {\\n                var node = to;\\n                var size = getBounds(to);\\n                var pos = size;\\n                var style = getComputedStyle(to);\\n\\n                to = [pos.left, pos.top, size.width + pos.left, size.height + pos.top];\\n\\n                // Account any parent Frames scroll offset\\n                if (node.ownerDocument !== document) {\\n                    var win = node.ownerDocument.defaultView;\\n                    to[0] += win.pageXOffset;\\n                    to[1] += win.pageYOffset;\\n                    to[2] += win.pageXOffset;\\n                    to[3] += win.pageYOffset;\\n                }\\n\\n                BOUNDS_FORMAT.forEach(function (side, i) {\\n                    side = side[0].toUpperCase() + side.substr(1);\\n                    if (side === 'Top' || side === 'Left') {\\n                        to[i] += parseFloat(style['border' + side + 'Width']);\\n                    } else {\\n                        to[i] -= parseFloat(style['border' + side + 'Width']);\\n                    }\\n                });\\n            })();\\n        }\\n\\n        return to;\\n    }\\n\\n    TetherBase.modules.push({\\n        position: function position(_ref) {\\n            var _this = this;\\n\\n            var top = _ref.top;\\n            var left = _ref.left;\\n            var targetAttachment = _ref.targetAttachment;\\n\\n            if (!this.options.constraints) {\\n                return true;\\n            }\\n\\n            var _cache = this.cache('element-bounds', function () {\\n                return getBounds(_this.element);\\n            });\\n\\n            var height = _cache.height;\\n            var width = _cache.width;\\n\\n            if (width === 0 && height === 0 && typeof this.lastSize !== 'undefined') {\\n                var _lastSize = this.lastSize;\\n\\n                // Handle the item getting hidden as a result of our positioning without glitching\\n                // the classes in and out\\n                width = _lastSize.width;\\n                height = _lastSize.height;\\n            }\\n\\n            var targetSize = this.cache('target-bounds', function () {\\n                return _this.getTargetBounds();\\n            });\\n\\n            var targetHeight = targetSize.height;\\n            var targetWidth = targetSize.width;\\n\\n            var allClasses = [this.getClass('pinned'), this.getClass('out-of-bounds')];\\n\\n            this.options.constraints.forEach(function (constraint) {\\n                var outOfBoundsClass = constraint.outOfBoundsClass;\\n                var pinnedClass = constraint.pinnedClass;\\n\\n                if (outOfBoundsClass) {\\n                    allClasses.push(outOfBoundsClass);\\n                }\\n                if (pinnedClass) {\\n                    allClasses.push(pinnedClass);\\n                }\\n            });\\n\\n            allClasses.forEach(function (cls) {\\n                ['left', 'top', 'right', 'bottom'].forEach(function (side) {\\n                    allClasses.push(cls + '-' + side);\\n                });\\n            });\\n\\n            var addClasses = [];\\n\\n            var tAttachment = extend({}, targetAttachment);\\n            var eAttachment = extend({}, this.attachment);\\n\\n            this.options.constraints.forEach(function (constraint) {\\n                var to = constraint.to;\\n                var attachment = constraint.attachment;\\n                var pin = constraint.pin;\\n\\n                if (typeof attachment === 'undefined') {\\n                    attachment = '';\\n                }\\n\\n                var changeAttachX = undefined,\\n                    changeAttachY = undefined;\\n                if (attachment.indexOf(' ') >= 0) {\\n                    var _attachment$split = attachment.split(' ');\\n\\n                    var _attachment$split2 = _slicedToArray(_attachment$split, 2);\\n\\n                    changeAttachY = _attachment$split2[0];\\n                    changeAttachX = _attachment$split2[1];\\n                } else {\\n                    changeAttachX = changeAttachY = attachment;\\n                }\\n\\n                var bounds = getBoundingRect(_this, to);\\n\\n                if (changeAttachY === 'target' || changeAttachY === 'both') {\\n                    if (top < bounds[1] && tAttachment.top === 'top') {\\n                        top += targetHeight;\\n                        tAttachment.top = 'bottom';\\n                    }\\n\\n                    if (top + height > bounds[3] && tAttachment.top === 'bottom') {\\n                        top -= targetHeight;\\n                        tAttachment.top = 'top';\\n                    }\\n                }\\n\\n                if (changeAttachY === 'together') {\\n                    if (tAttachment.top === 'top') {\\n                        if (eAttachment.top === 'bottom' && top < bounds[1]) {\\n                            top += targetHeight;\\n                            tAttachment.top = 'bottom';\\n\\n                            top += height;\\n                            eAttachment.top = 'top';\\n                        } else if (eAttachment.top === 'top' && top + height > bounds[3] && top - (height - targetHeight) >= bounds[1]) {\\n                            top -= height - targetHeight;\\n                            tAttachment.top = 'bottom';\\n\\n                            eAttachment.top = 'bottom';\\n                        }\\n                    }\\n\\n                    if (tAttachment.top === 'bottom') {\\n                        if (eAttachment.top === 'top' && top + height > bounds[3]) {\\n                            top -= targetHeight;\\n                            tAttachment.top = 'top';\\n\\n                            top -= height;\\n                            eAttachment.top = 'bottom';\\n                        } else if (eAttachment.top === 'bottom' && top < bounds[1] && top + (height * 2 - targetHeight) <= bounds[3]) {\\n                            top += height - targetHeight;\\n                            tAttachment.top = 'top';\\n\\n                            eAttachment.top = 'top';\\n                        }\\n                    }\\n\\n                    if (tAttachment.top === 'middle') {\\n                        if (top + height > bounds[3] && eAttachment.top === 'top') {\\n                            top -= height;\\n                            eAttachment.top = 'bottom';\\n                        } else if (top < bounds[1] && eAttachment.top === 'bottom') {\\n                            top += height;\\n                            eAttachment.top = 'top';\\n                        }\\n                    }\\n                }\\n\\n                if (changeAttachX === 'target' || changeAttachX === 'both') {\\n                    if (left < bounds[0] && tAttachment.left === 'left') {\\n                        left += targetWidth;\\n                        tAttachment.left = 'right';\\n                    }\\n\\n                    if (left + width > bounds[2] && tAttachment.left === 'right') {\\n                        left -= targetWidth;\\n                        tAttachment.left = 'left';\\n                    }\\n                }\\n\\n                if (changeAttachX === 'together') {\\n                    if (left < bounds[0] && tAttachment.left === 'left') {\\n                        if (eAttachment.left === 'right') {\\n                            left += targetWidth;\\n                            tAttachment.left = 'right';\\n\\n                            left += width;\\n                            eAttachment.left = 'left';\\n                        } else if (eAttachment.left === 'left') {\\n                            left += targetWidth;\\n                            tAttachment.left = 'right';\\n\\n                            left -= width;\\n                            eAttachment.left = 'right';\\n                        }\\n                    } else if (left + width > bounds[2] && tAttachment.left === 'right') {\\n                        if (eAttachment.left === 'left') {\\n                            left -= targetWidth;\\n                            tAttachment.left = 'left';\\n\\n                            left -= width;\\n                            eAttachment.left = 'right';\\n                        } else if (eAttachment.left === 'right') {\\n                            left -= targetWidth;\\n                            tAttachment.left = 'left';\\n\\n                            left += width;\\n                            eAttachment.left = 'left';\\n                        }\\n                    } else if (tAttachment.left === 'center') {\\n                        if (left + width > bounds[2] && eAttachment.left === 'left') {\\n                            left -= width;\\n                            eAttachment.left = 'right';\\n                        } else if (left < bounds[0] && eAttachment.left === 'right') {\\n                            left += width;\\n                            eAttachment.left = 'left';\\n                        }\\n                    }\\n                }\\n\\n                if (changeAttachY === 'element' || changeAttachY === 'both') {\\n                    if (top < bounds[1] && eAttachment.top === 'bottom') {\\n                        top += height;\\n                        eAttachment.top = 'top';\\n                    }\\n\\n                    if (top + height > bounds[3] && eAttachment.top === 'top') {\\n                        top -= height;\\n                        eAttachment.top = 'bottom';\\n                    }\\n                }\\n\\n                if (changeAttachX === 'element' || changeAttachX === 'both') {\\n                    if (left < bounds[0]) {\\n                        if (eAttachment.left === 'right') {\\n                            left += width;\\n                            eAttachment.left = 'left';\\n                        } else if (eAttachment.left === 'center') {\\n                            left += width / 2;\\n                            eAttachment.left = 'left';\\n                        }\\n                    }\\n\\n                    if (left + width > bounds[2]) {\\n                        if (eAttachment.left === 'left') {\\n                            left -= width;\\n                            eAttachment.left = 'right';\\n                        } else if (eAttachment.left === 'center') {\\n                            left -= width / 2;\\n                            eAttachment.left = 'right';\\n                        }\\n                    }\\n                }\\n\\n                if (typeof pin === 'string') {\\n                    pin = pin.split(',').map(function (p) {\\n                        return p.trim();\\n                    });\\n                } else if (pin === true) {\\n                    pin = ['top', 'left', 'right', 'bottom'];\\n                }\\n\\n                pin = pin || [];\\n\\n                var pinned = [];\\n                var oob = [];\\n\\n                if (top < bounds[1]) {\\n                    if (pin.indexOf('top') >= 0) {\\n                        top = bounds[1];\\n                        pinned.push('top');\\n                    } else {\\n                        oob.push('top');\\n                    }\\n                }\\n\\n                if (top + height > bounds[3]) {\\n                    if (pin.indexOf('bottom') >= 0) {\\n                        top = bounds[3] - height;\\n                        pinned.push('bottom');\\n                    } else {\\n                        oob.push('bottom');\\n                    }\\n                }\\n\\n                if (left < bounds[0]) {\\n                    if (pin.indexOf('left') >= 0) {\\n                        left = bounds[0];\\n                        pinned.push('left');\\n                    } else {\\n                        oob.push('left');\\n                    }\\n                }\\n\\n                if (left + width > bounds[2]) {\\n                    if (pin.indexOf('right') >= 0) {\\n                        left = bounds[2] - width;\\n                        pinned.push('right');\\n                    } else {\\n                        oob.push('right');\\n                    }\\n                }\\n\\n                if (pinned.length) {\\n                    (function () {\\n                        var pinnedClass = undefined;\\n                        if (typeof _this.options.pinnedClass !== 'undefined') {\\n                            pinnedClass = _this.options.pinnedClass;\\n                        } else {\\n                            pinnedClass = _this.getClass('pinned');\\n                        }\\n\\n                        addClasses.push(pinnedClass);\\n                        pinned.forEach(function (side) {\\n                            addClasses.push(pinnedClass + '-' + side);\\n                        });\\n                    })();\\n                }\\n\\n                if (oob.length) {\\n                    (function () {\\n                        var oobClass = undefined;\\n                        if (typeof _this.options.outOfBoundsClass !== 'undefined') {\\n                            oobClass = _this.options.outOfBoundsClass;\\n                        } else {\\n                            oobClass = _this.getClass('out-of-bounds');\\n                        }\\n\\n                        addClasses.push(oobClass);\\n                        oob.forEach(function (side) {\\n                            addClasses.push(oobClass + '-' + side);\\n                        });\\n                    })();\\n                }\\n\\n                if (pinned.indexOf('left') >= 0 || pinned.indexOf('right') >= 0) {\\n                    eAttachment.left = tAttachment.left = false;\\n                }\\n                if (pinned.indexOf('top') >= 0 || pinned.indexOf('bottom') >= 0) {\\n                    eAttachment.top = tAttachment.top = false;\\n                }\\n\\n                if (tAttachment.top !== targetAttachment.top || tAttachment.left !== targetAttachment.left || eAttachment.top !== _this.attachment.top || eAttachment.left !== _this.attachment.left) {\\n                    _this.updateAttachClasses(eAttachment, tAttachment);\\n                    _this.trigger('update', {\\n                        attachment: eAttachment,\\n                        targetAttachment: tAttachment\\n                    });\\n                }\\n            });\\n\\n            defer(function () {\\n                if (!(_this.options.addTargetClasses === false)) {\\n                    updateClasses(_this.target, addClasses, allClasses);\\n                }\\n                updateClasses(_this.element, addClasses, allClasses);\\n            });\\n\\n            return {top: top, left: left};\\n        }\\n    });\\n    /* globals TetherBase */\\n\\n    'use strict';\\n\\n    var _TetherBase$Utils = TetherBase.Utils;\\n    var getBounds = _TetherBase$Utils.getBounds;\\n    var updateClasses = _TetherBase$Utils.updateClasses;\\n    var defer = _TetherBase$Utils.defer;\\n\\n    TetherBase.modules.push({\\n        position: function position(_ref) {\\n            var _this = this;\\n\\n            var top = _ref.top;\\n            var left = _ref.left;\\n\\n            var _cache = this.cache('element-bounds', function () {\\n                return getBounds(_this.element);\\n            });\\n\\n            var height = _cache.height;\\n            var width = _cache.width;\\n\\n            var targetPos = this.getTargetBounds();\\n\\n            var bottom = top + height;\\n            var right = left + width;\\n\\n            var abutted = [];\\n            if (top <= targetPos.bottom && bottom >= targetPos.top) {\\n                ['left', 'right'].forEach(function (side) {\\n                    var targetPosSide = targetPos[side];\\n                    if (targetPosSide === left || targetPosSide === right) {\\n                        abutted.push(side);\\n                    }\\n                });\\n            }\\n\\n            if (left <= targetPos.right && right >= targetPos.left) {\\n                ['top', 'bottom'].forEach(function (side) {\\n                    var targetPosSide = targetPos[side];\\n                    if (targetPosSide === top || targetPosSide === bottom) {\\n                        abutted.push(side);\\n                    }\\n                });\\n            }\\n\\n            var allClasses = [];\\n            var addClasses = [];\\n\\n            var sides = ['left', 'top', 'right', 'bottom'];\\n            allClasses.push(this.getClass('abutted'));\\n            sides.forEach(function (side) {\\n                allClasses.push(_this.getClass('abutted') + '-' + side);\\n            });\\n\\n            if (abutted.length) {\\n                addClasses.push(this.getClass('abutted'));\\n            }\\n\\n            abutted.forEach(function (side) {\\n                addClasses.push(_this.getClass('abutted') + '-' + side);\\n            });\\n\\n            defer(function () {\\n                if (!(_this.options.addTargetClasses === false)) {\\n                    updateClasses(_this.target, addClasses, allClasses);\\n                }\\n                updateClasses(_this.element, addClasses, allClasses);\\n            });\\n\\n            return true;\\n        }\\n    });\\n    /* globals TetherBase */\\n\\n    'use strict';\\n\\n    var _slicedToArray = (function () {\\n        function sliceIterator(arr, i) {\\n            var _arr = [];\\n            var _n = true;\\n            var _d = false;\\n            var _e = undefined;\\n            try {\\n                for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\\n                    _arr.push(_s.value);\\n                    if (i && _arr.length === i) break;\\n                }\\n            } catch (err) {\\n                _d = true;\\n                _e = err;\\n            } finally {\\n                try {\\n                    if (!_n && _i['return']) _i['return']();\\n                } finally {\\n                    if (_d) throw _e;\\n                }\\n            }\\n            return _arr;\\n        }\\n\\n        return function (arr, i) {\\n            if (Array.isArray(arr)) {\\n                return arr;\\n            } else if (Symbol.iterator in Object(arr)) {\\n                return sliceIterator(arr, i);\\n            } else {\\n                throw new TypeError('Invalid attempt to destructure non-iterable instance');\\n            }\\n        };\\n    })();\\n\\n    TetherBase.modules.push({\\n        position: function position(_ref) {\\n            var top = _ref.top;\\n            var left = _ref.left;\\n\\n            if (!this.options.shift) {\\n                return;\\n            }\\n\\n            var shift = this.options.shift;\\n            if (typeof this.options.shift === 'function') {\\n                shift = this.options.shift.call(this, {top: top, left: left});\\n            }\\n\\n            var shiftTop = undefined,\\n                shiftLeft = undefined;\\n            if (typeof shift === 'string') {\\n                shift = shift.split(' ');\\n                shift[1] = shift[1] || shift[0];\\n\\n                var _shift = shift;\\n\\n                var _shift2 = _slicedToArray(_shift, 2);\\n\\n                shiftTop = _shift2[0];\\n                shiftLeft = _shift2[1];\\n\\n                shiftTop = parseFloat(shiftTop, 10);\\n                shiftLeft = parseFloat(shiftLeft, 10);\\n            } else {\\n                shiftTop = shift.top;\\n                shiftLeft = shift.left;\\n            }\\n\\n            top += shiftTop;\\n            left += shiftLeft;\\n\\n            return {top: top, left: left};\\n        }\\n    });\\n    return Tether;\\n\\n}));\\n\\n/* Javascript plotting library for jQuery, version 0.8.3.\\n\\n Copyright (c) 2007-2014 IOLA and Ole Laursen.\\n Licensed under the MIT license.\\n\\n */\\n\\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\\n// for convenience\\n\\n/* Plugin for jQuery for working with colors.\\n *\\n * Version 1.1.\\n *\\n * Inspiration from jQuery color animation plugin by John Resig.\\n *\\n * Released under the MIT license by Ole Laursen, October 2009.\\n *\\n * Examples:\\n *\\n *   $.color.parse(\\\"#fff\\\").scale('rgb', 0.25).add('a', -0.5).toString()\\n *   var c = $.color.extract($(\\\"#mydiv\\\"), 'background-color');\\n *   console.log(c.r, c.g, c.b, c.a);\\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \\\"rgba(100,50,25,0.4)\\\"\\n *\\n * Note that .scale() and .add() return the same modified object\\n * instead of making a new one.\\n *\\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\\n * produce a color rather than just crashing.\\n */\\n(function ($) {\\n    $.color = {};\\n    $.color.make = function (r, g, b, a) {\\n        var o = {};\\n        o.r = r || 0;\\n        o.g = g || 0;\\n        o.b = b || 0;\\n        o.a = a != null ? a : 1;\\n        o.add = function (c, d) {\\n            for (var i = 0; i < c.length; ++i)o[c.charAt(i)] += d;\\n            return o.normalize()\\n        };\\n        o.scale = function (c, f) {\\n            for (var i = 0; i < c.length; ++i)o[c.charAt(i)] *= f;\\n            return o.normalize()\\n        };\\n        o.toString = function () {\\n            if (o.a >= 1) {\\n                return \\\"rgb(\\\" + [o.r, o.g, o.b].join(\\\",\\\") + \\\")\\\"\\n            } else {\\n                return \\\"rgba(\\\" + [o.r, o.g, o.b, o.a].join(\\\",\\\") + \\\")\\\"\\n            }\\n        };\\n        o.normalize = function () {\\n            function clamp(min, value, max) {\\n                return value < min ? min : value > max ? max : value\\n            }\\n\\n            o.r = clamp(0, parseInt(o.r), 255);\\n            o.g = clamp(0, parseInt(o.g), 255);\\n            o.b = clamp(0, parseInt(o.b), 255);\\n            o.a = clamp(0, o.a, 1);\\n            return o\\n        };\\n        o.clone = function () {\\n            return $.color.make(o.r, o.b, o.g, o.a)\\n        };\\n        return o.normalize()\\n    };\\n    $.color.extract = function (elem, css) {\\n        var c;\\n        do {\\n            c = elem.css(css).toLowerCase();\\n            if (c != \\\"\\\" && c != \\\"transparent\\\")break;\\n            elem = elem.parent()\\n        } while (elem.length && !$.nodeName(elem.get(0), \\\"body\\\"));\\n        if (c == \\\"rgba(0, 0, 0, 0)\\\") c = \\\"transparent\\\";\\n        return $.color.parse(c)\\n    };\\n    $.color.parse = function (str) {\\n        var res, m = $.color.make;\\n        if (res = /rgb\\\\(\\\\s*([0-9]{1,3})\\\\s*,\\\\s*([0-9]{1,3})\\\\s*,\\\\s*([0-9]{1,3})\\\\s*\\\\)/.exec(str))return m(parseInt(res[1], 10), parseInt(res[2], 10), parseInt(res[3], 10));\\n        if (res = /rgba\\\\(\\\\s*([0-9]{1,3})\\\\s*,\\\\s*([0-9]{1,3})\\\\s*,\\\\s*([0-9]{1,3})\\\\s*,\\\\s*([0-9]+(?:\\\\.[0-9]+)?)\\\\s*\\\\)/.exec(str))return m(parseInt(res[1], 10), parseInt(res[2], 10), parseInt(res[3], 10), parseFloat(res[4]));\\n        if (res = /rgb\\\\(\\\\s*([0-9]+(?:\\\\.[0-9]+)?)\\\\%\\\\s*,\\\\s*([0-9]+(?:\\\\.[0-9]+)?)\\\\%\\\\s*,\\\\s*([0-9]+(?:\\\\.[0-9]+)?)\\\\%\\\\s*\\\\)/.exec(str))return m(parseFloat(res[1]) * 2.55, parseFloat(res[2]) * 2.55, parseFloat(res[3]) * 2.55);\\n        if (res = /rgba\\\\(\\\\s*([0-9]+(?:\\\\.[0-9]+)?)\\\\%\\\\s*,\\\\s*([0-9]+(?:\\\\.[0-9]+)?)\\\\%\\\\s*,\\\\s*([0-9]+(?:\\\\.[0-9]+)?)\\\\%\\\\s*,\\\\s*([0-9]+(?:\\\\.[0-9]+)?)\\\\s*\\\\)/.exec(str))return m(parseFloat(res[1]) * 2.55, parseFloat(res[2]) * 2.55, parseFloat(res[3]) * 2.55, parseFloat(res[4]));\\n        if (res = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1], 16), parseInt(res[2], 16), parseInt(res[3], 16));\\n        if (res = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1] + res[1], 16), parseInt(res[2] + res[2], 16), parseInt(res[3] + res[3], 16));\\n        var name = $.trim(str).toLowerCase();\\n        if (name == \\\"transparent\\\")return m(255, 255, 255, 0); else {\\n            res = lookupColors[name] || [0, 0, 0];\\n            return m(res[0], res[1], res[2])\\n        }\\n    };\\n    var lookupColors = {\\n        aqua: [0, 255, 255],\\n        azure: [240, 255, 255],\\n        beige: [245, 245, 220],\\n        black: [0, 0, 0],\\n        blue: [0, 0, 255],\\n        brown: [165, 42, 42],\\n        cyan: [0, 255, 255],\\n        darkblue: [0, 0, 139],\\n        darkcyan: [0, 139, 139],\\n        darkgrey: [169, 169, 169],\\n        darkgreen: [0, 100, 0],\\n        darkkhaki: [189, 183, 107],\\n        darkmagenta: [139, 0, 139],\\n        darkolivegreen: [85, 107, 47],\\n        darkorange: [255, 140, 0],\\n        darkorchid: [153, 50, 204],\\n        darkred: [139, 0, 0],\\n        darksalmon: [233, 150, 122],\\n        darkviolet: [148, 0, 211],\\n        fuchsia: [255, 0, 255],\\n        gold: [255, 215, 0],\\n        green: [0, 128, 0],\\n        indigo: [75, 0, 130],\\n        khaki: [240, 230, 140],\\n        lightblue: [173, 216, 230],\\n        lightcyan: [224, 255, 255],\\n        lightgreen: [144, 238, 144],\\n        lightgrey: [211, 211, 211],\\n        lightpink: [255, 182, 193],\\n        lightyellow: [255, 255, 224],\\n        lime: [0, 255, 0],\\n        magenta: [255, 0, 255],\\n        maroon: [128, 0, 0],\\n        navy: [0, 0, 128],\\n        olive: [128, 128, 0],\\n        orange: [255, 165, 0],\\n        pink: [255, 192, 203],\\n        purple: [128, 0, 128],\\n        violet: [128, 0, 128],\\n        red: [255, 0, 0],\\n        silver: [192, 192, 192],\\n        white: [255, 255, 255],\\n        yellow: [255, 255, 0]\\n    }\\n})(jQuery);\\n\\n// the actual Flot code\\n(function ($) {\\n\\n    // Cache the prototype hasOwnProperty for faster access\\n\\n    var hasOwnProperty = Object.prototype.hasOwnProperty;\\n\\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\\n    // operation produces the same effect as detach, i.e. removing the element\\n    // without touching its jQuery data.\\n\\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\\n\\n    if (!$.fn.detach) {\\n        $.fn.detach = function () {\\n            return this.each(function () {\\n                if (this.parentNode) {\\n                    this.parentNode.removeChild(this);\\n                }\\n            });\\n        };\\n    }\\n\\n    ///////////////////////////////////////////////////////////////////////////\\n    // The Canvas object is a wrapper around an HTML5 <canvas> tag.\\n    //\\n    // @constructor\\n    // @param {string} cls List of classes to apply to the canvas.\\n    // @param {element} container Element onto which to append the canvas.\\n    //\\n    // Requiring a container is a little iffy, but unfortunately canvas\\n    // operations don't work unless the canvas is attached to the DOM.\\n\\n    function Canvas(cls, container) {\\n\\n        var element = container.children(\\\".\\\" + cls)[0];\\n\\n        if (element == null) {\\n\\n            element = document.createElement(\\\"canvas\\\");\\n            element.className = cls;\\n\\n            $(element).css({direction: \\\"ltr\\\", position: \\\"absolute\\\", left: 0, top: 0})\\n                .appendTo(container);\\n\\n            // If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\\n\\n            if (!element.getContext) {\\n                if (window.G_vmlCanvasManager) {\\n                    element = window.G_vmlCanvasManager.initElement(element);\\n                } else {\\n                    throw new Error(\\\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\\\");\\n                }\\n            }\\n        }\\n\\n        this.element = element;\\n\\n        var context = this.context = element.getContext(\\\"2d\\\");\\n\\n        // Determine the screen's ratio of physical to device-independent\\n        // pixels.  This is the ratio between the canvas width that the browser\\n        // advertises and the number of pixels actually present in that space.\\n\\n        // The iPhone 4, for example, has a device-independent width of 320px,\\n        // but its screen is actually 640px wide.  It therefore has a pixel\\n        // ratio of 2, while most normal devices have a ratio of 1.\\n\\n        var devicePixelRatio = window.devicePixelRatio || 1,\\n            backingStoreRatio =\\n                context.webkitBackingStorePixelRatio ||\\n                context.mozBackingStorePixelRatio ||\\n                context.msBackingStorePixelRatio ||\\n                context.oBackingStorePixelRatio ||\\n                context.backingStorePixelRatio || 1;\\n\\n        this.pixelRatio = devicePixelRatio / backingStoreRatio;\\n\\n        // Size the canvas to match the internal dimensions of its container\\n\\n        this.resize(container.width(), container.height());\\n\\n        // Collection of HTML div layers for text overlaid onto the canvas\\n\\n        this.textContainer = null;\\n        this.text = {};\\n\\n        // Cache of text fragments and metrics, so we can avoid expensively\\n        // re-calculating them when the plot is re-rendered in a loop.\\n\\n        this._textCache = {};\\n    }\\n\\n    // Resizes the canvas to the given dimensions.\\n    //\\n    // @param {number} width New width of the canvas, in pixels.\\n    // @param {number} width New height of the canvas, in pixels.\\n\\n    Canvas.prototype.resize = function (width, height) {\\n\\n        if (width <= 0 || height <= 0) {\\n            throw new Error(\\\"Invalid dimensions for plot, width = \\\" + width + \\\", height = \\\" + height);\\n        }\\n\\n        var element = this.element,\\n            context = this.context,\\n            pixelRatio = this.pixelRatio;\\n\\n        // Resize the canvas, increasing its density based on the display's\\n        // pixel ratio; basically giving it more pixels without increasing the\\n        // size of its element, to take advantage of the fact that retina\\n        // displays have that many more pixels in the same advertised space.\\n\\n        // Resizing should reset the state (excanvas seems to be buggy though)\\n\\n        if (this.width != width) {\\n            element.width = width * pixelRatio;\\n            element.style.width = width + \\\"px\\\";\\n            this.width = width;\\n        }\\n\\n        if (this.height != height) {\\n            element.height = height * pixelRatio;\\n            element.style.height = height + \\\"px\\\";\\n            this.height = height;\\n        }\\n\\n        // Save the context, so we can reset in case we get replotted.  The\\n        // restore ensure that we're really back at the initial state, and\\n        // should be safe even if we haven't saved the initial state yet.\\n\\n        context.restore();\\n        context.save();\\n\\n        // Scale the coordinate space to match the display density; so even though we\\n        // may have twice as many pixels, we still want lines and other drawing to\\n        // appear at the same size; the extra pixels will just make them crisper.\\n\\n        context.scale(pixelRatio, pixelRatio);\\n    };\\n\\n    // Clears the entire canvas area, not including any overlaid HTML text\\n\\n    Canvas.prototype.clear = function () {\\n        this.context.clearRect(0, 0, this.width, this.height);\\n    };\\n\\n    // Finishes rendering the canvas, including managing the text overlay.\\n\\n    Canvas.prototype.render = function () {\\n\\n        var cache = this._textCache;\\n\\n        // For each text layer, add elements marked as active that haven't\\n        // already been rendered, and remove those that are no longer active.\\n\\n        for (var layerKey in cache) {\\n            if (hasOwnProperty.call(cache, layerKey)) {\\n\\n                var layer = this.getTextLayer(layerKey),\\n                    layerCache = cache[layerKey];\\n\\n                layer.hide();\\n\\n                for (var styleKey in layerCache) {\\n                    if (hasOwnProperty.call(layerCache, styleKey)) {\\n                        var styleCache = layerCache[styleKey];\\n                        for (var key in styleCache) {\\n                            if (hasOwnProperty.call(styleCache, key)) {\\n\\n                                var positions = styleCache[key].positions;\\n\\n                                for (var i = 0, position; position = positions[i]; i++) {\\n                                    if (position.active) {\\n                                        if (!position.rendered) {\\n                                            layer.append(position.element);\\n                                            position.rendered = true;\\n                                        }\\n                                    } else {\\n                                        positions.splice(i--, 1);\\n                                        if (position.rendered) {\\n                                            position.element.detach();\\n                                        }\\n                                    }\\n                                }\\n\\n                                if (positions.length == 0) {\\n                                    delete styleCache[key];\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n\\n                layer.show();\\n            }\\n        }\\n    };\\n\\n    // Creates (if necessary) and returns the text overlay container.\\n    //\\n    // @param {string} classes String of space-separated CSS classes used to\\n    //     uniquely identify the text layer.\\n    // @return {object} The jQuery-wrapped text-layer div.\\n\\n    Canvas.prototype.getTextLayer = function (classes) {\\n\\n        var layer = this.text[classes];\\n\\n        // Create the text layer if it doesn't exist\\n\\n        if (layer == null) {\\n\\n            // Create the text layer container, if it doesn't exist\\n\\n            if (this.textContainer == null) {\\n                this.textContainer = $(\\\"<div class='flot-text'></div>\\\")\\n                    .css({\\n                        position: \\\"absolute\\\",\\n                        top: 0,\\n                        left: 0,\\n                        bottom: 0,\\n                        right: 0,\\n                        'font-size': \\\"smaller\\\",\\n                        color: \\\"#545454\\\"\\n                    })\\n                    .insertAfter(this.element);\\n            }\\n\\n            layer = this.text[classes] = $(\\\"<div></div>\\\")\\n                .addClass(classes)\\n                .css({\\n                    position: \\\"absolute\\\",\\n                    top: 0,\\n                    left: 0,\\n                    bottom: 0,\\n                    right: 0\\n                })\\n                .appendTo(this.textContainer);\\n        }\\n\\n        return layer;\\n    };\\n\\n    // Creates (if necessary) and returns a text info object.\\n    //\\n    // The object looks like this:\\n    //\\n    // {\\n    //     width: Width of the text's wrapper div.\\n    //     height: Height of the text's wrapper div.\\n    //     element: The jQuery-wrapped HTML div containing the text.\\n    //     positions: Array of positions at which this text is drawn.\\n    // }\\n    //\\n    // The positions array contains objects that look like this:\\n    //\\n    // {\\n    //     active: Flag indicating whether the text should be visible.\\n    //     rendered: Flag indicating whether the text is currently visible.\\n    //     element: The jQuery-wrapped HTML div containing the text.\\n    //     x: X coordinate at which to draw the text.\\n    //     y: Y coordinate at which to draw the text.\\n    // }\\n    //\\n    // Each position after the first receives a clone of the original element.\\n    //\\n    // The idea is that that the width, height, and general 'identity' of the\\n    // text is constant no matter where it is placed; the placements are a\\n    // secondary property.\\n    //\\n    // Canvas maintains a cache of recently-used text info objects; getTextInfo\\n    // either returns the cached element or creates a new entry.\\n    //\\n    // @param {string} layer A string of space-separated CSS classes uniquely\\n    //     identifying the layer containing this text.\\n    // @param {string} text Text string to retrieve info for.\\n    // @param {(string|object)=} font Either a string of space-separated CSS\\n    //     classes or a font-spec object, defining the text's font and style.\\n    // @param {number=} angle Angle at which to rotate the text, in degrees.\\n    //     Angle is currently unused, it will be implemented in the future.\\n    // @param {number=} width Maximum width of the text before it wraps.\\n    // @return {object} a text info object.\\n\\n    Canvas.prototype.getTextInfo = function (layer, text, font, angle, width) {\\n\\n        var textStyle, layerCache, styleCache, info;\\n\\n        // Cast the value to a string, in case we were given a number or such\\n\\n        text = \\\"\\\" + text;\\n\\n        // If the font is a font-spec object, generate a CSS font definition\\n\\n        if (typeof font === \\\"object\\\") {\\n            textStyle = font.style + \\\" \\\" + font.variant + \\\" \\\" + font.weight + \\\" \\\" + font.size + \\\"px/\\\" + font.lineHeight + \\\"px \\\" + font.family;\\n        } else {\\n            textStyle = font;\\n        }\\n\\n        // Retrieve (or create) the cache for the text's layer and styles\\n\\n        layerCache = this._textCache[layer];\\n\\n        if (layerCache == null) {\\n            layerCache = this._textCache[layer] = {};\\n        }\\n\\n        styleCache = layerCache[textStyle];\\n\\n        if (styleCache == null) {\\n            styleCache = layerCache[textStyle] = {};\\n        }\\n\\n        info = styleCache[text];\\n\\n        // If we can't find a matching element in our cache, create a new one\\n\\n        if (info == null) {\\n\\n            var element = $(\\\"<div></div>\\\").html(text)\\n                .css({\\n                    position: \\\"absolute\\\",\\n                    'max-width': width,\\n                    top: -9999\\n                })\\n                .appendTo(this.getTextLayer(layer));\\n\\n            if (typeof font === \\\"object\\\") {\\n                element.css({\\n                    font: textStyle,\\n                    color: font.color\\n                });\\n            } else if (typeof font === \\\"string\\\") {\\n                element.addClass(font);\\n            }\\n\\n            info = styleCache[text] = {\\n                width: element.outerWidth(true),\\n                height: element.outerHeight(true),\\n                element: element,\\n                positions: []\\n            };\\n\\n            element.detach();\\n        }\\n\\n        return info;\\n    };\\n\\n    // Adds a text string to the canvas text overlay.\\n    //\\n    // The text isn't drawn immediately; it is marked as rendering, which will\\n    // result in its addition to the canvas on the next render pass.\\n    //\\n    // @param {string} layer A string of space-separated CSS classes uniquely\\n    //     identifying the layer containing this text.\\n    // @param {number} x X coordinate at which to draw the text.\\n    // @param {number} y Y coordinate at which to draw the text.\\n    // @param {string} text Text string to draw.\\n    // @param {(string|object)=} font Either a string of space-separated CSS\\n    //     classes or a font-spec object, defining the text's font and style.\\n    // @param {number=} angle Angle at which to rotate the text, in degrees.\\n    //     Angle is currently unused, it will be implemented in the future.\\n    // @param {number=} width Maximum width of the text before it wraps.\\n    // @param {string=} halign Horizontal alignment of the text; either \\\"left\\\",\\n    //     \\\"center\\\" or \\\"right\\\".\\n    // @param {string=} valign Vertical alignment of the text; either \\\"top\\\",\\n    //     \\\"middle\\\" or \\\"bottom\\\".\\n\\n    Canvas.prototype.addText = function (layer, x, y, text, font, angle, width, halign, valign) {\\n\\n        var info = this.getTextInfo(layer, text, font, angle, width),\\n            positions = info.positions;\\n\\n        // Tweak the div's position to match the text's alignment\\n\\n        if (halign == \\\"center\\\") {\\n            x -= info.width / 2;\\n        } else if (halign == \\\"right\\\") {\\n            x -= info.width;\\n        }\\n\\n        if (valign == \\\"middle\\\") {\\n            y -= info.height / 2;\\n        } else if (valign == \\\"bottom\\\") {\\n            y -= info.height;\\n        }\\n\\n        // Determine whether this text already exists at this position.\\n        // If so, mark it for inclusion in the next render pass.\\n\\n        for (var i = 0, position; position = positions[i]; i++) {\\n            if (position.x == x && position.y == y) {\\n                position.active = true;\\n                return;\\n            }\\n        }\\n\\n        // If the text doesn't exist at this position, create a new entry\\n\\n        // For the very first position we'll re-use the original element,\\n        // while for subsequent ones we'll clone it.\\n\\n        position = {\\n            active: true,\\n            rendered: false,\\n            element: positions.length ? info.element.clone() : info.element,\\n            x: x,\\n            y: y\\n        };\\n\\n        positions.push(position);\\n\\n        // Move the element to its final position within the container\\n\\n        position.element.css({\\n            top: Math.round(y),\\n            left: Math.round(x),\\n            'text-align': halign\\t// In case the text wraps\\n        });\\n    };\\n\\n    // Removes one or more text strings from the canvas text overlay.\\n    //\\n    // If no parameters are given, all text within the layer is removed.\\n    //\\n    // Note that the text is not immediately removed; it is simply marked as\\n    // inactive, which will result in its removal on the next render pass.\\n    // This avoids the performance penalty for 'clear and redraw' behavior,\\n    // where we potentially get rid of all text on a layer, but will likely\\n    // add back most or all of it later, as when redrawing axes, for example.\\n    //\\n    // @param {string} layer A string of space-separated CSS classes uniquely\\n    //     identifying the layer containing this text.\\n    // @param {number=} x X coordinate of the text.\\n    // @param {number=} y Y coordinate of the text.\\n    // @param {string=} text Text string to remove.\\n    // @param {(string|object)=} font Either a string of space-separated CSS\\n    //     classes or a font-spec object, defining the text's font and style.\\n    // @param {number=} angle Angle at which the text is rotated, in degrees.\\n    //     Angle is currently unused, it will be implemented in the future.\\n\\n    Canvas.prototype.removeText = function (layer, x, y, text, font, angle) {\\n        if (text == null) {\\n            var layerCache = this._textCache[layer];\\n            if (layerCache != null) {\\n                for (var styleKey in layerCache) {\\n                    if (hasOwnProperty.call(layerCache, styleKey)) {\\n                        var styleCache = layerCache[styleKey];\\n                        for (var key in styleCache) {\\n                            if (hasOwnProperty.call(styleCache, key)) {\\n                                var positions = styleCache[key].positions;\\n                                for (var i = 0, position; position = positions[i]; i++) {\\n                                    position.active = false;\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n            }\\n        } else {\\n            var positions = this.getTextInfo(layer, text, font, angle).positions;\\n            for (var i = 0, position; position = positions[i]; i++) {\\n                if (position.x == x && position.y == y) {\\n                    position.active = false;\\n                }\\n            }\\n        }\\n    };\\n\\n    ///////////////////////////////////////////////////////////////////////////\\n    // The top-level container for the entire plot.\\n\\n    function Plot(placeholder, data_, options_, plugins) {\\n        // data is on the form:\\n        //   [ series1, series2 ... ]\\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \\\"some label\\\", ... }\\n\\n        var series = [],\\n            options = {\\n                // the color theme used for graphs\\n                colors: [\\\"#edc240\\\", \\\"#afd8f8\\\", \\\"#cb4b4b\\\", \\\"#4da74d\\\", \\\"#9440ed\\\"],\\n                legend: {\\n                    show: true,\\n                    noColumns: 1, // number of colums in legend table\\n                    labelFormatter: null, // fn: string -> string\\n                    labelBoxBorderColor: \\\"#ccc\\\", // border color for the little label boxes\\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\\n                    position: \\\"ne\\\", // position of default legend container within plot\\n                    margin: 5, // distance from grid edge to default legend container within plot\\n                    backgroundColor: null, // null means auto-detect\\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\\n                    sorted: null    // default to no legend sorting\\n                },\\n                xaxis: {\\n                    show: null, // null = auto-detect, true = always, false = never\\n                    position: \\\"bottom\\\", // or \\\"top\\\"\\n                    mode: null, // null or \\\"time\\\"\\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \\\"italic\\\", weight: \\\"bold\\\", family: \\\"sans-serif\\\", variant: \\\"small-caps\\\" }\\n                    color: null, // base color, labels, ticks\\n                    tickColor: null, // possibly different color of ticks, e.g. \\\"rgba(0,0,0,0.15)\\\"\\n                    transform: null, // null or f: number -> number to transform axis\\n                    inverseTransform: null, // if transform is set, this should be the inverse function\\n                    min: null, // min. value to show, null means set automatically\\n                    max: null, // max. value to show, null means set automatically\\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\\n                    ticks: null, // either [1, 3] or [[1, \\\"a\\\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\\n                    tickFormatter: null, // fn: number -> string\\n                    labelWidth: null, // size of tick labels in pixels\\n                    labelHeight: null,\\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\\n                    tickLength: null, // size in pixels of ticks, or \\\"full\\\" for whole line\\n                    alignTicksWithAxis: null, // axis number or null for no sync\\n                    tickDecimals: null, // no. of decimals, null means auto\\n                    tickSize: null, // number or [number, \\\"unit\\\"]\\n                    minTickSize: null // number or [number, \\\"unit\\\"]\\n                },\\n                yaxis: {\\n                    autoscaleMargin: 0.02,\\n                    position: \\\"left\\\" // or \\\"right\\\"\\n                },\\n                xaxes: [],\\n                yaxes: [],\\n                series: {\\n                    points: {\\n                        show: false,\\n                        radius: 3,\\n                        lineWidth: 2, // in pixels\\n                        fill: true,\\n                        fillColor: \\\"#ffffff\\\",\\n                        symbol: \\\"circle\\\" // or callback\\n                    },\\n                    lines: {\\n                        // we don't put in show: false so we can see\\n                        // whether lines were actively disabled\\n                        lineWidth: 2, // in pixels\\n                        fill: false,\\n                        fillColor: null,\\n                        steps: false\\n                        // Omit 'zero', so we can later default its value to\\n                        // match that of the 'fill' option.\\n                    },\\n                    bars: {\\n                        show: false,\\n                        lineWidth: 2, // in pixels\\n                        barWidth: 1, // in units of the x axis\\n                        fill: true,\\n                        fillColor: null,\\n                        align: \\\"left\\\", // \\\"left\\\", \\\"right\\\", or \\\"center\\\"\\n                        horizontal: false,\\n                        zero: true\\n                    },\\n                    shadowSize: 3,\\n                    highlightColor: null\\n                },\\n                grid: {\\n                    show: true,\\n                    aboveData: false,\\n                    color: \\\"#545454\\\", // primary color used for outline and labels\\n                    backgroundColor: null, // null for transparent, else color\\n                    borderColor: null, // set if different from the grid color\\n                    tickColor: null, // color for the ticks, e.g. \\\"rgba(0,0,0,0.15)\\\"\\n                    margin: 0, // distance from the canvas edge to the grid\\n                    labelMargin: 5, // in pixels\\n                    axisMargin: 8, // in pixels\\n                    borderWidth: 2, // in pixels\\n                    minBorderMargin: null, // in pixels, null means taken from points radius\\n                    markings: null, // array of ranges or fn: axes -> array of ranges\\n                    markingsColor: \\\"#f4f4f4\\\",\\n                    markingsLineWidth: 2,\\n                    // interactive stuff\\n                    clickable: false,\\n                    hoverable: false,\\n                    autoHighlight: true, // highlight in case mouse is near\\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\\n                },\\n                interaction: {\\n                    redrawOverlayInterval: 1000 / 60 // time between updates, -1 means in same flow\\n                },\\n                hooks: {}\\n            },\\n            surface = null,     // the canvas for the plot itself\\n            overlay = null,     // canvas for interactive stuff on top of plot\\n            eventHolder = null, // jQuery object that events should be bound to\\n            ctx = null, octx = null,\\n            xaxes = [], yaxes = [],\\n            plotOffset = {left: 0, right: 0, top: 0, bottom: 0},\\n            plotWidth = 0, plotHeight = 0,\\n            hooks = {\\n                processOptions: [],\\n                processRawData: [],\\n                processDatapoints: [],\\n                processOffset: [],\\n                drawBackground: [],\\n                drawSeries: [],\\n                draw: [],\\n                bindEvents: [],\\n                drawOverlay: [],\\n                shutdown: []\\n            },\\n            plot = this;\\n\\n        // public functions\\n        plot.setData = setData;\\n        plot.setupGrid = setupGrid;\\n        plot.draw = draw;\\n        plot.getPlaceholder = function () {\\n            return placeholder;\\n        };\\n        plot.getCanvas = function () {\\n            return surface.element;\\n        };\\n        plot.getPlotOffset = function () {\\n            return plotOffset;\\n        };\\n        plot.width = function () {\\n            return plotWidth;\\n        };\\n        plot.height = function () {\\n            return plotHeight;\\n        };\\n        plot.offset = function () {\\n            var o = eventHolder.offset();\\n            o.left += plotOffset.left;\\n            o.top += plotOffset.top;\\n            return o;\\n        };\\n        plot.getData = function () {\\n            return series;\\n        };\\n        plot.getAxes = function () {\\n            var res = {}, i;\\n            $.each(xaxes.concat(yaxes), function (_, axis) {\\n                if (axis)\\n                    res[axis.direction + (axis.n != 1 ? axis.n : \\\"\\\") + \\\"axis\\\"] = axis;\\n            });\\n            return res;\\n        };\\n        plot.getXAxes = function () {\\n            return xaxes;\\n        };\\n        plot.getYAxes = function () {\\n            return yaxes;\\n        };\\n        plot.c2p = canvasToAxisCoords;\\n        plot.p2c = axisToCanvasCoords;\\n        plot.getOptions = function () {\\n            return options;\\n        };\\n        plot.highlight = highlight;\\n        plot.unhighlight = unhighlight;\\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\\n        plot.pointOffset = function (point) {\\n            return {\\n                left: parseInt(xaxes[axisNumber(point, \\\"x\\\") - 1].p2c(+point.x) + plotOffset.left, 10),\\n                top: parseInt(yaxes[axisNumber(point, \\\"y\\\") - 1].p2c(+point.y) + plotOffset.top, 10)\\n            };\\n        };\\n        plot.shutdown = shutdown;\\n        plot.destroy = function () {\\n            shutdown();\\n            placeholder.removeData(\\\"plot\\\").empty();\\n\\n            series = [];\\n            options = null;\\n            surface = null;\\n            overlay = null;\\n            eventHolder = null;\\n            ctx = null;\\n            octx = null;\\n            xaxes = [];\\n            yaxes = [];\\n            hooks = null;\\n            highlights = [];\\n            plot = null;\\n        };\\n        plot.resize = function () {\\n            var width = placeholder.width(),\\n                height = placeholder.height();\\n            surface.resize(width, height);\\n            overlay.resize(width, height);\\n        };\\n\\n        // public attributes\\n        plot.hooks = hooks;\\n\\n        // initialize\\n        initPlugins(plot);\\n        parseOptions(options_);\\n        setupCanvases();\\n        setData(data_);\\n        setupGrid();\\n        draw();\\n        bindEvents();\\n\\n\\n        function executeHooks(hook, args) {\\n            args = [plot].concat(args);\\n            for (var i = 0; i < hook.length; ++i)\\n                hook[i].apply(this, args);\\n        }\\n\\n        function initPlugins() {\\n\\n            // References to key classes, allowing plugins to modify them\\n\\n            var classes = {\\n                Canvas: Canvas\\n            };\\n\\n            for (var i = 0; i < plugins.length; ++i) {\\n                var p = plugins[i];\\n                p.init(plot, classes);\\n                if (p.options)\\n                    $.extend(true, options, p.options);\\n            }\\n        }\\n\\n        function parseOptions(opts) {\\n\\n            $.extend(true, options, opts);\\n\\n            // $.extend merges arrays, rather than replacing them.  When less\\n            // colors are provided than the size of the default palette, we\\n            // end up with those colors plus the remaining defaults, which is\\n            // not expected behavior; avoid it by replacing them here.\\n\\n            if (opts && opts.colors) {\\n                options.colors = opts.colors;\\n            }\\n\\n            if (options.xaxis.color == null)\\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\\n            if (options.yaxis.color == null)\\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\\n\\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\\n\\n            if (options.grid.borderColor == null)\\n                options.grid.borderColor = options.grid.color;\\n            if (options.grid.tickColor == null)\\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\\n\\n            // Fill in defaults for axis options, including any unspecified\\n            // font-spec fields, if a font-spec was provided.\\n\\n            // If no x/y axis options were provided, create one of each anyway,\\n            // since the rest of the code assumes that they exist.\\n\\n            var i, axisOptions, axisCount,\\n                fontSize = placeholder.css(\\\"font-size\\\"),\\n                fontSizeDefault = fontSize ? +fontSize.replace(\\\"px\\\", \\\"\\\") : 13,\\n                fontDefaults = {\\n                    style: placeholder.css(\\\"font-style\\\"),\\n                    size: Math.round(0.8 * fontSizeDefault),\\n                    variant: placeholder.css(\\\"font-variant\\\"),\\n                    weight: placeholder.css(\\\"font-weight\\\"),\\n                    family: placeholder.css(\\\"font-family\\\")\\n                };\\n\\n            axisCount = options.xaxes.length || 1;\\n            for (i = 0; i < axisCount; ++i) {\\n\\n                axisOptions = options.xaxes[i];\\n                if (axisOptions && !axisOptions.tickColor) {\\n                    axisOptions.tickColor = axisOptions.color;\\n                }\\n\\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\\n                options.xaxes[i] = axisOptions;\\n\\n                if (axisOptions.font) {\\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\\n                    if (!axisOptions.font.color) {\\n                        axisOptions.font.color = axisOptions.color;\\n                    }\\n                    if (!axisOptions.font.lineHeight) {\\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\\n                    }\\n                }\\n            }\\n\\n            axisCount = options.yaxes.length || 1;\\n            for (i = 0; i < axisCount; ++i) {\\n\\n                axisOptions = options.yaxes[i];\\n                if (axisOptions && !axisOptions.tickColor) {\\n                    axisOptions.tickColor = axisOptions.color;\\n                }\\n\\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\\n                options.yaxes[i] = axisOptions;\\n\\n                if (axisOptions.font) {\\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\\n                    if (!axisOptions.font.color) {\\n                        axisOptions.font.color = axisOptions.color;\\n                    }\\n                    if (!axisOptions.font.lineHeight) {\\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\\n                    }\\n                }\\n            }\\n\\n            // backwards compatibility, to be removed in future\\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\\n                options.xaxis.ticks = options.xaxis.noTicks;\\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\\n                options.yaxis.ticks = options.yaxis.noTicks;\\n            if (options.x2axis) {\\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\\n                options.xaxes[1].position = \\\"top\\\";\\n                // Override the inherit to allow the axis to auto-scale\\n                if (options.x2axis.min == null) {\\n                    options.xaxes[1].min = null;\\n                }\\n                if (options.x2axis.max == null) {\\n                    options.xaxes[1].max = null;\\n                }\\n            }\\n            if (options.y2axis) {\\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\\n                options.yaxes[1].position = \\\"right\\\";\\n                // Override the inherit to allow the axis to auto-scale\\n                if (options.y2axis.min == null) {\\n                    options.yaxes[1].min = null;\\n                }\\n                if (options.y2axis.max == null) {\\n                    options.yaxes[1].max = null;\\n                }\\n            }\\n            if (options.grid.coloredAreas)\\n                options.grid.markings = options.grid.coloredAreas;\\n            if (options.grid.coloredAreasColor)\\n                options.grid.markingsColor = options.grid.coloredAreasColor;\\n            if (options.lines)\\n                $.extend(true, options.series.lines, options.lines);\\n            if (options.points)\\n                $.extend(true, options.series.points, options.points);\\n            if (options.bars)\\n                $.extend(true, options.series.bars, options.bars);\\n            if (options.shadowSize != null)\\n                options.series.shadowSize = options.shadowSize;\\n            if (options.highlightColor != null)\\n                options.series.highlightColor = options.highlightColor;\\n\\n            // save options on axes for future reference\\n            for (i = 0; i < options.xaxes.length; ++i)\\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\\n            for (i = 0; i < options.yaxes.length; ++i)\\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\\n\\n            // add hooks from options\\n            for (var n in hooks)\\n                if (options.hooks[n] && options.hooks[n].length)\\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\\n\\n            executeHooks(hooks.processOptions, [options]);\\n        }\\n\\n        function setData(d) {\\n            series = parseData(d);\\n            fillInSeriesOptions();\\n            processData();\\n        }\\n\\n        function parseData(d) {\\n            var res = [];\\n            for (var i = 0; i < d.length; ++i) {\\n                var s = $.extend(true, {}, options.series);\\n\\n                if (d[i].data != null) {\\n                    s.data = d[i].data; // move the data instead of deep-copy\\n                    delete d[i].data;\\n\\n                    $.extend(true, s, d[i]);\\n\\n                    d[i].data = s.data;\\n                }\\n                else\\n                    s.data = d[i];\\n                res.push(s);\\n            }\\n\\n            return res;\\n        }\\n\\n        function axisNumber(obj, coord) {\\n            var a = obj[coord + \\\"axis\\\"];\\n            if (typeof a == \\\"object\\\") // if we got a real axis, extract number\\n                a = a.n;\\n            if (typeof a != \\\"number\\\")\\n                a = 1; // default to first axis\\n            return a;\\n        }\\n\\n        function allAxes() {\\n            // return flat array without annoying null entries\\n            return $.grep(xaxes.concat(yaxes), function (a) {\\n                return a;\\n            });\\n        }\\n\\n        function canvasToAxisCoords(pos) {\\n            // return an object with x/y corresponding to all used axes\\n            var res = {}, i, axis;\\n            for (i = 0; i < xaxes.length; ++i) {\\n                axis = xaxes[i];\\n                if (axis && axis.used)\\n                    res[\\\"x\\\" + axis.n] = axis.c2p(pos.left);\\n            }\\n\\n            for (i = 0; i < yaxes.length; ++i) {\\n                axis = yaxes[i];\\n                if (axis && axis.used)\\n                    res[\\\"y\\\" + axis.n] = axis.c2p(pos.top);\\n            }\\n\\n            if (res.x1 !== undefined)\\n                res.x = res.x1;\\n            if (res.y1 !== undefined)\\n                res.y = res.y1;\\n\\n            return res;\\n        }\\n\\n        function axisToCanvasCoords(pos) {\\n            // get canvas coords from the first pair of x/y found in pos\\n            var res = {}, i, axis, key;\\n\\n            for (i = 0; i < xaxes.length; ++i) {\\n                axis = xaxes[i];\\n                if (axis && axis.used) {\\n                    key = \\\"x\\\" + axis.n;\\n                    if (pos[key] == null && axis.n == 1)\\n                        key = \\\"x\\\";\\n\\n                    if (pos[key] != null) {\\n                        res.left = axis.p2c(pos[key]);\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            for (i = 0; i < yaxes.length; ++i) {\\n                axis = yaxes[i];\\n                if (axis && axis.used) {\\n                    key = \\\"y\\\" + axis.n;\\n                    if (pos[key] == null && axis.n == 1)\\n                        key = \\\"y\\\";\\n\\n                    if (pos[key] != null) {\\n                        res.top = axis.p2c(pos[key]);\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            return res;\\n        }\\n\\n        function getOrCreateAxis(axes, number) {\\n            if (!axes[number - 1])\\n                axes[number - 1] = {\\n                    n: number, // save the number for future reference\\n                    direction: axes == xaxes ? \\\"x\\\" : \\\"y\\\",\\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\\n                };\\n\\n            return axes[number - 1];\\n        }\\n\\n        function fillInSeriesOptions() {\\n\\n            var neededColors = series.length, maxIndex = -1, i;\\n\\n            // Subtract the number of series that already have fixed colors or\\n            // color indexes from the number that we still need to generate.\\n\\n            for (i = 0; i < series.length; ++i) {\\n                var sc = series[i].color;\\n                if (sc != null) {\\n                    neededColors--;\\n                    if (typeof sc == \\\"number\\\" && sc > maxIndex) {\\n                        maxIndex = sc;\\n                    }\\n                }\\n            }\\n\\n            // If any of the series have fixed color indexes, then we need to\\n            // generate at least as many colors as the highest index.\\n\\n            if (neededColors <= maxIndex) {\\n                neededColors = maxIndex + 1;\\n            }\\n\\n            // Generate all the colors, using first the option colors and then\\n            // variations on those colors once they're exhausted.\\n\\n            var c, colors = [], colorPool = options.colors,\\n                colorPoolSize = colorPool.length, variation = 0;\\n\\n            for (i = 0; i < neededColors; i++) {\\n\\n                c = $.color.parse(colorPool[i % colorPoolSize] || \\\"#666\\\");\\n\\n                // Each time we exhaust the colors in the pool we adjust\\n                // a scaling factor used to produce more variations on\\n                // those colors. The factor alternates negative/positive\\n                // to produce lighter/darker colors.\\n\\n                // Reset the variation after every few cycles, or else\\n                // it will end up producing only white or black colors.\\n\\n                if (i % colorPoolSize == 0 && i) {\\n                    if (variation >= 0) {\\n                        if (variation < 0.5) {\\n                            variation = -variation - 0.2;\\n                        } else variation = 0;\\n                    } else variation = -variation;\\n                }\\n\\n                colors[i] = c.scale('rgb', 1 + variation);\\n            }\\n\\n            // Finalize the series options, filling in their colors\\n\\n            var colori = 0, s;\\n            for (i = 0; i < series.length; ++i) {\\n                s = series[i];\\n\\n                // assign colors\\n                if (s.color == null) {\\n                    s.color = colors[colori].toString();\\n                    ++colori;\\n                }\\n                else if (typeof s.color == \\\"number\\\")\\n                    s.color = colors[s.color].toString();\\n\\n                // turn on lines automatically in case nothing is set\\n                if (s.lines.show == null) {\\n                    var v, show = true;\\n                    for (v in s)\\n                        if (s[v] && s[v].show) {\\n                            show = false;\\n                            break;\\n                        }\\n                    if (show)\\n                        s.lines.show = true;\\n                }\\n\\n                // If nothing was provided for lines.zero, default it to match\\n                // lines.fill, since areas by default should extend to zero.\\n\\n                if (s.lines.zero == null) {\\n                    s.lines.zero = !!s.lines.fill;\\n                }\\n\\n                // setup axes\\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \\\"x\\\"));\\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \\\"y\\\"));\\n            }\\n        }\\n\\n        function processData() {\\n            var topSentry = Number.POSITIVE_INFINITY,\\n                bottomSentry = Number.NEGATIVE_INFINITY,\\n                fakeInfinity = Number.MAX_VALUE,\\n                i, j, k, m, length,\\n                s, points, ps, x, y, axis, val, f, p,\\n                data, format;\\n\\n            function updateAxis(axis, min, max) {\\n                if (min < axis.datamin && min != -fakeInfinity)\\n                    axis.datamin = min;\\n                if (max > axis.datamax && max != fakeInfinity)\\n                    axis.datamax = max;\\n            }\\n\\n            $.each(allAxes(), function (_, axis) {\\n                // init axis\\n                axis.datamin = topSentry;\\n                axis.datamax = bottomSentry;\\n                axis.used = false;\\n            });\\n\\n            for (i = 0; i < series.length; ++i) {\\n                s = series[i];\\n                s.datapoints = {points: []};\\n\\n                executeHooks(hooks.processRawData, [s, s.data, s.datapoints]);\\n            }\\n\\n            // first pass: clean and copy data\\n            for (i = 0; i < series.length; ++i) {\\n                s = series[i];\\n\\n                data = s.data;\\n                format = s.datapoints.format;\\n\\n                if (!format) {\\n                    format = [];\\n                    // find out how to copy\\n                    format.push({x: true, number: true, required: true});\\n                    format.push({y: true, number: true, required: true});\\n\\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\\n                        format.push({y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale});\\n                        if (s.bars.horizontal) {\\n                            delete format[format.length - 1].y;\\n                            format[format.length - 1].x = true;\\n                        }\\n                    }\\n\\n                    s.datapoints.format = format;\\n                }\\n\\n                if (s.datapoints.pointsize != null)\\n                    continue; // already filled in\\n\\n                s.datapoints.pointsize = format.length;\\n\\n                ps = s.datapoints.pointsize;\\n                points = s.datapoints.points;\\n\\n                var insertSteps = s.lines.show && s.lines.steps;\\n                s.xaxis.used = s.yaxis.used = true;\\n\\n                for (j = k = 0; j < data.length; ++j, k += ps) {\\n                    p = data[j];\\n\\n                    var nullify = p == null;\\n                    if (!nullify) {\\n                        for (m = 0; m < ps; ++m) {\\n                            val = p[m];\\n                            f = format[m];\\n\\n                            if (f) {\\n                                if (f.number && val != null) {\\n                                    val = +val; // convert to number\\n                                    if (isNaN(val))\\n                                        val = null;\\n                                    else if (val == Infinity)\\n                                        val = fakeInfinity;\\n                                    else if (val == -Infinity)\\n                                        val = -fakeInfinity;\\n                                }\\n\\n                                if (val == null) {\\n                                    if (f.required)\\n                                        nullify = true;\\n\\n                                    if (f.defaultValue != null)\\n                                        val = f.defaultValue;\\n                                }\\n                            }\\n\\n                            points[k + m] = val;\\n                        }\\n                    }\\n\\n                    if (nullify) {\\n                        for (m = 0; m < ps; ++m) {\\n                            val = points[k + m];\\n                            if (val != null) {\\n                                f = format[m];\\n                                // extract min/max info\\n                                if (f.autoscale !== false) {\\n                                    if (f.x) {\\n                                        updateAxis(s.xaxis, val, val);\\n                                    }\\n                                    if (f.y) {\\n                                        updateAxis(s.yaxis, val, val);\\n                                    }\\n                                }\\n                            }\\n                            points[k + m] = null;\\n                        }\\n                    }\\n                    else {\\n                        // a little bit of line specific stuff that\\n                        // perhaps shouldn't be here, but lacking\\n                        // better means...\\n                        if (insertSteps && k > 0\\n                            && points[k - ps] != null\\n                            && points[k - ps] != points[k]\\n                            && points[k - ps + 1] != points[k + 1]) {\\n                            // copy the point to make room for a middle point\\n                            for (m = 0; m < ps; ++m)\\n                                points[k + ps + m] = points[k + m];\\n\\n                            // middle point has same y\\n                            points[k + 1] = points[k - ps + 1];\\n\\n                            // we've added a point, better reflect that\\n                            k += ps;\\n                        }\\n                    }\\n                }\\n            }\\n\\n            // give the hooks a chance to run\\n            for (i = 0; i < series.length; ++i) {\\n                s = series[i];\\n\\n                executeHooks(hooks.processDatapoints, [s, s.datapoints]);\\n            }\\n\\n            // second pass: find datamax/datamin for auto-scaling\\n            for (i = 0; i < series.length; ++i) {\\n                s = series[i];\\n                points = s.datapoints.points;\\n                ps = s.datapoints.pointsize;\\n                format = s.datapoints.format;\\n\\n                var xmin = topSentry, ymin = topSentry,\\n                    xmax = bottomSentry, ymax = bottomSentry;\\n\\n                for (j = 0; j < points.length; j += ps) {\\n                    if (points[j] == null)\\n                        continue;\\n\\n                    for (m = 0; m < ps; ++m) {\\n                        val = points[j + m];\\n                        f = format[m];\\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\\n                            continue;\\n\\n                        if (f.x) {\\n                            if (val < xmin)\\n                                xmin = val;\\n                            if (val > xmax)\\n                                xmax = val;\\n                        }\\n                        if (f.y) {\\n                            if (val < ymin)\\n                                ymin = val;\\n                            if (val > ymax)\\n                                ymax = val;\\n                        }\\n                    }\\n                }\\n\\n                if (s.bars.show) {\\n                    // make sure we got room for the bar on the dancing floor\\n                    var delta;\\n\\n                    switch (s.bars.align) {\\n                        case \\\"left\\\":\\n                            delta = 0;\\n                            break;\\n                        case \\\"right\\\":\\n                            delta = -s.bars.barWidth;\\n                            break;\\n                        default:\\n                            delta = -s.bars.barWidth / 2;\\n                    }\\n\\n                    if (s.bars.horizontal) {\\n                        ymin += delta;\\n                        ymax += delta + s.bars.barWidth;\\n                    }\\n                    else {\\n                        xmin += delta;\\n                        xmax += delta + s.bars.barWidth;\\n                    }\\n                }\\n\\n                updateAxis(s.xaxis, xmin, xmax);\\n                updateAxis(s.yaxis, ymin, ymax);\\n            }\\n\\n            $.each(allAxes(), function (_, axis) {\\n                if (axis.datamin == topSentry)\\n                    axis.datamin = null;\\n                if (axis.datamax == bottomSentry)\\n                    axis.datamax = null;\\n            });\\n        }\\n\\n        function setupCanvases() {\\n\\n            // Make sure the placeholder is clear of everything except canvases\\n            // from a previous plot in this container that we'll try to re-use.\\n\\n            placeholder.css(\\\"padding\\\", 0) // padding messes up the positioning\\n                .children().filter(function () {\\n                return !$(this).hasClass(\\\"flot-overlay\\\") && !$(this).hasClass('flot-base');\\n            }).remove();\\n\\n            if (placeholder.css(\\\"position\\\") == 'static')\\n                placeholder.css(\\\"position\\\", \\\"relative\\\"); // for positioning labels and overlay\\n\\n            surface = new Canvas(\\\"flot-base\\\", placeholder);\\n            overlay = new Canvas(\\\"flot-overlay\\\", placeholder); // overlay canvas for interactive features\\n\\n            ctx = surface.context;\\n            octx = overlay.context;\\n\\n            // define which element we're listening for events on\\n            eventHolder = $(overlay.element).unbind();\\n\\n            // If we're re-using a plot object, shut down the old one\\n\\n            var existing = placeholder.data(\\\"plot\\\");\\n\\n            if (existing) {\\n                existing.shutdown();\\n                overlay.clear();\\n            }\\n\\n            // save in case we get replotted\\n            placeholder.data(\\\"plot\\\", plot);\\n        }\\n\\n        function bindEvents() {\\n            // bind events\\n            if (options.grid.hoverable) {\\n                eventHolder.mousemove(onMouseMove);\\n\\n                // Use bind, rather than .mouseleave, because we officially\\n                // still support jQuery 1.2.6, which doesn't define a shortcut\\n                // for mouseenter or mouseleave.  This was a bug/oversight that\\n                // was fixed somewhere around 1.3.x.  We can return to using\\n                // .mouseleave when we drop support for 1.2.6.\\n\\n                eventHolder.bind(\\\"mouseleave\\\", onMouseLeave);\\n            }\\n\\n            if (options.grid.clickable)\\n                eventHolder.click(onClick);\\n\\n            executeHooks(hooks.bindEvents, [eventHolder]);\\n        }\\n\\n        function shutdown() {\\n            if (redrawTimeout)\\n                clearTimeout(redrawTimeout);\\n\\n            eventHolder.unbind(\\\"mousemove\\\", onMouseMove);\\n            eventHolder.unbind(\\\"mouseleave\\\", onMouseLeave);\\n            eventHolder.unbind(\\\"click\\\", onClick);\\n\\n            executeHooks(hooks.shutdown, [eventHolder]);\\n        }\\n\\n        function setTransformationHelpers(axis) {\\n            // set helper functions on the axis, assumes plot area\\n            // has been computed already\\n\\n            function identity(x) {\\n                return x;\\n            }\\n\\n            var s, m, t = axis.options.transform || identity,\\n                it = axis.options.inverseTransform;\\n\\n            // precompute how much the axis is scaling a point\\n            // in canvas space\\n            if (axis.direction == \\\"x\\\") {\\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\\n                m = Math.min(t(axis.max), t(axis.min));\\n            }\\n            else {\\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\\n                s = -s;\\n                m = Math.max(t(axis.max), t(axis.min));\\n            }\\n\\n            // data point to canvas coordinate\\n            if (t == identity) // slight optimization\\n                axis.p2c = function (p) {\\n                    return (p - m) * s;\\n                };\\n            else\\n                axis.p2c = function (p) {\\n                    return (t(p) - m) * s;\\n                };\\n            // canvas coordinate to data point\\n            if (!it)\\n                axis.c2p = function (c) {\\n                    return m + c / s;\\n                };\\n            else\\n                axis.c2p = function (c) {\\n                    return it(m + c / s);\\n                };\\n        }\\n\\n        function measureTickLabels(axis) {\\n\\n            var opts = axis.options,\\n                ticks = axis.ticks || [],\\n                labelWidth = opts.labelWidth || 0,\\n                labelHeight = opts.labelHeight || 0,\\n                maxWidth = labelWidth || (axis.direction == \\\"x\\\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\\n                legacyStyles = axis.direction + \\\"Axis \\\" + axis.direction + axis.n + \\\"Axis\\\",\\n                layer = \\\"flot-\\\" + axis.direction + \\\"-axis flot-\\\" + axis.direction + axis.n + \\\"-axis \\\" + legacyStyles,\\n                font = opts.font || \\\"flot-tick-label tickLabel\\\";\\n\\n            for (var i = 0; i < ticks.length; ++i) {\\n\\n                var t = ticks[i];\\n\\n                if (!t.label)\\n                    continue;\\n\\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\\n\\n                labelWidth = Math.max(labelWidth, info.width);\\n                labelHeight = Math.max(labelHeight, info.height);\\n            }\\n\\n            axis.labelWidth = opts.labelWidth || labelWidth;\\n            axis.labelHeight = opts.labelHeight || labelHeight;\\n        }\\n\\n        function allocateAxisBoxFirstPhase(axis) {\\n            // find the bounding box of the axis by looking at label\\n            // widths/heights and ticks, make room by diminishing the\\n            // plotOffset; this first phase only looks at one\\n            // dimension per axis, the other dimension depends on the\\n            // other axes so will have to wait\\n\\n            var lw = axis.labelWidth,\\n                lh = axis.labelHeight,\\n                pos = axis.options.position,\\n                isXAxis = axis.direction === \\\"x\\\",\\n                tickLength = axis.options.tickLength,\\n                axisMargin = options.grid.axisMargin,\\n                padding = options.grid.labelMargin,\\n                innermost = true,\\n                outermost = true,\\n                first = true,\\n                found = false;\\n\\n            // Determine the axis's position in its direction and on its side\\n\\n            $.each(isXAxis ? xaxes : yaxes, function (i, a) {\\n                if (a && (a.show || a.reserveSpace)) {\\n                    if (a === axis) {\\n                        found = true;\\n                    } else if (a.options.position === pos) {\\n                        if (found) {\\n                            outermost = false;\\n                        } else {\\n                            innermost = false;\\n                        }\\n                    }\\n                    if (!found) {\\n                        first = false;\\n                    }\\n                }\\n            });\\n\\n            // The outermost axis on each side has no margin\\n\\n            if (outermost) {\\n                axisMargin = 0;\\n            }\\n\\n            // The ticks for the first axis in each direction stretch across\\n\\n            if (tickLength == null) {\\n                tickLength = first ? \\\"full\\\" : 5;\\n            }\\n\\n            if (!isNaN(+tickLength))\\n                padding += +tickLength;\\n\\n            if (isXAxis) {\\n                lh += padding;\\n\\n                if (pos == \\\"bottom\\\") {\\n                    plotOffset.bottom += lh + axisMargin;\\n                    axis.box = {top: surface.height - plotOffset.bottom, height: lh};\\n                }\\n                else {\\n                    axis.box = {top: plotOffset.top + axisMargin, height: lh};\\n                    plotOffset.top += lh + axisMargin;\\n                }\\n            }\\n            else {\\n                lw += padding;\\n\\n                if (pos == \\\"left\\\") {\\n                    axis.box = {left: plotOffset.left + axisMargin, width: lw};\\n                    plotOffset.left += lw + axisMargin;\\n                }\\n                else {\\n                    plotOffset.right += lw + axisMargin;\\n                    axis.box = {left: surface.width - plotOffset.right, width: lw};\\n                }\\n            }\\n\\n            // save for future reference\\n            axis.position = pos;\\n            axis.tickLength = tickLength;\\n            axis.box.padding = padding;\\n            axis.innermost = innermost;\\n        }\\n\\n        function allocateAxisBoxSecondPhase(axis) {\\n            // now that all axis boxes have been placed in one\\n            // dimension, we can set the remaining dimension coordinates\\n            if (axis.direction == \\\"x\\\") {\\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\\n            }\\n            else {\\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\\n            }\\n        }\\n\\n        function adjustLayoutForThingsStickingOut() {\\n            // possibly adjust plot offset to ensure everything stays\\n            // inside the canvas and isn't clipped off\\n\\n            var minMargin = options.grid.minBorderMargin,\\n                axis, i;\\n\\n            // check stuff from the plot (FIXME: this should just read\\n            // a value from the series, otherwise it's impossible to\\n            // customize)\\n            if (minMargin == null) {\\n                minMargin = 0;\\n                for (i = 0; i < series.length; ++i)\\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth / 2));\\n            }\\n\\n            var margins = {\\n                left: minMargin,\\n                right: minMargin,\\n                top: minMargin,\\n                bottom: minMargin\\n            };\\n\\n            // check axis labels, note we don't check the actual\\n            // labels but instead use the overall width/height to not\\n            // jump as much around with replots\\n            $.each(allAxes(), function (_, axis) {\\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\\n                    if (axis.direction === \\\"x\\\") {\\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\\n                    } else {\\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\\n                    }\\n                }\\n            });\\n\\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\\n        }\\n\\n        function setupGrid() {\\n            var i, axes = allAxes(), showGrid = options.grid.show;\\n\\n            // Initialize the plot's offset from the edge of the canvas\\n\\n            for (var a in plotOffset) {\\n                var margin = options.grid.margin || 0;\\n                plotOffset[a] = typeof margin == \\\"number\\\" ? margin : margin[a] || 0;\\n            }\\n\\n            executeHooks(hooks.processOffset, [plotOffset]);\\n\\n            // If the grid is visible, add its border width to the offset\\n\\n            for (var a in plotOffset) {\\n                if (typeof(options.grid.borderWidth) == \\\"object\\\") {\\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\\n                }\\n                else {\\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\\n                }\\n            }\\n\\n            $.each(axes, function (_, axis) {\\n                var axisOpts = axis.options;\\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\\n                setRange(axis);\\n            });\\n\\n            if (showGrid) {\\n\\n                var allocatedAxes = $.grep(axes, function (axis) {\\n                    return axis.show || axis.reserveSpace;\\n                });\\n\\n                $.each(allocatedAxes, function (_, axis) {\\n                    // make the ticks\\n                    setupTickGeneration(axis);\\n                    setTicks(axis);\\n                    snapRangeToTicks(axis, axis.ticks);\\n                    // find labelWidth/Height for axis\\n                    measureTickLabels(axis);\\n                });\\n\\n                // with all dimensions calculated, we can compute the\\n                // axis bounding boxes, start from the outside\\n                // (reverse order)\\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\\n\\n                // make sure we've got enough space for things that\\n                // might stick out\\n                adjustLayoutForThingsStickingOut();\\n\\n                $.each(allocatedAxes, function (_, axis) {\\n                    allocateAxisBoxSecondPhase(axis);\\n                });\\n            }\\n\\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\\n\\n            // now we got the proper plot dimensions, we can compute the scaling\\n            $.each(axes, function (_, axis) {\\n                setTransformationHelpers(axis);\\n            });\\n\\n            if (showGrid) {\\n                drawAxisLabels();\\n            }\\n\\n            insertLegend();\\n        }\\n\\n        function setRange(axis) {\\n            var opts = axis.options,\\n                min = +(opts.min != null ? opts.min : axis.datamin),\\n                max = +(opts.max != null ? opts.max : axis.datamax),\\n                delta = max - min;\\n\\n            if (delta == 0.0) {\\n                // degenerate case\\n                var widen = max == 0 ? 1 : 0.01;\\n\\n                if (opts.min == null)\\n                    min -= widen;\\n                // always widen max if we couldn't widen min to ensure we\\n                // don't fall into min == max which doesn't work\\n                if (opts.max == null || opts.min != null)\\n                    max += widen;\\n            }\\n            else {\\n                // consider autoscaling\\n                var margin = opts.autoscaleMargin;\\n                if (margin != null) {\\n                    if (opts.min == null) {\\n                        min -= delta * margin;\\n                        // make sure we don't go below zero if all values\\n                        // are positive\\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\\n                            min = 0;\\n                    }\\n                    if (opts.max == null) {\\n                        max += delta * margin;\\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\\n                            max = 0;\\n                    }\\n                }\\n            }\\n            axis.min = min;\\n            axis.max = max;\\n        }\\n\\n        function setupTickGeneration(axis) {\\n            var opts = axis.options;\\n\\n            // estimate number of ticks\\n            var noTicks;\\n            if (typeof opts.ticks == \\\"number\\\" && opts.ticks > 0)\\n                noTicks = opts.ticks;\\n            else\\n            // heuristic based on the model a*sqrt(x) fitted to\\n            // some data points that seemed reasonable\\n                noTicks = 0.3 * Math.sqrt(axis.direction == \\\"x\\\" ? surface.width : surface.height);\\n\\n            var delta = (axis.max - axis.min) / noTicks,\\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\\n                maxDec = opts.tickDecimals;\\n\\n            if (maxDec != null && dec > maxDec) {\\n                dec = maxDec;\\n            }\\n\\n            var magn = Math.pow(10, -dec),\\n                norm = delta / magn, // norm is between 1.0 and 10.0\\n                size;\\n\\n            if (norm < 1.5) {\\n                size = 1;\\n            } else if (norm < 3) {\\n                size = 2;\\n                // special case for 2.5, requires an extra decimal\\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\\n                    size = 2.5;\\n                    ++dec;\\n                }\\n            } else if (norm < 7.5) {\\n                size = 5;\\n            } else {\\n                size = 10;\\n            }\\n\\n            size *= magn;\\n\\n            if (opts.minTickSize != null && size < opts.minTickSize) {\\n                size = opts.minTickSize;\\n            }\\n\\n            axis.delta = delta;\\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\\n            axis.tickSize = opts.tickSize || size;\\n\\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\\n            // we'll add an especially friendly reminder to make sure they included it.\\n\\n            if (opts.mode == \\\"time\\\" && !axis.tickGenerator) {\\n                throw new Error(\\\"Time mode requires the flot.time plugin.\\\");\\n            }\\n\\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\\n            // like flot.time.js.\\n\\n            if (!axis.tickGenerator) {\\n\\n                axis.tickGenerator = function (axis) {\\n\\n                    var ticks = [],\\n                        start = floorInBase(axis.min, axis.tickSize),\\n                        i = 0,\\n                        v = Number.NaN,\\n                        prev;\\n\\n                    do {\\n                        prev = v;\\n                        v = start + i * axis.tickSize;\\n                        ticks.push(v);\\n                        ++i;\\n                    } while (v < axis.max && v != prev);\\n                    return ticks;\\n                };\\n\\n                axis.tickFormatter = function (value, axis) {\\n\\n                    var factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\\n                    var formatted = \\\"\\\" + Math.round(value * factor) / factor;\\n\\n                    // If tickDecimals was specified, ensure that we have exactly that\\n                    // much precision; otherwise default to the value's own precision.\\n\\n                    if (axis.tickDecimals != null) {\\n                        var decimal = formatted.indexOf(\\\".\\\");\\n                        var precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\\n                        if (precision < axis.tickDecimals) {\\n                            return (precision ? formatted : formatted + \\\".\\\") + (\\\"\\\" + factor).substr(1, axis.tickDecimals - precision);\\n                        }\\n                    }\\n\\n                    return formatted;\\n                };\\n            }\\n\\n            if ($.isFunction(opts.tickFormatter))\\n                axis.tickFormatter = function (v, axis) {\\n                    return \\\"\\\" + opts.tickFormatter(v, axis);\\n                };\\n\\n            if (opts.alignTicksWithAxis != null) {\\n                var otherAxis = (axis.direction == \\\"x\\\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\\n                    // consider snapping min/max to outermost nice ticks\\n                    var niceTicks = axis.tickGenerator(axis);\\n                    if (niceTicks.length > 0) {\\n                        if (opts.min == null)\\n                            axis.min = Math.min(axis.min, niceTicks[0]);\\n                        if (opts.max == null && niceTicks.length > 1)\\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\\n                    }\\n\\n                    axis.tickGenerator = function (axis) {\\n                        // copy ticks, scaled to this axis\\n                        var ticks = [], v, i;\\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\\n                            v = axis.min + v * (axis.max - axis.min);\\n                            ticks.push(v);\\n                        }\\n                        return ticks;\\n                    };\\n\\n                    // we might need an extra decimal since forced\\n                    // ticks don't necessarily fit naturally\\n                    if (!axis.mode && opts.tickDecimals == null) {\\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\\n                            ts = axis.tickGenerator(axis);\\n\\n                        // only proceed if the tick interval rounded\\n                        // with an extra decimal doesn't give us a\\n                        // zero at end\\n                        if (!(ts.length > 1 && /\\\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\\n                            axis.tickDecimals = extraDec;\\n                    }\\n                }\\n            }\\n        }\\n\\n        function setTicks(axis) {\\n            var oticks = axis.options.ticks, ticks = [];\\n            if (oticks == null || (typeof oticks == \\\"number\\\" && oticks > 0))\\n                ticks = axis.tickGenerator(axis);\\n            else if (oticks) {\\n                if ($.isFunction(oticks))\\n                // generate the ticks\\n                    ticks = oticks(axis);\\n                else\\n                    ticks = oticks;\\n            }\\n\\n            // clean up/labelify the supplied ticks, copy them over\\n            var i, v;\\n            axis.ticks = [];\\n            for (i = 0; i < ticks.length; ++i) {\\n                var label = null;\\n                var t = ticks[i];\\n                if (typeof t == \\\"object\\\") {\\n                    v = +t[0];\\n                    if (t.length > 1)\\n                        label = t[1];\\n                }\\n                else\\n                    v = +t;\\n                if (label == null)\\n                    label = axis.tickFormatter(v, axis);\\n                if (!isNaN(v))\\n                    axis.ticks.push({v: v, label: label});\\n            }\\n        }\\n\\n        function snapRangeToTicks(axis, ticks) {\\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\\n                // snap to ticks\\n                if (axis.options.min == null)\\n                    axis.min = Math.min(axis.min, ticks[0].v);\\n                if (axis.options.max == null && ticks.length > 1)\\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\\n            }\\n        }\\n\\n        function draw() {\\n\\n            surface.clear();\\n\\n            executeHooks(hooks.drawBackground, [ctx]);\\n\\n            var grid = options.grid;\\n\\n            // draw background, if any\\n            if (grid.show && grid.backgroundColor)\\n                drawBackground();\\n\\n            if (grid.show && !grid.aboveData) {\\n                drawGrid();\\n            }\\n\\n            for (var i = 0; i < series.length; ++i) {\\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\\n                drawSeries(series[i]);\\n            }\\n\\n            executeHooks(hooks.draw, [ctx]);\\n\\n            if (grid.show && grid.aboveData) {\\n                drawGrid();\\n            }\\n\\n            surface.render();\\n\\n            // A draw implies that either the axes or data have changed, so we\\n            // should probably update the overlay highlights as well.\\n\\n            triggerRedrawOverlay();\\n        }\\n\\n        function extractRange(ranges, coord) {\\n            var axis, from, to, key, axes = allAxes();\\n\\n            for (var i = 0; i < axes.length; ++i) {\\n                axis = axes[i];\\n                if (axis.direction == coord) {\\n                    key = coord + axis.n + \\\"axis\\\";\\n                    if (!ranges[key] && axis.n == 1)\\n                        key = coord + \\\"axis\\\"; // support x1axis as xaxis\\n                    if (ranges[key]) {\\n                        from = ranges[key].from;\\n                        to = ranges[key].to;\\n                        break;\\n                    }\\n                }\\n            }\\n\\n            // backwards-compat stuff - to be removed in future\\n            if (!ranges[key]) {\\n                axis = coord == \\\"x\\\" ? xaxes[0] : yaxes[0];\\n                from = ranges[coord + \\\"1\\\"];\\n                to = ranges[coord + \\\"2\\\"];\\n            }\\n\\n            // auto-reverse as an added bonus\\n            if (from != null && to != null && from > to) {\\n                var tmp = from;\\n                from = to;\\n                to = tmp;\\n            }\\n\\n            return {from: from, to: to, axis: axis};\\n        }\\n\\n        function drawBackground() {\\n            ctx.save();\\n            ctx.translate(plotOffset.left, plotOffset.top);\\n\\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \\\"rgba(255, 255, 255, 0)\\\");\\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\\n            ctx.restore();\\n        }\\n\\n        function drawGrid() {\\n            var i, axes, bw, bc;\\n\\n            ctx.save();\\n            ctx.translate(plotOffset.left, plotOffset.top);\\n\\n            // draw markings\\n            var markings = options.grid.markings;\\n            if (markings) {\\n                if ($.isFunction(markings)) {\\n                    axes = plot.getAxes();\\n                    // xmin etc. is backwards compatibility, to be\\n                    // removed in the future\\n                    axes.xmin = axes.xaxis.min;\\n                    axes.xmax = axes.xaxis.max;\\n                    axes.ymin = axes.yaxis.min;\\n                    axes.ymax = axes.yaxis.max;\\n\\n                    markings = markings(axes);\\n                }\\n\\n                for (i = 0; i < markings.length; ++i) {\\n                    var m = markings[i],\\n                        xrange = extractRange(m, \\\"x\\\"),\\n                        yrange = extractRange(m, \\\"y\\\");\\n\\n                    // fill in missing\\n                    if (xrange.from == null)\\n                        xrange.from = xrange.axis.min;\\n                    if (xrange.to == null)\\n                        xrange.to = xrange.axis.max;\\n                    if (yrange.from == null)\\n                        yrange.from = yrange.axis.min;\\n                    if (yrange.to == null)\\n                        yrange.to = yrange.axis.max;\\n\\n                    // clip\\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\\n                        continue;\\n\\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\\n\\n                    var xequal = xrange.from === xrange.to,\\n                        yequal = yrange.from === yrange.to;\\n\\n                    if (xequal && yequal) {\\n                        continue;\\n                    }\\n\\n                    // then draw\\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\\n\\n                    if (xequal || yequal) {\\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\\n                        ctx.beginPath();\\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\\n                        ctx.lineWidth = lineWidth;\\n                        if (xequal) {\\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\\n                        } else {\\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);\\n                        }\\n                        ctx.stroke();\\n                    } else {\\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\\n                        ctx.fillRect(xrange.from, yrange.to,\\n                            xrange.to - xrange.from,\\n                            yrange.from - yrange.to);\\n                    }\\n                }\\n            }\\n\\n            // draw the ticks\\n            axes = allAxes();\\n            bw = options.grid.borderWidth;\\n\\n            for (var j = 0; j < axes.length; ++j) {\\n                var axis = axes[j], box = axis.box,\\n                    t = axis.tickLength, x, y, xoff, yoff;\\n                if (!axis.show || axis.ticks.length == 0)\\n                    continue;\\n\\n                ctx.lineWidth = 1;\\n\\n                // find the edges\\n                if (axis.direction == \\\"x\\\") {\\n                    x = 0;\\n                    if (t == \\\"full\\\")\\n                        y = (axis.position == \\\"top\\\" ? 0 : plotHeight);\\n                    else\\n                        y = box.top - plotOffset.top + (axis.position == \\\"top\\\" ? box.height : 0);\\n                }\\n                else {\\n                    y = 0;\\n                    if (t == \\\"full\\\")\\n                        x = (axis.position == \\\"left\\\" ? 0 : plotWidth);\\n                    else\\n                        x = box.left - plotOffset.left + (axis.position == \\\"left\\\" ? box.width : 0);\\n                }\\n\\n                // draw tick bar\\n                if (!axis.innermost) {\\n                    ctx.strokeStyle = axis.options.color;\\n                    ctx.beginPath();\\n                    xoff = yoff = 0;\\n                    if (axis.direction == \\\"x\\\")\\n                        xoff = plotWidth + 1;\\n                    else\\n                        yoff = plotHeight + 1;\\n\\n                    if (ctx.lineWidth == 1) {\\n                        if (axis.direction == \\\"x\\\") {\\n                            y = Math.floor(y) + 0.5;\\n                        } else {\\n                            x = Math.floor(x) + 0.5;\\n                        }\\n                    }\\n\\n                    ctx.moveTo(x, y);\\n                    ctx.lineTo(x + xoff, y + yoff);\\n                    ctx.stroke();\\n                }\\n\\n                // draw ticks\\n\\n                ctx.strokeStyle = axis.options.tickColor;\\n\\n                ctx.beginPath();\\n                for (i = 0; i < axis.ticks.length; ++i) {\\n                    var v = axis.ticks[i].v;\\n\\n                    xoff = yoff = 0;\\n\\n                    if (isNaN(v) || v < axis.min || v > axis.max\\n                        // skip those lying on the axes if we got a border\\n                        || (t == \\\"full\\\"\\n                        && ((typeof bw == \\\"object\\\" && bw[axis.position] > 0) || bw > 0)\\n                        && (v == axis.min || v == axis.max)))\\n                        continue;\\n\\n                    if (axis.direction == \\\"x\\\") {\\n                        x = axis.p2c(v);\\n                        yoff = t == \\\"full\\\" ? -plotHeight : t;\\n\\n                        if (axis.position == \\\"top\\\")\\n                            yoff = -yoff;\\n                    }\\n                    else {\\n                        y = axis.p2c(v);\\n                        xoff = t == \\\"full\\\" ? -plotWidth : t;\\n\\n                        if (axis.position == \\\"left\\\")\\n                            xoff = -xoff;\\n                    }\\n\\n                    if (ctx.lineWidth == 1) {\\n                        if (axis.direction == \\\"x\\\")\\n                            x = Math.floor(x) + 0.5;\\n                        else\\n                            y = Math.floor(y) + 0.5;\\n                    }\\n\\n                    ctx.moveTo(x, y);\\n                    ctx.lineTo(x + xoff, y + yoff);\\n                }\\n\\n                ctx.stroke();\\n            }\\n\\n\\n            // draw border\\n            if (bw) {\\n                // If either borderWidth or borderColor is an object, then draw the border\\n                // line by line instead of as one rectangle\\n                bc = options.grid.borderColor;\\n                if (typeof bw == \\\"object\\\" || typeof bc == \\\"object\\\") {\\n                    if (typeof bw !== \\\"object\\\") {\\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\\n                    }\\n                    if (typeof bc !== \\\"object\\\") {\\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\\n                    }\\n\\n                    if (bw.top > 0) {\\n                        ctx.strokeStyle = bc.top;\\n                        ctx.lineWidth = bw.top;\\n                        ctx.beginPath();\\n                        ctx.moveTo(0 - bw.left, 0 - bw.top / 2);\\n                        ctx.lineTo(plotWidth, 0 - bw.top / 2);\\n                        ctx.stroke();\\n                    }\\n\\n                    if (bw.right > 0) {\\n                        ctx.strokeStyle = bc.right;\\n                        ctx.lineWidth = bw.right;\\n                        ctx.beginPath();\\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\\n                        ctx.stroke();\\n                    }\\n\\n                    if (bw.bottom > 0) {\\n                        ctx.strokeStyle = bc.bottom;\\n                        ctx.lineWidth = bw.bottom;\\n                        ctx.beginPath();\\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\\n                        ctx.stroke();\\n                    }\\n\\n                    if (bw.left > 0) {\\n                        ctx.strokeStyle = bc.left;\\n                        ctx.lineWidth = bw.left;\\n                        ctx.beginPath();\\n                        ctx.moveTo(0 - bw.left / 2, plotHeight + bw.bottom);\\n                        ctx.lineTo(0 - bw.left / 2, 0);\\n                        ctx.stroke();\\n                    }\\n                }\\n                else {\\n                    ctx.lineWidth = bw;\\n                    ctx.strokeStyle = options.grid.borderColor;\\n                    ctx.strokeRect(-bw / 2, -bw / 2, plotWidth + bw, plotHeight + bw);\\n                }\\n            }\\n\\n            ctx.restore();\\n        }\\n\\n        function drawAxisLabels() {\\n\\n            $.each(allAxes(), function (_, axis) {\\n                var box = axis.box,\\n                    legacyStyles = axis.direction + \\\"Axis \\\" + axis.direction + axis.n + \\\"Axis\\\",\\n                    layer = \\\"flot-\\\" + axis.direction + \\\"-axis flot-\\\" + axis.direction + axis.n + \\\"-axis \\\" + legacyStyles,\\n                    font = axis.options.font || \\\"flot-tick-label tickLabel\\\",\\n                    tick, x, y, halign, valign;\\n\\n                // Remove text before checking for axis.show and ticks.length;\\n                // otherwise plugins, like flot-tickrotor, that draw their own\\n                // tick labels will end up with both theirs and the defaults.\\n\\n                surface.removeText(layer);\\n\\n                if (!axis.show || axis.ticks.length == 0)\\n                    return;\\n\\n                for (var i = 0; i < axis.ticks.length; ++i) {\\n\\n                    tick = axis.ticks[i];\\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\\n                        continue;\\n\\n                    if (axis.direction == \\\"x\\\") {\\n                        halign = \\\"center\\\";\\n                        x = plotOffset.left + axis.p2c(tick.v);\\n                        if (axis.position == \\\"bottom\\\") {\\n                            y = box.top + box.padding;\\n                        } else {\\n                            y = box.top + box.height - box.padding;\\n                            valign = \\\"bottom\\\";\\n                        }\\n                    } else {\\n                        valign = \\\"middle\\\";\\n                        y = plotOffset.top + axis.p2c(tick.v);\\n                        if (axis.position == \\\"left\\\") {\\n                            x = box.left + box.width - box.padding;\\n                            halign = \\\"right\\\";\\n                        } else {\\n                            x = box.left + box.padding;\\n                        }\\n                    }\\n\\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\\n                }\\n            });\\n        }\\n\\n        function drawSeries(series) {\\n            if (series.lines.show)\\n                drawSeriesLines(series);\\n            if (series.bars.show)\\n                drawSeriesBars(series);\\n            if (series.points.show)\\n                drawSeriesPoints(series);\\n        }\\n\\n        function drawSeriesLines(series) {\\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\\n                var points = datapoints.points,\\n                    ps = datapoints.pointsize,\\n                    prevx = null, prevy = null;\\n\\n                ctx.beginPath();\\n                for (var i = ps; i < points.length; i += ps) {\\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\\n                        x2 = points[i], y2 = points[i + 1];\\n\\n                    if (x1 == null || x2 == null)\\n                        continue;\\n\\n                    // clip with ymin\\n                    if (y1 <= y2 && y1 < axisy.min) {\\n                        if (y2 < axisy.min)\\n                            continue;   // line segment is outside\\n                        // compute new intersection point\\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                        y1 = axisy.min;\\n                    }\\n                    else if (y2 <= y1 && y2 < axisy.min) {\\n                        if (y1 < axisy.min)\\n                            continue;\\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                        y2 = axisy.min;\\n                    }\\n\\n                    // clip with ymax\\n                    if (y1 >= y2 && y1 > axisy.max) {\\n                        if (y2 > axisy.max)\\n                            continue;\\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                        y1 = axisy.max;\\n                    }\\n                    else if (y2 >= y1 && y2 > axisy.max) {\\n                        if (y1 > axisy.max)\\n                            continue;\\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                        y2 = axisy.max;\\n                    }\\n\\n                    // clip with xmin\\n                    if (x1 <= x2 && x1 < axisx.min) {\\n                        if (x2 < axisx.min)\\n                            continue;\\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\\n                        x1 = axisx.min;\\n                    }\\n                    else if (x2 <= x1 && x2 < axisx.min) {\\n                        if (x1 < axisx.min)\\n                            continue;\\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\\n                        x2 = axisx.min;\\n                    }\\n\\n                    // clip with xmax\\n                    if (x1 >= x2 && x1 > axisx.max) {\\n                        if (x2 > axisx.max)\\n                            continue;\\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\\n                        x1 = axisx.max;\\n                    }\\n                    else if (x2 >= x1 && x2 > axisx.max) {\\n                        if (x1 > axisx.max)\\n                            continue;\\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\\n                        x2 = axisx.max;\\n                    }\\n\\n                    if (x1 != prevx || y1 != prevy)\\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\\n\\n                    prevx = x2;\\n                    prevy = y2;\\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\\n                }\\n                ctx.stroke();\\n            }\\n\\n            function plotLineArea(datapoints, axisx, axisy) {\\n                var points = datapoints.points,\\n                    ps = datapoints.pointsize,\\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\\n                    i = 0, top, areaOpen = false,\\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\\n\\n                // we process each segment in two turns, first forward\\n                // direction to sketch out top, then once we hit the\\n                // end we go backwards to sketch the bottom\\n                while (true) {\\n                    if (ps > 0 && i > points.length + ps)\\n                        break;\\n\\n                    i += ps; // ps is negative if going backwards\\n\\n                    var x1 = points[i - ps],\\n                        y1 = points[i - ps + ypos],\\n                        x2 = points[i], y2 = points[i + ypos];\\n\\n                    if (areaOpen) {\\n                        if (ps > 0 && x1 != null && x2 == null) {\\n                            // at turning point\\n                            segmentEnd = i;\\n                            ps = -ps;\\n                            ypos = 2;\\n                            continue;\\n                        }\\n\\n                        if (ps < 0 && i == segmentStart + ps) {\\n                            // done with the reverse sweep\\n                            ctx.fill();\\n                            areaOpen = false;\\n                            ps = -ps;\\n                            ypos = 1;\\n                            i = segmentStart = segmentEnd + ps;\\n                            continue;\\n                        }\\n                    }\\n\\n                    if (x1 == null || x2 == null)\\n                        continue;\\n\\n                    // clip x values\\n\\n                    // clip with xmin\\n                    if (x1 <= x2 && x1 < axisx.min) {\\n                        if (x2 < axisx.min)\\n                            continue;\\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\\n                        x1 = axisx.min;\\n                    }\\n                    else if (x2 <= x1 && x2 < axisx.min) {\\n                        if (x1 < axisx.min)\\n                            continue;\\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\\n                        x2 = axisx.min;\\n                    }\\n\\n                    // clip with xmax\\n                    if (x1 >= x2 && x1 > axisx.max) {\\n                        if (x2 > axisx.max)\\n                            continue;\\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\\n                        x1 = axisx.max;\\n                    }\\n                    else if (x2 >= x1 && x2 > axisx.max) {\\n                        if (x1 > axisx.max)\\n                            continue;\\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\\n                        x2 = axisx.max;\\n                    }\\n\\n                    if (!areaOpen) {\\n                        // open area\\n                        ctx.beginPath();\\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\\n                        areaOpen = true;\\n                    }\\n\\n                    // now first check the case where both is outside\\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\\n                        continue;\\n                    }\\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\\n                        continue;\\n                    }\\n\\n                    // else it's a bit more complicated, there might\\n                    // be a flat maxed out rectangle first, then a\\n                    // triangular cutout or reverse; to find these\\n                    // keep track of the current x values\\n                    var x1old = x1, x2old = x2;\\n\\n                    // clip the y values, without shortcutting, we\\n                    // go through all cases in turn\\n\\n                    // clip with ymin\\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                        y1 = axisy.min;\\n                    }\\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                        y2 = axisy.min;\\n                    }\\n\\n                    // clip with ymax\\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                        y1 = axisy.max;\\n                    }\\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\\n                        y2 = axisy.max;\\n                    }\\n\\n                    // if the x value was changed we got a rectangle\\n                    // to fill\\n                    if (x1 != x1old) {\\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\\n                        // it goes to (x1, y1), but we fill that below\\n                    }\\n\\n                    // fill triangular section, this sometimes result\\n                    // in redundant points if (x1, y1) hasn't changed\\n                    // from previous line to, but we just ignore that\\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\\n\\n                    // fill the other rectangle if it's there\\n                    if (x2 != x2old) {\\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\\n                    }\\n                }\\n            }\\n\\n            ctx.save();\\n            ctx.translate(plotOffset.left, plotOffset.top);\\n            ctx.lineJoin = \\\"round\\\";\\n\\n            var lw = series.lines.lineWidth,\\n                sw = series.shadowSize;\\n            // FIXME: consider another form of shadow when filling is turned on\\n            if (lw > 0 && sw > 0) {\\n                // draw shadow as a thick and thin line with transparency\\n                ctx.lineWidth = sw;\\n                ctx.strokeStyle = \\\"rgba(0,0,0,0.1)\\\";\\n                // position shadow at angle from the mid of line\\n                var angle = Math.PI / 18;\\n                plotLine(series.datapoints, Math.sin(angle) * (lw / 2 + sw / 2), Math.cos(angle) * (lw / 2 + sw / 2), series.xaxis, series.yaxis);\\n                ctx.lineWidth = sw / 2;\\n                plotLine(series.datapoints, Math.sin(angle) * (lw / 2 + sw / 4), Math.cos(angle) * (lw / 2 + sw / 4), series.xaxis, series.yaxis);\\n            }\\n\\n            ctx.lineWidth = lw;\\n            ctx.strokeStyle = series.color;\\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\\n            if (fillStyle) {\\n                ctx.fillStyle = fillStyle;\\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\\n            }\\n\\n            if (lw > 0)\\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\\n            ctx.restore();\\n        }\\n\\n        function drawSeriesPoints(series) {\\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\\n                var points = datapoints.points, ps = datapoints.pointsize;\\n\\n                for (var i = 0; i < points.length; i += ps) {\\n                    var x = points[i], y = points[i + 1];\\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\\n                        continue;\\n\\n                    ctx.beginPath();\\n                    x = axisx.p2c(x);\\n                    y = axisy.p2c(y) + offset;\\n                    if (symbol == \\\"circle\\\")\\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\\n                    else\\n                        symbol(ctx, x, y, radius, shadow);\\n                    ctx.closePath();\\n\\n                    if (fillStyle) {\\n                        ctx.fillStyle = fillStyle;\\n                        ctx.fill();\\n                    }\\n                    ctx.stroke();\\n                }\\n            }\\n\\n            ctx.save();\\n            ctx.translate(plotOffset.left, plotOffset.top);\\n\\n            var lw = series.points.lineWidth,\\n                sw = series.shadowSize,\\n                radius = series.points.radius,\\n                symbol = series.points.symbol;\\n\\n            // If the user sets the line width to 0, we change it to a very\\n            // small value. A line width of 0 seems to force the default of 1.\\n            // Doing the conditional here allows the shadow setting to still be\\n            // optional even with a lineWidth of 0.\\n\\n            if (lw == 0)\\n                lw = 0.0001;\\n\\n            if (lw > 0 && sw > 0) {\\n                // draw shadow in two steps\\n                var w = sw / 2;\\n                ctx.lineWidth = w;\\n                ctx.strokeStyle = \\\"rgba(0,0,0,0.1)\\\";\\n                plotPoints(series.datapoints, radius, null, w + w / 2, true,\\n                    series.xaxis, series.yaxis, symbol);\\n\\n                ctx.strokeStyle = \\\"rgba(0,0,0,0.2)\\\";\\n                plotPoints(series.datapoints, radius, null, w / 2, true,\\n                    series.xaxis, series.yaxis, symbol);\\n            }\\n\\n            ctx.lineWidth = lw;\\n            ctx.strokeStyle = series.color;\\n            plotPoints(series.datapoints, radius,\\n                getFillStyle(series.points, series.color), 0, false,\\n                series.xaxis, series.yaxis, symbol);\\n            ctx.restore();\\n        }\\n\\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\\n            var left, right, bottom, top,\\n                drawLeft, drawRight, drawTop, drawBottom,\\n                tmp;\\n\\n            // in horizontal mode, we start the bar from the left\\n            // instead of from the bottom so it appears to be\\n            // horizontal rather than vertical\\n            if (horizontal) {\\n                drawBottom = drawRight = drawTop = true;\\n                drawLeft = false;\\n                left = b;\\n                right = x;\\n                top = y + barLeft;\\n                bottom = y + barRight;\\n\\n                // account for negative bars\\n                if (right < left) {\\n                    tmp = right;\\n                    right = left;\\n                    left = tmp;\\n                    drawLeft = true;\\n                    drawRight = false;\\n                }\\n            }\\n            else {\\n                drawLeft = drawRight = drawTop = true;\\n                drawBottom = false;\\n                left = x + barLeft;\\n                right = x + barRight;\\n                bottom = b;\\n                top = y;\\n\\n                // account for negative bars\\n                if (top < bottom) {\\n                    tmp = top;\\n                    top = bottom;\\n                    bottom = tmp;\\n                    drawBottom = true;\\n                    drawTop = false;\\n                }\\n            }\\n\\n            // clip\\n            if (right < axisx.min || left > axisx.max ||\\n                top < axisy.min || bottom > axisy.max)\\n                return;\\n\\n            if (left < axisx.min) {\\n                left = axisx.min;\\n                drawLeft = false;\\n            }\\n\\n            if (right > axisx.max) {\\n                right = axisx.max;\\n                drawRight = false;\\n            }\\n\\n            if (bottom < axisy.min) {\\n                bottom = axisy.min;\\n                drawBottom = false;\\n            }\\n\\n            if (top > axisy.max) {\\n                top = axisy.max;\\n                drawTop = false;\\n            }\\n\\n            left = axisx.p2c(left);\\n            bottom = axisy.p2c(bottom);\\n            right = axisx.p2c(right);\\n            top = axisy.p2c(top);\\n\\n            // fill the bar\\n            if (fillStyleCallback) {\\n                c.fillStyle = fillStyleCallback(bottom, top);\\n                c.fillRect(left, top, right - left, bottom - top)\\n            }\\n\\n            // draw outline\\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\\n                c.beginPath();\\n\\n                // FIXME: inline moveTo is buggy with excanvas\\n                c.moveTo(left, bottom);\\n                if (drawLeft)\\n                    c.lineTo(left, top);\\n                else\\n                    c.moveTo(left, top);\\n                if (drawTop)\\n                    c.lineTo(right, top);\\n                else\\n                    c.moveTo(right, top);\\n                if (drawRight)\\n                    c.lineTo(right, bottom);\\n                else\\n                    c.moveTo(right, bottom);\\n                if (drawBottom)\\n                    c.lineTo(left, bottom);\\n                else\\n                    c.moveTo(left, bottom);\\n                c.stroke();\\n            }\\n        }\\n\\n        function drawSeriesBars(series) {\\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\\n                var points = datapoints.points, ps = datapoints.pointsize;\\n\\n                for (var i = 0; i < points.length; i += ps) {\\n                    if (points[i] == null)\\n                        continue;\\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\\n                }\\n            }\\n\\n            ctx.save();\\n            ctx.translate(plotOffset.left, plotOffset.top);\\n\\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\\n            ctx.lineWidth = series.bars.lineWidth;\\n            ctx.strokeStyle = series.color;\\n\\n            var barLeft;\\n\\n            switch (series.bars.align) {\\n                case \\\"left\\\":\\n                    barLeft = 0;\\n                    break;\\n                case \\\"right\\\":\\n                    barLeft = -series.bars.barWidth;\\n                    break;\\n                default:\\n                    barLeft = -series.bars.barWidth / 2;\\n            }\\n\\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) {\\n                    return getFillStyle(series.bars, series.color, bottom, top);\\n                } : null;\\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\\n            ctx.restore();\\n        }\\n\\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\\n            var fill = filloptions.fill;\\n            if (!fill)\\n                return null;\\n\\n            if (filloptions.fillColor)\\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\\n\\n            var c = $.color.parse(seriesColor);\\n            c.a = typeof fill == \\\"number\\\" ? fill : 0.4;\\n            c.normalize();\\n            return c.toString();\\n        }\\n\\n        function insertLegend() {\\n\\n            if (options.legend.container != null) {\\n                $(options.legend.container).html(\\\"\\\");\\n            } else {\\n                placeholder.find(\\\".legend\\\").remove();\\n            }\\n\\n            if (!options.legend.show) {\\n                return;\\n            }\\n\\n            var fragments = [], entries = [], rowStarted = false,\\n                lf = options.legend.labelFormatter, s, label;\\n\\n            // Build a list of legend entries, with each having a label and a color\\n\\n            for (var i = 0; i < series.length; ++i) {\\n                s = series[i];\\n                if (s.label) {\\n                    label = lf ? lf(s.label, s) : s.label;\\n                    if (label) {\\n                        entries.push({\\n                            label: label,\\n                            color: s.color\\n                        });\\n                    }\\n                }\\n            }\\n\\n            // Sort the legend using either the default or a custom comparator\\n\\n            if (options.legend.sorted) {\\n                if ($.isFunction(options.legend.sorted)) {\\n                    entries.sort(options.legend.sorted);\\n                } else if (options.legend.sorted == \\\"reverse\\\") {\\n                    entries.reverse();\\n                } else {\\n                    var ascending = options.legend.sorted != \\\"descending\\\";\\n                    entries.sort(function (a, b) {\\n                        return a.label == b.label ? 0 : (\\n                                (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\\n                            );\\n                    });\\n                }\\n            }\\n\\n            // Generate markup for the list of entries, in their final order\\n\\n            for (var i = 0; i < entries.length; ++i) {\\n\\n                var entry = entries[i];\\n\\n                if (i % options.legend.noColumns == 0) {\\n                    if (rowStarted)\\n                        fragments.push('</tr>');\\n                    fragments.push('<tr>');\\n                    rowStarted = true;\\n                }\\n\\n                fragments.push(\\n                    '<td class=\\\"legendColorBox\\\"><div style=\\\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\\\"><div style=\\\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\\\"></div></div></td>' +\\n                    '<td class=\\\"legendLabel\\\">' + entry.label + '</td>'\\n                );\\n            }\\n\\n            if (rowStarted)\\n                fragments.push('</tr>');\\n\\n            if (fragments.length == 0)\\n                return;\\n\\n            var table = '<table style=\\\"font-size:smaller;color:' + options.grid.color + '\\\">' + fragments.join(\\\"\\\") + '</table>';\\n            if (options.legend.container != null)\\n                $(options.legend.container).html(table);\\n            else {\\n                var pos = \\\"\\\",\\n                    p = options.legend.position,\\n                    m = options.legend.margin;\\n                if (m[0] == null)\\n                    m = [m, m];\\n                if (p.charAt(0) == \\\"n\\\")\\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\\n                else if (p.charAt(0) == \\\"s\\\")\\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\\n                if (p.charAt(1) == \\\"e\\\")\\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\\n                else if (p.charAt(1) == \\\"w\\\")\\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\\n                var legend = $('<div class=\\\"legend\\\">' + table.replace('style=\\\"', 'style=\\\"position:absolute;' + pos + ';') + '</div>').appendTo(placeholder);\\n                if (options.legend.backgroundOpacity != 0.0) {\\n                    // put in the transparent background\\n                    // separately to avoid blended labels and\\n                    // label boxes\\n                    var c = options.legend.backgroundColor;\\n                    if (c == null) {\\n                        c = options.grid.backgroundColor;\\n                        if (c && typeof c == \\\"string\\\")\\n                            c = $.color.parse(c);\\n                        else\\n                            c = $.color.extract(legend, 'background-color');\\n                        c.a = 1;\\n                        c = c.toString();\\n                    }\\n                    var div = legend.children();\\n                    $('<div style=\\\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos + 'background-color:' + c + ';\\\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\\n                }\\n            }\\n        }\\n\\n\\n        // interactive features\\n\\n        var highlights = [],\\n            redrawTimeout = null;\\n\\n        // returns the data item the mouse is over, or null if none is found\\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\\n            var maxDistance = options.grid.mouseActiveRadius,\\n                smallestDistance = maxDistance * maxDistance + 1,\\n                item = null, foundPoint = false, i, j, ps;\\n\\n            for (i = series.length - 1; i >= 0; --i) {\\n                if (!seriesFilter(series[i]))\\n                    continue;\\n\\n                var s = series[i],\\n                    axisx = s.xaxis,\\n                    axisy = s.yaxis,\\n                    points = s.datapoints.points,\\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\\n                    my = axisy.c2p(mouseY),\\n                    maxx = maxDistance / axisx.scale,\\n                    maxy = maxDistance / axisy.scale;\\n\\n                ps = s.datapoints.pointsize;\\n                // with inverse transforms, we can't use the maxx/maxy\\n                // optimization, sadly\\n                if (axisx.options.inverseTransform)\\n                    maxx = Number.MAX_VALUE;\\n                if (axisy.options.inverseTransform)\\n                    maxy = Number.MAX_VALUE;\\n\\n                if (s.lines.show || s.points.show) {\\n                    for (j = 0; j < points.length; j += ps) {\\n                        var x = points[j], y = points[j + 1];\\n                        if (x == null)\\n                            continue;\\n\\n                        // For points and lines, the cursor must be within a\\n                        // certain distance to the data point\\n                        if (x - mx > maxx || x - mx < -maxx ||\\n                            y - my > maxy || y - my < -maxy)\\n                            continue;\\n\\n                        // We have to calculate distances in pixels, not in\\n                        // data units, because the scales of the axes may be different\\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\\n                            dist = dx * dx + dy * dy; // we save the sqrt\\n\\n                        // use <= to ensure last point takes precedence\\n                        // (last generally means on top of)\\n                        if (dist < smallestDistance) {\\n                            smallestDistance = dist;\\n                            item = [i, j / ps];\\n                        }\\n                    }\\n                }\\n\\n                if (s.bars.show && !item) { // no other point can be nearby\\n\\n                    var barLeft, barRight;\\n\\n                    switch (s.bars.align) {\\n                        case \\\"left\\\":\\n                            barLeft = 0;\\n                            break;\\n                        case \\\"right\\\":\\n                            barLeft = -s.bars.barWidth;\\n                            break;\\n                        default:\\n                            barLeft = -s.bars.barWidth / 2;\\n                    }\\n\\n                    barRight = barLeft + s.bars.barWidth;\\n\\n                    for (j = 0; j < points.length; j += ps) {\\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\\n                        if (x == null)\\n                            continue;\\n\\n                        // for a bar graph, the cursor must be inside the bar\\n                        if (series[i].bars.horizontal ?\\n                                (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\\n                                my >= y + barLeft && my <= y + barRight) :\\n                                (mx >= x + barLeft && mx <= x + barRight &&\\n                                my >= Math.min(b, y) && my <= Math.max(b, y)))\\n                            item = [i, j / ps];\\n                    }\\n                }\\n            }\\n\\n            if (item) {\\n                i = item[0];\\n                j = item[1];\\n                ps = series[i].datapoints.pointsize;\\n\\n                return {\\n                    datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\\n                    dataIndex: j,\\n                    series: series[i],\\n                    seriesIndex: i\\n                };\\n            }\\n\\n            return null;\\n        }\\n\\n        function onMouseMove(e) {\\n            if (options.grid.hoverable)\\n                triggerClickHoverEvent(\\\"plothover\\\", e,\\n                    function (s) {\\n                        return s[\\\"hoverable\\\"] != false;\\n                    });\\n        }\\n\\n        function onMouseLeave(e) {\\n            if (options.grid.hoverable)\\n                triggerClickHoverEvent(\\\"plothover\\\", e,\\n                    function (s) {\\n                        return false;\\n                    });\\n        }\\n\\n        function onClick(e) {\\n            triggerClickHoverEvent(\\\"plotclick\\\", e,\\n                function (s) {\\n                    return s[\\\"clickable\\\"] != false;\\n                });\\n        }\\n\\n        // trigger click or hover event (they send the same parameters\\n        // so we share their code)\\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\\n            var offset = eventHolder.offset(),\\n                canvasX = event.pageX - offset.left - plotOffset.left,\\n                canvasY = event.pageY - offset.top - plotOffset.top,\\n                pos = canvasToAxisCoords({left: canvasX, top: canvasY});\\n\\n            pos.pageX = event.pageX;\\n            pos.pageY = event.pageY;\\n\\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\\n\\n            if (item) {\\n                // fill in mouse pos for any listeners out there\\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\\n            }\\n\\n            if (options.grid.autoHighlight) {\\n                // clear auto-highlights\\n                for (var i = 0; i < highlights.length; ++i) {\\n                    var h = highlights[i];\\n                    if (h.auto == eventname && !(item && h.series == item.series &&\\n                        h.point[0] == item.datapoint[0] &&\\n                        h.point[1] == item.datapoint[1]))\\n                        unhighlight(h.series, h.point);\\n                }\\n\\n                if (item)\\n                    highlight(item.series, item.datapoint, eventname);\\n            }\\n\\n            placeholder.trigger(eventname, [pos, item]);\\n        }\\n\\n        function triggerRedrawOverlay() {\\n            var t = options.interaction.redrawOverlayInterval;\\n            if (t == -1) {      // skip event queue\\n                drawOverlay();\\n                return;\\n            }\\n\\n            if (!redrawTimeout)\\n                redrawTimeout = setTimeout(drawOverlay, t);\\n        }\\n\\n        function drawOverlay() {\\n            redrawTimeout = null;\\n\\n            // draw highlights\\n            octx.save();\\n            overlay.clear();\\n            octx.translate(plotOffset.left, plotOffset.top);\\n\\n            var i, hi;\\n            for (i = 0; i < highlights.length; ++i) {\\n                hi = highlights[i];\\n\\n                if (hi.series.bars.show)\\n                    drawBarHighlight(hi.series, hi.point);\\n                else\\n                    drawPointHighlight(hi.series, hi.point);\\n            }\\n            octx.restore();\\n\\n            executeHooks(hooks.drawOverlay, [octx]);\\n        }\\n\\n        function highlight(s, point, auto) {\\n            if (typeof s == \\\"number\\\")\\n                s = series[s];\\n\\n            if (typeof point == \\\"number\\\") {\\n                var ps = s.datapoints.pointsize;\\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\\n            }\\n\\n            var i = indexOfHighlight(s, point);\\n            if (i == -1) {\\n                highlights.push({series: s, point: point, auto: auto});\\n\\n                triggerRedrawOverlay();\\n            }\\n            else if (!auto)\\n                highlights[i].auto = false;\\n        }\\n\\n        function unhighlight(s, point) {\\n            if (s == null && point == null) {\\n                highlights = [];\\n                triggerRedrawOverlay();\\n                return;\\n            }\\n\\n            if (typeof s == \\\"number\\\")\\n                s = series[s];\\n\\n            if (typeof point == \\\"number\\\") {\\n                var ps = s.datapoints.pointsize;\\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\\n            }\\n\\n            var i = indexOfHighlight(s, point);\\n            if (i != -1) {\\n                highlights.splice(i, 1);\\n\\n                triggerRedrawOverlay();\\n            }\\n        }\\n\\n        function indexOfHighlight(s, p) {\\n            for (var i = 0; i < highlights.length; ++i) {\\n                var h = highlights[i];\\n                if (h.series == s && h.point[0] == p[0]\\n                    && h.point[1] == p[1])\\n                    return i;\\n            }\\n            return -1;\\n        }\\n\\n        function drawPointHighlight(series, point) {\\n            var x = point[0], y = point[1],\\n                axisx = series.xaxis, axisy = series.yaxis,\\n                highlightColor = (typeof series.highlightColor === \\\"string\\\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\\n\\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\\n                return;\\n\\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\\n            octx.lineWidth = pointRadius;\\n            octx.strokeStyle = highlightColor;\\n            var radius = 1.5 * pointRadius;\\n            x = axisx.p2c(x);\\n            y = axisy.p2c(y);\\n\\n            octx.beginPath();\\n            if (series.points.symbol == \\\"circle\\\")\\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\\n            else\\n                series.points.symbol(octx, x, y, radius, false);\\n            octx.closePath();\\n            octx.stroke();\\n        }\\n\\n        function drawBarHighlight(series, point) {\\n            var highlightColor = (typeof series.highlightColor === \\\"string\\\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\\n                fillStyle = highlightColor,\\n                barLeft;\\n\\n            switch (series.bars.align) {\\n                case \\\"left\\\":\\n                    barLeft = 0;\\n                    break;\\n                case \\\"right\\\":\\n                    barLeft = -series.bars.barWidth;\\n                    break;\\n                default:\\n                    barLeft = -series.bars.barWidth / 2;\\n            }\\n\\n            octx.lineWidth = series.bars.lineWidth;\\n            octx.strokeStyle = highlightColor;\\n\\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\\n                function () {\\n                    return fillStyle;\\n                }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\\n        }\\n\\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\\n            if (typeof spec == \\\"string\\\")\\n                return spec;\\n            else {\\n                // assume this is a gradient spec; IE currently only\\n                // supports a simple vertical gradient properly, so that's\\n                // what we support too\\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\\n\\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\\n                    var c = spec.colors[i];\\n                    if (typeof c != \\\"string\\\") {\\n                        var co = $.color.parse(defaultColor);\\n                        if (c.brightness != null)\\n                            co = co.scale('rgb', c.brightness);\\n                        if (c.opacity != null)\\n                            co.a *= c.opacity;\\n                        c = co.toString();\\n                    }\\n                    gradient.addColorStop(i / (l - 1), c);\\n                }\\n\\n                return gradient;\\n            }\\n        }\\n    }\\n\\n    // Add the plot function to the top level of the jQuery object\\n\\n    $.plot = function (placeholder, data, options) {\\n        //var t0 = new Date();\\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\\n        //(window.console ? console.log : alert)(\\\"time used (msecs): \\\" + ((new Date()).getTime() - t0.getTime()));\\n        return plot;\\n    };\\n\\n    $.plot.version = \\\"0.8.3\\\";\\n\\n    $.plot.plugins = [];\\n\\n    // Also add the plot function as a chainable property\\n\\n    $.fn.plot = function (data, options) {\\n        return this.each(function () {\\n            $.plot(this, data, options);\\n        });\\n    };\\n\\n    // round to nearby lower multiple of base\\n    function floorInBase(n, base) {\\n        return base * Math.floor(n / base);\\n    }\\n\\n})(jQuery);\\n\\n/* Flot plugin for automatically redrawing plots as the placeholder resizes.\\n\\n Copyright (c) 2007-2014 IOLA and Ole Laursen.\\n Licensed under the MIT license.\\n\\n It works by listening for changes on the placeholder div (through the jQuery\\n resize event plugin) - if the size changes, it will redraw the plot.\\n\\n There are no options. If you need to disable the plugin for some plots, you\\n can just fix the size of their placeholders.\\n\\n */\\n\\n/* Inline dependency:\\n * jQuery resize event - v1.1 - 3/14/2010\\n * http://benalman.com/projects/jquery-resize-plugin/\\n *\\n * Copyright (c) 2010 \\\"Cowboy\\\" Ben Alman\\n * Dual licensed under the MIT and GPL licenses.\\n * http://benalman.com/about/license/\\n */\\n(function ($, e, t) {\\n    \\\"$:nomunge\\\";\\n    var i = [], n = $.resize = $.extend($.resize, {}), a, r = false, s = \\\"setTimeout\\\", u = \\\"resize\\\", m = u + \\\"-special-event\\\", o = \\\"pendingDelay\\\", l = \\\"activeDelay\\\", f = \\\"throttleWindow\\\";\\n    n[o] = 200;\\n    n[l] = 20;\\n    n[f] = true;\\n    $.event.special[u] = {\\n        setup: function () {\\n            if (!n[f] && this[s]) {\\n                return false\\n            }\\n            var e = $(this);\\n            i.push(this);\\n            e.data(m, {w: e.width(), h: e.height()});\\n            if (i.length === 1) {\\n                a = t;\\n                h()\\n            }\\n        }, teardown: function () {\\n            if (!n[f] && this[s]) {\\n                return false\\n            }\\n            var e = $(this);\\n            for (var t = i.length - 1; t >= 0; t--) {\\n                if (i[t] == this) {\\n                    i.splice(t, 1);\\n                    break\\n                }\\n            }\\n            e.removeData(m);\\n            if (!i.length) {\\n                if (r) {\\n                    cancelAnimationFrame(a)\\n                } else {\\n                    clearTimeout(a)\\n                }\\n                a = null\\n            }\\n        }, add: function (e) {\\n            if (!n[f] && this[s]) {\\n                return false\\n            }\\n            var i;\\n\\n            function a(e, n, a) {\\n                var r = $(this), s = r.data(m) || {};\\n                s.w = n !== t ? n : r.width();\\n                s.h = a !== t ? a : r.height();\\n                i.apply(this, arguments)\\n            }\\n\\n            if ($.isFunction(e)) {\\n                i = e;\\n                return a\\n            } else {\\n                i = e.handler;\\n                e.handler = a\\n            }\\n        }\\n    };\\n    function h(t) {\\n        if (r === true) {\\n            r = t || 1\\n        }\\n        for (var s = i.length - 1; s >= 0; s--) {\\n            var l = $(i[s]);\\n            if (l[0] == e || l.is(\\\":visible\\\")) {\\n                var f = l.width(), c = l.height(), d = l.data(m);\\n                if (d && (f !== d.w || c !== d.h)) {\\n                    l.trigger(u, [d.w = f, d.h = c]);\\n                    r = t || true\\n                }\\n            } else {\\n                d = l.data(m);\\n                d.w = 0;\\n                d.h = 0\\n            }\\n        }\\n        if (a !== null) {\\n            if (r && (t == null || t - r < 1e3)) {\\n                a = e.requestAnimationFrame(h)\\n            } else {\\n                a = setTimeout(h, n[o]);\\n                r = false\\n            }\\n        }\\n    }\\n\\n    if (!e.requestAnimationFrame) {\\n        e.requestAnimationFrame = function () {\\n            return e.webkitRequestAnimationFrame || e.mozRequestAnimationFrame || e.oRequestAnimationFrame || e.msRequestAnimationFrame || function (t, i) {\\n                    return e.setTimeout(function () {\\n                        t((new Date).getTime())\\n                    }, n[l])\\n                }\\n        }()\\n    }\\n    if (!e.cancelAnimationFrame) {\\n        e.cancelAnimationFrame = function () {\\n            return e.webkitCancelRequestAnimationFrame || e.mozCancelRequestAnimationFrame || e.oCancelRequestAnimationFrame || e.msCancelRequestAnimationFrame || clearTimeout\\n        }()\\n    }\\n})(jQuery, this);\\n\\n(function ($) {\\n    var options = {}; // no options\\n\\n    function init(plot) {\\n        function onResize() {\\n            var placeholder = plot.getPlaceholder();\\n\\n            // somebody might have hidden us and we can't plot\\n            // when we don't have the dimensions\\n            if (placeholder.width() == 0 || placeholder.height() == 0)\\n                return;\\n\\n            plot.resize();\\n            plot.setupGrid();\\n            plot.draw();\\n        }\\n\\n        function bindEvents(plot, eventHolder) {\\n            plot.getPlaceholder().resize(onResize);\\n        }\\n\\n        function shutdown(plot, eventHolder) {\\n            plot.getPlaceholder().unbind(\\\"resize\\\", onResize);\\n        }\\n\\n        plot.hooks.bindEvents.push(bindEvents);\\n        plot.hooks.shutdown.push(shutdown);\\n    }\\n\\n    $.plot.plugins.push({\\n        init: init,\\n        options: options,\\n        name: 'resize',\\n        version: '1.0'\\n    });\\n})(jQuery);\\n\\n/* Flot plugin for rendering pie charts.\\n\\n Copyright (c) 2007-2014 IOLA and Ole Laursen.\\n Licensed under the MIT license.\\n\\n The plugin assumes that each series has a single data value, and that each\\n value is a positive integer or zero.  Negative numbers don't make sense for a\\n pie chart, and have unpredictable results.  The values do NOT need to be\\n passed in as percentages; the plugin will calculate the total and per-slice\\n percentages internally.\\n\\n * Created by Brian Medendorp\\n\\n * Updated with contributions from btburnett3, Anthony Aragues and Xavi Ivars\\n\\n The plugin supports these options:\\n\\n series: {\\n pie: {\\n show: true/false\\n radius: 0-1 for percentage of fullsize, or a specified pixel length, or 'auto'\\n innerRadius: 0-1 for percentage of fullsize or a specified pixel length, for creating a donut effect\\n startAngle: 0-2 factor of PI used for starting angle (in radians) i.e 3/2 starts at the top, 0 and 2 have the same result\\n tilt: 0-1 for percentage to tilt the pie, where 1 is no tilt, and 0 is completely flat (nothing will show)\\n offset: {\\n top: integer value to move the pie up or down\\n left: integer value to move the pie left or right, or 'auto'\\n },\\n stroke: {\\n color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#FFF')\\n width: integer pixel width of the stroke\\n },\\n label: {\\n show: true/false, or 'auto'\\n formatter:  a user-defined function that modifies the text/style of the label text\\n radius: 0-1 for percentage of fullsize, or a specified pixel length\\n background: {\\n color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#000')\\n opacity: 0-1\\n },\\n threshold: 0-1 for the percentage value at which to hide labels (if they're too small)\\n },\\n combine: {\\n threshold: 0-1 for the percentage value at which to combine slices (if they're too small)\\n color: any hexidecimal color value (other formats may or may not work, so best to stick with something like '#CCC'), if null, the plugin will automatically use the color of the first slice to be combined\\n label: any text value of what the combined slice should be labeled\\n }\\n highlight: {\\n opacity: 0-1\\n }\\n }\\n }\\n\\n More detail and specific examples can be found in the included HTML file.\\n\\n */\\n\\n(function ($) {\\n\\n    // Maximum redraw attempts when fitting labels within the plot\\n\\n    var REDRAW_ATTEMPTS = 10;\\n\\n    // Factor by which to shrink the pie when fitting labels within the plot\\n\\n    var REDRAW_SHRINK = 0.95;\\n\\n    function init(plot) {\\n\\n        var canvas = null,\\n            target = null,\\n            options = null,\\n            maxRadius = null,\\n            centerLeft = null,\\n            centerTop = null,\\n            processed = false,\\n            ctx = null;\\n\\n        // interactive variables\\n\\n        var highlights = [];\\n\\n        // add hook to determine if pie plugin in enabled, and then perform necessary operations\\n\\n        plot.hooks.processOptions.push(function (plot, options) {\\n            if (options.series.pie.show) {\\n\\n                options.grid.show = false;\\n\\n                // set labels.show\\n\\n                if (options.series.pie.label.show == \\\"auto\\\") {\\n                    if (options.legend.show) {\\n                        options.series.pie.label.show = false;\\n                    } else {\\n                        options.series.pie.label.show = true;\\n                    }\\n                }\\n\\n                // set radius\\n\\n                if (options.series.pie.radius == \\\"auto\\\") {\\n                    if (options.series.pie.label.show) {\\n                        options.series.pie.radius = 3 / 4;\\n                    } else {\\n                        options.series.pie.radius = 1;\\n                    }\\n                }\\n\\n                // ensure sane tilt\\n\\n                if (options.series.pie.tilt > 1) {\\n                    options.series.pie.tilt = 1;\\n                } else if (options.series.pie.tilt < 0) {\\n                    options.series.pie.tilt = 0;\\n                }\\n            }\\n        });\\n\\n        plot.hooks.bindEvents.push(function (plot, eventHolder) {\\n            var options = plot.getOptions();\\n            if (options.series.pie.show) {\\n                if (options.grid.hoverable) {\\n                    eventHolder.unbind(\\\"mousemove\\\").mousemove(onMouseMove);\\n                }\\n                if (options.grid.clickable) {\\n                    eventHolder.unbind(\\\"click\\\").click(onClick);\\n                }\\n            }\\n        });\\n\\n        plot.hooks.processDatapoints.push(function (plot, series, data, datapoints) {\\n            var options = plot.getOptions();\\n            if (options.series.pie.show) {\\n                processDatapoints(plot, series, data, datapoints);\\n            }\\n        });\\n\\n        plot.hooks.drawOverlay.push(function (plot, octx) {\\n            var options = plot.getOptions();\\n            if (options.series.pie.show) {\\n                drawOverlay(plot, octx);\\n            }\\n        });\\n\\n        plot.hooks.draw.push(function (plot, newCtx) {\\n            var options = plot.getOptions();\\n            if (options.series.pie.show) {\\n                draw(plot, newCtx);\\n            }\\n        });\\n\\n        function processDatapoints(plot, series, datapoints) {\\n            if (!processed) {\\n                processed = true;\\n                canvas = plot.getCanvas();\\n                target = $(canvas).parent();\\n                options = plot.getOptions();\\n                plot.setData(combine(plot.getData()));\\n            }\\n        }\\n\\n        function combine(data) {\\n\\n            var total = 0,\\n                combined = 0,\\n                numCombined = 0,\\n                color = options.series.pie.combine.color,\\n                newdata = [];\\n\\n            // Fix up the raw data from Flot, ensuring the data is numeric\\n\\n            for (var i = 0; i < data.length; ++i) {\\n\\n                var value = data[i].data;\\n\\n                // If the data is an array, we'll assume that it's a standard\\n                // Flot x-y pair, and are concerned only with the second value.\\n\\n                // Note how we use the original array, rather than creating a\\n                // new one; this is more efficient and preserves any extra data\\n                // that the user may have stored in higher indexes.\\n\\n                if ($.isArray(value) && value.length == 1) {\\n                    value = value[0];\\n                }\\n\\n                if ($.isArray(value)) {\\n                    // Equivalent to $.isNumeric() but compatible with jQuery < 1.7\\n                    if (!isNaN(parseFloat(value[1])) && isFinite(value[1])) {\\n                        value[1] = +value[1];\\n                    } else {\\n                        value[1] = 0;\\n                    }\\n                } else if (!isNaN(parseFloat(value)) && isFinite(value)) {\\n                    value = [1, +value];\\n                } else {\\n                    value = [1, 0];\\n                }\\n\\n                data[i].data = [value];\\n            }\\n\\n            // Sum up all the slices, so we can calculate percentages for each\\n\\n            for (var i = 0; i < data.length; ++i) {\\n                total += data[i].data[0][1];\\n            }\\n\\n            // Count the number of slices with percentages below the combine\\n            // threshold; if it turns out to be just one, we won't combine.\\n\\n            for (var i = 0; i < data.length; ++i) {\\n                var value = data[i].data[0][1];\\n                if (value / total <= options.series.pie.combine.threshold) {\\n                    combined += value;\\n                    numCombined++;\\n                    if (!color) {\\n                        color = data[i].color;\\n                    }\\n                }\\n            }\\n\\n            for (var i = 0; i < data.length; ++i) {\\n                var value = data[i].data[0][1];\\n                if (numCombined < 2 || value / total > options.series.pie.combine.threshold) {\\n                    newdata.push(\\n                        $.extend(data[i], {\\n                            /* extend to allow keeping all other original data values\\n                             and using them e.g. in labelFormatter. */\\n                            data: [[1, value]],\\n                            color: data[i].color,\\n                            label: data[i].label,\\n                            angle: value * Math.PI * 2 / total,\\n                            percent: value / (total / 100)\\n                        })\\n                    );\\n                }\\n            }\\n\\n            if (numCombined > 1) {\\n                newdata.push({\\n                    data: [[1, combined]],\\n                    color: color,\\n                    label: options.series.pie.combine.label,\\n                    angle: combined * Math.PI * 2 / total,\\n                    percent: combined / (total / 100)\\n                });\\n            }\\n\\n            return newdata;\\n        }\\n\\n        function draw(plot, newCtx) {\\n\\n            if (!target) {\\n                return; // if no series were passed\\n            }\\n\\n            var canvasWidth = plot.getPlaceholder().width(),\\n                canvasHeight = plot.getPlaceholder().height(),\\n                legendWidth = target.children().filter(\\\".legend\\\").children().width() || 0;\\n\\n            ctx = newCtx;\\n\\n            // WARNING: HACK! REWRITE THIS CODE AS SOON AS POSSIBLE!\\n\\n            // When combining smaller slices into an 'other' slice, we need to\\n            // add a new series.  Since Flot gives plugins no way to modify the\\n            // list of series, the pie plugin uses a hack where the first call\\n            // to processDatapoints results in a call to setData with the new\\n            // list of series, then subsequent processDatapoints do nothing.\\n\\n            // The plugin-global 'processed' flag is used to control this hack;\\n            // it starts out false, and is set to true after the first call to\\n            // processDatapoints.\\n\\n            // Unfortunately this turns future setData calls into no-ops; they\\n            // call processDatapoints, the flag is true, and nothing happens.\\n\\n            // To fix this we'll set the flag back to false here in draw, when\\n            // all series have been processed, so the next sequence of calls to\\n            // processDatapoints once again starts out with a slice-combine.\\n            // This is really a hack; in 0.9 we need to give plugins a proper\\n            // way to modify series before any processing begins.\\n\\n            processed = false;\\n\\n            // calculate maximum radius and center point\\n\\n            maxRadius = Math.min(canvasWidth, canvasHeight / options.series.pie.tilt) / 2;\\n            centerTop = canvasHeight / 2 + options.series.pie.offset.top;\\n            centerLeft = canvasWidth / 2;\\n\\n            if (options.series.pie.offset.left == \\\"auto\\\") {\\n                if (options.legend.position.match(\\\"w\\\")) {\\n                    centerLeft += legendWidth / 2;\\n                } else {\\n                    centerLeft -= legendWidth / 2;\\n                }\\n                if (centerLeft < maxRadius) {\\n                    centerLeft = maxRadius;\\n                } else if (centerLeft > canvasWidth - maxRadius) {\\n                    centerLeft = canvasWidth - maxRadius;\\n                }\\n            } else {\\n                centerLeft += options.series.pie.offset.left;\\n            }\\n\\n            var slices = plot.getData(),\\n                attempts = 0;\\n\\n            // Keep shrinking the pie's radius until drawPie returns true,\\n            // indicating that all the labels fit, or we try too many times.\\n\\n            do {\\n                if (attempts > 0) {\\n                    maxRadius *= REDRAW_SHRINK;\\n                }\\n                attempts += 1;\\n                clear();\\n                if (options.series.pie.tilt <= 0.8) {\\n                    drawShadow();\\n                }\\n            } while (!drawPie() && attempts < REDRAW_ATTEMPTS)\\n\\n            if (attempts >= REDRAW_ATTEMPTS) {\\n                clear();\\n                target.prepend(\\\"<div class='error'>Could not draw pie with labels contained inside canvas</div>\\\");\\n            }\\n\\n            if (plot.setSeries && plot.insertLegend) {\\n                plot.setSeries(slices);\\n                plot.insertLegend();\\n            }\\n\\n            // we're actually done at this point, just defining internal functions at this point\\n\\n            function clear() {\\n                ctx.clearRect(0, 0, canvasWidth, canvasHeight);\\n                target.children().filter(\\\".pieLabel, .pieLabelBackground\\\").remove();\\n            }\\n\\n            function drawShadow() {\\n\\n                var shadowLeft = options.series.pie.shadow.left;\\n                var shadowTop = options.series.pie.shadow.top;\\n                var edge = 10;\\n                var alpha = options.series.pie.shadow.alpha;\\n                var radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;\\n\\n                if (radius >= canvasWidth / 2 - shadowLeft || radius * options.series.pie.tilt >= canvasHeight / 2 - shadowTop || radius <= edge) {\\n                    return;\\t// shadow would be outside canvas, so don't draw it\\n                }\\n\\n                ctx.save();\\n                ctx.translate(shadowLeft, shadowTop);\\n                ctx.globalAlpha = alpha;\\n                ctx.fillStyle = \\\"#000\\\";\\n\\n                // center and rotate to starting position\\n\\n                ctx.translate(centerLeft, centerTop);\\n                ctx.scale(1, options.series.pie.tilt);\\n\\n                //radius -= edge;\\n\\n                for (var i = 1; i <= edge; i++) {\\n                    ctx.beginPath();\\n                    ctx.arc(0, 0, radius, 0, Math.PI * 2, false);\\n                    ctx.fill();\\n                    radius -= i;\\n                }\\n\\n                ctx.restore();\\n            }\\n\\n            function drawPie() {\\n\\n                var startAngle = Math.PI * options.series.pie.startAngle;\\n                var radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;\\n\\n                // center and rotate to starting position\\n\\n                ctx.save();\\n                ctx.translate(centerLeft, centerTop);\\n                ctx.scale(1, options.series.pie.tilt);\\n                //ctx.rotate(startAngle); // start at top; -- This doesn't work properly in Opera\\n\\n                // draw slices\\n\\n                ctx.save();\\n                var currentAngle = startAngle;\\n                for (var i = 0; i < slices.length; ++i) {\\n                    slices[i].startAngle = currentAngle;\\n                    drawSlice(slices[i].angle, slices[i].color, true);\\n                }\\n                ctx.restore();\\n\\n                // draw slice outlines\\n\\n                if (options.series.pie.stroke.width > 0) {\\n                    ctx.save();\\n                    ctx.lineWidth = options.series.pie.stroke.width;\\n                    currentAngle = startAngle;\\n                    for (var i = 0; i < slices.length; ++i) {\\n                        drawSlice(slices[i].angle, options.series.pie.stroke.color, false);\\n                    }\\n                    ctx.restore();\\n                }\\n\\n                // draw donut hole\\n\\n                drawDonutHole(ctx);\\n\\n                ctx.restore();\\n\\n                // Draw the labels, returning true if they fit within the plot\\n\\n                if (options.series.pie.label.show) {\\n                    return drawLabels();\\n                } else return true;\\n\\n                function drawSlice(angle, color, fill) {\\n\\n                    if (angle <= 0 || isNaN(angle)) {\\n                        return;\\n                    }\\n\\n                    if (fill) {\\n                        ctx.fillStyle = color;\\n                    } else {\\n                        ctx.strokeStyle = color;\\n                        ctx.lineJoin = \\\"round\\\";\\n                    }\\n\\n                    ctx.beginPath();\\n                    if (Math.abs(angle - Math.PI * 2) > 0.000000001) {\\n                        ctx.moveTo(0, 0); // Center of the pie\\n                    }\\n\\n                    //ctx.arc(0, 0, radius, 0, angle, false); // This doesn't work properly in Opera\\n                    ctx.arc(0, 0, radius, currentAngle, currentAngle + angle / 2, false);\\n                    ctx.arc(0, 0, radius, currentAngle + angle / 2, currentAngle + angle, false);\\n                    ctx.closePath();\\n                    //ctx.rotate(angle); // This doesn't work properly in Opera\\n                    currentAngle += angle;\\n\\n                    if (fill) {\\n                        ctx.fill();\\n                    } else {\\n                        ctx.stroke();\\n                    }\\n                }\\n\\n                function drawLabels() {\\n\\n                    var currentAngle = startAngle;\\n                    var radius = options.series.pie.label.radius > 1 ? options.series.pie.label.radius : maxRadius * options.series.pie.label.radius;\\n\\n                    for (var i = 0; i < slices.length; ++i) {\\n                        if (slices[i].percent >= options.series.pie.label.threshold * 100) {\\n                            if (!drawLabel(slices[i], currentAngle, i)) {\\n                                return false;\\n                            }\\n                        }\\n                        currentAngle += slices[i].angle;\\n                    }\\n\\n                    return true;\\n\\n                    function drawLabel(slice, startAngle, index) {\\n\\n                        if (slice.data[0][1] == 0) {\\n                            return true;\\n                        }\\n\\n                        // format label text\\n\\n                        var lf = options.legend.labelFormatter, text, plf = options.series.pie.label.formatter;\\n\\n                        if (lf) {\\n                            text = lf(slice.label, slice);\\n                        } else {\\n                            text = slice.label;\\n                        }\\n\\n                        if (plf) {\\n                            text = plf(text, slice);\\n                        }\\n\\n                        var halfAngle = ((startAngle + slice.angle) + startAngle) / 2;\\n                        var x = centerLeft + Math.round(Math.cos(halfAngle) * radius);\\n                        var y = centerTop + Math.round(Math.sin(halfAngle) * radius) * options.series.pie.tilt;\\n\\n                        var html = \\\"<span class='pieLabel' id='pieLabel\\\" + index + \\\"' style='position:absolute;top:\\\" + y + \\\"px;left:\\\" + x + \\\"px;'>\\\" + text + \\\"</span>\\\";\\n                        target.append(html);\\n\\n                        var label = target.children(\\\"#pieLabel\\\" + index);\\n                        var labelTop = (y - label.height() / 2);\\n                        var labelLeft = (x - label.width() / 2);\\n\\n                        label.css(\\\"top\\\", labelTop);\\n                        label.css(\\\"left\\\", labelLeft);\\n\\n                        // check to make sure that the label is not outside the canvas\\n\\n                        if (0 - labelTop > 0 || 0 - labelLeft > 0 || canvasHeight - (labelTop + label.height()) < 0 || canvasWidth - (labelLeft + label.width()) < 0) {\\n                            return false;\\n                        }\\n\\n                        if (options.series.pie.label.background.opacity != 0) {\\n\\n                            // put in the transparent background separately to avoid blended labels and label boxes\\n\\n                            var c = options.series.pie.label.background.color;\\n\\n                            if (c == null) {\\n                                c = slice.color;\\n                            }\\n\\n                            var pos = \\\"top:\\\" + labelTop + \\\"px;left:\\\" + labelLeft + \\\"px;\\\";\\n                            $(\\\"<div class='pieLabelBackground' style='position:absolute;width:\\\" + label.width() + \\\"px;height:\\\" + label.height() + \\\"px;\\\" + pos + \\\"background-color:\\\" + c + \\\";'></div>\\\")\\n                                .css(\\\"opacity\\\", options.series.pie.label.background.opacity)\\n                                .insertBefore(label);\\n                        }\\n\\n                        return true;\\n                    } // end individual label function\\n                } // end drawLabels function\\n            } // end drawPie function\\n        } // end draw function\\n\\n        // Placed here because it needs to be accessed from multiple locations\\n\\n        function drawDonutHole(layer) {\\n            if (options.series.pie.innerRadius > 0) {\\n\\n                // subtract the center\\n\\n                layer.save();\\n                var innerRadius = options.series.pie.innerRadius > 1 ? options.series.pie.innerRadius : maxRadius * options.series.pie.innerRadius;\\n                layer.globalCompositeOperation = \\\"destination-out\\\"; // this does not work with excanvas, but it will fall back to using the stroke color\\n                layer.beginPath();\\n                layer.fillStyle = options.series.pie.stroke.color;\\n                layer.arc(0, 0, innerRadius, 0, Math.PI * 2, false);\\n                layer.fill();\\n                layer.closePath();\\n                layer.restore();\\n\\n                // add inner stroke\\n\\n                layer.save();\\n                layer.beginPath();\\n                layer.strokeStyle = options.series.pie.stroke.color;\\n                layer.arc(0, 0, innerRadius, 0, Math.PI * 2, false);\\n                layer.stroke();\\n                layer.closePath();\\n                layer.restore();\\n\\n                // TODO: add extra shadow inside hole (with a mask) if the pie is tilted.\\n            }\\n        }\\n\\n        //-- Additional Interactive related functions --\\n\\n        function isPointInPoly(poly, pt) {\\n            for (var c = false, i = -1, l = poly.length, j = l - 1; ++i < l; j = i)\\n                ((poly[i][1] <= pt[1] && pt[1] < poly[j][1]) || (poly[j][1] <= pt[1] && pt[1] < poly[i][1]))\\n                && (pt[0] < (poly[j][0] - poly[i][0]) * (pt[1] - poly[i][1]) / (poly[j][1] - poly[i][1]) + poly[i][0])\\n                && (c = !c);\\n            return c;\\n        }\\n\\n        function findNearbySlice(mouseX, mouseY) {\\n\\n            var slices = plot.getData(),\\n                options = plot.getOptions(),\\n                radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius,\\n                x, y;\\n\\n            for (var i = 0; i < slices.length; ++i) {\\n\\n                var s = slices[i];\\n\\n                if (s.pie.show) {\\n\\n                    ctx.save();\\n                    ctx.beginPath();\\n                    ctx.moveTo(0, 0); // Center of the pie\\n                    //ctx.scale(1, options.series.pie.tilt);\\t// this actually seems to break everything when here.\\n                    ctx.arc(0, 0, radius, s.startAngle, s.startAngle + s.angle / 2, false);\\n                    ctx.arc(0, 0, radius, s.startAngle + s.angle / 2, s.startAngle + s.angle, false);\\n                    ctx.closePath();\\n                    x = mouseX - centerLeft;\\n                    y = mouseY - centerTop;\\n\\n                    if (ctx.isPointInPath) {\\n                        if (ctx.isPointInPath(mouseX - centerLeft, mouseY - centerTop)) {\\n                            ctx.restore();\\n                            return {\\n                                datapoint: [s.percent, s.data],\\n                                dataIndex: 0,\\n                                series: s,\\n                                seriesIndex: i\\n                            };\\n                        }\\n                    } else {\\n\\n                        // excanvas for IE doesn;t support isPointInPath, this is a workaround.\\n\\n                        var p1X = radius * Math.cos(s.startAngle),\\n                            p1Y = radius * Math.sin(s.startAngle),\\n                            p2X = radius * Math.cos(s.startAngle + s.angle / 4),\\n                            p2Y = radius * Math.sin(s.startAngle + s.angle / 4),\\n                            p3X = radius * Math.cos(s.startAngle + s.angle / 2),\\n                            p3Y = radius * Math.sin(s.startAngle + s.angle / 2),\\n                            p4X = radius * Math.cos(s.startAngle + s.angle / 1.5),\\n                            p4Y = radius * Math.sin(s.startAngle + s.angle / 1.5),\\n                            p5X = radius * Math.cos(s.startAngle + s.angle),\\n                            p5Y = radius * Math.sin(s.startAngle + s.angle),\\n                            arrPoly = [[0, 0], [p1X, p1Y], [p2X, p2Y], [p3X, p3Y], [p4X, p4Y], [p5X, p5Y]],\\n                            arrPoint = [x, y];\\n\\n                        // TODO: perhaps do some mathmatical trickery here with the Y-coordinate to compensate for pie tilt?\\n\\n                        if (isPointInPoly(arrPoly, arrPoint)) {\\n                            ctx.restore();\\n                            return {\\n                                datapoint: [s.percent, s.data],\\n                                dataIndex: 0,\\n                                series: s,\\n                                seriesIndex: i\\n                            };\\n                        }\\n                    }\\n\\n                    ctx.restore();\\n                }\\n            }\\n\\n            return null;\\n        }\\n\\n        function onMouseMove(e) {\\n            triggerClickHoverEvent(\\\"plothover\\\", e);\\n        }\\n\\n        function onClick(e) {\\n            triggerClickHoverEvent(\\\"plotclick\\\", e);\\n        }\\n\\n        // trigger click or hover event (they send the same parameters so we share their code)\\n\\n        function triggerClickHoverEvent(eventname, e) {\\n\\n            var offset = plot.offset();\\n            var canvasX = parseInt(e.pageX - offset.left);\\n            var canvasY = parseInt(e.pageY - offset.top);\\n            var item = findNearbySlice(canvasX, canvasY);\\n\\n            if (options.grid.autoHighlight) {\\n\\n                // clear auto-highlights\\n\\n                for (var i = 0; i < highlights.length; ++i) {\\n                    var h = highlights[i];\\n                    if (h.auto == eventname && !(item && h.series == item.series)) {\\n                        unhighlight(h.series);\\n                    }\\n                }\\n            }\\n\\n            // highlight the slice\\n\\n            if (item) {\\n                highlight(item.series, eventname);\\n            }\\n\\n            // trigger any hover bind events\\n\\n            var pos = {pageX: e.pageX, pageY: e.pageY};\\n            target.trigger(eventname, [pos, item]);\\n        }\\n\\n        function highlight(s, auto) {\\n            //if (typeof s == \\\"number\\\") {\\n            //\\ts = series[s];\\n            //}\\n\\n            var i = indexOfHighlight(s);\\n\\n            if (i == -1) {\\n                highlights.push({series: s, auto: auto});\\n                plot.triggerRedrawOverlay();\\n            } else if (!auto) {\\n                highlights[i].auto = false;\\n            }\\n        }\\n\\n        function unhighlight(s) {\\n            if (s == null) {\\n                highlights = [];\\n                plot.triggerRedrawOverlay();\\n            }\\n\\n            //if (typeof s == \\\"number\\\") {\\n            //\\ts = series[s];\\n            //}\\n\\n            var i = indexOfHighlight(s);\\n\\n            if (i != -1) {\\n                highlights.splice(i, 1);\\n                plot.triggerRedrawOverlay();\\n            }\\n        }\\n\\n        function indexOfHighlight(s) {\\n            for (var i = 0; i < highlights.length; ++i) {\\n                var h = highlights[i];\\n                if (h.series == s)\\n                    return i;\\n            }\\n            return -1;\\n        }\\n\\n        function drawOverlay(plot, octx) {\\n\\n            var options = plot.getOptions();\\n\\n            var radius = options.series.pie.radius > 1 ? options.series.pie.radius : maxRadius * options.series.pie.radius;\\n\\n            octx.save();\\n            octx.translate(centerLeft, centerTop);\\n            octx.scale(1, options.series.pie.tilt);\\n\\n            for (var i = 0; i < highlights.length; ++i) {\\n                drawHighlight(highlights[i].series);\\n            }\\n\\n            drawDonutHole(octx);\\n\\n            octx.restore();\\n\\n            function drawHighlight(series) {\\n\\n                if (series.angle <= 0 || isNaN(series.angle)) {\\n                    return;\\n                }\\n\\n                //octx.fillStyle = parseColor(options.series.pie.highlight.color).scale(null, null, null, options.series.pie.highlight.opacity).toString();\\n                octx.fillStyle = \\\"rgba(255, 255, 255, \\\" + options.series.pie.highlight.opacity + \\\")\\\"; // this is temporary until we have access to parseColor\\n                octx.beginPath();\\n                if (Math.abs(series.angle - Math.PI * 2) > 0.000000001) {\\n                    octx.moveTo(0, 0); // Center of the pie\\n                }\\n                octx.arc(0, 0, radius, series.startAngle, series.startAngle + series.angle / 2, false);\\n                octx.arc(0, 0, radius, series.startAngle + series.angle / 2, series.startAngle + series.angle, false);\\n                octx.closePath();\\n                octx.fill();\\n            }\\n        }\\n    } // end init (plugin body)\\n\\n    // define pie specific options and their default values\\n\\n    var options = {\\n        series: {\\n            pie: {\\n                show: false,\\n                radius: \\\"auto\\\",\\t// actual radius of the visible pie (based on full calculated radius if <=1, or hard pixel value)\\n                innerRadius: 0, /* for donut */\\n                startAngle: 3 / 2,\\n                tilt: 1,\\n                shadow: {\\n                    left: 5,\\t// shadow left offset\\n                    top: 15,\\t// shadow top offset\\n                    alpha: 0.02\\t// shadow alpha\\n                },\\n                offset: {\\n                    top: 0,\\n                    left: \\\"auto\\\"\\n                },\\n                stroke: {\\n                    color: \\\"#fff\\\",\\n                    width: 1\\n                },\\n                label: {\\n                    show: \\\"auto\\\",\\n                    formatter: function (label, slice) {\\n                        return \\\"<div style='font-size:x-small;text-align:center;padding:2px;color:\\\" + slice.color + \\\";'>\\\" + label + \\\"<br/>\\\" + Math.round(slice.percent) + \\\"%</div>\\\";\\n                    },\\t// formatter function\\n                    radius: 1,\\t// radius at which to place the labels (based on full calculated radius if <=1, or hard pixel value)\\n                    background: {\\n                        color: null,\\n                        opacity: 0\\n                    },\\n                    threshold: 0\\t// percentage at which to hide the label (i.e. the slice is too narrow)\\n                },\\n                combine: {\\n                    threshold: -1,\\t// percentage at which to combine little slices into one larger slice\\n                    color: null,\\t// color to give the new slice (auto-generated if null)\\n                    label: \\\"Other\\\"\\t// label to give the new slice\\n                },\\n                highlight: {\\n                    //color: \\\"#fff\\\",\\t\\t// will add this functionality once parseColor is available\\n                    opacity: 0.5\\n                }\\n            }\\n        }\\n    };\\n\\n    $.plot.plugins.push({\\n        init: init,\\n        options: options,\\n        name: \\\"pie\\\",\\n        version: \\\"1.1\\\"\\n    });\\n\\n})(jQuery);\\n\\n/* Pretty handling of time axes.\\n\\n Copyright (c) 2007-2014 IOLA and Ole Laursen.\\n Licensed under the MIT license.\\n\\n Set axis.mode to \\\"time\\\" to enable. See the section \\\"Time series data\\\" in\\n API.txt for details.\\n\\n */\\n\\n(function ($) {\\n\\n    var options = {\\n        xaxis: {\\n            timezone: null,\\t\\t// \\\"browser\\\" for local to the client or timezone for timezone-js\\n            timeformat: null,\\t// format string to use\\n            twelveHourClock: false,\\t// 12 or 24 time in time mode\\n            monthNames: null\\t// list of names of months\\n        }\\n    };\\n\\n    // round to nearby lower multiple of base\\n\\n    function floorInBase(n, base) {\\n        return base * Math.floor(n / base);\\n    }\\n\\n    // Returns a string with the date d formatted according to fmt.\\n    // A subset of the Open Group's strftime format is supported.\\n\\n    function formatDate(d, fmt, monthNames, dayNames) {\\n\\n        if (typeof d.strftime == \\\"function\\\") {\\n            return d.strftime(fmt);\\n        }\\n\\n        var leftPad = function (n, pad) {\\n            n = \\\"\\\" + n;\\n            pad = \\\"\\\" + (pad == null ? \\\"0\\\" : pad);\\n            return n.length == 1 ? pad + n : n;\\n        };\\n\\n        var r = [];\\n        var escape = false;\\n        var hours = d.getHours();\\n        var isAM = hours < 12;\\n\\n        if (monthNames == null) {\\n            monthNames = [\\\"Jan\\\", \\\"Feb\\\", \\\"Mar\\\", \\\"Apr\\\", \\\"May\\\", \\\"Jun\\\", \\\"Jul\\\", \\\"Aug\\\", \\\"Sep\\\", \\\"Oct\\\", \\\"Nov\\\", \\\"Dec\\\"];\\n        }\\n\\n        if (dayNames == null) {\\n            dayNames = [\\\"Sun\\\", \\\"Mon\\\", \\\"Tue\\\", \\\"Wed\\\", \\\"Thu\\\", \\\"Fri\\\", \\\"Sat\\\"];\\n        }\\n\\n        var hours12;\\n\\n        if (hours > 12) {\\n            hours12 = hours - 12;\\n        } else if (hours == 0) {\\n            hours12 = 12;\\n        } else {\\n            hours12 = hours;\\n        }\\n\\n        for (var i = 0; i < fmt.length; ++i) {\\n\\n            var c = fmt.charAt(i);\\n\\n            if (escape) {\\n                switch (c) {\\n                    case 'a':\\n                        c = \\\"\\\" + dayNames[d.getDay()];\\n                        break;\\n                    case 'b':\\n                        c = \\\"\\\" + monthNames[d.getMonth()];\\n                        break;\\n                    case 'd':\\n                        c = leftPad(d.getDate());\\n                        break;\\n                    case 'e':\\n                        c = leftPad(d.getDate(), \\\" \\\");\\n                        break;\\n                    case 'h':\\t// For back-compat with 0.7; remove in 1.0\\n                    case 'H':\\n                        c = leftPad(hours);\\n                        break;\\n                    case 'I':\\n                        c = leftPad(hours12);\\n                        break;\\n                    case 'l':\\n                        c = leftPad(hours12, \\\" \\\");\\n                        break;\\n                    case 'm':\\n                        c = leftPad(d.getMonth() + 1);\\n                        break;\\n                    case 'M':\\n                        c = leftPad(d.getMinutes());\\n                        break;\\n                    // quarters not in Open Group's strftime specification\\n                    case 'q':\\n                        c = \\\"\\\" + (Math.floor(d.getMonth() / 3) + 1);\\n                        break;\\n                    case 'S':\\n                        c = leftPad(d.getSeconds());\\n                        break;\\n                    case 'y':\\n                        c = leftPad(d.getFullYear() % 100);\\n                        break;\\n                    case 'Y':\\n                        c = \\\"\\\" + d.getFullYear();\\n                        break;\\n                    case 'p':\\n                        c = (isAM) ? (\\\"\\\" + \\\"am\\\") : (\\\"\\\" + \\\"pm\\\");\\n                        break;\\n                    case 'P':\\n                        c = (isAM) ? (\\\"\\\" + \\\"AM\\\") : (\\\"\\\" + \\\"PM\\\");\\n                        break;\\n                    case 'w':\\n                        c = \\\"\\\" + d.getDay();\\n                        break;\\n                }\\n                r.push(c);\\n                escape = false;\\n            } else {\\n                if (c == \\\"%\\\") {\\n                    escape = true;\\n                } else {\\n                    r.push(c);\\n                }\\n            }\\n        }\\n\\n        return r.join(\\\"\\\");\\n    }\\n\\n    // To have a consistent view of time-based data independent of which time\\n    // zone the client happens to be in we need a date-like object independent\\n    // of time zones.  This is done through a wrapper that only calls the UTC\\n    // versions of the accessor methods.\\n\\n    function makeUtcWrapper(d) {\\n\\n        function addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\\n            sourceObj[sourceMethod] = function () {\\n                return targetObj[targetMethod].apply(targetObj, arguments);\\n            };\\n        };\\n\\n        var utc = {\\n            date: d\\n        };\\n\\n        // support strftime, if found\\n\\n        if (d.strftime != undefined) {\\n            addProxyMethod(utc, \\\"strftime\\\", d, \\\"strftime\\\");\\n        }\\n\\n        addProxyMethod(utc, \\\"getTime\\\", d, \\\"getTime\\\");\\n        addProxyMethod(utc, \\\"setTime\\\", d, \\\"setTime\\\");\\n\\n        var props = [\\\"Date\\\", \\\"Day\\\", \\\"FullYear\\\", \\\"Hours\\\", \\\"Milliseconds\\\", \\\"Minutes\\\", \\\"Month\\\", \\\"Seconds\\\"];\\n\\n        for (var p = 0; p < props.length; p++) {\\n            addProxyMethod(utc, \\\"get\\\" + props[p], d, \\\"getUTC\\\" + props[p]);\\n            addProxyMethod(utc, \\\"set\\\" + props[p], d, \\\"setUTC\\\" + props[p]);\\n        }\\n\\n        return utc;\\n    };\\n\\n    // select time zone strategy.  This returns a date-like object tied to the\\n    // desired timezone\\n\\n    function dateGenerator(ts, opts) {\\n        if (opts.timezone == \\\"browser\\\") {\\n            return new Date(ts);\\n        } else if (!opts.timezone || opts.timezone == \\\"utc\\\") {\\n            return makeUtcWrapper(new Date(ts));\\n        } else if (typeof timezoneJS != \\\"undefined\\\" && typeof timezoneJS.Date != \\\"undefined\\\") {\\n            var d = new timezoneJS.Date();\\n            // timezone-js is fickle, so be sure to set the time zone before\\n            // setting the time.\\n            d.setTimezone(opts.timezone);\\n            d.setTime(ts);\\n            return d;\\n        } else {\\n            return makeUtcWrapper(new Date(ts));\\n        }\\n    }\\n\\n    // map of app. size of time units in milliseconds\\n\\n    var timeUnitSize = {\\n        \\\"second\\\": 1000,\\n        \\\"minute\\\": 60 * 1000,\\n        \\\"hour\\\": 60 * 60 * 1000,\\n        \\\"day\\\": 24 * 60 * 60 * 1000,\\n        \\\"month\\\": 30 * 24 * 60 * 60 * 1000,\\n        \\\"quarter\\\": 3 * 30 * 24 * 60 * 60 * 1000,\\n        \\\"year\\\": 365.2425 * 24 * 60 * 60 * 1000\\n    };\\n\\n    // the allowed tick sizes, after 1 year we use\\n    // an integer algorithm\\n\\n    var baseSpec = [\\n        [1, \\\"second\\\"], [2, \\\"second\\\"], [5, \\\"second\\\"], [10, \\\"second\\\"],\\n        [30, \\\"second\\\"],\\n        [1, \\\"minute\\\"], [2, \\\"minute\\\"], [5, \\\"minute\\\"], [10, \\\"minute\\\"],\\n        [30, \\\"minute\\\"],\\n        [1, \\\"hour\\\"], [2, \\\"hour\\\"], [4, \\\"hour\\\"],\\n        [8, \\\"hour\\\"], [12, \\\"hour\\\"],\\n        [1, \\\"day\\\"], [2, \\\"day\\\"], [3, \\\"day\\\"],\\n        [0.25, \\\"month\\\"], [0.5, \\\"month\\\"], [1, \\\"month\\\"],\\n        [2, \\\"month\\\"]\\n    ];\\n\\n    // we don't know which variant(s) we'll need yet, but generating both is\\n    // cheap\\n\\n    var specMonths = baseSpec.concat([[3, \\\"month\\\"], [6, \\\"month\\\"],\\n        [1, \\\"year\\\"]]);\\n    var specQuarters = baseSpec.concat([[1, \\\"quarter\\\"], [2, \\\"quarter\\\"],\\n        [1, \\\"year\\\"]]);\\n\\n    function init(plot) {\\n        plot.hooks.processOptions.push(function (plot, options) {\\n            $.each(plot.getAxes(), function (axisName, axis) {\\n\\n                var opts = axis.options;\\n\\n                if (opts.mode == \\\"time\\\") {\\n                    axis.tickGenerator = function (axis) {\\n\\n                        var ticks = [];\\n                        var d = dateGenerator(axis.min, opts);\\n                        var minSize = 0;\\n\\n                        // make quarter use a possibility if quarters are\\n                        // mentioned in either of these options\\n\\n                        var spec = (opts.tickSize && opts.tickSize[1] ===\\n                        \\\"quarter\\\") ||\\n                        (opts.minTickSize && opts.minTickSize[1] ===\\n                        \\\"quarter\\\") ? specQuarters : specMonths;\\n\\n                        if (opts.minTickSize != null) {\\n                            if (typeof opts.tickSize == \\\"number\\\") {\\n                                minSize = opts.tickSize;\\n                            } else {\\n                                minSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\\n                            }\\n                        }\\n\\n                        for (var i = 0; i < spec.length - 1; ++i) {\\n                            if (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\\n                                + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\\n                                && spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\\n                                break;\\n                            }\\n                        }\\n\\n                        var size = spec[i][0];\\n                        var unit = spec[i][1];\\n\\n                        // special-case the possibility of several years\\n\\n                        if (unit == \\\"year\\\") {\\n\\n                            // if given a minTickSize in years, just use it,\\n                            // ensuring that it's an integer\\n\\n                            if (opts.minTickSize != null && opts.minTickSize[1] == \\\"year\\\") {\\n                                size = Math.floor(opts.minTickSize[0]);\\n                            } else {\\n\\n                                var magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\\n                                var norm = (axis.delta / timeUnitSize.year) / magn;\\n\\n                                if (norm < 1.5) {\\n                                    size = 1;\\n                                } else if (norm < 3) {\\n                                    size = 2;\\n                                } else if (norm < 7.5) {\\n                                    size = 5;\\n                                } else {\\n                                    size = 10;\\n                                }\\n\\n                                size *= magn;\\n                            }\\n\\n                            // minimum size for years is 1\\n\\n                            if (size < 1) {\\n                                size = 1;\\n                            }\\n                        }\\n\\n                        axis.tickSize = opts.tickSize || [size, unit];\\n                        var tickSize = axis.tickSize[0];\\n                        unit = axis.tickSize[1];\\n\\n                        var step = tickSize * timeUnitSize[unit];\\n\\n                        if (unit == \\\"second\\\") {\\n                            d.setSeconds(floorInBase(d.getSeconds(), tickSize));\\n                        } else if (unit == \\\"minute\\\") {\\n                            d.setMinutes(floorInBase(d.getMinutes(), tickSize));\\n                        } else if (unit == \\\"hour\\\") {\\n                            d.setHours(floorInBase(d.getHours(), tickSize));\\n                        } else if (unit == \\\"month\\\") {\\n                            d.setMonth(floorInBase(d.getMonth(), tickSize));\\n                        } else if (unit == \\\"quarter\\\") {\\n                            d.setMonth(3 * floorInBase(d.getMonth() / 3,\\n                                    tickSize));\\n                        } else if (unit == \\\"year\\\") {\\n                            d.setFullYear(floorInBase(d.getFullYear(), tickSize));\\n                        }\\n\\n                        // reset smaller components\\n\\n                        d.setMilliseconds(0);\\n\\n                        if (step >= timeUnitSize.minute) {\\n                            d.setSeconds(0);\\n                        }\\n                        if (step >= timeUnitSize.hour) {\\n                            d.setMinutes(0);\\n                        }\\n                        if (step >= timeUnitSize.day) {\\n                            d.setHours(0);\\n                        }\\n                        if (step >= timeUnitSize.day * 4) {\\n                            d.setDate(1);\\n                        }\\n                        if (step >= timeUnitSize.month * 2) {\\n                            d.setMonth(floorInBase(d.getMonth(), 3));\\n                        }\\n                        if (step >= timeUnitSize.quarter * 2) {\\n                            d.setMonth(floorInBase(d.getMonth(), 6));\\n                        }\\n                        if (step >= timeUnitSize.year) {\\n                            d.setMonth(0);\\n                        }\\n\\n                        var carry = 0;\\n                        var v = Number.NaN;\\n                        var prev;\\n\\n                        do {\\n\\n                            prev = v;\\n                            v = d.getTime();\\n                            ticks.push(v);\\n\\n                            if (unit == \\\"month\\\" || unit == \\\"quarter\\\") {\\n                                if (tickSize < 1) {\\n\\n                                    // a bit complicated - we'll divide the\\n                                    // month/quarter up but we need to take\\n                                    // care of fractions so we don't end up in\\n                                    // the middle of a day\\n\\n                                    d.setDate(1);\\n                                    var start = d.getTime();\\n                                    d.setMonth(d.getMonth() +\\n                                        (unit == \\\"quarter\\\" ? 3 : 1));\\n                                    var end = d.getTime();\\n                                    d.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\\n                                    carry = d.getHours();\\n                                    d.setHours(0);\\n                                } else {\\n                                    d.setMonth(d.getMonth() +\\n                                        tickSize * (unit == \\\"quarter\\\" ? 3 : 1));\\n                                }\\n                            } else if (unit == \\\"year\\\") {\\n                                d.setFullYear(d.getFullYear() + tickSize);\\n                            } else {\\n                                d.setTime(v + step);\\n                            }\\n                        } while (v < axis.max && v != prev);\\n\\n                        return ticks;\\n                    };\\n\\n                    axis.tickFormatter = function (v, axis) {\\n\\n                        var d = dateGenerator(v, axis.options);\\n\\n                        // first check global format\\n\\n                        if (opts.timeformat != null) {\\n                            return formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\\n                        }\\n\\n                        // possibly use quarters if quarters are mentioned in\\n                        // any of these places\\n\\n                        var useQuarters = (axis.options.tickSize &&\\n                            axis.options.tickSize[1] == \\\"quarter\\\") ||\\n                            (axis.options.minTickSize &&\\n                            axis.options.minTickSize[1] == \\\"quarter\\\");\\n\\n                        var t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\\n                        var span = axis.max - axis.min;\\n                        var suffix = (opts.twelveHourClock) ? \\\" %p\\\" : \\\"\\\";\\n                        var hourCode = (opts.twelveHourClock) ? \\\"%I\\\" : \\\"%H\\\";\\n                        var fmt;\\n\\n                        if (t < timeUnitSize.minute) {\\n                            fmt = hourCode + \\\":%M:%S\\\" + suffix;\\n                        } else if (t < timeUnitSize.day) {\\n                            if (span < 2 * timeUnitSize.day) {\\n                                fmt = hourCode + \\\":%M\\\" + suffix;\\n                            } else {\\n                                fmt = \\\"%b %d \\\" + hourCode + \\\":%M\\\" + suffix;\\n                            }\\n                        } else if (t < timeUnitSize.month) {\\n                            fmt = \\\"%b %d\\\";\\n                        } else if ((useQuarters && t < timeUnitSize.quarter) ||\\n                            (!useQuarters && t < timeUnitSize.year)) {\\n                            if (span < timeUnitSize.year) {\\n                                fmt = \\\"%b\\\";\\n                            } else {\\n                                fmt = \\\"%b %Y\\\";\\n                            }\\n                        } else if (useQuarters && t < timeUnitSize.year) {\\n                            if (span < timeUnitSize.year) {\\n                                fmt = \\\"Q%q\\\";\\n                            } else {\\n                                fmt = \\\"Q%q %Y\\\";\\n                            }\\n                        } else {\\n                            fmt = \\\"%Y\\\";\\n                        }\\n\\n                        var rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\\n\\n                        return rt;\\n                    };\\n                }\\n            });\\n        });\\n    }\\n\\n    $.plot.plugins.push({\\n        init: init,\\n        options: options,\\n        name: 'time',\\n        version: '1.0'\\n    });\\n\\n    // Time-axis support used to be in Flot core, which exposed the\\n    // formatDate function on the plot object.  Various plugins depend\\n    // on the function, so we need to re-expose it here.\\n\\n    $.plot.formatDate = formatDate;\\n    $.plot.dateGenerator = dateGenerator;\\n\\n})(jQuery);\\n\\n/*\\n * jquery.flot.tooltip\\n *\\n * description: easy-to-use tooltips for Flot charts\\n * version: 0.8.7\\n * authors: Krzysztof Urbas @krzysu [myviews.pl],Evan Steinkerchner @Roundaround\\n * website: https://github.com/krzysu/flot.tooltip\\n *\\n * build on 2016-03-15\\n * released under MIT License, 2012\\n */\\n(function ($) {\\n    // plugin options, default values\\n    var defaultOptions = {\\n        tooltip: {\\n            show: false,\\n            cssClass: \\\"flotTip\\\",\\n            content: \\\"%s | X: %x | Y: %y\\\",\\n            // allowed templates are:\\n            // %s -> series label,\\n            // %c -> series color,\\n            // %lx -> x axis label (requires flot-axislabels plugin https://github.com/markrcote/flot-axislabels),\\n            // %ly -> y axis label (requires flot-axislabels plugin https://github.com/markrcote/flot-axislabels),\\n            // %x -> X value,\\n            // %y -> Y value,\\n            // %x.2 -> precision of X value,\\n            // %p -> percent\\n            // %n -> value (not percent) of pie chart\\n            xDateFormat: null,\\n            yDateFormat: null,\\n            monthNames: null,\\n            dayNames: null,\\n            shifts: {\\n                x: 10,\\n                y: 20\\n            },\\n            defaultTheme: true,\\n            snap: true,\\n            lines: false,\\n            clickTips: false,\\n\\n            // callbacks\\n            onHover: function (flotItem, $tooltipEl) {\\n            },\\n\\n            $compat: false\\n        }\\n    };\\n\\n    // dummy default options object for legacy code (<0.8.5) - is deleted later\\n    defaultOptions.tooltipOpts = defaultOptions.tooltip;\\n\\n    // object\\n    var FlotTooltip = function (plot) {\\n        // variables\\n        this.tipPosition = {x: 0, y: 0};\\n\\n        this.init(plot);\\n    };\\n\\n    // main plugin function\\n    FlotTooltip.prototype.init = function (plot) {\\n        var that = this;\\n\\n        // detect other flot plugins\\n        var plotPluginsLength = $.plot.plugins.length;\\n        this.plotPlugins = [];\\n\\n        if (plotPluginsLength) {\\n            for (var p = 0; p < plotPluginsLength; p++) {\\n                this.plotPlugins.push($.plot.plugins[p].name);\\n            }\\n        }\\n\\n        plot.hooks.bindEvents.push(function (plot, eventHolder) {\\n\\n            // get plot options\\n            that.plotOptions = plot.getOptions();\\n\\n            // for legacy (<0.8.5) implementations\\n            if (typeof(that.plotOptions.tooltip) === 'boolean') {\\n                that.plotOptions.tooltipOpts.show = that.plotOptions.tooltip;\\n                that.plotOptions.tooltip = that.plotOptions.tooltipOpts;\\n                delete that.plotOptions.tooltipOpts;\\n            }\\n\\n            // if not enabled return\\n            if (that.plotOptions.tooltip.show === false || typeof that.plotOptions.tooltip.show === 'undefined') return;\\n\\n            // shortcut to access tooltip options\\n            that.tooltipOptions = that.plotOptions.tooltip;\\n\\n            if (that.tooltipOptions.$compat) {\\n                that.wfunc = 'width';\\n                that.hfunc = 'height';\\n            } else {\\n                that.wfunc = 'innerWidth';\\n                that.hfunc = 'innerHeight';\\n            }\\n\\n            // create tooltip DOM element\\n            var $tip = that.getDomElement();\\n\\n            // bind event\\n            $(plot.getPlaceholder()).bind(\\\"plothover\\\", plothover);\\n            if (that.tooltipOptions.clickTips) {\\n                $(plot.getPlaceholder()).bind(\\\"plotclick\\\", plotclick);\\n            }\\n            that.clickmode = false;\\n\\n            $(eventHolder).bind('mousemove', mouseMove);\\n        });\\n\\n        plot.hooks.shutdown.push(function (plot, eventHolder) {\\n            $(plot.getPlaceholder()).unbind(\\\"plothover\\\", plothover);\\n            $(plot.getPlaceholder()).unbind(\\\"plotclick\\\", plotclick);\\n            plot.removeTooltip();\\n            $(eventHolder).unbind(\\\"mousemove\\\", mouseMove);\\n        });\\n\\n        function mouseMove(e) {\\n            var pos = {};\\n            pos.x = e.pageX;\\n            pos.y = e.pageY;\\n            plot.setTooltipPosition(pos);\\n        }\\n\\n        /**\\n         *  open the tooltip (if not already open) and freeze it on the current position till the next click\\n         */\\n        function plotclick(event, pos, item) {\\n            if (!that.clickmode) {\\n                // it is the click activating the clicktip\\n                plothover(event, pos, item);\\n                if (that.getDomElement().is(\\\":visible\\\")) {\\n                    $(plot.getPlaceholder()).unbind(\\\"plothover\\\", plothover);\\n                    that.clickmode = true;\\n                }\\n            } else {\\n                // it is the click deactivating the clicktip\\n                $(plot.getPlaceholder()).bind(\\\"plothover\\\", plothover);\\n                plot.hideTooltip();\\n                that.clickmode = false;\\n            }\\n        }\\n\\n        function plothover(event, pos, item) {\\n            // Simple distance formula.\\n            var lineDistance = function (p1x, p1y, p2x, p2y) {\\n                return Math.sqrt((p2x - p1x) * (p2x - p1x) + (p2y - p1y) * (p2y - p1y));\\n            };\\n\\n            // Here is some voodoo magic for determining the distance to a line form a given point {x, y}.\\n            var dotLineLength = function (x, y, x0, y0, x1, y1, o) {\\n                if (o && !(o =\\n                        function (x, y, x0, y0, x1, y1) {\\n                            if (typeof x0 !== 'undefined') return {x: x0, y: y};\\n                            else if (typeof y0 !== 'undefined') return {x: x, y: y0};\\n\\n                            var left,\\n                                tg = -1 / ((y1 - y0) / (x1 - x0));\\n\\n                            return {\\n                                x: left = (x1 * (x * tg - y + y0) + x0 * (x * -tg + y - y1)) / (tg * (x1 - x0) + y0 - y1),\\n                                y: tg * left - tg * x + y\\n                            };\\n                        }(x, y, x0, y0, x1, y1),\\n                    o.x >= Math.min(x0, x1) && o.x <= Math.max(x0, x1) && o.y >= Math.min(y0, y1) && o.y <= Math.max(y0, y1))\\n                ) {\\n                    var l1 = lineDistance(x, y, x0, y0), l2 = lineDistance(x, y, x1, y1);\\n                    return l1 > l2 ? l2 : l1;\\n                } else {\\n                    var a = y0 - y1, b = x1 - x0, c = x0 * y1 - y0 * x1;\\n                    return Math.abs(a * x + b * y + c) / Math.sqrt(a * a + b * b);\\n                }\\n            };\\n\\n            if (item) {\\n                plot.showTooltip(item, that.tooltipOptions.snap ? item : pos);\\n            } else if (that.plotOptions.series.lines.show && that.tooltipOptions.lines === true) {\\n                var maxDistance = that.plotOptions.grid.mouseActiveRadius;\\n\\n                var closestTrace = {\\n                    distance: maxDistance + 1\\n                };\\n\\n                var ttPos = pos;\\n\\n                $.each(plot.getData(), function (i, series) {\\n                    var xBeforeIndex = 0,\\n                        xAfterIndex = -1;\\n\\n                    // Our search here assumes our data is sorted via the x-axis.\\n                    // TODO: Improve efficiency somehow - search smaller sets of data.\\n                    for (var j = 1; j < series.data.length; j++) {\\n                        if (series.data[j - 1][0] <= pos.x && series.data[j][0] >= pos.x) {\\n                            xBeforeIndex = j - 1;\\n                            xAfterIndex = j;\\n                        }\\n                    }\\n\\n                    if (xAfterIndex === -1) {\\n                        plot.hideTooltip();\\n                        return;\\n                    }\\n\\n                    var pointPrev = {x: series.data[xBeforeIndex][0], y: series.data[xBeforeIndex][1]},\\n                        pointNext = {x: series.data[xAfterIndex][0], y: series.data[xAfterIndex][1]};\\n\\n                    var distToLine = dotLineLength(series.xaxis.p2c(pos.x), series.yaxis.p2c(pos.y), series.xaxis.p2c(pointPrev.x),\\n                        series.yaxis.p2c(pointPrev.y), series.xaxis.p2c(pointNext.x), series.yaxis.p2c(pointNext.y), false);\\n\\n                    if (distToLine < closestTrace.distance) {\\n\\n                        var closestIndex = lineDistance(pointPrev.x, pointPrev.y, pos.x, pos.y) <\\n                        lineDistance(pos.x, pos.y, pointNext.x, pointNext.y) ? xBeforeIndex : xAfterIndex;\\n\\n                        var pointSize = series.datapoints.pointsize;\\n\\n                        // Calculate the point on the line vertically closest to our cursor.\\n                        var pointOnLine = [\\n                            pos.x,\\n                            pointPrev.y + ((pointNext.y - pointPrev.y) * ((pos.x - pointPrev.x) / (pointNext.x - pointPrev.x)))\\n                        ];\\n\\n                        var item = {\\n                            datapoint: pointOnLine,\\n                            dataIndex: closestIndex,\\n                            series: series,\\n                            seriesIndex: i\\n                        };\\n\\n                        closestTrace = {\\n                            distance: distToLine,\\n                            item: item\\n                        };\\n\\n                        if (that.tooltipOptions.snap) {\\n                            ttPos = {\\n                                pageX: series.xaxis.p2c(pointOnLine[0]),\\n                                pageY: series.yaxis.p2c(pointOnLine[1])\\n                            };\\n                        }\\n                    }\\n                });\\n\\n                if (closestTrace.distance < maxDistance + 1)\\n                    plot.showTooltip(closestTrace.item, ttPos);\\n                else\\n                    plot.hideTooltip();\\n            } else {\\n                plot.hideTooltip();\\n            }\\n        }\\n\\n        // Quick little function for setting the tooltip position.\\n        plot.setTooltipPosition = function (pos) {\\n            var $tip = that.getDomElement();\\n\\n            var totalTipWidth = $tip.outerWidth() + that.tooltipOptions.shifts.x;\\n            var totalTipHeight = $tip.outerHeight() + that.tooltipOptions.shifts.y;\\n            if ((pos.x - $(window).scrollLeft()) > ($(window)[that.wfunc]() - totalTipWidth)) {\\n                pos.x -= totalTipWidth;\\n            }\\n            if ((pos.y - $(window).scrollTop()) > ($(window)[that.hfunc]() - totalTipHeight)) {\\n                pos.y -= totalTipHeight;\\n            }\\n\\n            /*\\n             The section applies the new positioning ONLY if pos.x and pos.y\\n             are numbers. If they are undefined or not a number, use the last\\n             known numerical position. This hack fixes a bug that kept pie\\n             charts from keeping their tooltip positioning.\\n             */\\n\\n            if (isNaN(pos.x)) {\\n                that.tipPosition.x = that.tipPosition.xPrev;\\n            }\\n            else {\\n                that.tipPosition.x = pos.x;\\n                that.tipPosition.xPrev = pos.x;\\n            }\\n            if (isNaN(pos.y)) {\\n                that.tipPosition.y = that.tipPosition.yPrev;\\n            }\\n            else {\\n                that.tipPosition.y = pos.y;\\n                that.tipPosition.yPrev = pos.y;\\n            }\\n\\n        };\\n\\n        // Quick little function for showing the tooltip.\\n        plot.showTooltip = function (target, position, targetPosition) {\\n            var $tip = that.getDomElement();\\n\\n            // convert tooltip content template to real tipText\\n            var tipText = that.stringFormat(that.tooltipOptions.content, target);\\n            if (tipText === '')\\n                return;\\n\\n            $tip.html(tipText);\\n            plot.setTooltipPosition({x: position.pageX, y: position.pageY});\\n            $tip.css({\\n                left: that.tipPosition.x + that.tooltipOptions.shifts.x,\\n                top: that.tipPosition.y + that.tooltipOptions.shifts.y\\n            }).show();\\n\\n            // run callback\\n            if (typeof that.tooltipOptions.onHover === 'function') {\\n                that.tooltipOptions.onHover(target, $tip);\\n            }\\n        };\\n\\n        // Quick little function for hiding the tooltip.\\n        plot.hideTooltip = function () {\\n            that.getDomElement().hide().html('');\\n        };\\n\\n        plot.removeTooltip = function () {\\n            that.getDomElement().remove();\\n        };\\n    };\\n\\n    /**\\n     * get or create tooltip DOM element\\n     * @return jQuery object\\n     */\\n    FlotTooltip.prototype.getDomElement = function () {\\n        var $tip = $('<div>');\\n        if (this.tooltipOptions && this.tooltipOptions.cssClass) {\\n            $tip = $('.' + this.tooltipOptions.cssClass);\\n\\n            if ($tip.length === 0) {\\n                $tip = $('<div />').addClass(this.tooltipOptions.cssClass);\\n                $tip.appendTo('body').hide().css({position: 'absolute'});\\n\\n                if (this.tooltipOptions.defaultTheme) {\\n                    $tip.css({\\n                        'background': '#fff',\\n                        'z-index': '1040',\\n                        'padding': '0.4em 0.6em',\\n                        'border-radius': '0.5em',\\n                        'font-size': '0.8em',\\n                        'border': '1px solid #111',\\n                        'display': 'none',\\n                        'white-space': 'nowrap'\\n                    });\\n                }\\n            }\\n        }\\n\\n        return $tip;\\n    };\\n\\n    /**\\n     * core function, create tooltip content\\n     * @param  {string} content - template with tooltip content\\n     * @param  {object} item - Flot item\\n     * @return {string} real tooltip content for current item\\n     */\\n    FlotTooltip.prototype.stringFormat = function (content, item) {\\n        var percentPattern = /%p\\\\.{0,1}(\\\\d{0,})/;\\n        var seriesPattern = /%s/;\\n        var colorPattern = /%c/;\\n        var xLabelPattern = /%lx/; // requires flot-axislabels plugin https://github.com/markrcote/flot-axislabels, will be ignored if plugin isn't loaded\\n        var yLabelPattern = /%ly/; // requires flot-axislabels plugin https://github.com/markrcote/flot-axislabels, will be ignored if plugin isn't loaded\\n        var xPattern = /%x\\\\.{0,1}(\\\\d{0,})/;\\n        var yPattern = /%y\\\\.{0,1}(\\\\d{0,})/;\\n        var xPatternWithoutPrecision = \\\"%x\\\";\\n        var yPatternWithoutPrecision = \\\"%y\\\";\\n        var customTextPattern = \\\"%ct\\\";\\n        var nPiePattern = \\\"%n\\\";\\n\\n        var x, y, customText, p, n;\\n\\n        // for threshold plugin we need to read data from different place\\n        if (typeof item.series.threshold !== \\\"undefined\\\") {\\n            x = item.datapoint[0];\\n            y = item.datapoint[1];\\n            customText = item.datapoint[2];\\n        }\\n\\n        // for CurvedLines plugin we need to read data from different place\\n        else if (typeof item.series.curvedLines !== \\\"undefined\\\") {\\n            x = item.datapoint[0];\\n            y = item.datapoint[1];\\n        }\\n\\n        else if (typeof item.series.lines !== \\\"undefined\\\" && item.series.lines.steps) {\\n            x = item.series.datapoints.points[item.dataIndex * 2];\\n            y = item.series.datapoints.points[item.dataIndex * 2 + 1];\\n            // TODO: where to find custom text in this variant?\\n            customText = \\\"\\\";\\n        } else {\\n            x = item.series.data[item.dataIndex][0];\\n            y = item.series.data[item.dataIndex][1];\\n            customText = item.series.data[item.dataIndex][2];\\n        }\\n\\n        // I think this is only in case of threshold plugin\\n        if (item.series.label === null && item.series.originSeries) {\\n            item.series.label = item.series.originSeries.label;\\n        }\\n\\n        // if it is a function callback get the content string\\n        if (typeof(content) === 'function') {\\n            content = content(item.series.label, x, y, item);\\n        }\\n\\n        // the case where the passed content is equal to false\\n        if (typeof(content) === 'boolean' && !content) {\\n            return '';\\n        }\\n\\n        /* replacement of %ct and other multi-character templates must\\n         precede the replacement of single-character templates\\n         to avoid conflict between '%c' and '%ct'  and similar substrings\\n         */\\n        if (customText)\\n            content = content.replace(customTextPattern, customText);\\n\\n        // percent match for pie charts and stacked percent\\n        if (typeof (item.series.percent) !== 'undefined') {\\n            p = item.series.percent;\\n        } else if (typeof (item.series.percents) !== 'undefined') {\\n            p = item.series.percents[item.dataIndex];\\n        }\\n        if (typeof p === 'number') {\\n            content = this.adjustValPrecision(percentPattern, content, p);\\n        }\\n\\n        // replace %n with number of items represented by slice in pie charts\\n        if (item.series.hasOwnProperty('pie')) {\\n            if (typeof (item.series.data[0][1] !== 'undefined')) {\\n                n = item.series.data[0][1];\\n            }\\n        }\\n        if (typeof n === 'number') {\\n            content = content.replace(nPiePattern, n);\\n        }\\n\\n        // series match\\n        if (typeof(item.series.label) !== 'undefined') {\\n            content = content.replace(seriesPattern, item.series.label);\\n        } else {\\n            //remove %s if label is undefined\\n            content = content.replace(seriesPattern, \\\"\\\");\\n        }\\n\\n        // color match\\n        if (typeof(item.series.color) !== 'undefined') {\\n            content = content.replace(colorPattern, item.series.color);\\n        } else {\\n            //remove %s if color is undefined\\n            content = content.replace(colorPattern, \\\"\\\");\\n        }\\n\\n        // x axis label match\\n        if (this.hasAxisLabel('xaxis', item)) {\\n            content = content.replace(xLabelPattern, item.series.xaxis.options.axisLabel);\\n        } else {\\n            //remove %lx if axis label is undefined or axislabels plugin not present\\n            content = content.replace(xLabelPattern, \\\"\\\");\\n        }\\n\\n        // y axis label match\\n        if (this.hasAxisLabel('yaxis', item)) {\\n            content = content.replace(yLabelPattern, item.series.yaxis.options.axisLabel);\\n        } else {\\n            //remove %ly if axis label is undefined or axislabels plugin not present\\n            content = content.replace(yLabelPattern, \\\"\\\");\\n        }\\n\\n        // time mode axes with custom dateFormat\\n        if (this.isTimeMode('xaxis', item) && this.isXDateFormat(item)) {\\n            content = content.replace(xPattern, this.timestampToDate(x, this.tooltipOptions.xDateFormat, item.series.xaxis.options));\\n        }\\n        if (this.isTimeMode('yaxis', item) && this.isYDateFormat(item)) {\\n            content = content.replace(yPattern, this.timestampToDate(y, this.tooltipOptions.yDateFormat, item.series.yaxis.options));\\n        }\\n\\n        // set precision if defined\\n        if (typeof x === 'number') {\\n            content = this.adjustValPrecision(xPattern, content, x);\\n        }\\n        if (typeof y === 'number') {\\n            content = this.adjustValPrecision(yPattern, content, y);\\n        }\\n\\n        // change x from number to given label, if given\\n        if (typeof item.series.xaxis.ticks !== 'undefined') {\\n\\n            var ticks;\\n            if (this.hasRotatedXAxisTicks(item)) {\\n                // xaxis.ticks will be an empty array if tickRotor is being used, but the values are available in rotatedTicks\\n                ticks = 'rotatedTicks';\\n            } else {\\n                ticks = 'ticks';\\n            }\\n\\n            // see https://github.com/krzysu/flot.tooltip/issues/65\\n            var tickIndex = item.dataIndex + item.seriesIndex;\\n\\n            for (var xIndex in item.series.xaxis[ticks]) {\\n                if (item.series.xaxis[ticks].hasOwnProperty(tickIndex) && !this.isTimeMode('xaxis', item)) {\\n                    var valueX = (this.isCategoriesMode('xaxis', item)) ? item.series.xaxis[ticks][tickIndex].label : item.series.xaxis[ticks][tickIndex].v;\\n                    if (valueX === x) {\\n                        content = content.replace(xPattern, item.series.xaxis[ticks][tickIndex].label.replace(/\\\\$/g, '$$$$'));\\n                    }\\n                }\\n            }\\n        }\\n\\n        // change y from number to given label, if given\\n        if (typeof item.series.yaxis.ticks !== 'undefined') {\\n            for (var yIndex in item.series.yaxis.ticks) {\\n                if (item.series.yaxis.ticks.hasOwnProperty(yIndex)) {\\n                    var valueY = (this.isCategoriesMode('yaxis', item)) ? item.series.yaxis.ticks[yIndex].label : item.series.yaxis.ticks[yIndex].v;\\n                    if (valueY === y) {\\n                        content = content.replace(yPattern, item.series.yaxis.ticks[yIndex].label.replace(/\\\\$/g, '$$$$'));\\n                    }\\n                }\\n            }\\n        }\\n\\n        // if no value customization, use tickFormatter by default\\n        if (typeof item.series.xaxis.tickFormatter !== 'undefined') {\\n            //escape dollar\\n            content = content.replace(xPatternWithoutPrecision, item.series.xaxis.tickFormatter(x, item.series.xaxis).replace(/\\\\$/g, '$$'));\\n        }\\n        if (typeof item.series.yaxis.tickFormatter !== 'undefined') {\\n            //escape dollar\\n            content = content.replace(yPatternWithoutPrecision, item.series.yaxis.tickFormatter(y, item.series.yaxis).replace(/\\\\$/g, '$$'));\\n        }\\n\\n        return content;\\n    };\\n\\n    // helpers just for readability\\n    FlotTooltip.prototype.isTimeMode = function (axisName, item) {\\n        return (typeof item.series[axisName].options.mode !== 'undefined' && item.series[axisName].options.mode === 'time');\\n    };\\n\\n    FlotTooltip.prototype.isXDateFormat = function (item) {\\n        return (typeof this.tooltipOptions.xDateFormat !== 'undefined' && this.tooltipOptions.xDateFormat !== null);\\n    };\\n\\n    FlotTooltip.prototype.isYDateFormat = function (item) {\\n        return (typeof this.tooltipOptions.yDateFormat !== 'undefined' && this.tooltipOptions.yDateFormat !== null);\\n    };\\n\\n    FlotTooltip.prototype.isCategoriesMode = function (axisName, item) {\\n        return (typeof item.series[axisName].options.mode !== 'undefined' && item.series[axisName].options.mode === 'categories');\\n    };\\n\\n    //\\n    FlotTooltip.prototype.timestampToDate = function (tmst, dateFormat, options) {\\n        var theDate = $.plot.dateGenerator(tmst, options);\\n        return $.plot.formatDate(theDate, dateFormat, this.tooltipOptions.monthNames, this.tooltipOptions.dayNames);\\n    };\\n\\n    //\\n    FlotTooltip.prototype.adjustValPrecision = function (pattern, content, value) {\\n\\n        var precision;\\n        var matchResult = content.match(pattern);\\n        if (matchResult !== null) {\\n            if (RegExp.$1 !== '') {\\n                precision = RegExp.$1;\\n                value = value.toFixed(precision);\\n\\n                // only replace content if precision exists, in other case use thickformater\\n                content = content.replace(pattern, value);\\n            }\\n        }\\n        return content;\\n    };\\n\\n    // other plugins detection below\\n\\n    // check if flot-axislabels plugin (https://github.com/markrcote/flot-axislabels) is used and that an axis label is given\\n    FlotTooltip.prototype.hasAxisLabel = function (axisName, item) {\\n        return ($.inArray('axisLabels', this.plotPlugins) !== -1 && typeof item.series[axisName].options.axisLabel !== 'undefined' && item.series[axisName].options.axisLabel.length > 0);\\n    };\\n\\n    // check whether flot-tickRotor, a plugin which allows rotation of X-axis ticks, is being used\\n    FlotTooltip.prototype.hasRotatedXAxisTicks = function (item) {\\n        return ($.inArray('tickRotor', this.plotPlugins) !== -1 && typeof item.series.xaxis.rotatedTicks !== 'undefined');\\n    };\\n\\n    //\\n    var init = function (plot) {\\n        new FlotTooltip(plot);\\n    };\\n\\n    // define Flot plugin\\n    $.plot.plugins.push({\\n        init: init,\\n        options: defaultOptions,\\n        name: 'tooltip',\\n        version: '0.8.5'\\n    });\\n\\n})(jQuery);\\n\\n/*!\\n * jQuery Validation Plugin v1.14.0\\n *\\n * http://jqueryvalidation.org/\\n *\\n * Copyright (c) 2015 Jörn Zaefferer\\n * Released under the MIT license\\n */\\n(function (factory) {\\n    if (typeof define === \\\"function\\\" && define.amd) {\\n        define([\\\"jquery\\\"], factory);\\n    } else {\\n        factory(jQuery);\\n    }\\n}(function ($) {\\n\\n    $.extend($.fn, {\\n        // http://jqueryvalidation.org/validate/\\n        validate: function (options) {\\n\\n            // if nothing is selected, return nothing; can't chain anyway\\n            if (!this.length) {\\n                if (options && options.debug && window.console) {\\n                    console.warn(\\\"Nothing selected, can't validate, returning nothing.\\\");\\n                }\\n                return;\\n            }\\n\\n            // check if a validator for this form was already created\\n            var validator = $.data(this[0], \\\"validator\\\");\\n            if (validator) {\\n                return validator;\\n            }\\n\\n            // Add novalidate tag if HTML5.\\n            this.attr(\\\"novalidate\\\", \\\"novalidate\\\");\\n\\n            validator = new $.validator(options, this[0]);\\n            $.data(this[0], \\\"validator\\\", validator);\\n\\n            if (validator.settings.onsubmit) {\\n\\n                this.on(\\\"click.validate\\\", \\\":submit\\\", function (event) {\\n                    if (validator.settings.submitHandler) {\\n                        validator.submitButton = event.target;\\n                    }\\n\\n                    // allow suppressing validation by adding a cancel class to the submit button\\n                    if ($(this).hasClass(\\\"cancel\\\")) {\\n                        validator.cancelSubmit = true;\\n                    }\\n\\n                    // allow suppressing validation by adding the html5 formnovalidate attribute to the submit button\\n                    if ($(this).attr(\\\"formnovalidate\\\") !== undefined) {\\n                        validator.cancelSubmit = true;\\n                    }\\n                });\\n\\n                // validate the form on submit\\n                this.on(\\\"submit.validate\\\", function (event) {\\n                    if (validator.settings.debug) {\\n                        // prevent form submit to be able to see console output\\n                        event.preventDefault();\\n                    }\\n                    function handle() {\\n                        var hidden, result;\\n                        if (validator.settings.submitHandler) {\\n                            if (validator.submitButton) {\\n                                // insert a hidden input as a replacement for the missing submit button\\n                                hidden = $(\\\"<input type='hidden'/>\\\")\\n                                    .attr(\\\"name\\\", validator.submitButton.name)\\n                                    .val($(validator.submitButton).val())\\n                                    .appendTo(validator.currentForm);\\n                            }\\n                            result = validator.settings.submitHandler.call(validator, validator.currentForm, event);\\n                            if (validator.submitButton) {\\n                                // and clean up afterwards; thanks to no-block-scope, hidden can be referenced\\n                                hidden.remove();\\n                            }\\n                            if (result !== undefined) {\\n                                return result;\\n                            }\\n                            return false;\\n                        }\\n                        return true;\\n                    }\\n\\n                    // prevent submit for invalid forms or custom submit handlers\\n                    if (validator.cancelSubmit) {\\n                        validator.cancelSubmit = false;\\n                        return handle();\\n                    }\\n                    if (validator.form()) {\\n                        if (validator.pendingRequest) {\\n                            validator.formSubmitted = true;\\n                            return false;\\n                        }\\n                        return handle();\\n                    } else {\\n                        validator.focusInvalid();\\n                        return false;\\n                    }\\n                });\\n            }\\n\\n            return validator;\\n        },\\n        // http://jqueryvalidation.org/valid/\\n        valid: function () {\\n            var valid, validator, errorList;\\n\\n            if ($(this[0]).is(\\\"form\\\")) {\\n                valid = this.validate().form();\\n            } else {\\n                errorList = [];\\n                valid = true;\\n                validator = $(this[0].form).validate();\\n                this.each(function () {\\n                    valid = validator.element(this) && valid;\\n                    errorList = errorList.concat(validator.errorList);\\n                });\\n                validator.errorList = errorList;\\n            }\\n            return valid;\\n        },\\n\\n        // http://jqueryvalidation.org/rules/\\n        rules: function (command, argument) {\\n            var element = this[0],\\n                settings, staticRules, existingRules, data, param, filtered;\\n\\n            if (command) {\\n                settings = $.data(element.form, \\\"validator\\\").settings;\\n                staticRules = settings.rules;\\n                existingRules = $.validator.staticRules(element);\\n                switch (command) {\\n                    case \\\"add\\\":\\n                        $.extend(existingRules, $.validator.normalizeRule(argument));\\n                        // remove messages from rules, but allow them to be set separately\\n                        delete existingRules.messages;\\n                        staticRules[element.name] = existingRules;\\n                        if (argument.messages) {\\n                            settings.messages[element.name] = $.extend(settings.messages[element.name], argument.messages);\\n                        }\\n                        break;\\n                    case \\\"remove\\\":\\n                        if (!argument) {\\n                            delete staticRules[element.name];\\n                            return existingRules;\\n                        }\\n                        filtered = {};\\n                        $.each(argument.split(/\\\\s/), function (index, method) {\\n                            filtered[method] = existingRules[method];\\n                            delete existingRules[method];\\n                            if (method === \\\"required\\\") {\\n                                $(element).removeAttr(\\\"aria-required\\\");\\n                            }\\n                        });\\n                        return filtered;\\n                }\\n            }\\n\\n            data = $.validator.normalizeRules(\\n                $.extend(\\n                    {},\\n                    $.validator.classRules(element),\\n                    $.validator.attributeRules(element),\\n                    $.validator.dataRules(element),\\n                    $.validator.staticRules(element)\\n                ), element);\\n\\n            // make sure required is at front\\n            if (data.required) {\\n                param = data.required;\\n                delete data.required;\\n                data = $.extend({required: param}, data);\\n                $(element).attr(\\\"aria-required\\\", \\\"true\\\");\\n            }\\n\\n            // make sure remote is at back\\n            if (data.remote) {\\n                param = data.remote;\\n                delete data.remote;\\n                data = $.extend(data, {remote: param});\\n            }\\n\\n            return data;\\n        }\\n    });\\n\\n// Custom selectors\\n    $.extend($.expr[\\\":\\\"], {\\n        // http://jqueryvalidation.org/blank-selector/\\n        blank: function (a) {\\n            return !$.trim(\\\"\\\" + $(a).val());\\n        },\\n        // http://jqueryvalidation.org/filled-selector/\\n        filled: function (a) {\\n            return !!$.trim(\\\"\\\" + $(a).val());\\n        },\\n        // http://jqueryvalidation.org/unchecked-selector/\\n        unchecked: function (a) {\\n            return !$(a).prop(\\\"checked\\\");\\n        }\\n    });\\n\\n// constructor for validator\\n    $.validator = function (options, form) {\\n        this.settings = $.extend(true, {}, $.validator.defaults, options);\\n        this.currentForm = form;\\n        this.init();\\n    };\\n\\n// http://jqueryvalidation.org/jQuery.validator.format/\\n    $.validator.format = function (source, params) {\\n        if (arguments.length === 1) {\\n            return function () {\\n                var args = $.makeArray(arguments);\\n                args.unshift(source);\\n                return $.validator.format.apply(this, args);\\n            };\\n        }\\n        if (arguments.length > 2 && params.constructor !== Array) {\\n            params = $.makeArray(arguments).slice(1);\\n        }\\n        if (params.constructor !== Array) {\\n            params = [params];\\n        }\\n        $.each(params, function (i, n) {\\n            source = source.replace(new RegExp(\\\"\\\\\\\\{\\\" + i + \\\"\\\\\\\\}\\\", \\\"g\\\"), function () {\\n                return n;\\n            });\\n        });\\n        return source;\\n    };\\n\\n    $.extend($.validator, {\\n\\n        defaults: {\\n            messages: {},\\n            groups: {},\\n            rules: {},\\n            errorClass: \\\"error\\\",\\n            validClass: \\\"valid\\\",\\n            errorElement: \\\"label\\\",\\n            focusCleanup: false,\\n            focusInvalid: true,\\n            errorContainer: $([]),\\n            errorLabelContainer: $([]),\\n            onsubmit: true,\\n            ignore: \\\":hidden\\\",\\n            ignoreTitle: false,\\n            onfocusin: function (element) {\\n                this.lastActive = element;\\n\\n                // Hide error label and remove error class on focus if enabled\\n                if (this.settings.focusCleanup) {\\n                    if (this.settings.unhighlight) {\\n                        this.settings.unhighlight.call(this, element, this.settings.errorClass, this.settings.validClass);\\n                    }\\n                    this.hideThese(this.errorsFor(element));\\n                }\\n            },\\n            onfocusout: function (element) {\\n                if (!this.checkable(element) && ( element.name in this.submitted || !this.optional(element) )) {\\n                    this.element(element);\\n                }\\n            },\\n            onkeyup: function (element, event) {\\n                // Avoid revalidate the field when pressing one of the following keys\\n                // Shift       => 16\\n                // Ctrl        => 17\\n                // Alt         => 18\\n                // Caps lock   => 20\\n                // End         => 35\\n                // Home        => 36\\n                // Left arrow  => 37\\n                // Up arrow    => 38\\n                // Right arrow => 39\\n                // Down arrow  => 40\\n                // Insert      => 45\\n                // Num lock    => 144\\n                // AltGr key   => 225\\n                var excludedKeys = [\\n                    16, 17, 18, 20, 35, 36, 37,\\n                    38, 39, 40, 45, 144, 225\\n                ];\\n\\n                if (event.which === 9 && this.elementValue(element) === \\\"\\\" || $.inArray(event.keyCode, excludedKeys) !== -1) {\\n                    return;\\n                } else if (element.name in this.submitted || element === this.lastElement) {\\n                    this.element(element);\\n                }\\n            },\\n            onclick: function (element) {\\n                // click on selects, radiobuttons and checkboxes\\n                if (element.name in this.submitted) {\\n                    this.element(element);\\n\\n                    // or option elements, check parent select in that case\\n                } else if (element.parentNode.name in this.submitted) {\\n                    this.element(element.parentNode);\\n                }\\n            },\\n            highlight: function (element, errorClass, validClass) {\\n                if (element.type === \\\"radio\\\") {\\n                    this.findByName(element.name).addClass(errorClass).removeClass(validClass);\\n                } else {\\n                    $(element).addClass(errorClass).removeClass(validClass);\\n                }\\n            },\\n            unhighlight: function (element, errorClass, validClass) {\\n                if (element.type === \\\"radio\\\") {\\n                    this.findByName(element.name).removeClass(errorClass).addClass(validClass);\\n                } else {\\n                    $(element).removeClass(errorClass).addClass(validClass);\\n                }\\n            }\\n        },\\n\\n        // http://jqueryvalidation.org/jQuery.validator.setDefaults/\\n        setDefaults: function (settings) {\\n            $.extend($.validator.defaults, settings);\\n        },\\n\\n        messages: {\\n            required: \\\"This field is required.\\\",\\n            remote: \\\"Please fix this field.\\\",\\n            email: \\\"Please enter a valid email address.\\\",\\n            url: \\\"Please enter a valid URL.\\\",\\n            date: \\\"Please enter a valid date.\\\",\\n            dateISO: \\\"Please enter a valid date ( ISO ).\\\",\\n            number: \\\"Please enter a valid number.\\\",\\n            digits: \\\"Please enter only digits.\\\",\\n            creditcard: \\\"Please enter a valid credit card number.\\\",\\n            equalTo: \\\"Please enter the same value again.\\\",\\n            maxlength: $.validator.format(\\\"Please enter no more than {0} characters.\\\"),\\n            minlength: $.validator.format(\\\"Please enter at least {0} characters.\\\"),\\n            rangelength: $.validator.format(\\\"Please enter a value between {0} and {1} characters long.\\\"),\\n            range: $.validator.format(\\\"Please enter a value between {0} and {1}.\\\"),\\n            max: $.validator.format(\\\"Please enter a value less than or equal to {0}.\\\"),\\n            min: $.validator.format(\\\"Please enter a value greater than or equal to {0}.\\\")\\n        },\\n\\n        autoCreateRanges: false,\\n\\n        prototype: {\\n\\n            init: function () {\\n                this.labelContainer = $(this.settings.errorLabelContainer);\\n                this.errorContext = this.labelContainer.length && this.labelContainer || $(this.currentForm);\\n                this.containers = $(this.settings.errorContainer).add(this.settings.errorLabelContainer);\\n                this.submitted = {};\\n                this.valueCache = {};\\n                this.pendingRequest = 0;\\n                this.pending = {};\\n                this.invalid = {};\\n                this.reset();\\n\\n                var groups = ( this.groups = {} ),\\n                    rules;\\n                $.each(this.settings.groups, function (key, value) {\\n                    if (typeof value === \\\"string\\\") {\\n                        value = value.split(/\\\\s/);\\n                    }\\n                    $.each(value, function (index, name) {\\n                        groups[name] = key;\\n                    });\\n                });\\n                rules = this.settings.rules;\\n                $.each(rules, function (key, value) {\\n                    rules[key] = $.validator.normalizeRule(value);\\n                });\\n\\n                function delegate(event) {\\n                    var validator = $.data(this.form, \\\"validator\\\"),\\n                        eventType = \\\"on\\\" + event.type.replace(/^validate/, \\\"\\\"),\\n                        settings = validator.settings;\\n                    if (settings[eventType] && !$(this).is(settings.ignore)) {\\n                        settings[eventType].call(validator, this, event);\\n                    }\\n                }\\n\\n                $(this.currentForm)\\n                    .on(\\\"focusin.validate focusout.validate keyup.validate\\\",\\n                        \\\":text, [type='password'], [type='file'], select, textarea, [type='number'], [type='search'], \\\" +\\n                        \\\"[type='tel'], [type='url'], [type='email'], [type='datetime'], [type='date'], [type='month'], \\\" +\\n                        \\\"[type='week'], [type='time'], [type='datetime-local'], [type='range'], [type='color'], \\\" +\\n                        \\\"[type='radio'], [type='checkbox']\\\", delegate)\\n                    // Support: Chrome, oldIE\\n                    // \\\"select\\\" is provided as event.target when clicking a option\\n                    .on(\\\"click.validate\\\", \\\"select, option, [type='radio'], [type='checkbox']\\\", delegate);\\n\\n                if (this.settings.invalidHandler) {\\n                    $(this.currentForm).on(\\\"invalid-form.validate\\\", this.settings.invalidHandler);\\n                }\\n\\n                // Add aria-required to any Static/Data/Class required fields before first validation\\n                // Screen readers require this attribute to be present before the initial submission http://www.w3.org/TR/WCAG-TECHS/ARIA2.html\\n                $(this.currentForm).find(\\\"[required], [data-rule-required], .required\\\").attr(\\\"aria-required\\\", \\\"true\\\");\\n            },\\n\\n            // http://jqueryvalidation.org/Validator.form/\\n            form: function () {\\n                this.checkForm();\\n                $.extend(this.submitted, this.errorMap);\\n                this.invalid = $.extend({}, this.errorMap);\\n                if (!this.valid()) {\\n                    $(this.currentForm).triggerHandler(\\\"invalid-form\\\", [this]);\\n                }\\n                this.showErrors();\\n                return this.valid();\\n            },\\n\\n            checkForm: function () {\\n                this.prepareForm();\\n                for (var i = 0, elements = ( this.currentElements = this.elements() ); elements[i]; i++) {\\n                    this.check(elements[i]);\\n                }\\n                return this.valid();\\n            },\\n\\n            // http://jqueryvalidation.org/Validator.element/\\n            element: function (element) {\\n                var cleanElement = this.clean(element),\\n                    checkElement = this.validationTargetFor(cleanElement),\\n                    result = true;\\n\\n                this.lastElement = checkElement;\\n\\n                if (checkElement === undefined) {\\n                    delete this.invalid[cleanElement.name];\\n                } else {\\n                    this.prepareElement(checkElement);\\n                    this.currentElements = $(checkElement);\\n\\n                    result = this.check(checkElement) !== false;\\n                    if (result) {\\n                        delete this.invalid[checkElement.name];\\n                    } else {\\n                        this.invalid[checkElement.name] = true;\\n                    }\\n                }\\n                // Add aria-invalid status for screen readers\\n                $(element).attr(\\\"aria-invalid\\\", !result);\\n\\n                if (!this.numberOfInvalids()) {\\n                    // Hide error containers on last error\\n                    this.toHide = this.toHide.add(this.containers);\\n                }\\n                this.showErrors();\\n                return result;\\n            },\\n\\n            // http://jqueryvalidation.org/Validator.showErrors/\\n            showErrors: function (errors) {\\n                if (errors) {\\n                    // add items to error list and map\\n                    $.extend(this.errorMap, errors);\\n                    this.errorList = [];\\n                    for (var name in errors) {\\n                        this.errorList.push({\\n                            message: errors[name],\\n                            element: this.findByName(name)[0]\\n                        });\\n                    }\\n                    // remove items from success list\\n                    this.successList = $.grep(this.successList, function (element) {\\n                        return !( element.name in errors );\\n                    });\\n                }\\n                if (this.settings.showErrors) {\\n                    this.settings.showErrors.call(this, this.errorMap, this.errorList);\\n                } else {\\n                    this.defaultShowErrors();\\n                }\\n            },\\n\\n            // http://jqueryvalidation.org/Validator.resetForm/\\n            resetForm: function () {\\n                if ($.fn.resetForm) {\\n                    $(this.currentForm).resetForm();\\n                }\\n                this.submitted = {};\\n                this.lastElement = null;\\n                this.prepareForm();\\n                this.hideErrors();\\n                var i, elements = this.elements()\\n                    .removeData(\\\"previousValue\\\")\\n                    .removeAttr(\\\"aria-invalid\\\");\\n\\n                if (this.settings.unhighlight) {\\n                    for (i = 0; elements[i]; i++) {\\n                        this.settings.unhighlight.call(this, elements[i],\\n                            this.settings.errorClass, \\\"\\\");\\n                    }\\n                } else {\\n                    elements.removeClass(this.settings.errorClass);\\n                }\\n            },\\n\\n            numberOfInvalids: function () {\\n                return this.objectLength(this.invalid);\\n            },\\n\\n            objectLength: function (obj) {\\n                /* jshint unused: false */\\n                var count = 0,\\n                    i;\\n                for (i in obj) {\\n                    count++;\\n                }\\n                return count;\\n            },\\n\\n            hideErrors: function () {\\n                this.hideThese(this.toHide);\\n            },\\n\\n            hideThese: function (errors) {\\n                errors.not(this.containers).text(\\\"\\\");\\n                this.addWrapper(errors).hide();\\n            },\\n\\n            valid: function () {\\n                return this.size() === 0;\\n            },\\n\\n            size: function () {\\n                return this.errorList.length;\\n            },\\n\\n            focusInvalid: function () {\\n                if (this.settings.focusInvalid) {\\n                    try {\\n                        $(this.findLastActive() || this.errorList.length && this.errorList[0].element || [])\\n                            .filter(\\\":visible\\\")\\n                            .focus()\\n                            // manually trigger focusin event; without it, focusin handler isn't called, findLastActive won't have anything to find\\n                            .trigger(\\\"focusin\\\");\\n                    } catch (e) {\\n                        // ignore IE throwing errors when focusing hidden elements\\n                    }\\n                }\\n            },\\n\\n            findLastActive: function () {\\n                var lastActive = this.lastActive;\\n                return lastActive && $.grep(this.errorList, function (n) {\\n                        return n.element.name === lastActive.name;\\n                    }).length === 1 && lastActive;\\n            },\\n\\n            elements: function () {\\n                var validator = this,\\n                    rulesCache = {};\\n\\n                // select all valid inputs inside the form (no submit or reset buttons)\\n                return $(this.currentForm)\\n                    .find(\\\"input, select, textarea\\\")\\n                    .not(\\\":submit, :reset, :image, :disabled\\\")\\n                    .not(this.settings.ignore)\\n                    .filter(function () {\\n                        if (!this.name && validator.settings.debug && window.console) {\\n                            console.error(\\\"%o has no name assigned\\\", this);\\n                        }\\n\\n                        // select only the first element for each name, and only those with rules specified\\n                        if (this.name in rulesCache || !validator.objectLength($(this).rules())) {\\n                            return false;\\n                        }\\n\\n                        rulesCache[this.name] = true;\\n                        return true;\\n                    });\\n            },\\n\\n            clean: function (selector) {\\n                return $(selector)[0];\\n            },\\n\\n            errors: function () {\\n                var errorClass = this.settings.errorClass.split(\\\" \\\").join(\\\".\\\");\\n                return $(this.settings.errorElement + \\\".\\\" + errorClass, this.errorContext);\\n            },\\n\\n            reset: function () {\\n                this.successList = [];\\n                this.errorList = [];\\n                this.errorMap = {};\\n                this.toShow = $([]);\\n                this.toHide = $([]);\\n                this.currentElements = $([]);\\n            },\\n\\n            prepareForm: function () {\\n                this.reset();\\n                this.toHide = this.errors().add(this.containers);\\n            },\\n\\n            prepareElement: function (element) {\\n                this.reset();\\n                this.toHide = this.errorsFor(element);\\n            },\\n\\n            elementValue: function (element) {\\n                var val,\\n                    $element = $(element),\\n                    type = element.type;\\n\\n                if (type === \\\"radio\\\" || type === \\\"checkbox\\\") {\\n                    return this.findByName(element.name).filter(\\\":checked\\\").val();\\n                } else if (type === \\\"number\\\" && typeof element.validity !== \\\"undefined\\\") {\\n                    return element.validity.badInput ? false : $element.val();\\n                }\\n\\n                val = $element.val();\\n                if (typeof val === \\\"string\\\") {\\n                    return val.replace(/\\\\r/g, \\\"\\\");\\n                }\\n                return val;\\n            },\\n\\n            check: function (element) {\\n                element = this.validationTargetFor(this.clean(element));\\n\\n                var rules = $(element).rules(),\\n                    rulesCount = $.map(rules, function (n, i) {\\n                        return i;\\n                    }).length,\\n                    dependencyMismatch = false,\\n                    val = this.elementValue(element),\\n                    result, method, rule;\\n\\n                for (method in rules) {\\n                    rule = {method: method, parameters: rules[method]};\\n                    try {\\n\\n                        result = $.validator.methods[method].call(this, val, element, rule.parameters);\\n\\n                        // if a method indicates that the field is optional and therefore valid,\\n                        // don't mark it as valid when there are no other rules\\n                        if (result === \\\"dependency-mismatch\\\" && rulesCount === 1) {\\n                            dependencyMismatch = true;\\n                            continue;\\n                        }\\n                        dependencyMismatch = false;\\n\\n                        if (result === \\\"pending\\\") {\\n                            this.toHide = this.toHide.not(this.errorsFor(element));\\n                            return;\\n                        }\\n\\n                        if (!result) {\\n                            this.formatAndAdd(element, rule);\\n                            return false;\\n                        }\\n                    } catch (e) {\\n                        if (this.settings.debug && window.console) {\\n                            console.log(\\\"Exception occurred when checking element \\\" + element.id + \\\", check the '\\\" + rule.method + \\\"' method.\\\", e);\\n                        }\\n                        if (e instanceof TypeError) {\\n                            e.message += \\\".  Exception occurred when checking element \\\" + element.id + \\\", check the '\\\" + rule.method + \\\"' method.\\\";\\n                        }\\n\\n                        throw e;\\n                    }\\n                }\\n                if (dependencyMismatch) {\\n                    return;\\n                }\\n                if (this.objectLength(rules)) {\\n                    this.successList.push(element);\\n                }\\n                return true;\\n            },\\n\\n            // return the custom message for the given element and validation method\\n            // specified in the element's HTML5 data attribute\\n            // return the generic message if present and no method specific message is present\\n            customDataMessage: function (element, method) {\\n                return $(element).data(\\\"msg\\\" + method.charAt(0).toUpperCase() +\\n                        method.substring(1).toLowerCase()) || $(element).data(\\\"msg\\\");\\n            },\\n\\n            // return the custom message for the given element name and validation method\\n            customMessage: function (name, method) {\\n                var m = this.settings.messages[name];\\n                return m && ( m.constructor === String ? m : m[method]);\\n            },\\n\\n            // return the first defined argument, allowing empty strings\\n            findDefined: function () {\\n                for (var i = 0; i < arguments.length; i++) {\\n                    if (arguments[i] !== undefined) {\\n                        return arguments[i];\\n                    }\\n                }\\n                return undefined;\\n            },\\n\\n            defaultMessage: function (element, method) {\\n                return this.findDefined(\\n                    this.customMessage(element.name, method),\\n                    this.customDataMessage(element, method),\\n                    // title is never undefined, so handle empty string as undefined\\n                    !this.settings.ignoreTitle && element.title || undefined,\\n                    $.validator.messages[method],\\n                    \\\"<strong>Warning: No message defined for \\\" + element.name + \\\"</strong>\\\"\\n                );\\n            },\\n\\n            formatAndAdd: function (element, rule) {\\n                var message = this.defaultMessage(element, rule.method),\\n                    theregex = /\\\\$?\\\\{(\\\\d+)\\\\}/g;\\n                if (typeof message === \\\"function\\\") {\\n                    message = message.call(this, rule.parameters, element);\\n                } else if (theregex.test(message)) {\\n                    message = $.validator.format(message.replace(theregex, \\\"{$1}\\\"), rule.parameters);\\n                }\\n                this.errorList.push({\\n                    message: message,\\n                    element: element,\\n                    method: rule.method\\n                });\\n\\n                this.errorMap[element.name] = message;\\n                this.submitted[element.name] = message;\\n            },\\n\\n            addWrapper: function (toToggle) {\\n                if (this.settings.wrapper) {\\n                    toToggle = toToggle.add(toToggle.parent(this.settings.wrapper));\\n                }\\n                return toToggle;\\n            },\\n\\n            defaultShowErrors: function () {\\n                var i, elements, error;\\n                for (i = 0; this.errorList[i]; i++) {\\n                    error = this.errorList[i];\\n                    if (this.settings.highlight) {\\n                        this.settings.highlight.call(this, error.element, this.settings.errorClass, this.settings.validClass);\\n                    }\\n                    this.showLabel(error.element, error.message);\\n                }\\n                if (this.errorList.length) {\\n                    this.toShow = this.toShow.add(this.containers);\\n                }\\n                if (this.settings.success) {\\n                    for (i = 0; this.successList[i]; i++) {\\n                        this.showLabel(this.successList[i]);\\n                    }\\n                }\\n                if (this.settings.unhighlight) {\\n                    for (i = 0, elements = this.validElements(); elements[i]; i++) {\\n                        this.settings.unhighlight.call(this, elements[i], this.settings.errorClass, this.settings.validClass);\\n                    }\\n                }\\n                this.toHide = this.toHide.not(this.toShow);\\n                this.hideErrors();\\n                this.addWrapper(this.toShow).show();\\n            },\\n\\n            validElements: function () {\\n                return this.currentElements.not(this.invalidElements());\\n            },\\n\\n            invalidElements: function () {\\n                return $(this.errorList).map(function () {\\n                    return this.element;\\n                });\\n            },\\n\\n            showLabel: function (element, message) {\\n                var place, group, errorID,\\n                    error = this.errorsFor(element),\\n                    elementID = this.idOrName(element),\\n                    describedBy = $(element).attr(\\\"aria-describedby\\\");\\n                if (error.length) {\\n                    // refresh error/success class\\n                    error.removeClass(this.settings.validClass).addClass(this.settings.errorClass);\\n                    // replace message on existing label\\n                    error.html(message);\\n                } else {\\n                    // create error element\\n                    error = $(\\\"<\\\" + this.settings.errorElement + \\\">\\\")\\n                        .attr(\\\"id\\\", elementID + \\\"-error\\\")\\n                        .addClass(this.settings.errorClass)\\n                        .html(message || \\\"\\\");\\n\\n                    // Maintain reference to the element to be placed into the DOM\\n                    place = error;\\n                    if (this.settings.wrapper) {\\n                        // make sure the element is visible, even in IE\\n                        // actually showing the wrapped element is handled elsewhere\\n                        place = error.hide().show().wrap(\\\"<\\\" + this.settings.wrapper + \\\"/>\\\").parent();\\n                    }\\n                    if (this.labelContainer.length) {\\n                        this.labelContainer.append(place);\\n                    } else if (this.settings.errorPlacement) {\\n                        this.settings.errorPlacement(place, $(element));\\n                    } else {\\n                        place.insertAfter(element);\\n                    }\\n\\n                    // Link error back to the element\\n                    if (error.is(\\\"label\\\")) {\\n                        // If the error is a label, then associate using 'for'\\n                        error.attr(\\\"for\\\", elementID);\\n                    } else if (error.parents(\\\"label[for='\\\" + elementID + \\\"']\\\").length === 0) {\\n                        // If the element is not a child of an associated label, then it's necessary\\n                        // to explicitly apply aria-describedby\\n\\n                        errorID = error.attr(\\\"id\\\").replace(/(:|\\\\.|\\\\[|\\\\]|\\\\$)/g, \\\"\\\\\\\\$1\\\");\\n                        // Respect existing non-error aria-describedby\\n                        if (!describedBy) {\\n                            describedBy = errorID;\\n                        } else if (!describedBy.match(new RegExp(\\\"\\\\\\\\b\\\" + errorID + \\\"\\\\\\\\b\\\"))) {\\n                            // Add to end of list if not already present\\n                            describedBy += \\\" \\\" + errorID;\\n                        }\\n                        $(element).attr(\\\"aria-describedby\\\", describedBy);\\n\\n                        // If this element is grouped, then assign to all elements in the same group\\n                        group = this.groups[element.name];\\n                        if (group) {\\n                            $.each(this.groups, function (name, testgroup) {\\n                                if (testgroup === group) {\\n                                    $(\\\"[name='\\\" + name + \\\"']\\\", this.currentForm)\\n                                        .attr(\\\"aria-describedby\\\", error.attr(\\\"id\\\"));\\n                                }\\n                            });\\n                        }\\n                    }\\n                }\\n                if (!message && this.settings.success) {\\n                    error.text(\\\"\\\");\\n                    if (typeof this.settings.success === \\\"string\\\") {\\n                        error.addClass(this.settings.success);\\n                    } else {\\n                        this.settings.success(error, element);\\n                    }\\n                }\\n                this.toShow = this.toShow.add(error);\\n            },\\n\\n            errorsFor: function (element) {\\n                var name = this.idOrName(element),\\n                    describer = $(element).attr(\\\"aria-describedby\\\"),\\n                    selector = \\\"label[for='\\\" + name + \\\"'], label[for='\\\" + name + \\\"'] *\\\";\\n\\n                // aria-describedby should directly reference the error element\\n                if (describer) {\\n                    selector = selector + \\\", #\\\" + describer.replace(/\\\\s+/g, \\\", #\\\");\\n                }\\n                return this\\n                    .errors()\\n                    .filter(selector);\\n            },\\n\\n            idOrName: function (element) {\\n                return this.groups[element.name] || ( this.checkable(element) ? element.name : element.id || element.name );\\n            },\\n\\n            validationTargetFor: function (element) {\\n\\n                // If radio/checkbox, validate first element in group instead\\n                if (this.checkable(element)) {\\n                    element = this.findByName(element.name);\\n                }\\n\\n                // Always apply ignore filter\\n                return $(element).not(this.settings.ignore)[0];\\n            },\\n\\n            checkable: function (element) {\\n                return ( /radio|checkbox/i ).test(element.type);\\n            },\\n\\n            findByName: function (name) {\\n                return $(this.currentForm).find(\\\"[name='\\\" + name + \\\"']\\\");\\n            },\\n\\n            getLength: function (value, element) {\\n                switch (element.nodeName.toLowerCase()) {\\n                    case \\\"select\\\":\\n                        return $(\\\"option:selected\\\", element).length;\\n                    case \\\"input\\\":\\n                        if (this.checkable(element)) {\\n                            return this.findByName(element.name).filter(\\\":checked\\\").length;\\n                        }\\n                }\\n                return value.length;\\n            },\\n\\n            depend: function (param, element) {\\n                return this.dependTypes[typeof param] ? this.dependTypes[typeof param](param, element) : true;\\n            },\\n\\n            dependTypes: {\\n                \\\"boolean\\\": function (param) {\\n                    return param;\\n                },\\n                \\\"string\\\": function (param, element) {\\n                    return !!$(param, element.form).length;\\n                },\\n                \\\"function\\\": function (param, element) {\\n                    return param(element);\\n                }\\n            },\\n\\n            optional: function (element) {\\n                var val = this.elementValue(element);\\n                return !$.validator.methods.required.call(this, val, element) && \\\"dependency-mismatch\\\";\\n            },\\n\\n            startRequest: function (element) {\\n                if (!this.pending[element.name]) {\\n                    this.pendingRequest++;\\n                    this.pending[element.name] = true;\\n                }\\n            },\\n\\n            stopRequest: function (element, valid) {\\n                this.pendingRequest--;\\n                // sometimes synchronization fails, make sure pendingRequest is never < 0\\n                if (this.pendingRequest < 0) {\\n                    this.pendingRequest = 0;\\n                }\\n                delete this.pending[element.name];\\n                if (valid && this.pendingRequest === 0 && this.formSubmitted && this.form()) {\\n                    $(this.currentForm).submit();\\n                    this.formSubmitted = false;\\n                } else if (!valid && this.pendingRequest === 0 && this.formSubmitted) {\\n                    $(this.currentForm).triggerHandler(\\\"invalid-form\\\", [this]);\\n                    this.formSubmitted = false;\\n                }\\n            },\\n\\n            previousValue: function (element) {\\n                return $.data(element, \\\"previousValue\\\") || $.data(element, \\\"previousValue\\\", {\\n                        old: null,\\n                        valid: true,\\n                        message: this.defaultMessage(element, \\\"remote\\\")\\n                    });\\n            },\\n\\n            // cleans up all forms and elements, removes validator-specific events\\n            destroy: function () {\\n                this.resetForm();\\n\\n                $(this.currentForm)\\n                    .off(\\\".validate\\\")\\n                    .removeData(\\\"validator\\\");\\n            }\\n\\n        },\\n\\n        classRuleSettings: {\\n            required: {required: true},\\n            email: {email: true},\\n            url: {url: true},\\n            date: {date: true},\\n            dateISO: {dateISO: true},\\n            number: {number: true},\\n            digits: {digits: true},\\n            creditcard: {creditcard: true}\\n        },\\n\\n        addClassRules: function (className, rules) {\\n            if (className.constructor === String) {\\n                this.classRuleSettings[className] = rules;\\n            } else {\\n                $.extend(this.classRuleSettings, className);\\n            }\\n        },\\n\\n        classRules: function (element) {\\n            var rules = {},\\n                classes = $(element).attr(\\\"class\\\");\\n\\n            if (classes) {\\n                $.each(classes.split(\\\" \\\"), function () {\\n                    if (this in $.validator.classRuleSettings) {\\n                        $.extend(rules, $.validator.classRuleSettings[this]);\\n                    }\\n                });\\n            }\\n            return rules;\\n        },\\n\\n        normalizeAttributeRule: function (rules, type, method, value) {\\n\\n            // convert the value to a number for number inputs, and for text for backwards compability\\n            // allows type=\\\"date\\\" and others to be compared as strings\\n            if (/min|max/.test(method) && ( type === null || /number|range|text/.test(type) )) {\\n                value = Number(value);\\n\\n                // Support Opera Mini, which returns NaN for undefined minlength\\n                if (isNaN(value)) {\\n                    value = undefined;\\n                }\\n            }\\n\\n            if (value || value === 0) {\\n                rules[method] = value;\\n            } else if (type === method && type !== \\\"range\\\") {\\n\\n                // exception: the jquery validate 'range' method\\n                // does not test for the html5 'range' type\\n                rules[method] = true;\\n            }\\n        },\\n\\n        attributeRules: function (element) {\\n            var rules = {},\\n                $element = $(element),\\n                type = element.getAttribute(\\\"type\\\"),\\n                method, value;\\n\\n            for (method in $.validator.methods) {\\n\\n                // support for <input required> in both html5 and older browsers\\n                if (method === \\\"required\\\") {\\n                    value = element.getAttribute(method);\\n\\n                    // Some browsers return an empty string for the required attribute\\n                    // and non-HTML5 browsers might have required=\\\"\\\" markup\\n                    if (value === \\\"\\\") {\\n                        value = true;\\n                    }\\n\\n                    // force non-HTML5 browsers to return bool\\n                    value = !!value;\\n                } else {\\n                    value = $element.attr(method);\\n                }\\n\\n                this.normalizeAttributeRule(rules, type, method, value);\\n            }\\n\\n            // maxlength may be returned as -1, 2147483647 ( IE ) and 524288 ( safari ) for text inputs\\n            if (rules.maxlength && /-1|2147483647|524288/.test(rules.maxlength)) {\\n                delete rules.maxlength;\\n            }\\n\\n            return rules;\\n        },\\n\\n        dataRules: function (element) {\\n            var rules = {},\\n                $element = $(element),\\n                type = element.getAttribute(\\\"type\\\"),\\n                method, value;\\n\\n            for (method in $.validator.methods) {\\n                value = $element.data(\\\"rule\\\" + method.charAt(0).toUpperCase() + method.substring(1).toLowerCase());\\n                this.normalizeAttributeRule(rules, type, method, value);\\n            }\\n            return rules;\\n        },\\n\\n        staticRules: function (element) {\\n            var rules = {},\\n                validator = $.data(element.form, \\\"validator\\\");\\n\\n            if (validator.settings.rules) {\\n                rules = $.validator.normalizeRule(validator.settings.rules[element.name]) || {};\\n            }\\n            return rules;\\n        },\\n\\n        normalizeRules: function (rules, element) {\\n            // handle dependency check\\n            $.each(rules, function (prop, val) {\\n                // ignore rule when param is explicitly false, eg. required:false\\n                if (val === false) {\\n                    delete rules[prop];\\n                    return;\\n                }\\n                if (val.param || val.depends) {\\n                    var keepRule = true;\\n                    switch (typeof val.depends) {\\n                        case \\\"string\\\":\\n                            keepRule = !!$(val.depends, element.form).length;\\n                            break;\\n                        case \\\"function\\\":\\n                            keepRule = val.depends.call(element, element);\\n                            break;\\n                    }\\n                    if (keepRule) {\\n                        rules[prop] = val.param !== undefined ? val.param : true;\\n                    } else {\\n                        delete rules[prop];\\n                    }\\n                }\\n            });\\n\\n            // evaluate parameters\\n            $.each(rules, function (rule, parameter) {\\n                rules[rule] = $.isFunction(parameter) ? parameter(element) : parameter;\\n            });\\n\\n            // clean number parameters\\n            $.each([\\\"minlength\\\", \\\"maxlength\\\"], function () {\\n                if (rules[this]) {\\n                    rules[this] = Number(rules[this]);\\n                }\\n            });\\n            $.each([\\\"rangelength\\\", \\\"range\\\"], function () {\\n                var parts;\\n                if (rules[this]) {\\n                    if ($.isArray(rules[this])) {\\n                        rules[this] = [Number(rules[this][0]), Number(rules[this][1])];\\n                    } else if (typeof rules[this] === \\\"string\\\") {\\n                        parts = rules[this].replace(/[\\\\[\\\\]]/g, \\\"\\\").split(/[\\\\s,]+/);\\n                        rules[this] = [Number(parts[0]), Number(parts[1])];\\n                    }\\n                }\\n            });\\n\\n            if ($.validator.autoCreateRanges) {\\n                // auto-create ranges\\n                if (rules.min != null && rules.max != null) {\\n                    rules.range = [rules.min, rules.max];\\n                    delete rules.min;\\n                    delete rules.max;\\n                }\\n                if (rules.minlength != null && rules.maxlength != null) {\\n                    rules.rangelength = [rules.minlength, rules.maxlength];\\n                    delete rules.minlength;\\n                    delete rules.maxlength;\\n                }\\n            }\\n\\n            return rules;\\n        },\\n\\n        // Converts a simple string to a {string: true} rule, e.g., \\\"required\\\" to {required:true}\\n        normalizeRule: function (data) {\\n            if (typeof data === \\\"string\\\") {\\n                var transformed = {};\\n                $.each(data.split(/\\\\s/), function () {\\n                    transformed[this] = true;\\n                });\\n                data = transformed;\\n            }\\n            return data;\\n        },\\n\\n        // http://jqueryvalidation.org/jQuery.validator.addMethod/\\n        addMethod: function (name, method, message) {\\n            $.validator.methods[name] = method;\\n            $.validator.messages[name] = message !== undefined ? message : $.validator.messages[name];\\n            if (method.length < 3) {\\n                $.validator.addClassRules(name, $.validator.normalizeRule(name));\\n            }\\n        },\\n\\n        methods: {\\n\\n            // http://jqueryvalidation.org/required-method/\\n            required: function (value, element, param) {\\n                // check if dependency is met\\n                if (!this.depend(param, element)) {\\n                    return \\\"dependency-mismatch\\\";\\n                }\\n                if (element.nodeName.toLowerCase() === \\\"select\\\") {\\n                    // could be an array for select-multiple or a string, both are fine this way\\n                    var val = $(element).val();\\n                    return val && val.length > 0;\\n                }\\n                if (this.checkable(element)) {\\n                    return this.getLength(value, element) > 0;\\n                }\\n                return value.length > 0;\\n            },\\n\\n            // http://jqueryvalidation.org/email-method/\\n            email: function (value, element) {\\n                // From https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address\\n                // Retrieved 2014-01-14\\n                // If you have a problem with this implementation, report a bug against the above spec\\n                // Or use custom methods to implement your own email validation\\n                return this.optional(element) || /^[a-zA-Z0-9.!#$%&'*+\\\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/.test(value);\\n            },\\n\\n            // http://jqueryvalidation.org/url-method/\\n            url: function (value, element) {\\n\\n                // Copyright (c) 2010-2013 Diego Perini, MIT licensed\\n                // https://gist.github.com/dperini/729294\\n                // see also https://mathiasbynens.be/demo/url-regex\\n                // modified to allow protocol-relative URLs\\n                return this.optional(element) || /^(?:(?:(?:https?|ftp):)?\\\\/\\\\/)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,})).?)(?::\\\\d{2,5})?(?:[/?#]\\\\S*)?$/i.test(value);\\n            },\\n\\n            // http://jqueryvalidation.org/date-method/\\n            date: function (value, element) {\\n                return this.optional(element) || !/Invalid|NaN/.test(new Date(value).toString());\\n            },\\n\\n            // http://jqueryvalidation.org/dateISO-method/\\n            dateISO: function (value, element) {\\n                return this.optional(element) || /^\\\\d{4}[\\\\/\\\\-](0?[1-9]|1[012])[\\\\/\\\\-](0?[1-9]|[12][0-9]|3[01])$/.test(value);\\n            },\\n\\n            // http://jqueryvalidation.org/number-method/\\n            number: function (value, element) {\\n                return this.optional(element) || /^(?:-?\\\\d+|-?\\\\d{1,3}(?:,\\\\d{3})+)?(?:\\\\.\\\\d+)?$/.test(value);\\n            },\\n\\n            // http://jqueryvalidation.org/digits-method/\\n            digits: function (value, element) {\\n                return this.optional(element) || /^\\\\d+$/.test(value);\\n            },\\n\\n            // http://jqueryvalidation.org/creditcard-method/\\n            // based on http://en.wikipedia.org/wiki/Luhn_algorithm\\n            creditcard: function (value, element) {\\n                if (this.optional(element)) {\\n                    return \\\"dependency-mismatch\\\";\\n                }\\n                // accept only spaces, digits and dashes\\n                if (/[^0-9 \\\\-]+/.test(value)) {\\n                    return false;\\n                }\\n                var nCheck = 0,\\n                    nDigit = 0,\\n                    bEven = false,\\n                    n, cDigit;\\n\\n                value = value.replace(/\\\\D/g, \\\"\\\");\\n\\n                // Basing min and max length on\\n                // http://developer.ean.com/general_info/Valid_Credit_Card_Types\\n                if (value.length < 13 || value.length > 19) {\\n                    return false;\\n                }\\n\\n                for (n = value.length - 1; n >= 0; n--) {\\n                    cDigit = value.charAt(n);\\n                    nDigit = parseInt(cDigit, 10);\\n                    if (bEven) {\\n                        if (( nDigit *= 2 ) > 9) {\\n                            nDigit -= 9;\\n                        }\\n                    }\\n                    nCheck += nDigit;\\n                    bEven = !bEven;\\n                }\\n\\n                return ( nCheck % 10 ) === 0;\\n            },\\n\\n            // http://jqueryvalidation.org/minlength-method/\\n            minlength: function (value, element, param) {\\n                var length = $.isArray(value) ? value.length : this.getLength(value, element);\\n                return this.optional(element) || length >= param;\\n            },\\n\\n            // http://jqueryvalidation.org/maxlength-method/\\n            maxlength: function (value, element, param) {\\n                var length = $.isArray(value) ? value.length : this.getLength(value, element);\\n                return this.optional(element) || length <= param;\\n            },\\n\\n            // http://jqueryvalidation.org/rangelength-method/\\n            rangelength: function (value, element, param) {\\n                var length = $.isArray(value) ? value.length : this.getLength(value, element);\\n                return this.optional(element) || ( length >= param[0] && length <= param[1] );\\n            },\\n\\n            // http://jqueryvalidation.org/min-method/\\n            min: function (value, element, param) {\\n                return this.optional(element) || value >= param;\\n            },\\n\\n            // http://jqueryvalidation.org/max-method/\\n            max: function (value, element, param) {\\n                return this.optional(element) || value <= param;\\n            },\\n\\n            // http://jqueryvalidation.org/range-method/\\n            range: function (value, element, param) {\\n                return this.optional(element) || ( value >= param[0] && value <= param[1] );\\n            },\\n\\n            // http://jqueryvalidation.org/equalTo-method/\\n            equalTo: function (value, element, param) {\\n                // bind to the blur event of the target in order to revalidate whenever the target field is updated\\n                // TODO find a way to bind the event just once, avoiding the unbind-rebind overhead\\n                var target = $(param);\\n                if (this.settings.onfocusout) {\\n                    target.off(\\\".validate-equalTo\\\").on(\\\"blur.validate-equalTo\\\", function () {\\n                        $(element).valid();\\n                    });\\n                }\\n                return value === target.val();\\n            },\\n\\n            // http://jqueryvalidation.org/remote-method/\\n            remote: function (value, element, param) {\\n                if (this.optional(element)) {\\n                    return \\\"dependency-mismatch\\\";\\n                }\\n\\n                var previous = this.previousValue(element),\\n                    validator, data;\\n\\n                if (!this.settings.messages[element.name]) {\\n                    this.settings.messages[element.name] = {};\\n                }\\n                previous.originalMessage = this.settings.messages[element.name].remote;\\n                this.settings.messages[element.name].remote = previous.message;\\n\\n                param = typeof param === \\\"string\\\" && {url: param} || param;\\n\\n                if (previous.old === value) {\\n                    return previous.valid;\\n                }\\n\\n                previous.old = value;\\n                validator = this;\\n                this.startRequest(element);\\n                data = {};\\n                data[element.name] = value;\\n                $.ajax($.extend(true, {\\n                    mode: \\\"abort\\\",\\n                    port: \\\"validate\\\" + element.name,\\n                    dataType: \\\"json\\\",\\n                    data: data,\\n                    context: validator.currentForm,\\n                    success: function (response) {\\n                        var valid = response === true || response === \\\"true\\\",\\n                            errors, message, submitted;\\n\\n                        validator.settings.messages[element.name].remote = previous.originalMessage;\\n                        if (valid) {\\n                            submitted = validator.formSubmitted;\\n                            validator.prepareElement(element);\\n                            validator.formSubmitted = submitted;\\n                            validator.successList.push(element);\\n                            delete validator.invalid[element.name];\\n                            validator.showErrors();\\n                        } else {\\n                            errors = {};\\n                            message = response || validator.defaultMessage(element, \\\"remote\\\");\\n                            errors[element.name] = previous.message = $.isFunction(message) ? message(value) : message;\\n                            validator.invalid[element.name] = true;\\n                            validator.showErrors(errors);\\n                        }\\n                        previous.valid = valid;\\n                        validator.stopRequest(element, valid);\\n                    }\\n                }, param));\\n                return \\\"pending\\\";\\n            }\\n        }\\n\\n    });\\n\\n// ajax mode: abort\\n// usage: $.ajax({ mode: \\\"abort\\\"[, port: \\\"uniqueport\\\"]});\\n// if mode:\\\"abort\\\" is used, the previous request on that port (port can be undefined) is aborted via XMLHttpRequest.abort()\\n\\n    var pendingRequests = {},\\n        ajax;\\n// Use a prefilter if available (1.5+)\\n    if ($.ajaxPrefilter) {\\n        $.ajaxPrefilter(function (settings, _, xhr) {\\n            var port = settings.port;\\n            if (settings.mode === \\\"abort\\\") {\\n                if (pendingRequests[port]) {\\n                    pendingRequests[port].abort();\\n                }\\n                pendingRequests[port] = xhr;\\n            }\\n        });\\n    } else {\\n        // Proxy ajax\\n        ajax = $.ajax;\\n        $.ajax = function (settings) {\\n            var mode = ( \\\"mode\\\" in settings ? settings : $.ajaxSettings ).mode,\\n                port = ( \\\"port\\\" in settings ? settings : $.ajaxSettings ).port;\\n            if (mode === \\\"abort\\\") {\\n                if (pendingRequests[port]) {\\n                    pendingRequests[port].abort();\\n                }\\n                pendingRequests[port] = ajax.apply(this, arguments);\\n                return pendingRequests[port];\\n            }\\n            return ajax.apply(this, arguments);\\n        };\\n    }\\n\\n}));\\n/**\\n *\\n * jquery.sparkline.js\\n *\\n * v2.1.2\\n * (c) Splunk, Inc\\n * Contact: Gareth Watts (gareth@splunk.com)\\n * http://omnipotent.net/jquery.sparkline/\\n *\\n * Generates inline sparkline charts from data supplied either to the method\\n * or inline in HTML\\n *\\n * Compatible with Internet Explorer 6.0+ and modern browsers equipped with the canvas tag\\n * (Firefox 2.0+, Safari, Opera, etc)\\n *\\n * License: New BSD License\\n *\\n * Copyright (c) 2012, Splunk Inc.\\n * All rights reserved.\\n *\\n * Redistribution and use in source and binary forms, with or without modification,\\n * are permitted provided that the following conditions are met:\\n *\\n *     * Redistributions of source code must retain the above copyright notice,\\n *       this list of conditions and the following disclaimer.\\n *     * Redistributions in binary form must reproduce the above copyright notice,\\n *       this list of conditions and the following disclaimer in the documentation\\n *       and/or other materials provided with the distribution.\\n *     * Neither the name of Splunk Inc nor the names of its contributors may\\n *       be used to endorse or promote products derived from this software without\\n *       specific prior written permission.\\n *\\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \\\"AS IS\\\" AND ANY\\n * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT\\n * SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT\\n * OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\\n * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\\n *\\n *\\n * Usage:\\n *  $(selector).sparkline(values, options)\\n *\\n * If values is undefined or set to 'html' then the data values are read from the specified tag:\\n *   <p>Sparkline: <span class=\\\"sparkline\\\">1,4,6,6,8,5,3,5</span></p>\\n *   $('.sparkline').sparkline();\\n * There must be no spaces in the enclosed data set\\n *\\n * Otherwise values must be an array of numbers or null values\\n *    <p>Sparkline: <span id=\\\"sparkline1\\\">This text replaced if the browser is compatible</span></p>\\n *    $('#sparkline1').sparkline([1,4,6,6,8,5,3,5])\\n *    $('#sparkline2').sparkline([1,4,6,null,null,5,3,5])\\n *\\n * Values can also be specified in an HTML comment, or as a values attribute:\\n *    <p>Sparkline: <span class=\\\"sparkline\\\"><!--1,4,6,6,8,5,3,5 --></span></p>\\n *    <p>Sparkline: <span class=\\\"sparkline\\\" values=\\\"1,4,6,6,8,5,3,5\\\"></span></p>\\n *    $('.sparkline').sparkline();\\n *\\n * For line charts, x values can also be specified:\\n *   <p>Sparkline: <span class=\\\"sparkline\\\">1:1,2.7:4,3.4:6,5:6,6:8,8.7:5,9:3,10:5</span></p>\\n *    $('#sparkline1').sparkline([ [1,1], [2.7,4], [3.4,6], [5,6], [6,8], [8.7,5], [9,3], [10,5] ])\\n *\\n * By default, options should be passed in as teh second argument to the sparkline function:\\n *   $('.sparkline').sparkline([1,2,3,4], {type: 'bar'})\\n *\\n * Options can also be set by passing them on the tag itself.  This feature is disabled by default though\\n * as there's a slight performance overhead:\\n *   $('.sparkline').sparkline([1,2,3,4], {enableTagOptions: true})\\n *   <p>Sparkline: <span class=\\\"sparkline\\\" sparkType=\\\"bar\\\" sparkBarColor=\\\"red\\\">loading</span></p>\\n * Prefix all options supplied as tag attribute with \\\"spark\\\" (configurable by setting tagOptionPrefix)\\n *\\n * Supported options:\\n *   lineColor - Color of the line used for the chart\\n *   fillColor - Color used to fill in the chart - Set to '' or false for a transparent chart\\n *   width - Width of the chart - Defaults to 3 times the number of values in pixels\\n *   height - Height of the chart - Defaults to the height of the containing element\\n *   chartRangeMin - Specify the minimum value to use for the Y range of the chart - Defaults to the minimum value supplied\\n *   chartRangeMax - Specify the maximum value to use for the Y range of the chart - Defaults to the maximum value supplied\\n *   chartRangeClip - Clip out of range values to the max/min specified by chartRangeMin and chartRangeMax\\n *   chartRangeMinX - Specify the minimum value to use for the X range of the chart - Defaults to the minimum value supplied\\n *   chartRangeMaxX - Specify the maximum value to use for the X range of the chart - Defaults to the maximum value supplied\\n *   composite - If true then don't erase any existing chart attached to the tag, but draw\\n *           another chart over the top - Note that width and height are ignored if an\\n *           existing chart is detected.\\n *   tagValuesAttribute - Name of tag attribute to check for data values - Defaults to 'values'\\n *   enableTagOptions - Whether to check tags for sparkline options\\n *   tagOptionPrefix - Prefix used for options supplied as tag attributes - Defaults to 'spark'\\n *   disableHiddenCheck - If set to true, then the plugin will assume that charts will never be drawn into a\\n *           hidden dom element, avoding a browser reflow\\n *   disableInteraction - If set to true then all mouseover/click interaction behaviour will be disabled,\\n *       making the plugin perform much like it did in 1.x\\n *   disableTooltips - If set to true then tooltips will be disabled - Defaults to false (tooltips enabled)\\n *   disableHighlight - If set to true then highlighting of selected chart elements on mouseover will be disabled\\n *       defaults to false (highlights enabled)\\n *   highlightLighten - Factor to lighten/darken highlighted chart values by - Defaults to 1.4 for a 40% increase\\n *   tooltipContainer - Specify which DOM element the tooltip should be rendered into - defaults to document.body\\n *   tooltipClassname - Optional CSS classname to apply to tooltips - If not specified then a default style will be applied\\n *   tooltipOffsetX - How many pixels away from the mouse pointer to render the tooltip on the X axis\\n *   tooltipOffsetY - How many pixels away from the mouse pointer to render the tooltip on the r axis\\n *   tooltipFormatter  - Optional callback that allows you to override the HTML displayed in the tooltip\\n *       callback is given arguments of (sparkline, options, fields)\\n *   tooltipChartTitle - If specified then the tooltip uses the string specified by this setting as a title\\n *   tooltipFormat - A format string or SPFormat object  (or an array thereof for multiple entries)\\n *       to control the format of the tooltip\\n *   tooltipPrefix - A string to prepend to each field displayed in a tooltip\\n *   tooltipSuffix - A string to append to each field displayed in a tooltip\\n *   tooltipSkipNull - If true then null values will not have a tooltip displayed (defaults to true)\\n *   tooltipValueLookups - An object or range map to map field values to tooltip strings\\n *       (eg. to map -1 to \\\"Lost\\\", 0 to \\\"Draw\\\", and 1 to \\\"Win\\\")\\n *   numberFormatter - Optional callback for formatting numbers in tooltips\\n *   numberDigitGroupSep - Character to use for group separator in numbers \\\"1,234\\\" - Defaults to \\\",\\\"\\n *   numberDecimalMark - Character to use for the decimal point when formatting numbers - Defaults to \\\".\\\"\\n *   numberDigitGroupCount - Number of digits between group separator - Defaults to 3\\n *\\n * There are 7 types of sparkline, selected by supplying a \\\"type\\\" option of 'line' (default),\\n * 'bar', 'tristate', 'bullet', 'discrete', 'pie' or 'box'\\n *    line - Line chart.  Options:\\n *       spotColor - Set to '' to not end each line in a circular spot\\n *       minSpotColor - If set, color of spot at minimum value\\n *       maxSpotColor - If set, color of spot at maximum value\\n *       spotRadius - Radius in pixels\\n *       lineWidth - Width of line in pixels\\n *       normalRangeMin\\n *       normalRangeMax - If set draws a filled horizontal bar between these two values marking the \\\"normal\\\"\\n *                      or expected range of values\\n *       normalRangeColor - Color to use for the above bar\\n *       drawNormalOnTop - Draw the normal range above the chart fill color if true\\n *       defaultPixelsPerValue - Defaults to 3 pixels of width for each value in the chart\\n *       highlightSpotColor - The color to use for drawing a highlight spot on mouseover - Set to null to disable\\n *       highlightLineColor - The color to use for drawing a highlight line on mouseover - Set to null to disable\\n *       valueSpots - Specify which points to draw spots on, and in which color.  Accepts a range map\\n *\\n *   bar - Bar chart.  Options:\\n *       barColor - Color of bars for postive values\\n *       negBarColor - Color of bars for negative values\\n *       zeroColor - Color of bars with zero values\\n *       nullColor - Color of bars with null values - Defaults to omitting the bar entirely\\n *       barWidth - Width of bars in pixels\\n *       colorMap - Optional mappnig of values to colors to override the *BarColor values above\\n *                  can be an Array of values to control the color of individual bars or a range map\\n *                  to specify colors for individual ranges of values\\n *       barSpacing - Gap between bars in pixels\\n *       zeroAxis - Centers the y-axis around zero if true\\n *\\n *   tristate - Charts values of win (>0), lose (<0) or draw (=0)\\n *       posBarColor - Color of win values\\n *       negBarColor - Color of lose values\\n *       zeroBarColor - Color of draw values\\n *       barWidth - Width of bars in pixels\\n *       barSpacing - Gap between bars in pixels\\n *       colorMap - Optional mappnig of values to colors to override the *BarColor values above\\n *                  can be an Array of values to control the color of individual bars or a range map\\n *                  to specify colors for individual ranges of values\\n *\\n *   discrete - Options:\\n *       lineHeight - Height of each line in pixels - Defaults to 30% of the graph height\\n *       thesholdValue - Values less than this value will be drawn using thresholdColor instead of lineColor\\n *       thresholdColor\\n *\\n *   bullet - Values for bullet graphs msut be in the order: target, performance, range1, range2, range3, ...\\n *       options:\\n *       targetColor - The color of the vertical target marker\\n *       targetWidth - The width of the target marker in pixels\\n *       performanceColor - The color of the performance measure horizontal bar\\n *       rangeColors - Colors to use for each qualitative range background color\\n *\\n *   pie - Pie chart. Options:\\n *       sliceColors - An array of colors to use for pie slices\\n *       offset - Angle in degrees to offset the first slice - Try -90 or +90\\n *       borderWidth - Width of border to draw around the pie chart, in pixels - Defaults to 0 (no border)\\n *       borderColor - Color to use for the pie chart border - Defaults to #000\\n *\\n *   box - Box plot. Options:\\n *       raw - Set to true to supply pre-computed plot points as values\\n *             values should be: low_outlier, low_whisker, q1, median, q3, high_whisker, high_outlier\\n *             When set to false you can supply any number of values and the box plot will\\n *             be computed for you.  Default is false.\\n *       showOutliers - Set to true (default) to display outliers as circles\\n *       outlierIQR - Interquartile range used to determine outliers.  Default 1.5\\n *       boxLineColor - Outline color of the box\\n *       boxFillColor - Fill color for the box\\n *       whiskerColor - Line color used for whiskers\\n *       outlierLineColor - Outline color of outlier circles\\n *       outlierFillColor - Fill color of the outlier circles\\n *       spotRadius - Radius of outlier circles\\n *       medianColor - Line color of the median line\\n *       target - Draw a target cross hair at the supplied value (default undefined)\\n *\\n *\\n *\\n *   Examples:\\n *   $('#sparkline1').sparkline(myvalues, { lineColor: '#f00', fillColor: false });\\n *   $('.barsparks').sparkline('html', { type:'bar', height:'40px', barWidth:5 });\\n *   $('#tristate').sparkline([1,1,-1,1,0,0,-1], { type:'tristate' }):\\n *   $('#discrete').sparkline([1,3,4,5,5,3,4,5], { type:'discrete' });\\n *   $('#bullet').sparkline([10,12,12,9,7], { type:'bullet' });\\n *   $('#pie').sparkline([1,1,2], { type:'pie' });\\n */\\n\\n/*jslint regexp: true, browser: true, jquery: true, white: true, nomen: false, plusplus: false, maxerr: 500, indent: 4 */\\n\\n(function (document, Math, undefined) { // performance/minified-size optimization\\n    (function (factory) {\\n        if (typeof define === 'function' && define.amd) {\\n            define(['jquery'], factory);\\n        } else if (jQuery && !jQuery.fn.sparkline) {\\n            factory(jQuery);\\n        }\\n    }\\n    (function ($) {\\n        'use strict';\\n\\n        var UNSET_OPTION = {},\\n            getDefaults, createClass, SPFormat, clipval, quartile, normalizeValue, normalizeValues,\\n            remove, isNumber, all, sum, addCSS, ensureArray, formatNumber, RangeMap,\\n            MouseHandler, Tooltip, barHighlightMixin,\\n            line, bar, tristate, discrete, bullet, pie, box, defaultStyles, initStyles,\\n            VShape, VCanvas_base, VCanvas_canvas, VCanvas_vml, pending, shapeCount = 0;\\n\\n        /**\\n         * Default configuration settings\\n         */\\n        getDefaults = function () {\\n            return {\\n                // Settings common to most/all chart types\\n                common: {\\n                    type: 'line',\\n                    lineColor: '#00f',\\n                    fillColor: '#cdf',\\n                    defaultPixelsPerValue: 3,\\n                    width: 'auto',\\n                    height: 'auto',\\n                    composite: false,\\n                    tagValuesAttribute: 'values',\\n                    tagOptionsPrefix: 'spark',\\n                    enableTagOptions: false,\\n                    enableHighlight: true,\\n                    highlightLighten: 1.4,\\n                    tooltipSkipNull: true,\\n                    tooltipPrefix: '',\\n                    tooltipSuffix: '',\\n                    disableHiddenCheck: false,\\n                    numberFormatter: false,\\n                    numberDigitGroupCount: 3,\\n                    numberDigitGroupSep: ',',\\n                    numberDecimalMark: '.',\\n                    disableTooltips: false,\\n                    disableInteraction: false\\n                },\\n                // Defaults for line charts\\n                line: {\\n                    spotColor: '#f80',\\n                    highlightSpotColor: '#5f5',\\n                    highlightLineColor: '#f22',\\n                    spotRadius: 1.5,\\n                    minSpotColor: '#f80',\\n                    maxSpotColor: '#f80',\\n                    lineWidth: 1,\\n                    normalRangeMin: undefined,\\n                    normalRangeMax: undefined,\\n                    normalRangeColor: '#ccc',\\n                    drawNormalOnTop: false,\\n                    chartRangeMin: undefined,\\n                    chartRangeMax: undefined,\\n                    chartRangeMinX: undefined,\\n                    chartRangeMaxX: undefined,\\n                    tooltipFormat: new SPFormat('<span style=\\\"color: {{color}}\\\">&#9679;</span> {{prefix}}{{y}}{{suffix}}')\\n                },\\n                // Defaults for bar charts\\n                bar: {\\n                    barColor: '#3366cc',\\n                    negBarColor: '#f44',\\n                    stackedBarColor: ['#3366cc', '#dc3912', '#ff9900', '#109618', '#66aa00',\\n                        '#dd4477', '#0099c6', '#990099'],\\n                    zeroColor: undefined,\\n                    nullColor: undefined,\\n                    zeroAxis: true,\\n                    barWidth: 4,\\n                    barSpacing: 1,\\n                    chartRangeMax: undefined,\\n                    chartRangeMin: undefined,\\n                    chartRangeClip: false,\\n                    colorMap: undefined,\\n                    tooltipFormat: new SPFormat('<span style=\\\"color: {{color}}\\\">&#9679;</span> {{prefix}}{{value}}{{suffix}}')\\n                },\\n                // Defaults for tristate charts\\n                tristate: {\\n                    barWidth: 4,\\n                    barSpacing: 1,\\n                    posBarColor: '#6f6',\\n                    negBarColor: '#f44',\\n                    zeroBarColor: '#999',\\n                    colorMap: {},\\n                    tooltipFormat: new SPFormat('<span style=\\\"color: {{color}}\\\">&#9679;</span> {{value:map}}'),\\n                    tooltipValueLookups: {map: {'-1': 'Loss', '0': 'Draw', '1': 'Win'}}\\n                },\\n                // Defaults for discrete charts\\n                discrete: {\\n                    lineHeight: 'auto',\\n                    thresholdColor: undefined,\\n                    thresholdValue: 0,\\n                    chartRangeMax: undefined,\\n                    chartRangeMin: undefined,\\n                    chartRangeClip: false,\\n                    tooltipFormat: new SPFormat('{{prefix}}{{value}}{{suffix}}')\\n                },\\n                // Defaults for bullet charts\\n                bullet: {\\n                    targetColor: '#f33',\\n                    targetWidth: 3, // width of the target bar in pixels\\n                    performanceColor: '#33f',\\n                    rangeColors: ['#d3dafe', '#a8b6ff', '#7f94ff'],\\n                    base: undefined, // set this to a number to change the base start number\\n                    tooltipFormat: new SPFormat('{{fieldkey:fields}} - {{value}}'),\\n                    tooltipValueLookups: {fields: {r: 'Range', p: 'Performance', t: 'Target'}}\\n                },\\n                // Defaults for pie charts\\n                pie: {\\n                    offset: 0,\\n                    sliceColors: ['#3366cc', '#dc3912', '#ff9900', '#109618', '#66aa00',\\n                        '#dd4477', '#0099c6', '#990099'],\\n                    borderWidth: 0,\\n                    borderColor: '#000',\\n                    tooltipFormat: new SPFormat('<span style=\\\"color: {{color}}\\\">&#9679;</span> {{value}} ({{percent.1}}%)')\\n                },\\n                // Defaults for box plots\\n                box: {\\n                    raw: false,\\n                    boxLineColor: '#000',\\n                    boxFillColor: '#cdf',\\n                    whiskerColor: '#000',\\n                    outlierLineColor: '#333',\\n                    outlierFillColor: '#fff',\\n                    medianColor: '#f00',\\n                    showOutliers: true,\\n                    outlierIQR: 1.5,\\n                    spotRadius: 1.5,\\n                    target: undefined,\\n                    targetColor: '#4a2',\\n                    chartRangeMax: undefined,\\n                    chartRangeMin: undefined,\\n                    tooltipFormat: new SPFormat('{{field:fields}}: {{value}}'),\\n                    tooltipFormatFieldlistKey: 'field',\\n                    tooltipValueLookups: {\\n                        fields: {\\n                            lq: 'Lower Quartile', med: 'Median',\\n                            uq: 'Upper Quartile', lo: 'Left Outlier', ro: 'Right Outlier',\\n                            lw: 'Left Whisker', rw: 'Right Whisker'\\n                        }\\n                    }\\n                }\\n            };\\n        };\\n\\n        // You can have tooltips use a css class other than jqstooltip by specifying tooltipClassname\\n        defaultStyles = '.jqstooltip { ' +\\n            'position: absolute;' +\\n            'left: 0px;' +\\n            'top: 0px;' +\\n            'visibility: hidden;' +\\n            'background: rgb(0, 0, 0) transparent;' +\\n            'background-color: rgba(0,0,0,0.6);' +\\n            'filter:progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000);' +\\n            '-ms-filter: \\\"progid:DXImageTransform.Microsoft.gradient(startColorstr=#99000000, endColorstr=#99000000)\\\";' +\\n            'color: white;' +\\n            'font: 10px arial, san serif;' +\\n            'text-align: left;' +\\n            'white-space: nowrap;' +\\n            'padding: 5px;' +\\n            'border: 1px solid white;' +\\n            'z-index: 10000;' +\\n            '}' +\\n            '.jqsfield { ' +\\n            'color: white;' +\\n            'font: 10px arial, san serif;' +\\n            'text-align: left;' +\\n            '}';\\n\\n        /**\\n         * Utilities\\n         */\\n\\n        createClass = function (/* [baseclass, [mixin, ...]], definition */) {\\n            var Class, args;\\n            Class = function () {\\n                this.init.apply(this, arguments);\\n            };\\n            if (arguments.length > 1) {\\n                if (arguments[0]) {\\n                    Class.prototype = $.extend(new arguments[0](), arguments[arguments.length - 1]);\\n                    Class._super = arguments[0].prototype;\\n                } else {\\n                    Class.prototype = arguments[arguments.length - 1];\\n                }\\n                if (arguments.length > 2) {\\n                    args = Array.prototype.slice.call(arguments, 1, -1);\\n                    args.unshift(Class.prototype);\\n                    $.extend.apply($, args);\\n                }\\n            } else {\\n                Class.prototype = arguments[0];\\n            }\\n            Class.prototype.cls = Class;\\n            return Class;\\n        };\\n\\n        /**\\n         * Wraps a format string for tooltips\\n         * {{x}}\\n         * {{x.2}\\n     * {{x:months}}\\n     */\\n        $.SPFormatClass = SPFormat = createClass({\\n            fre: /\\\\{\\\\{([\\\\w.]+?)(:(.+?))?\\\\}\\\\}/g,\\n            precre: /(\\\\w+)\\\\.(\\\\d+)/,\\n\\n            init: function (format, fclass) {\\n                this.format = format;\\n                this.fclass = fclass;\\n            },\\n\\n            render: function (fieldset, lookups, options) {\\n                var self = this,\\n                    fields = fieldset,\\n                    match, token, lookupkey, fieldvalue, prec;\\n                return this.format.replace(this.fre, function () {\\n                    var lookup;\\n                    token = arguments[1];\\n                    lookupkey = arguments[3];\\n                    match = self.precre.exec(token);\\n                    if (match) {\\n                        prec = match[2];\\n                        token = match[1];\\n                    } else {\\n                        prec = false;\\n                    }\\n                    fieldvalue = fields[token];\\n                    if (fieldvalue === undefined) {\\n                        return '';\\n                    }\\n                    if (lookupkey && lookups && lookups[lookupkey]) {\\n                        lookup = lookups[lookupkey];\\n                        if (lookup.get) { // RangeMap\\n                            return lookups[lookupkey].get(fieldvalue) || fieldvalue;\\n                        } else {\\n                            return lookups[lookupkey][fieldvalue] || fieldvalue;\\n                        }\\n                    }\\n                    if (isNumber(fieldvalue)) {\\n                        if (options.get('numberFormatter')) {\\n                            fieldvalue = options.get('numberFormatter')(fieldvalue);\\n                        } else {\\n                            fieldvalue = formatNumber(fieldvalue, prec,\\n                                options.get('numberDigitGroupCount'),\\n                                options.get('numberDigitGroupSep'),\\n                                options.get('numberDecimalMark'));\\n                        }\\n                    }\\n                    return fieldvalue;\\n                });\\n            }\\n        });\\n\\n        // convience method to avoid needing the new operator\\n        $.spformat = function (format, fclass) {\\n            return new SPFormat(format, fclass);\\n        };\\n\\n        clipval = function (val, min, max) {\\n            if (val < min) {\\n                return min;\\n            }\\n            if (val > max) {\\n                return max;\\n            }\\n            return val;\\n        };\\n\\n        quartile = function (values, q) {\\n            var vl;\\n            if (q === 2) {\\n                vl = Math.floor(values.length / 2);\\n                return values.length % 2 ? values[vl] : (values[vl - 1] + values[vl]) / 2;\\n            } else {\\n                if (values.length % 2) { // odd\\n                    vl = (values.length * q + q) / 4;\\n                    return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 : values[vl - 1];\\n                } else { //even\\n                    vl = (values.length * q + 2) / 4;\\n                    return vl % 1 ? (values[Math.floor(vl)] + values[Math.floor(vl) - 1]) / 2 : values[vl - 1];\\n\\n                }\\n            }\\n        };\\n\\n        normalizeValue = function (val) {\\n            var nf;\\n            switch (val) {\\n                case 'undefined':\\n                    val = undefined;\\n                    break;\\n                case 'null':\\n                    val = null;\\n                    break;\\n                case 'true':\\n                    val = true;\\n                    break;\\n                case 'false':\\n                    val = false;\\n                    break;\\n                default:\\n                    nf = parseFloat(val);\\n                    if (val == nf) {\\n                        val = nf;\\n                    }\\n            }\\n            return val;\\n        };\\n\\n        normalizeValues = function (vals) {\\n            var i, result = [];\\n            for (i = vals.length; i--;) {\\n                result[i] = normalizeValue(vals[i]);\\n            }\\n            return result;\\n        };\\n\\n        remove = function (vals, filter) {\\n            var i, vl, result = [];\\n            for (i = 0, vl = vals.length; i < vl; i++) {\\n                if (vals[i] !== filter) {\\n                    result.push(vals[i]);\\n                }\\n            }\\n            return result;\\n        };\\n\\n        isNumber = function (num) {\\n            return !isNaN(parseFloat(num)) && isFinite(num);\\n        };\\n\\n        formatNumber = function (num, prec, groupsize, groupsep, decsep) {\\n            var p, i;\\n            num = (prec === false ? parseFloat(num).toString() : num.toFixed(prec)).split('');\\n            p = (p = $.inArray('.', num)) < 0 ? num.length : p;\\n            if (p < num.length) {\\n                num[p] = decsep;\\n            }\\n            for (i = p - groupsize; i > 0; i -= groupsize) {\\n                num.splice(i, 0, groupsep);\\n            }\\n            return num.join('');\\n        };\\n\\n        // determine if all values of an array match a value\\n        // returns true if the array is empty\\n        all = function (val, arr, ignoreNull) {\\n            var i;\\n            for (i = arr.length; i--;) {\\n                if (ignoreNull && arr[i] === null) continue;\\n                if (arr[i] !== val) {\\n                    return false;\\n                }\\n            }\\n            return true;\\n        };\\n\\n        // sums the numeric values in an array, ignoring other values\\n        sum = function (vals) {\\n            var total = 0, i;\\n            for (i = vals.length; i--;) {\\n                total += typeof vals[i] === 'number' ? vals[i] : 0;\\n            }\\n            return total;\\n        };\\n\\n        ensureArray = function (val) {\\n            return $.isArray(val) ? val : [val];\\n        };\\n\\n        // http://paulirish.com/2008/bookmarklet-inject-new-css-rules/\\n        addCSS = function (css) {\\n            var tag;\\n            //if ('\\\\v' == 'v') /* ie only */ {\\n            if (document.createStyleSheet) {\\n                document.createStyleSheet().cssText = css;\\n            } else {\\n                tag = document.createElement('style');\\n                tag.type = 'text/css';\\n                document.getElementsByTagName('head')[0].appendChild(tag);\\n                tag[(typeof document.body.style.WebkitAppearance == 'string') /* webkit only */ ? 'innerText' : 'innerHTML'] = css;\\n            }\\n        };\\n\\n        // Provide a cross-browser interface to a few simple drawing primitives\\n        $.fn.simpledraw = function (width, height, useExisting, interact) {\\n            var target, mhandler;\\n            if (useExisting && (target = this.data('_jqs_vcanvas'))) {\\n                return target;\\n            }\\n\\n            if ($.fn.sparkline.canvas === false) {\\n                // We've already determined that neither Canvas nor VML are available\\n                return false;\\n\\n            } else if ($.fn.sparkline.canvas === undefined) {\\n                // No function defined yet -- need to see if we support Canvas or VML\\n                var el = document.createElement('canvas');\\n                if (!!(el.getContext && el.getContext('2d'))) {\\n                    // Canvas is available\\n                    $.fn.sparkline.canvas = function (width, height, target, interact) {\\n                        return new VCanvas_canvas(width, height, target, interact);\\n                    };\\n                } else if (document.namespaces && !document.namespaces.v) {\\n                    // VML is available\\n                    document.namespaces.add('v', 'urn:schemas-microsoft-com:vml', '#default#VML');\\n                    $.fn.sparkline.canvas = function (width, height, target, interact) {\\n                        return new VCanvas_vml(width, height, target);\\n                    };\\n                } else {\\n                    // Neither Canvas nor VML are available\\n                    $.fn.sparkline.canvas = false;\\n                    return false;\\n                }\\n            }\\n\\n            if (width === undefined) {\\n                width = $(this).innerWidth();\\n            }\\n            if (height === undefined) {\\n                height = $(this).innerHeight();\\n            }\\n\\n            target = $.fn.sparkline.canvas(width, height, this, interact);\\n\\n            mhandler = $(this).data('_jqs_mhandler');\\n            if (mhandler) {\\n                mhandler.registerCanvas(target);\\n            }\\n            return target;\\n        };\\n\\n        $.fn.cleardraw = function () {\\n            var target = this.data('_jqs_vcanvas');\\n            if (target) {\\n                target.reset();\\n            }\\n        };\\n\\n        $.RangeMapClass = RangeMap = createClass({\\n            init: function (map) {\\n                var key, range, rangelist = [];\\n                for (key in map) {\\n                    if (map.hasOwnProperty(key) && typeof key === 'string' && key.indexOf(':') > -1) {\\n                        range = key.split(':');\\n                        range[0] = range[0].length === 0 ? -Infinity : parseFloat(range[0]);\\n                        range[1] = range[1].length === 0 ? Infinity : parseFloat(range[1]);\\n                        range[2] = map[key];\\n                        rangelist.push(range);\\n                    }\\n                }\\n                this.map = map;\\n                this.rangelist = rangelist || false;\\n            },\\n\\n            get: function (value) {\\n                var rangelist = this.rangelist,\\n                    i, range, result;\\n                if ((result = this.map[value]) !== undefined) {\\n                    return result;\\n                }\\n                if (rangelist) {\\n                    for (i = rangelist.length; i--;) {\\n                        range = rangelist[i];\\n                        if (range[0] <= value && range[1] >= value) {\\n                            return range[2];\\n                        }\\n                    }\\n                }\\n                return undefined;\\n            }\\n        });\\n\\n        // Convenience function\\n        $.range_map = function (map) {\\n            return new RangeMap(map);\\n        };\\n\\n        MouseHandler = createClass({\\n            init: function (el, options) {\\n                var $el = $(el);\\n                this.$el = $el;\\n                this.options = options;\\n                this.currentPageX = 0;\\n                this.currentPageY = 0;\\n                this.el = el;\\n                this.splist = [];\\n                this.tooltip = null;\\n                this.over = false;\\n                this.displayTooltips = !options.get('disableTooltips');\\n                this.highlightEnabled = !options.get('disableHighlight');\\n            },\\n\\n            registerSparkline: function (sp) {\\n                this.splist.push(sp);\\n                if (this.over) {\\n                    this.updateDisplay();\\n                }\\n            },\\n\\n            registerCanvas: function (canvas) {\\n                var $canvas = $(canvas.canvas);\\n                this.canvas = canvas;\\n                this.$canvas = $canvas;\\n                $canvas.mouseenter($.proxy(this.mouseenter, this));\\n                $canvas.mouseleave($.proxy(this.mouseleave, this));\\n                $canvas.click($.proxy(this.mouseclick, this));\\n            },\\n\\n            reset: function (removeTooltip) {\\n                this.splist = [];\\n                if (this.tooltip && removeTooltip) {\\n                    this.tooltip.remove();\\n                    this.tooltip = undefined;\\n                }\\n            },\\n\\n            mouseclick: function (e) {\\n                var clickEvent = $.Event('sparklineClick');\\n                clickEvent.originalEvent = e;\\n                clickEvent.sparklines = this.splist;\\n                this.$el.trigger(clickEvent);\\n            },\\n\\n            mouseenter: function (e) {\\n                $(document.body).unbind('mousemove.jqs');\\n                $(document.body).bind('mousemove.jqs', $.proxy(this.mousemove, this));\\n                this.over = true;\\n                this.currentPageX = e.pageX;\\n                this.currentPageY = e.pageY;\\n                this.currentEl = e.target;\\n                if (!this.tooltip && this.displayTooltips) {\\n                    this.tooltip = new Tooltip(this.options);\\n                    this.tooltip.updatePosition(e.pageX, e.pageY);\\n                }\\n                this.updateDisplay();\\n            },\\n\\n            mouseleave: function () {\\n                $(document.body).unbind('mousemove.jqs');\\n                var splist = this.splist,\\n                    spcount = splist.length,\\n                    needsRefresh = false,\\n                    sp, i;\\n                this.over = false;\\n                this.currentEl = null;\\n\\n                if (this.tooltip) {\\n                    this.tooltip.remove();\\n                    this.tooltip = null;\\n                }\\n\\n                for (i = 0; i < spcount; i++) {\\n                    sp = splist[i];\\n                    if (sp.clearRegionHighlight()) {\\n                        needsRefresh = true;\\n                    }\\n                }\\n\\n                if (needsRefresh) {\\n                    this.canvas.render();\\n                }\\n            },\\n\\n            mousemove: function (e) {\\n                this.currentPageX = e.pageX;\\n                this.currentPageY = e.pageY;\\n                this.currentEl = e.target;\\n                if (this.tooltip) {\\n                    this.tooltip.updatePosition(e.pageX, e.pageY);\\n                }\\n                this.updateDisplay();\\n            },\\n\\n            updateDisplay: function () {\\n                var splist = this.splist,\\n                    spcount = splist.length,\\n                    needsRefresh = false,\\n                    offset = this.$canvas.offset(),\\n                    localX = this.currentPageX - offset.left,\\n                    localY = this.currentPageY - offset.top,\\n                    tooltiphtml, sp, i, result, changeEvent;\\n                if (!this.over) {\\n                    return;\\n                }\\n                for (i = 0; i < spcount; i++) {\\n                    sp = splist[i];\\n                    result = sp.setRegionHighlight(this.currentEl, localX, localY);\\n                    if (result) {\\n                        needsRefresh = true;\\n                    }\\n                }\\n                if (needsRefresh) {\\n                    changeEvent = $.Event('sparklineRegionChange');\\n                    changeEvent.sparklines = this.splist;\\n                    this.$el.trigger(changeEvent);\\n                    if (this.tooltip) {\\n                        tooltiphtml = '';\\n                        for (i = 0; i < spcount; i++) {\\n                            sp = splist[i];\\n                            tooltiphtml += sp.getCurrentRegionTooltip();\\n                        }\\n                        this.tooltip.setContent(tooltiphtml);\\n                    }\\n                    if (!this.disableHighlight) {\\n                        this.canvas.render();\\n                    }\\n                }\\n                if (result === null) {\\n                    this.mouseleave();\\n                }\\n            }\\n        });\\n\\n\\n        Tooltip = createClass({\\n            sizeStyle: 'position: static !important;' +\\n            'display: block !important;' +\\n            'visibility: hidden !important;' +\\n            'float: left !important;',\\n\\n            init: function (options) {\\n                var tooltipClassname = options.get('tooltipClassname', 'jqstooltip'),\\n                    sizetipStyle = this.sizeStyle,\\n                    offset;\\n                this.container = options.get('tooltipContainer') || document.body;\\n                this.tooltipOffsetX = options.get('tooltipOffsetX', 10);\\n                this.tooltipOffsetY = options.get('tooltipOffsetY', 12);\\n                // remove any previous lingering tooltip\\n                $('#jqssizetip').remove();\\n                $('#jqstooltip').remove();\\n                this.sizetip = $('<div/>', {\\n                    id: 'jqssizetip',\\n                    style: sizetipStyle,\\n                    'class': tooltipClassname\\n                });\\n                this.tooltip = $('<div/>', {\\n                    id: 'jqstooltip',\\n                    'class': tooltipClassname\\n                }).appendTo(this.container);\\n                // account for the container's location\\n                offset = this.tooltip.offset();\\n                this.offsetLeft = offset.left;\\n                this.offsetTop = offset.top;\\n                this.hidden = true;\\n                $(window).unbind('resize.jqs scroll.jqs');\\n                $(window).bind('resize.jqs scroll.jqs', $.proxy(this.updateWindowDims, this));\\n                this.updateWindowDims();\\n            },\\n\\n            updateWindowDims: function () {\\n                this.scrollTop = $(window).scrollTop();\\n                this.scrollLeft = $(window).scrollLeft();\\n                this.scrollRight = this.scrollLeft + $(window).width();\\n                this.updatePosition();\\n            },\\n\\n            getSize: function (content) {\\n                this.sizetip.html(content).appendTo(this.container);\\n                this.width = this.sizetip.width() + 1;\\n                this.height = this.sizetip.height();\\n                this.sizetip.remove();\\n            },\\n\\n            setContent: function (content) {\\n                if (!content) {\\n                    this.tooltip.css('visibility', 'hidden');\\n                    this.hidden = true;\\n                    return;\\n                }\\n                this.getSize(content);\\n                this.tooltip.html(content)\\n                    .css({\\n                        'width': this.width,\\n                        'height': this.height,\\n                        'visibility': 'visible'\\n                    });\\n                if (this.hidden) {\\n                    this.hidden = false;\\n                    this.updatePosition();\\n                }\\n            },\\n\\n            updatePosition: function (x, y) {\\n                if (x === undefined) {\\n                    if (this.mousex === undefined) {\\n                        return;\\n                    }\\n                    x = this.mousex - this.offsetLeft;\\n                    y = this.mousey - this.offsetTop;\\n\\n                } else {\\n                    this.mousex = x = x - this.offsetLeft;\\n                    this.mousey = y = y - this.offsetTop;\\n                }\\n                if (!this.height || !this.width || this.hidden) {\\n                    return;\\n                }\\n\\n                y -= this.height + this.tooltipOffsetY;\\n                x += this.tooltipOffsetX;\\n\\n                if (y < this.scrollTop) {\\n                    y = this.scrollTop;\\n                }\\n                if (x < this.scrollLeft) {\\n                    x = this.scrollLeft;\\n                } else if (x + this.width > this.scrollRight) {\\n                    x = this.scrollRight - this.width;\\n                }\\n\\n                this.tooltip.css({\\n                    'left': x,\\n                    'top': y\\n                });\\n            },\\n\\n            remove: function () {\\n                this.tooltip.remove();\\n                this.sizetip.remove();\\n                this.sizetip = this.tooltip = undefined;\\n                $(window).unbind('resize.jqs scroll.jqs');\\n            }\\n        });\\n\\n        initStyles = function () {\\n            addCSS(defaultStyles);\\n        };\\n\\n        $(initStyles);\\n\\n        pending = [];\\n        $.fn.sparkline = function (userValues, userOptions) {\\n            return this.each(function () {\\n                var options = new $.fn.sparkline.options(this, userOptions),\\n                    $this = $(this),\\n                    render, i;\\n                render = function () {\\n                    var values, width, height, tmp, mhandler, sp, vals;\\n                    if (userValues === 'html' || userValues === undefined) {\\n                        vals = this.getAttribute(options.get('tagValuesAttribute'));\\n                        if (vals === undefined || vals === null) {\\n                            vals = $this.html();\\n                        }\\n                        values = vals.replace(/(^\\\\s*<!--)|(-->\\\\s*$)|\\\\s+/g, '').split(',');\\n                    } else {\\n                        values = userValues;\\n                    }\\n\\n                    width = options.get('width') === 'auto' ? values.length * options.get('defaultPixelsPerValue') : options.get('width');\\n                    if (options.get('height') === 'auto') {\\n                        if (!options.get('composite') || !$.data(this, '_jqs_vcanvas')) {\\n                            // must be a better way to get the line height\\n                            tmp = document.createElement('span');\\n                            tmp.innerHTML = 'a';\\n                            $this.html(tmp);\\n                            height = $(tmp).innerHeight() || $(tmp).height();\\n                            $(tmp).remove();\\n                            tmp = null;\\n                        }\\n                    } else {\\n                        height = options.get('height');\\n                    }\\n\\n                    if (!options.get('disableInteraction')) {\\n                        mhandler = $.data(this, '_jqs_mhandler');\\n                        if (!mhandler) {\\n                            mhandler = new MouseHandler(this, options);\\n                            $.data(this, '_jqs_mhandler', mhandler);\\n                        } else if (!options.get('composite')) {\\n                            mhandler.reset();\\n                        }\\n                    } else {\\n                        mhandler = false;\\n                    }\\n\\n                    if (options.get('composite') && !$.data(this, '_jqs_vcanvas')) {\\n                        if (!$.data(this, '_jqs_errnotify')) {\\n                            alert('Attempted to attach a composite sparkline to an element with no existing sparkline');\\n                            $.data(this, '_jqs_errnotify', true);\\n                        }\\n                        return;\\n                    }\\n\\n                    sp = new $.fn.sparkline[options.get('type')](this, values, options, width, height);\\n\\n                    sp.render();\\n\\n                    if (mhandler) {\\n                        mhandler.registerSparkline(sp);\\n                    }\\n                };\\n                if (($(this).html() && !options.get('disableHiddenCheck') && $(this).is(':hidden')) || !$(this).parents('body').length) {\\n                    if (!options.get('composite') && $.data(this, '_jqs_pending')) {\\n                        // remove any existing references to the element\\n                        for (i = pending.length; i; i--) {\\n                            if (pending[i - 1][0] == this) {\\n                                pending.splice(i - 1, 1);\\n                            }\\n                        }\\n                    }\\n                    pending.push([this, render]);\\n                    $.data(this, '_jqs_pending', true);\\n                } else {\\n                    render.call(this);\\n                }\\n            });\\n        };\\n\\n        $.fn.sparkline.defaults = getDefaults();\\n\\n\\n        $.sparkline_display_visible = function () {\\n            var el, i, pl;\\n            var done = [];\\n            for (i = 0, pl = pending.length; i < pl; i++) {\\n                el = pending[i][0];\\n                if ($(el).is(':visible') && !$(el).parents().is(':hidden')) {\\n                    pending[i][1].call(el);\\n                    $.data(pending[i][0], '_jqs_pending', false);\\n                    done.push(i);\\n                } else if (!$(el).closest('html').length && !$.data(el, '_jqs_pending')) {\\n                    // element has been inserted and removed from the DOM\\n                    // If it was not yet inserted into the dom then the .data request\\n                    // will return true.\\n                    // removing from the dom causes the data to be removed.\\n                    $.data(pending[i][0], '_jqs_pending', false);\\n                    done.push(i);\\n                }\\n            }\\n            for (i = done.length; i; i--) {\\n                pending.splice(done[i - 1], 1);\\n            }\\n        };\\n\\n\\n        /**\\n         * User option handler\\n         */\\n        $.fn.sparkline.options = createClass({\\n            init: function (tag, userOptions) {\\n                var extendedOptions, defaults, base, tagOptionType;\\n                this.userOptions = userOptions = userOptions || {};\\n                this.tag = tag;\\n                this.tagValCache = {};\\n                defaults = $.fn.sparkline.defaults;\\n                base = defaults.common;\\n                this.tagOptionsPrefix = userOptions.enableTagOptions && (userOptions.tagOptionsPrefix || base.tagOptionsPrefix);\\n\\n                tagOptionType = this.getTagSetting('type');\\n                if (tagOptionType === UNSET_OPTION) {\\n                    extendedOptions = defaults[userOptions.type || base.type];\\n                } else {\\n                    extendedOptions = defaults[tagOptionType];\\n                }\\n                this.mergedOptions = $.extend({}, base, extendedOptions, userOptions);\\n            },\\n\\n\\n            getTagSetting: function (key) {\\n                var prefix = this.tagOptionsPrefix,\\n                    val, i, pairs, keyval;\\n                if (prefix === false || prefix === undefined) {\\n                    return UNSET_OPTION;\\n                }\\n                if (this.tagValCache.hasOwnProperty(key)) {\\n                    val = this.tagValCache.key;\\n                } else {\\n                    val = this.tag.getAttribute(prefix + key);\\n                    if (val === undefined || val === null) {\\n                        val = UNSET_OPTION;\\n                    } else if (val.substr(0, 1) === '[') {\\n                        val = val.substr(1, val.length - 2).split(',');\\n                        for (i = val.length; i--;) {\\n                            val[i] = normalizeValue(val[i].replace(/(^\\\\s*)|(\\\\s*$)/g, ''));\\n                        }\\n                    } else if (val.substr(0, 1) === '{') {\\n                        pairs = val.substr(1, val.length - 2).split(',');\\n                        val = {};\\n                        for (i = pairs.length; i--;) {\\n                            keyval = pairs[i].split(':', 2);\\n                            val[keyval[0].replace(/(^\\\\s*)|(\\\\s*$)/g, '')] = normalizeValue(keyval[1].replace(/(^\\\\s*)|(\\\\s*$)/g, ''));\\n                        }\\n                    } else {\\n                        val = normalizeValue(val);\\n                    }\\n                    this.tagValCache.key = val;\\n                }\\n                return val;\\n            },\\n\\n            get: function (key, defaultval) {\\n                var tagOption = this.getTagSetting(key),\\n                    result;\\n                if (tagOption !== UNSET_OPTION) {\\n                    return tagOption;\\n                }\\n                return (result = this.mergedOptions[key]) === undefined ? defaultval : result;\\n            }\\n        });\\n\\n\\n        $.fn.sparkline._base = createClass({\\n            disabled: false,\\n\\n            init: function (el, values, options, width, height) {\\n                this.el = el;\\n                this.$el = $(el);\\n                this.values = values;\\n                this.options = options;\\n                this.width = width;\\n                this.height = height;\\n                this.currentRegion = undefined;\\n            },\\n\\n            /**\\n             * Setup the canvas\\n             */\\n            initTarget: function () {\\n                var interactive = !this.options.get('disableInteraction');\\n                if (!(this.target = this.$el.simpledraw(this.width, this.height, this.options.get('composite'), interactive))) {\\n                    this.disabled = true;\\n                } else {\\n                    this.canvasWidth = this.target.pixelWidth;\\n                    this.canvasHeight = this.target.pixelHeight;\\n                }\\n            },\\n\\n            /**\\n             * Actually render the chart to the canvas\\n             */\\n            render: function () {\\n                if (this.disabled) {\\n                    this.el.innerHTML = '';\\n                    return false;\\n                }\\n                return true;\\n            },\\n\\n            /**\\n             * Return a region id for a given x/y co-ordinate\\n             */\\n            getRegion: function (x, y) {\\n            },\\n\\n            /**\\n             * Highlight an item based on the moused-over x,y co-ordinate\\n             */\\n            setRegionHighlight: function (el, x, y) {\\n                var currentRegion = this.currentRegion,\\n                    highlightEnabled = !this.options.get('disableHighlight'),\\n                    newRegion;\\n                if (x > this.canvasWidth || y > this.canvasHeight || x < 0 || y < 0) {\\n                    return null;\\n                }\\n                newRegion = this.getRegion(el, x, y);\\n                if (currentRegion !== newRegion) {\\n                    if (currentRegion !== undefined && highlightEnabled) {\\n                        this.removeHighlight();\\n                    }\\n                    this.currentRegion = newRegion;\\n                    if (newRegion !== undefined && highlightEnabled) {\\n                        this.renderHighlight();\\n                    }\\n                    return true;\\n                }\\n                return false;\\n            },\\n\\n            /**\\n             * Reset any currently highlighted item\\n             */\\n            clearRegionHighlight: function () {\\n                if (this.currentRegion !== undefined) {\\n                    this.removeHighlight();\\n                    this.currentRegion = undefined;\\n                    return true;\\n                }\\n                return false;\\n            },\\n\\n            renderHighlight: function () {\\n                this.changeHighlight(true);\\n            },\\n\\n            removeHighlight: function () {\\n                this.changeHighlight(false);\\n            },\\n\\n            changeHighlight: function (highlight) {\\n            },\\n\\n            /**\\n             * Fetch the HTML to display as a tooltip\\n             */\\n            getCurrentRegionTooltip: function () {\\n                var options = this.options,\\n                    header = '',\\n                    entries = [],\\n                    fields, formats, formatlen, fclass, text, i,\\n                    showFields, showFieldsKey, newFields, fv,\\n                    formatter, format, fieldlen, j;\\n                if (this.currentRegion === undefined) {\\n                    return '';\\n                }\\n                fields = this.getCurrentRegionFields();\\n                formatter = options.get('tooltipFormatter');\\n                if (formatter) {\\n                    return formatter(this, options, fields);\\n                }\\n                if (options.get('tooltipChartTitle')) {\\n                    header += '<div class=\\\"jqs jqstitle\\\">' + options.get('tooltipChartTitle') + '</div>\\\\n';\\n                }\\n                formats = this.options.get('tooltipFormat');\\n                if (!formats) {\\n                    return '';\\n                }\\n                if (!$.isArray(formats)) {\\n                    formats = [formats];\\n                }\\n                if (!$.isArray(fields)) {\\n                    fields = [fields];\\n                }\\n                showFields = this.options.get('tooltipFormatFieldlist');\\n                showFieldsKey = this.options.get('tooltipFormatFieldlistKey');\\n                if (showFields && showFieldsKey) {\\n                    // user-selected ordering of fields\\n                    newFields = [];\\n                    for (i = fields.length; i--;) {\\n                        fv = fields[i][showFieldsKey];\\n                        if ((j = $.inArray(fv, showFields)) != -1) {\\n                            newFields[j] = fields[i];\\n                        }\\n                    }\\n                    fields = newFields;\\n                }\\n                formatlen = formats.length;\\n                fieldlen = fields.length;\\n                for (i = 0; i < formatlen; i++) {\\n                    format = formats[i];\\n                    if (typeof format === 'string') {\\n                        format = new SPFormat(format);\\n                    }\\n                    fclass = format.fclass || 'jqsfield';\\n                    for (j = 0; j < fieldlen; j++) {\\n                        if (!fields[j].isNull || !options.get('tooltipSkipNull')) {\\n                            $.extend(fields[j], {\\n                                prefix: options.get('tooltipPrefix'),\\n                                suffix: options.get('tooltipSuffix')\\n                            });\\n                            text = format.render(fields[j], options.get('tooltipValueLookups'), options);\\n                            entries.push('<div class=\\\"' + fclass + '\\\">' + text + '</div>');\\n                        }\\n                    }\\n                }\\n                if (entries.length) {\\n                    return header + entries.join('\\\\n');\\n                }\\n                return '';\\n            },\\n\\n            getCurrentRegionFields: function () {\\n            },\\n\\n            calcHighlightColor: function (color, options) {\\n                var highlightColor = options.get('highlightColor'),\\n                    lighten = options.get('highlightLighten'),\\n                    parse, mult, rgbnew, i;\\n                if (highlightColor) {\\n                    return highlightColor;\\n                }\\n                if (lighten) {\\n                    // extract RGB values\\n                    parse = /^#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(color) || /^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i.exec(color);\\n                    if (parse) {\\n                        rgbnew = [];\\n                        mult = color.length === 4 ? 16 : 1;\\n                        for (i = 0; i < 3; i++) {\\n                            rgbnew[i] = clipval(Math.round(parseInt(parse[i + 1], 16) * mult * lighten), 0, 255);\\n                        }\\n                        return 'rgb(' + rgbnew.join(',') + ')';\\n                    }\\n\\n                }\\n                return color;\\n            }\\n\\n        });\\n\\n        barHighlightMixin = {\\n            changeHighlight: function (highlight) {\\n                var currentRegion = this.currentRegion,\\n                    target = this.target,\\n                    shapeids = this.regionShapes[currentRegion],\\n                    newShapes;\\n                // will be null if the region value was null\\n                if (shapeids) {\\n                    newShapes = this.renderRegion(currentRegion, highlight);\\n                    if ($.isArray(newShapes) || $.isArray(shapeids)) {\\n                        target.replaceWithShapes(shapeids, newShapes);\\n                        this.regionShapes[currentRegion] = $.map(newShapes, function (newShape) {\\n                            return newShape.id;\\n                        });\\n                    } else {\\n                        target.replaceWithShape(shapeids, newShapes);\\n                        this.regionShapes[currentRegion] = newShapes.id;\\n                    }\\n                }\\n            },\\n\\n            render: function () {\\n                var values = this.values,\\n                    target = this.target,\\n                    regionShapes = this.regionShapes,\\n                    shapes, ids, i, j;\\n\\n                if (!this.cls._super.render.call(this)) {\\n                    return;\\n                }\\n                for (i = values.length; i--;) {\\n                    shapes = this.renderRegion(i);\\n                    if (shapes) {\\n                        if ($.isArray(shapes)) {\\n                            ids = [];\\n                            for (j = shapes.length; j--;) {\\n                                shapes[j].append();\\n                                ids.push(shapes[j].id);\\n                            }\\n                            regionShapes[i] = ids;\\n                        } else {\\n                            shapes.append();\\n                            regionShapes[i] = shapes.id; // store just the shapeid\\n                        }\\n                    } else {\\n                        // null value\\n                        regionShapes[i] = null;\\n                    }\\n                }\\n                target.render();\\n            }\\n        };\\n\\n        /**\\n         * Line charts\\n         */\\n        $.fn.sparkline.line = line = createClass($.fn.sparkline._base, {\\n            type: 'line',\\n\\n            init: function (el, values, options, width, height) {\\n                line._super.init.call(this, el, values, options, width, height);\\n                this.vertices = [];\\n                this.regionMap = [];\\n                this.xvalues = [];\\n                this.yvalues = [];\\n                this.yminmax = [];\\n                this.hightlightSpotId = null;\\n                this.lastShapeId = null;\\n                this.initTarget();\\n            },\\n\\n            getRegion: function (el, x, y) {\\n                var i,\\n                    regionMap = this.regionMap; // maps regions to value positions\\n                for (i = regionMap.length; i--;) {\\n                    if (regionMap[i] !== null && x >= regionMap[i][0] && x <= regionMap[i][1]) {\\n                        return regionMap[i][2];\\n                    }\\n                }\\n                return undefined;\\n            },\\n\\n            getCurrentRegionFields: function () {\\n                var currentRegion = this.currentRegion;\\n                return {\\n                    isNull: this.yvalues[currentRegion] === null,\\n                    x: this.xvalues[currentRegion],\\n                    y: this.yvalues[currentRegion],\\n                    color: this.options.get('lineColor'),\\n                    fillColor: this.options.get('fillColor'),\\n                    offset: currentRegion\\n                };\\n            },\\n\\n            renderHighlight: function () {\\n                var currentRegion = this.currentRegion,\\n                    target = this.target,\\n                    vertex = this.vertices[currentRegion],\\n                    options = this.options,\\n                    spotRadius = options.get('spotRadius'),\\n                    highlightSpotColor = options.get('highlightSpotColor'),\\n                    highlightLineColor = options.get('highlightLineColor'),\\n                    highlightSpot, highlightLine;\\n\\n                if (!vertex) {\\n                    return;\\n                }\\n                if (spotRadius && highlightSpotColor) {\\n                    highlightSpot = target.drawCircle(vertex[0], vertex[1],\\n                        spotRadius, undefined, highlightSpotColor);\\n                    this.highlightSpotId = highlightSpot.id;\\n                    target.insertAfterShape(this.lastShapeId, highlightSpot);\\n                }\\n                if (highlightLineColor) {\\n                    highlightLine = target.drawLine(vertex[0], this.canvasTop, vertex[0],\\n                        this.canvasTop + this.canvasHeight, highlightLineColor);\\n                    this.highlightLineId = highlightLine.id;\\n                    target.insertAfterShape(this.lastShapeId, highlightLine);\\n                }\\n            },\\n\\n            removeHighlight: function () {\\n                var target = this.target;\\n                if (this.highlightSpotId) {\\n                    target.removeShapeId(this.highlightSpotId);\\n                    this.highlightSpotId = null;\\n                }\\n                if (this.highlightLineId) {\\n                    target.removeShapeId(this.highlightLineId);\\n                    this.highlightLineId = null;\\n                }\\n            },\\n\\n            scanValues: function () {\\n                var values = this.values,\\n                    valcount = values.length,\\n                    xvalues = this.xvalues,\\n                    yvalues = this.yvalues,\\n                    yminmax = this.yminmax,\\n                    i, val, isStr, isArray, sp;\\n                for (i = 0; i < valcount; i++) {\\n                    val = values[i];\\n                    isStr = typeof(values[i]) === 'string';\\n                    isArray = typeof(values[i]) === 'object' && values[i] instanceof Array;\\n                    sp = isStr && values[i].split(':');\\n                    if (isStr && sp.length === 2) { // x:y\\n                        xvalues.push(Number(sp[0]));\\n                        yvalues.push(Number(sp[1]));\\n                        yminmax.push(Number(sp[1]));\\n                    } else if (isArray) {\\n                        xvalues.push(val[0]);\\n                        yvalues.push(val[1]);\\n                        yminmax.push(val[1]);\\n                    } else {\\n                        xvalues.push(i);\\n                        if (values[i] === null || values[i] === 'null') {\\n                            yvalues.push(null);\\n                        } else {\\n                            yvalues.push(Number(val));\\n                            yminmax.push(Number(val));\\n                        }\\n                    }\\n                }\\n                if (this.options.get('xvalues')) {\\n                    xvalues = this.options.get('xvalues');\\n                }\\n\\n                this.maxy = this.maxyorg = Math.max.apply(Math, yminmax);\\n                this.miny = this.minyorg = Math.min.apply(Math, yminmax);\\n\\n                this.maxx = Math.max.apply(Math, xvalues);\\n                this.minx = Math.min.apply(Math, xvalues);\\n\\n                this.xvalues = xvalues;\\n                this.yvalues = yvalues;\\n                this.yminmax = yminmax;\\n\\n            },\\n\\n            processRangeOptions: function () {\\n                var options = this.options,\\n                    normalRangeMin = options.get('normalRangeMin'),\\n                    normalRangeMax = options.get('normalRangeMax');\\n\\n                if (normalRangeMin !== undefined) {\\n                    if (normalRangeMin < this.miny) {\\n                        this.miny = normalRangeMin;\\n                    }\\n                    if (normalRangeMax > this.maxy) {\\n                        this.maxy = normalRangeMax;\\n                    }\\n                }\\n                if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < this.miny)) {\\n                    this.miny = options.get('chartRangeMin');\\n                }\\n                if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > this.maxy)) {\\n                    this.maxy = options.get('chartRangeMax');\\n                }\\n                if (options.get('chartRangeMinX') !== undefined && (options.get('chartRangeClipX') || options.get('chartRangeMinX') < this.minx)) {\\n                    this.minx = options.get('chartRangeMinX');\\n                }\\n                if (options.get('chartRangeMaxX') !== undefined && (options.get('chartRangeClipX') || options.get('chartRangeMaxX') > this.maxx)) {\\n                    this.maxx = options.get('chartRangeMaxX');\\n                }\\n\\n            },\\n\\n            drawNormalRange: function (canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey) {\\n                var normalRangeMin = this.options.get('normalRangeMin'),\\n                    normalRangeMax = this.options.get('normalRangeMax'),\\n                    ytop = canvasTop + Math.round(canvasHeight - (canvasHeight * ((normalRangeMax - this.miny) / rangey))),\\n                    height = Math.round((canvasHeight * (normalRangeMax - normalRangeMin)) / rangey);\\n                this.target.drawRect(canvasLeft, ytop, canvasWidth, height, undefined, this.options.get('normalRangeColor')).append();\\n            },\\n\\n            render: function () {\\n                var options = this.options,\\n                    target = this.target,\\n                    canvasWidth = this.canvasWidth,\\n                    canvasHeight = this.canvasHeight,\\n                    vertices = this.vertices,\\n                    spotRadius = options.get('spotRadius'),\\n                    regionMap = this.regionMap,\\n                    rangex, rangey, yvallast,\\n                    canvasTop, canvasLeft,\\n                    vertex, path, paths, x, y, xnext, xpos, xposnext,\\n                    last, next, yvalcount, lineShapes, fillShapes, plen,\\n                    valueSpots, hlSpotsEnabled, color, xvalues, yvalues, i;\\n\\n                if (!line._super.render.call(this)) {\\n                    return;\\n                }\\n\\n                this.scanValues();\\n                this.processRangeOptions();\\n\\n                xvalues = this.xvalues;\\n                yvalues = this.yvalues;\\n\\n                if (!this.yminmax.length || this.yvalues.length < 2) {\\n                    // empty or all null valuess\\n                    return;\\n                }\\n\\n                canvasTop = canvasLeft = 0;\\n\\n                rangex = this.maxx - this.minx === 0 ? 1 : this.maxx - this.minx;\\n                rangey = this.maxy - this.miny === 0 ? 1 : this.maxy - this.miny;\\n                yvallast = this.yvalues.length - 1;\\n\\n                if (spotRadius && (canvasWidth < (spotRadius * 4) || canvasHeight < (spotRadius * 4))) {\\n                    spotRadius = 0;\\n                }\\n                if (spotRadius) {\\n                    // adjust the canvas size as required so that spots will fit\\n                    hlSpotsEnabled = options.get('highlightSpotColor') && !options.get('disableInteraction');\\n                    if (hlSpotsEnabled || options.get('minSpotColor') || (options.get('spotColor') && yvalues[yvallast] === this.miny)) {\\n                        canvasHeight -= Math.ceil(spotRadius);\\n                    }\\n                    if (hlSpotsEnabled || options.get('maxSpotColor') || (options.get('spotColor') && yvalues[yvallast] === this.maxy)) {\\n                        canvasHeight -= Math.ceil(spotRadius);\\n                        canvasTop += Math.ceil(spotRadius);\\n                    }\\n                    if (hlSpotsEnabled ||\\n                        ((options.get('minSpotColor') || options.get('maxSpotColor')) && (yvalues[0] === this.miny || yvalues[0] === this.maxy))) {\\n                        canvasLeft += Math.ceil(spotRadius);\\n                        canvasWidth -= Math.ceil(spotRadius);\\n                    }\\n                    if (hlSpotsEnabled || options.get('spotColor') ||\\n                        (options.get('minSpotColor') || options.get('maxSpotColor') &&\\n                        (yvalues[yvallast] === this.miny || yvalues[yvallast] === this.maxy))) {\\n                        canvasWidth -= Math.ceil(spotRadius);\\n                    }\\n                }\\n\\n\\n                canvasHeight--;\\n\\n                if (options.get('normalRangeMin') !== undefined && !options.get('drawNormalOnTop')) {\\n                    this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);\\n                }\\n\\n                path = [];\\n                paths = [path];\\n                last = next = null;\\n                yvalcount = yvalues.length;\\n                for (i = 0; i < yvalcount; i++) {\\n                    x = xvalues[i];\\n                    xnext = xvalues[i + 1];\\n                    y = yvalues[i];\\n                    xpos = canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex));\\n                    xposnext = i < yvalcount - 1 ? canvasLeft + Math.round((xnext - this.minx) * (canvasWidth / rangex)) : canvasWidth;\\n                    next = xpos + ((xposnext - xpos) / 2);\\n                    regionMap[i] = [last || 0, next, i];\\n                    last = next;\\n                    if (y === null) {\\n                        if (i) {\\n                            if (yvalues[i - 1] !== null) {\\n                                path = [];\\n                                paths.push(path);\\n                            }\\n                            vertices.push(null);\\n                        }\\n                    } else {\\n                        if (y < this.miny) {\\n                            y = this.miny;\\n                        }\\n                        if (y > this.maxy) {\\n                            y = this.maxy;\\n                        }\\n                        if (!path.length) {\\n                            // previous value was null\\n                            path.push([xpos, canvasTop + canvasHeight]);\\n                        }\\n                        vertex = [xpos, canvasTop + Math.round(canvasHeight - (canvasHeight * ((y - this.miny) / rangey)))];\\n                        path.push(vertex);\\n                        vertices.push(vertex);\\n                    }\\n                }\\n\\n                lineShapes = [];\\n                fillShapes = [];\\n                plen = paths.length;\\n                for (i = 0; i < plen; i++) {\\n                    path = paths[i];\\n                    if (path.length) {\\n                        if (options.get('fillColor')) {\\n                            path.push([path[path.length - 1][0], (canvasTop + canvasHeight)]);\\n                            fillShapes.push(path.slice(0));\\n                            path.pop();\\n                        }\\n                        // if there's only a single point in this path, then we want to display it\\n                        // as a vertical line which means we keep path[0]  as is\\n                        if (path.length > 2) {\\n                            // else we want the first value\\n                            path[0] = [path[0][0], path[1][1]];\\n                        }\\n                        lineShapes.push(path);\\n                    }\\n                }\\n\\n                // draw the fill first, then optionally the normal range, then the line on top of that\\n                plen = fillShapes.length;\\n                for (i = 0; i < plen; i++) {\\n                    target.drawShape(fillShapes[i],\\n                        options.get('fillColor'), options.get('fillColor')).append();\\n                }\\n\\n                if (options.get('normalRangeMin') !== undefined && options.get('drawNormalOnTop')) {\\n                    this.drawNormalRange(canvasLeft, canvasTop, canvasHeight, canvasWidth, rangey);\\n                }\\n\\n                plen = lineShapes.length;\\n                for (i = 0; i < plen; i++) {\\n                    target.drawShape(lineShapes[i], options.get('lineColor'), undefined,\\n                        options.get('lineWidth')).append();\\n                }\\n\\n                if (spotRadius && options.get('valueSpots')) {\\n                    valueSpots = options.get('valueSpots');\\n                    if (valueSpots.get === undefined) {\\n                        valueSpots = new RangeMap(valueSpots);\\n                    }\\n                    for (i = 0; i < yvalcount; i++) {\\n                        color = valueSpots.get(yvalues[i]);\\n                        if (color) {\\n                            target.drawCircle(canvasLeft + Math.round((xvalues[i] - this.minx) * (canvasWidth / rangex)),\\n                                canvasTop + Math.round(canvasHeight - (canvasHeight * ((yvalues[i] - this.miny) / rangey))),\\n                                spotRadius, undefined,\\n                                color).append();\\n                        }\\n                    }\\n\\n                }\\n                if (spotRadius && options.get('spotColor') && yvalues[yvallast] !== null) {\\n                    target.drawCircle(canvasLeft + Math.round((xvalues[xvalues.length - 1] - this.minx) * (canvasWidth / rangex)),\\n                        canvasTop + Math.round(canvasHeight - (canvasHeight * ((yvalues[yvallast] - this.miny) / rangey))),\\n                        spotRadius, undefined,\\n                        options.get('spotColor')).append();\\n                }\\n                if (this.maxy !== this.minyorg) {\\n                    if (spotRadius && options.get('minSpotColor')) {\\n                        x = xvalues[$.inArray(this.minyorg, yvalues)];\\n                        target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)),\\n                            canvasTop + Math.round(canvasHeight - (canvasHeight * ((this.minyorg - this.miny) / rangey))),\\n                            spotRadius, undefined,\\n                            options.get('minSpotColor')).append();\\n                    }\\n                    if (spotRadius && options.get('maxSpotColor')) {\\n                        x = xvalues[$.inArray(this.maxyorg, yvalues)];\\n                        target.drawCircle(canvasLeft + Math.round((x - this.minx) * (canvasWidth / rangex)),\\n                            canvasTop + Math.round(canvasHeight - (canvasHeight * ((this.maxyorg - this.miny) / rangey))),\\n                            spotRadius, undefined,\\n                            options.get('maxSpotColor')).append();\\n                    }\\n                }\\n\\n                this.lastShapeId = target.getLastShapeId();\\n                this.canvasTop = canvasTop;\\n                target.render();\\n            }\\n        });\\n\\n        /**\\n         * Bar charts\\n         */\\n        $.fn.sparkline.bar = bar = createClass($.fn.sparkline._base, barHighlightMixin, {\\n            type: 'bar',\\n\\n            init: function (el, values, options, width, height) {\\n                var barWidth = parseInt(options.get('barWidth'), 10),\\n                    barSpacing = parseInt(options.get('barSpacing'), 10),\\n                    chartRangeMin = options.get('chartRangeMin'),\\n                    chartRangeMax = options.get('chartRangeMax'),\\n                    chartRangeClip = options.get('chartRangeClip'),\\n                    stackMin = Infinity,\\n                    stackMax = -Infinity,\\n                    isStackString, groupMin, groupMax, stackRanges,\\n                    numValues, i, vlen, range, zeroAxis, xaxisOffset, min, max, clipMin, clipMax,\\n                    stacked, vlist, j, slen, svals, val, yoffset, yMaxCalc, canvasHeightEf;\\n                bar._super.init.call(this, el, values, options, width, height);\\n\\n                // scan values to determine whether to stack bars\\n                for (i = 0, vlen = values.length; i < vlen; i++) {\\n                    val = values[i];\\n                    isStackString = typeof(val) === 'string' && val.indexOf(':') > -1;\\n                    if (isStackString || $.isArray(val)) {\\n                        stacked = true;\\n                        if (isStackString) {\\n                            val = values[i] = normalizeValues(val.split(':'));\\n                        }\\n                        val = remove(val, null); // min/max will treat null as zero\\n                        groupMin = Math.min.apply(Math, val);\\n                        groupMax = Math.max.apply(Math, val);\\n                        if (groupMin < stackMin) {\\n                            stackMin = groupMin;\\n                        }\\n                        if (groupMax > stackMax) {\\n                            stackMax = groupMax;\\n                        }\\n                    }\\n                }\\n\\n                this.stacked = stacked;\\n                this.regionShapes = {};\\n                this.barWidth = barWidth;\\n                this.barSpacing = barSpacing;\\n                this.totalBarWidth = barWidth + barSpacing;\\n                this.width = width = (values.length * barWidth) + ((values.length - 1) * barSpacing);\\n\\n                this.initTarget();\\n\\n                if (chartRangeClip) {\\n                    clipMin = chartRangeMin === undefined ? -Infinity : chartRangeMin;\\n                    clipMax = chartRangeMax === undefined ? Infinity : chartRangeMax;\\n                }\\n\\n                numValues = [];\\n                stackRanges = stacked ? [] : numValues;\\n                var stackTotals = [];\\n                var stackRangesNeg = [];\\n                for (i = 0, vlen = values.length; i < vlen; i++) {\\n                    if (stacked) {\\n                        vlist = values[i];\\n                        values[i] = svals = [];\\n                        stackTotals[i] = 0;\\n                        stackRanges[i] = stackRangesNeg[i] = 0;\\n                        for (j = 0, slen = vlist.length; j < slen; j++) {\\n                            val = svals[j] = chartRangeClip ? clipval(vlist[j], clipMin, clipMax) : vlist[j];\\n                            if (val !== null) {\\n                                if (val > 0) {\\n                                    stackTotals[i] += val;\\n                                }\\n                                if (stackMin < 0 && stackMax > 0) {\\n                                    if (val < 0) {\\n                                        stackRangesNeg[i] += Math.abs(val);\\n                                    } else {\\n                                        stackRanges[i] += val;\\n                                    }\\n                                } else {\\n                                    stackRanges[i] += Math.abs(val - (val < 0 ? stackMax : stackMin));\\n                                }\\n                                numValues.push(val);\\n                            }\\n                        }\\n                    } else {\\n                        val = chartRangeClip ? clipval(values[i], clipMin, clipMax) : values[i];\\n                        val = values[i] = normalizeValue(val);\\n                        if (val !== null) {\\n                            numValues.push(val);\\n                        }\\n                    }\\n                }\\n                this.max = max = Math.max.apply(Math, numValues);\\n                this.min = min = Math.min.apply(Math, numValues);\\n                this.stackMax = stackMax = stacked ? Math.max.apply(Math, stackTotals) : max;\\n                this.stackMin = stackMin = stacked ? Math.min.apply(Math, numValues) : min;\\n\\n                if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < min)) {\\n                    min = options.get('chartRangeMin');\\n                }\\n                if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > max)) {\\n                    max = options.get('chartRangeMax');\\n                }\\n\\n                this.zeroAxis = zeroAxis = options.get('zeroAxis', true);\\n                if (min <= 0 && max >= 0 && zeroAxis) {\\n                    xaxisOffset = 0;\\n                } else if (zeroAxis == false) {\\n                    xaxisOffset = min;\\n                } else if (min > 0) {\\n                    xaxisOffset = min;\\n                } else {\\n                    xaxisOffset = max;\\n                }\\n                this.xaxisOffset = xaxisOffset;\\n\\n                range = stacked ? (Math.max.apply(Math, stackRanges) + Math.max.apply(Math, stackRangesNeg)) : max - min;\\n\\n                // as we plot zero/min values a single pixel line, we add a pixel to all other\\n                // values - Reduce the effective canvas size to suit\\n                this.canvasHeightEf = (zeroAxis && min < 0) ? this.canvasHeight - 2 : this.canvasHeight - 1;\\n\\n                if (min < xaxisOffset) {\\n                    yMaxCalc = (stacked && max >= 0) ? stackMax : max;\\n                    yoffset = (yMaxCalc - xaxisOffset) / range * this.canvasHeight;\\n                    if (yoffset !== Math.ceil(yoffset)) {\\n                        this.canvasHeightEf -= 2;\\n                        yoffset = Math.ceil(yoffset);\\n                    }\\n                } else {\\n                    yoffset = this.canvasHeight;\\n                }\\n                this.yoffset = yoffset;\\n\\n                if ($.isArray(options.get('colorMap'))) {\\n                    this.colorMapByIndex = options.get('colorMap');\\n                    this.colorMapByValue = null;\\n                } else {\\n                    this.colorMapByIndex = null;\\n                    this.colorMapByValue = options.get('colorMap');\\n                    if (this.colorMapByValue && this.colorMapByValue.get === undefined) {\\n                        this.colorMapByValue = new RangeMap(this.colorMapByValue);\\n                    }\\n                }\\n\\n                this.range = range;\\n            },\\n\\n            getRegion: function (el, x, y) {\\n                var result = Math.floor(x / this.totalBarWidth);\\n                return (result < 0 || result >= this.values.length) ? undefined : result;\\n            },\\n\\n            getCurrentRegionFields: function () {\\n                var currentRegion = this.currentRegion,\\n                    values = ensureArray(this.values[currentRegion]),\\n                    result = [],\\n                    value, i;\\n                for (i = values.length; i--;) {\\n                    value = values[i];\\n                    result.push({\\n                        isNull: value === null,\\n                        value: value,\\n                        color: this.calcColor(i, value, currentRegion),\\n                        offset: currentRegion\\n                    });\\n                }\\n                return result;\\n            },\\n\\n            calcColor: function (stacknum, value, valuenum) {\\n                var colorMapByIndex = this.colorMapByIndex,\\n                    colorMapByValue = this.colorMapByValue,\\n                    options = this.options,\\n                    color, newColor;\\n                if (this.stacked) {\\n                    color = options.get('stackedBarColor');\\n                } else {\\n                    color = (value < 0) ? options.get('negBarColor') : options.get('barColor');\\n                }\\n                if (value === 0 && options.get('zeroColor') !== undefined) {\\n                    color = options.get('zeroColor');\\n                }\\n                if (colorMapByValue && (newColor = colorMapByValue.get(value))) {\\n                    color = newColor;\\n                } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {\\n                    color = colorMapByIndex[valuenum];\\n                }\\n                return $.isArray(color) ? color[stacknum % color.length] : color;\\n            },\\n\\n            /**\\n             * Render bar(s) for a region\\n             */\\n            renderRegion: function (valuenum, highlight) {\\n                var vals = this.values[valuenum],\\n                    options = this.options,\\n                    xaxisOffset = this.xaxisOffset,\\n                    result = [],\\n                    range = this.range,\\n                    stacked = this.stacked,\\n                    target = this.target,\\n                    x = valuenum * this.totalBarWidth,\\n                    canvasHeightEf = this.canvasHeightEf,\\n                    yoffset = this.yoffset,\\n                    y, height, color, isNull, yoffsetNeg, i, valcount, val, minPlotted, allMin;\\n\\n                vals = $.isArray(vals) ? vals : [vals];\\n                valcount = vals.length;\\n                val = vals[0];\\n                isNull = all(null, vals);\\n                allMin = all(xaxisOffset, vals, true);\\n\\n                if (isNull) {\\n                    if (options.get('nullColor')) {\\n                        color = highlight ? options.get('nullColor') : this.calcHighlightColor(options.get('nullColor'), options);\\n                        y = (yoffset > 0) ? yoffset - 1 : yoffset;\\n                        return target.drawRect(x, y, this.barWidth - 1, 0, color, color);\\n                    } else {\\n                        return undefined;\\n                    }\\n                }\\n                yoffsetNeg = yoffset;\\n                for (i = 0; i < valcount; i++) {\\n                    val = vals[i];\\n\\n                    if (stacked && val === xaxisOffset) {\\n                        if (!allMin || minPlotted) {\\n                            continue;\\n                        }\\n                        minPlotted = true;\\n                    }\\n\\n                    if (range > 0) {\\n                        height = Math.floor(canvasHeightEf * ((Math.abs(val - xaxisOffset) / range))) + 1;\\n                    } else {\\n                        height = 1;\\n                    }\\n                    if (val < xaxisOffset || (val === xaxisOffset && yoffset === 0)) {\\n                        y = yoffsetNeg;\\n                        yoffsetNeg += height;\\n                    } else {\\n                        y = yoffset - height;\\n                        yoffset -= height;\\n                    }\\n                    color = this.calcColor(i, val, valuenum);\\n                    if (highlight) {\\n                        color = this.calcHighlightColor(color, options);\\n                    }\\n                    result.push(target.drawRect(x, y, this.barWidth - 1, height - 1, color, color));\\n                }\\n                if (result.length === 1) {\\n                    return result[0];\\n                }\\n                return result;\\n            }\\n        });\\n\\n        /**\\n         * Tristate charts\\n         */\\n        $.fn.sparkline.tristate = tristate = createClass($.fn.sparkline._base, barHighlightMixin, {\\n            type: 'tristate',\\n\\n            init: function (el, values, options, width, height) {\\n                var barWidth = parseInt(options.get('barWidth'), 10),\\n                    barSpacing = parseInt(options.get('barSpacing'), 10);\\n                tristate._super.init.call(this, el, values, options, width, height);\\n\\n                this.regionShapes = {};\\n                this.barWidth = barWidth;\\n                this.barSpacing = barSpacing;\\n                this.totalBarWidth = barWidth + barSpacing;\\n                this.values = $.map(values, Number);\\n                this.width = width = (values.length * barWidth) + ((values.length - 1) * barSpacing);\\n\\n                if ($.isArray(options.get('colorMap'))) {\\n                    this.colorMapByIndex = options.get('colorMap');\\n                    this.colorMapByValue = null;\\n                } else {\\n                    this.colorMapByIndex = null;\\n                    this.colorMapByValue = options.get('colorMap');\\n                    if (this.colorMapByValue && this.colorMapByValue.get === undefined) {\\n                        this.colorMapByValue = new RangeMap(this.colorMapByValue);\\n                    }\\n                }\\n                this.initTarget();\\n            },\\n\\n            getRegion: function (el, x, y) {\\n                return Math.floor(x / this.totalBarWidth);\\n            },\\n\\n            getCurrentRegionFields: function () {\\n                var currentRegion = this.currentRegion;\\n                return {\\n                    isNull: this.values[currentRegion] === undefined,\\n                    value: this.values[currentRegion],\\n                    color: this.calcColor(this.values[currentRegion], currentRegion),\\n                    offset: currentRegion\\n                };\\n            },\\n\\n            calcColor: function (value, valuenum) {\\n                var values = this.values,\\n                    options = this.options,\\n                    colorMapByIndex = this.colorMapByIndex,\\n                    colorMapByValue = this.colorMapByValue,\\n                    color, newColor;\\n\\n                if (colorMapByValue && (newColor = colorMapByValue.get(value))) {\\n                    color = newColor;\\n                } else if (colorMapByIndex && colorMapByIndex.length > valuenum) {\\n                    color = colorMapByIndex[valuenum];\\n                } else if (values[valuenum] < 0) {\\n                    color = options.get('negBarColor');\\n                } else if (values[valuenum] > 0) {\\n                    color = options.get('posBarColor');\\n                } else {\\n                    color = options.get('zeroBarColor');\\n                }\\n                return color;\\n            },\\n\\n            renderRegion: function (valuenum, highlight) {\\n                var values = this.values,\\n                    options = this.options,\\n                    target = this.target,\\n                    canvasHeight, height, halfHeight,\\n                    x, y, color;\\n\\n                canvasHeight = target.pixelHeight;\\n                halfHeight = Math.round(canvasHeight / 2);\\n\\n                x = valuenum * this.totalBarWidth;\\n                if (values[valuenum] < 0) {\\n                    y = halfHeight;\\n                    height = halfHeight - 1;\\n                } else if (values[valuenum] > 0) {\\n                    y = 0;\\n                    height = halfHeight - 1;\\n                } else {\\n                    y = halfHeight - 1;\\n                    height = 2;\\n                }\\n                color = this.calcColor(values[valuenum], valuenum);\\n                if (color === null) {\\n                    return;\\n                }\\n                if (highlight) {\\n                    color = this.calcHighlightColor(color, options);\\n                }\\n                return target.drawRect(x, y, this.barWidth - 1, height - 1, color, color);\\n            }\\n        });\\n\\n        /**\\n         * Discrete charts\\n         */\\n        $.fn.sparkline.discrete = discrete = createClass($.fn.sparkline._base, barHighlightMixin, {\\n            type: 'discrete',\\n\\n            init: function (el, values, options, width, height) {\\n                discrete._super.init.call(this, el, values, options, width, height);\\n\\n                this.regionShapes = {};\\n                this.values = values = $.map(values, Number);\\n                this.min = Math.min.apply(Math, values);\\n                this.max = Math.max.apply(Math, values);\\n                this.range = this.max - this.min;\\n                this.width = width = options.get('width') === 'auto' ? values.length * 2 : this.width;\\n                this.interval = Math.floor(width / values.length);\\n                this.itemWidth = width / values.length;\\n                if (options.get('chartRangeMin') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMin') < this.min)) {\\n                    this.min = options.get('chartRangeMin');\\n                }\\n                if (options.get('chartRangeMax') !== undefined && (options.get('chartRangeClip') || options.get('chartRangeMax') > this.max)) {\\n                    this.max = options.get('chartRangeMax');\\n                }\\n                this.initTarget();\\n                if (this.target) {\\n                    this.lineHeight = options.get('lineHeight') === 'auto' ? Math.round(this.canvasHeight * 0.3) : options.get('lineHeight');\\n                }\\n            },\\n\\n            getRegion: function (el, x, y) {\\n                return Math.floor(x / this.itemWidth);\\n            },\\n\\n            getCurrentRegionFields: function () {\\n                var currentRegion = this.currentRegion;\\n                return {\\n                    isNull: this.values[currentRegion] === undefined,\\n                    value: this.values[currentRegion],\\n                    offset: currentRegion\\n                };\\n            },\\n\\n            renderRegion: function (valuenum, highlight) {\\n                var values = this.values,\\n                    options = this.options,\\n                    min = this.min,\\n                    max = this.max,\\n                    range = this.range,\\n                    interval = this.interval,\\n                    target = this.target,\\n                    canvasHeight = this.canvasHeight,\\n                    lineHeight = this.lineHeight,\\n                    pheight = canvasHeight - lineHeight,\\n                    ytop, val, color, x;\\n\\n                val = clipval(values[valuenum], min, max);\\n                x = valuenum * interval;\\n                ytop = Math.round(pheight - pheight * ((val - min) / range));\\n                color = (options.get('thresholdColor') && val < options.get('thresholdValue')) ? options.get('thresholdColor') : options.get('lineColor');\\n                if (highlight) {\\n                    color = this.calcHighlightColor(color, options);\\n                }\\n                return target.drawLine(x, ytop, x, ytop + lineHeight, color);\\n            }\\n        });\\n\\n        /**\\n         * Bullet charts\\n         */\\n        $.fn.sparkline.bullet = bullet = createClass($.fn.sparkline._base, {\\n            type: 'bullet',\\n\\n            init: function (el, values, options, width, height) {\\n                var min, max, vals;\\n                bullet._super.init.call(this, el, values, options, width, height);\\n\\n                // values: target, performance, range1, range2, range3\\n                this.values = values = normalizeValues(values);\\n                // target or performance could be null\\n                vals = values.slice();\\n                vals[0] = vals[0] === null ? vals[2] : vals[0];\\n                vals[1] = values[1] === null ? vals[2] : vals[1];\\n                min = Math.min.apply(Math, values);\\n                max = Math.max.apply(Math, values);\\n                if (options.get('base') === undefined) {\\n                    min = min < 0 ? min : 0;\\n                } else {\\n                    min = options.get('base');\\n                }\\n                this.min = min;\\n                this.max = max;\\n                this.range = max - min;\\n                this.shapes = {};\\n                this.valueShapes = {};\\n                this.regiondata = {};\\n                this.width = width = options.get('width') === 'auto' ? '4.0em' : width;\\n                this.target = this.$el.simpledraw(width, height, options.get('composite'));\\n                if (!values.length) {\\n                    this.disabled = true;\\n                }\\n                this.initTarget();\\n            },\\n\\n            getRegion: function (el, x, y) {\\n                var shapeid = this.target.getShapeAt(el, x, y);\\n                return (shapeid !== undefined && this.shapes[shapeid] !== undefined) ? this.shapes[shapeid] : undefined;\\n            },\\n\\n            getCurrentRegionFields: function () {\\n                var currentRegion = this.currentRegion;\\n                return {\\n                    fieldkey: currentRegion.substr(0, 1),\\n                    value: this.values[currentRegion.substr(1)],\\n                    region: currentRegion\\n                };\\n            },\\n\\n            changeHighlight: function (highlight) {\\n                var currentRegion = this.currentRegion,\\n                    shapeid = this.valueShapes[currentRegion],\\n                    shape;\\n                delete this.shapes[shapeid];\\n                switch (currentRegion.substr(0, 1)) {\\n                    case 'r':\\n                        shape = this.renderRange(currentRegion.substr(1), highlight);\\n                        break;\\n                    case 'p':\\n                        shape = this.renderPerformance(highlight);\\n                        break;\\n                    case 't':\\n                        shape = this.renderTarget(highlight);\\n                        break;\\n                }\\n                this.valueShapes[currentRegion] = shape.id;\\n                this.shapes[shape.id] = currentRegion;\\n                this.target.replaceWithShape(shapeid, shape);\\n            },\\n\\n            renderRange: function (rn, highlight) {\\n                var rangeval = this.values[rn],\\n                    rangewidth = Math.round(this.canvasWidth * ((rangeval - this.min) / this.range)),\\n                    color = this.options.get('rangeColors')[rn - 2];\\n                if (highlight) {\\n                    color = this.calcHighlightColor(color, this.options);\\n                }\\n                return this.target.drawRect(0, 0, rangewidth - 1, this.canvasHeight - 1, color, color);\\n            },\\n\\n            renderPerformance: function (highlight) {\\n                var perfval = this.values[1],\\n                    perfwidth = Math.round(this.canvasWidth * ((perfval - this.min) / this.range)),\\n                    color = this.options.get('performanceColor');\\n                if (highlight) {\\n                    color = this.calcHighlightColor(color, this.options);\\n                }\\n                return this.target.drawRect(0, Math.round(this.canvasHeight * 0.3), perfwidth - 1,\\n                    Math.round(this.canvasHeight * 0.4) - 1, color, color);\\n            },\\n\\n            renderTarget: function (highlight) {\\n                var targetval = this.values[0],\\n                    x = Math.round(this.canvasWidth * ((targetval - this.min) / this.range) - (this.options.get('targetWidth') / 2)),\\n                    targettop = Math.round(this.canvasHeight * 0.10),\\n                    targetheight = this.canvasHeight - (targettop * 2),\\n                    color = this.options.get('targetColor');\\n                if (highlight) {\\n                    color = this.calcHighlightColor(color, this.options);\\n                }\\n                return this.target.drawRect(x, targettop, this.options.get('targetWidth') - 1, targetheight - 1, color, color);\\n            },\\n\\n            render: function () {\\n                var vlen = this.values.length,\\n                    target = this.target,\\n                    i, shape;\\n                if (!bullet._super.render.call(this)) {\\n                    return;\\n                }\\n                for (i = 2; i < vlen; i++) {\\n                    shape = this.renderRange(i).append();\\n                    this.shapes[shape.id] = 'r' + i;\\n                    this.valueShapes['r' + i] = shape.id;\\n                }\\n                if (this.values[1] !== null) {\\n                    shape = this.renderPerformance().append();\\n                    this.shapes[shape.id] = 'p1';\\n                    this.valueShapes.p1 = shape.id;\\n                }\\n                if (this.values[0] !== null) {\\n                    shape = this.renderTarget().append();\\n                    this.shapes[shape.id] = 't0';\\n                    this.valueShapes.t0 = shape.id;\\n                }\\n                target.render();\\n            }\\n        });\\n\\n        /**\\n         * Pie charts\\n         */\\n        $.fn.sparkline.pie = pie = createClass($.fn.sparkline._base, {\\n            type: 'pie',\\n\\n            init: function (el, values, options, width, height) {\\n                var total = 0, i;\\n\\n                pie._super.init.call(this, el, values, options, width, height);\\n\\n                this.shapes = {}; // map shape ids to value offsets\\n                this.valueShapes = {}; // maps value offsets to shape ids\\n                this.values = values = $.map(values, Number);\\n\\n                if (options.get('width') === 'auto') {\\n                    this.width = this.height;\\n                }\\n\\n                if (values.length > 0) {\\n                    for (i = values.length; i--;) {\\n                        total += values[i];\\n                    }\\n                }\\n                this.total = total;\\n                this.initTarget();\\n                this.radius = Math.floor(Math.min(this.canvasWidth, this.canvasHeight) / 2);\\n            },\\n\\n            getRegion: function (el, x, y) {\\n                var shapeid = this.target.getShapeAt(el, x, y);\\n                return (shapeid !== undefined && this.shapes[shapeid] !== undefined) ? this.shapes[shapeid] : undefined;\\n            },\\n\\n            getCurrentRegionFields: function () {\\n                var currentRegion = this.currentRegion;\\n                return {\\n                    isNull: this.values[currentRegion] === undefined,\\n                    value: this.values[currentRegion],\\n                    percent: this.values[currentRegion] / this.total * 100,\\n                    color: this.options.get('sliceColors')[currentRegion % this.options.get('sliceColors').length],\\n                    offset: currentRegion\\n                };\\n            },\\n\\n            changeHighlight: function (highlight) {\\n                var currentRegion = this.currentRegion,\\n                    newslice = this.renderSlice(currentRegion, highlight),\\n                    shapeid = this.valueShapes[currentRegion];\\n                delete this.shapes[shapeid];\\n                this.target.replaceWithShape(shapeid, newslice);\\n                this.valueShapes[currentRegion] = newslice.id;\\n                this.shapes[newslice.id] = currentRegion;\\n            },\\n\\n            renderSlice: function (valuenum, highlight) {\\n                var target = this.target,\\n                    options = this.options,\\n                    radius = this.radius,\\n                    borderWidth = options.get('borderWidth'),\\n                    offset = options.get('offset'),\\n                    circle = 2 * Math.PI,\\n                    values = this.values,\\n                    total = this.total,\\n                    next = offset ? (2 * Math.PI) * (offset / 360) : 0,\\n                    start, end, i, vlen, color;\\n\\n                vlen = values.length;\\n                for (i = 0; i < vlen; i++) {\\n                    start = next;\\n                    end = next;\\n                    if (total > 0) {  // avoid divide by zero\\n                        end = next + (circle * (values[i] / total));\\n                    }\\n                    if (valuenum === i) {\\n                        color = options.get('sliceColors')[i % options.get('sliceColors').length];\\n                        if (highlight) {\\n                            color = this.calcHighlightColor(color, options);\\n                        }\\n\\n                        return target.drawPieSlice(radius, radius, radius - borderWidth, start, end, undefined, color);\\n                    }\\n                    next = end;\\n                }\\n            },\\n\\n            render: function () {\\n                var target = this.target,\\n                    values = this.values,\\n                    options = this.options,\\n                    radius = this.radius,\\n                    borderWidth = options.get('borderWidth'),\\n                    shape, i;\\n\\n                if (!pie._super.render.call(this)) {\\n                    return;\\n                }\\n                if (borderWidth) {\\n                    target.drawCircle(radius, radius, Math.floor(radius - (borderWidth / 2)),\\n                        options.get('borderColor'), undefined, borderWidth).append();\\n                }\\n                for (i = values.length; i--;) {\\n                    if (values[i]) { // don't render zero values\\n                        shape = this.renderSlice(i).append();\\n                        this.valueShapes[i] = shape.id; // store just the shapeid\\n                        this.shapes[shape.id] = i;\\n                    }\\n                }\\n                target.render();\\n            }\\n        });\\n\\n        /**\\n         * Box plots\\n         */\\n        $.fn.sparkline.box = box = createClass($.fn.sparkline._base, {\\n            type: 'box',\\n\\n            init: function (el, values, options, width, height) {\\n                box._super.init.call(this, el, values, options, width, height);\\n                this.values = $.map(values, Number);\\n                this.width = options.get('width') === 'auto' ? '4.0em' : width;\\n                this.initTarget();\\n                if (!this.values.length) {\\n                    this.disabled = 1;\\n                }\\n            },\\n\\n            /**\\n             * Simulate a single region\\n             */\\n            getRegion: function () {\\n                return 1;\\n            },\\n\\n            getCurrentRegionFields: function () {\\n                var result = [\\n                    {field: 'lq', value: this.quartiles[0]},\\n                    {field: 'med', value: this.quartiles[1]},\\n                    {field: 'uq', value: this.quartiles[2]}\\n                ];\\n                if (this.loutlier !== undefined) {\\n                    result.push({field: 'lo', value: this.loutlier});\\n                }\\n                if (this.routlier !== undefined) {\\n                    result.push({field: 'ro', value: this.routlier});\\n                }\\n                if (this.lwhisker !== undefined) {\\n                    result.push({field: 'lw', value: this.lwhisker});\\n                }\\n                if (this.rwhisker !== undefined) {\\n                    result.push({field: 'rw', value: this.rwhisker});\\n                }\\n                return result;\\n            },\\n\\n            render: function () {\\n                var target = this.target,\\n                    values = this.values,\\n                    vlen = values.length,\\n                    options = this.options,\\n                    canvasWidth = this.canvasWidth,\\n                    canvasHeight = this.canvasHeight,\\n                    minValue = options.get('chartRangeMin') === undefined ? Math.min.apply(Math, values) : options.get('chartRangeMin'),\\n                    maxValue = options.get('chartRangeMax') === undefined ? Math.max.apply(Math, values) : options.get('chartRangeMax'),\\n                    canvasLeft = 0,\\n                    lwhisker, loutlier, iqr, q1, q2, q3, rwhisker, routlier, i,\\n                    size, unitSize;\\n\\n                if (!box._super.render.call(this)) {\\n                    return;\\n                }\\n\\n                if (options.get('raw')) {\\n                    if (options.get('showOutliers') && values.length > 5) {\\n                        loutlier = values[0];\\n                        lwhisker = values[1];\\n                        q1 = values[2];\\n                        q2 = values[3];\\n                        q3 = values[4];\\n                        rwhisker = values[5];\\n                        routlier = values[6];\\n                    } else {\\n                        lwhisker = values[0];\\n                        q1 = values[1];\\n                        q2 = values[2];\\n                        q3 = values[3];\\n                        rwhisker = values[4];\\n                    }\\n                } else {\\n                    values.sort(function (a, b) {\\n                        return a - b;\\n                    });\\n                    q1 = quartile(values, 1);\\n                    q2 = quartile(values, 2);\\n                    q3 = quartile(values, 3);\\n                    iqr = q3 - q1;\\n                    if (options.get('showOutliers')) {\\n                        lwhisker = rwhisker = undefined;\\n                        for (i = 0; i < vlen; i++) {\\n                            if (lwhisker === undefined && values[i] > q1 - (iqr * options.get('outlierIQR'))) {\\n                                lwhisker = values[i];\\n                            }\\n                            if (values[i] < q3 + (iqr * options.get('outlierIQR'))) {\\n                                rwhisker = values[i];\\n                            }\\n                        }\\n                        loutlier = values[0];\\n                        routlier = values[vlen - 1];\\n                    } else {\\n                        lwhisker = values[0];\\n                        rwhisker = values[vlen - 1];\\n                    }\\n                }\\n                this.quartiles = [q1, q2, q3];\\n                this.lwhisker = lwhisker;\\n                this.rwhisker = rwhisker;\\n                this.loutlier = loutlier;\\n                this.routlier = routlier;\\n\\n                unitSize = canvasWidth / (maxValue - minValue + 1);\\n                if (options.get('showOutliers')) {\\n                    canvasLeft = Math.ceil(options.get('spotRadius'));\\n                    canvasWidth -= 2 * Math.ceil(options.get('spotRadius'));\\n                    unitSize = canvasWidth / (maxValue - minValue + 1);\\n                    if (loutlier < lwhisker) {\\n                        target.drawCircle((loutlier - minValue) * unitSize + canvasLeft,\\n                            canvasHeight / 2,\\n                            options.get('spotRadius'),\\n                            options.get('outlierLineColor'),\\n                            options.get('outlierFillColor')).append();\\n                    }\\n                    if (routlier > rwhisker) {\\n                        target.drawCircle((routlier - minValue) * unitSize + canvasLeft,\\n                            canvasHeight / 2,\\n                            options.get('spotRadius'),\\n                            options.get('outlierLineColor'),\\n                            options.get('outlierFillColor')).append();\\n                    }\\n                }\\n\\n                // box\\n                target.drawRect(\\n                    Math.round((q1 - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight * 0.1),\\n                    Math.round((q3 - q1) * unitSize),\\n                    Math.round(canvasHeight * 0.8),\\n                    options.get('boxLineColor'),\\n                    options.get('boxFillColor')).append();\\n                // left whisker\\n                target.drawLine(\\n                    Math.round((lwhisker - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight / 2),\\n                    Math.round((q1 - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight / 2),\\n                    options.get('lineColor')).append();\\n                target.drawLine(\\n                    Math.round((lwhisker - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight / 4),\\n                    Math.round((lwhisker - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight - canvasHeight / 4),\\n                    options.get('whiskerColor')).append();\\n                // right whisker\\n                target.drawLine(Math.round((rwhisker - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight / 2),\\n                    Math.round((q3 - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight / 2),\\n                    options.get('lineColor')).append();\\n                target.drawLine(\\n                    Math.round((rwhisker - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight / 4),\\n                    Math.round((rwhisker - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight - canvasHeight / 4),\\n                    options.get('whiskerColor')).append();\\n                // median line\\n                target.drawLine(\\n                    Math.round((q2 - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight * 0.1),\\n                    Math.round((q2 - minValue) * unitSize + canvasLeft),\\n                    Math.round(canvasHeight * 0.9),\\n                    options.get('medianColor')).append();\\n                if (options.get('target')) {\\n                    size = Math.ceil(options.get('spotRadius'));\\n                    target.drawLine(\\n                        Math.round((options.get('target') - minValue) * unitSize + canvasLeft),\\n                        Math.round((canvasHeight / 2) - size),\\n                        Math.round((options.get('target') - minValue) * unitSize + canvasLeft),\\n                        Math.round((canvasHeight / 2) + size),\\n                        options.get('targetColor')).append();\\n                    target.drawLine(\\n                        Math.round((options.get('target') - minValue) * unitSize + canvasLeft - size),\\n                        Math.round(canvasHeight / 2),\\n                        Math.round((options.get('target') - minValue) * unitSize + canvasLeft + size),\\n                        Math.round(canvasHeight / 2),\\n                        options.get('targetColor')).append();\\n                }\\n                target.render();\\n            }\\n        });\\n\\n        // Setup a very simple \\\"virtual canvas\\\" to make drawing the few shapes we need easier\\n        // This is accessible as $(foo).simpledraw()\\n\\n        VShape = createClass({\\n            init: function (target, id, type, args) {\\n                this.target = target;\\n                this.id = id;\\n                this.type = type;\\n                this.args = args;\\n            },\\n            append: function () {\\n                this.target.appendShape(this);\\n                return this;\\n            }\\n        });\\n\\n        VCanvas_base = createClass({\\n            _pxregex: /(\\\\d+)(px)?\\\\s*$/i,\\n\\n            init: function (width, height, target) {\\n                if (!width) {\\n                    return;\\n                }\\n                this.width = width;\\n                this.height = height;\\n                this.target = target;\\n                this.lastShapeId = null;\\n                if (target[0]) {\\n                    target = target[0];\\n                }\\n                $.data(target, '_jqs_vcanvas', this);\\n            },\\n\\n            drawLine: function (x1, y1, x2, y2, lineColor, lineWidth) {\\n                return this.drawShape([[x1, y1], [x2, y2]], lineColor, lineWidth);\\n            },\\n\\n            drawShape: function (path, lineColor, fillColor, lineWidth) {\\n                return this._genShape('Shape', [path, lineColor, fillColor, lineWidth]);\\n            },\\n\\n            drawCircle: function (x, y, radius, lineColor, fillColor, lineWidth) {\\n                return this._genShape('Circle', [x, y, radius, lineColor, fillColor, lineWidth]);\\n            },\\n\\n            drawPieSlice: function (x, y, radius, startAngle, endAngle, lineColor, fillColor) {\\n                return this._genShape('PieSlice', [x, y, radius, startAngle, endAngle, lineColor, fillColor]);\\n            },\\n\\n            drawRect: function (x, y, width, height, lineColor, fillColor) {\\n                return this._genShape('Rect', [x, y, width, height, lineColor, fillColor]);\\n            },\\n\\n            getElement: function () {\\n                return this.canvas;\\n            },\\n\\n            /**\\n             * Return the most recently inserted shape id\\n             */\\n            getLastShapeId: function () {\\n                return this.lastShapeId;\\n            },\\n\\n            /**\\n             * Clear and reset the canvas\\n             */\\n            reset: function () {\\n                alert('reset not implemented');\\n            },\\n\\n            _insert: function (el, target) {\\n                $(target).html(el);\\n            },\\n\\n            /**\\n             * Calculate the pixel dimensions of the canvas\\n             */\\n            _calculatePixelDims: function (width, height, canvas) {\\n                // XXX This should probably be a configurable option\\n                var match;\\n                match = this._pxregex.exec(height);\\n                if (match) {\\n                    this.pixelHeight = match[1];\\n                } else {\\n                    this.pixelHeight = $(canvas).height();\\n                }\\n                match = this._pxregex.exec(width);\\n                if (match) {\\n                    this.pixelWidth = match[1];\\n                } else {\\n                    this.pixelWidth = $(canvas).width();\\n                }\\n            },\\n\\n            /**\\n             * Generate a shape object and id for later rendering\\n             */\\n            _genShape: function (shapetype, shapeargs) {\\n                var id = shapeCount++;\\n                shapeargs.unshift(id);\\n                return new VShape(this, id, shapetype, shapeargs);\\n            },\\n\\n            /**\\n             * Add a shape to the end of the render queue\\n             */\\n            appendShape: function (shape) {\\n                alert('appendShape not implemented');\\n            },\\n\\n            /**\\n             * Replace one shape with another\\n             */\\n            replaceWithShape: function (shapeid, shape) {\\n                alert('replaceWithShape not implemented');\\n            },\\n\\n            /**\\n             * Insert one shape after another in the render queue\\n             */\\n            insertAfterShape: function (shapeid, shape) {\\n                alert('insertAfterShape not implemented');\\n            },\\n\\n            /**\\n             * Remove a shape from the queue\\n             */\\n            removeShapeId: function (shapeid) {\\n                alert('removeShapeId not implemented');\\n            },\\n\\n            /**\\n             * Find a shape at the specified x/y co-ordinates\\n             */\\n            getShapeAt: function (el, x, y) {\\n                alert('getShapeAt not implemented');\\n            },\\n\\n            /**\\n             * Render all queued shapes onto the canvas\\n             */\\n            render: function () {\\n                alert('render not implemented');\\n            }\\n        });\\n\\n        VCanvas_canvas = createClass(VCanvas_base, {\\n            init: function (width, height, target, interact) {\\n                VCanvas_canvas._super.init.call(this, width, height, target);\\n                this.canvas = document.createElement('canvas');\\n                if (target[0]) {\\n                    target = target[0];\\n                }\\n                $.data(target, '_jqs_vcanvas', this);\\n                $(this.canvas).css({display: 'inline-block', width: width, height: height, verticalAlign: 'top'});\\n                this._insert(this.canvas, target);\\n                this._calculatePixelDims(width, height, this.canvas);\\n                this.canvas.width = this.pixelWidth;\\n                this.canvas.height = this.pixelHeight;\\n                this.interact = interact;\\n                this.shapes = {};\\n                this.shapeseq = [];\\n                this.currentTargetShapeId = undefined;\\n                $(this.canvas).css({width: this.pixelWidth, height: this.pixelHeight});\\n            },\\n\\n            _getContext: function (lineColor, fillColor, lineWidth) {\\n                var context = this.canvas.getContext('2d');\\n                if (lineColor !== undefined) {\\n                    context.strokeStyle = lineColor;\\n                }\\n                context.lineWidth = lineWidth === undefined ? 1 : lineWidth;\\n                if (fillColor !== undefined) {\\n                    context.fillStyle = fillColor;\\n                }\\n                return context;\\n            },\\n\\n            reset: function () {\\n                var context = this._getContext();\\n                context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);\\n                this.shapes = {};\\n                this.shapeseq = [];\\n                this.currentTargetShapeId = undefined;\\n            },\\n\\n            _drawShape: function (shapeid, path, lineColor, fillColor, lineWidth) {\\n                var context = this._getContext(lineColor, fillColor, lineWidth),\\n                    i, plen;\\n                context.beginPath();\\n                context.moveTo(path[0][0] + 0.5, path[0][1] + 0.5);\\n                for (i = 1, plen = path.length; i < plen; i++) {\\n                    context.lineTo(path[i][0] + 0.5, path[i][1] + 0.5); // the 0.5 offset gives us crisp pixel-width lines\\n                }\\n                if (lineColor !== undefined) {\\n                    context.stroke();\\n                }\\n                if (fillColor !== undefined) {\\n                    context.fill();\\n                }\\n                if (this.targetX !== undefined && this.targetY !== undefined &&\\n                    context.isPointInPath(this.targetX, this.targetY)) {\\n                    this.currentTargetShapeId = shapeid;\\n                }\\n            },\\n\\n            _drawCircle: function (shapeid, x, y, radius, lineColor, fillColor, lineWidth) {\\n                var context = this._getContext(lineColor, fillColor, lineWidth);\\n                context.beginPath();\\n                context.arc(x, y, radius, 0, 2 * Math.PI, false);\\n                if (this.targetX !== undefined && this.targetY !== undefined &&\\n                    context.isPointInPath(this.targetX, this.targetY)) {\\n                    this.currentTargetShapeId = shapeid;\\n                }\\n                if (lineColor !== undefined) {\\n                    context.stroke();\\n                }\\n                if (fillColor !== undefined) {\\n                    context.fill();\\n                }\\n            },\\n\\n            _drawPieSlice: function (shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {\\n                var context = this._getContext(lineColor, fillColor);\\n                context.beginPath();\\n                context.moveTo(x, y);\\n                context.arc(x, y, radius, startAngle, endAngle, false);\\n                context.lineTo(x, y);\\n                context.closePath();\\n                if (lineColor !== undefined) {\\n                    context.stroke();\\n                }\\n                if (fillColor) {\\n                    context.fill();\\n                }\\n                if (this.targetX !== undefined && this.targetY !== undefined &&\\n                    context.isPointInPath(this.targetX, this.targetY)) {\\n                    this.currentTargetShapeId = shapeid;\\n                }\\n            },\\n\\n            _drawRect: function (shapeid, x, y, width, height, lineColor, fillColor) {\\n                return this._drawShape(shapeid, [[x, y], [x + width, y], [x + width, y + height], [x, y + height], [x, y]], lineColor, fillColor);\\n            },\\n\\n            appendShape: function (shape) {\\n                this.shapes[shape.id] = shape;\\n                this.shapeseq.push(shape.id);\\n                this.lastShapeId = shape.id;\\n                return shape.id;\\n            },\\n\\n            replaceWithShape: function (shapeid, shape) {\\n                var shapeseq = this.shapeseq,\\n                    i;\\n                this.shapes[shape.id] = shape;\\n                for (i = shapeseq.length; i--;) {\\n                    if (shapeseq[i] == shapeid) {\\n                        shapeseq[i] = shape.id;\\n                    }\\n                }\\n                delete this.shapes[shapeid];\\n            },\\n\\n            replaceWithShapes: function (shapeids, shapes) {\\n                var shapeseq = this.shapeseq,\\n                    shapemap = {},\\n                    sid, i, first;\\n\\n                for (i = shapeids.length; i--;) {\\n                    shapemap[shapeids[i]] = true;\\n                }\\n                for (i = shapeseq.length; i--;) {\\n                    sid = shapeseq[i];\\n                    if (shapemap[sid]) {\\n                        shapeseq.splice(i, 1);\\n                        delete this.shapes[sid];\\n                        first = i;\\n                    }\\n                }\\n                for (i = shapes.length; i--;) {\\n                    shapeseq.splice(first, 0, shapes[i].id);\\n                    this.shapes[shapes[i].id] = shapes[i];\\n                }\\n\\n            },\\n\\n            insertAfterShape: function (shapeid, shape) {\\n                var shapeseq = this.shapeseq,\\n                    i;\\n                for (i = shapeseq.length; i--;) {\\n                    if (shapeseq[i] === shapeid) {\\n                        shapeseq.splice(i + 1, 0, shape.id);\\n                        this.shapes[shape.id] = shape;\\n                        return;\\n                    }\\n                }\\n            },\\n\\n            removeShapeId: function (shapeid) {\\n                var shapeseq = this.shapeseq,\\n                    i;\\n                for (i = shapeseq.length; i--;) {\\n                    if (shapeseq[i] === shapeid) {\\n                        shapeseq.splice(i, 1);\\n                        break;\\n                    }\\n                }\\n                delete this.shapes[shapeid];\\n            },\\n\\n            getShapeAt: function (el, x, y) {\\n                this.targetX = x;\\n                this.targetY = y;\\n                this.render();\\n                return this.currentTargetShapeId;\\n            },\\n\\n            render: function () {\\n                var shapeseq = this.shapeseq,\\n                    shapes = this.shapes,\\n                    shapeCount = shapeseq.length,\\n                    context = this._getContext(),\\n                    shapeid, shape, i;\\n                context.clearRect(0, 0, this.pixelWidth, this.pixelHeight);\\n                for (i = 0; i < shapeCount; i++) {\\n                    shapeid = shapeseq[i];\\n                    shape = shapes[shapeid];\\n                    this['_draw' + shape.type].apply(this, shape.args);\\n                }\\n                if (!this.interact) {\\n                    // not interactive so no need to keep the shapes array\\n                    this.shapes = {};\\n                    this.shapeseq = [];\\n                }\\n            }\\n\\n        });\\n\\n        VCanvas_vml = createClass(VCanvas_base, {\\n            init: function (width, height, target) {\\n                var groupel;\\n                VCanvas_vml._super.init.call(this, width, height, target);\\n                if (target[0]) {\\n                    target = target[0];\\n                }\\n                $.data(target, '_jqs_vcanvas', this);\\n                this.canvas = document.createElement('span');\\n                $(this.canvas).css({\\n                    display: 'inline-block',\\n                    position: 'relative',\\n                    overflow: 'hidden',\\n                    width: width,\\n                    height: height,\\n                    margin: '0px',\\n                    padding: '0px',\\n                    verticalAlign: 'top'\\n                });\\n                this._insert(this.canvas, target);\\n                this._calculatePixelDims(width, height, this.canvas);\\n                this.canvas.width = this.pixelWidth;\\n                this.canvas.height = this.pixelHeight;\\n                groupel = '<v:group coordorigin=\\\"0 0\\\" coordsize=\\\"' + this.pixelWidth + ' ' + this.pixelHeight + '\\\"' +\\n                    ' style=\\\"position:absolute;top:0;left:0;width:' + this.pixelWidth + 'px;height=' + this.pixelHeight + 'px;\\\"></v:group>';\\n                this.canvas.insertAdjacentHTML('beforeEnd', groupel);\\n                this.group = $(this.canvas).children()[0];\\n                this.rendered = false;\\n                this.prerender = '';\\n            },\\n\\n            _drawShape: function (shapeid, path, lineColor, fillColor, lineWidth) {\\n                var vpath = [],\\n                    initial, stroke, fill, closed, vel, plen, i;\\n                for (i = 0, plen = path.length; i < plen; i++) {\\n                    vpath[i] = '' + (path[i][0]) + ',' + (path[i][1]);\\n                }\\n                initial = vpath.splice(0, 1);\\n                lineWidth = lineWidth === undefined ? 1 : lineWidth;\\n                stroke = lineColor === undefined ? ' stroked=\\\"false\\\" ' : ' strokeWeight=\\\"' + lineWidth + 'px\\\" strokeColor=\\\"' + lineColor + '\\\" ';\\n                fill = fillColor === undefined ? ' filled=\\\"false\\\"' : ' fillColor=\\\"' + fillColor + '\\\" filled=\\\"true\\\" ';\\n                closed = vpath[0] === vpath[vpath.length - 1] ? 'x ' : '';\\n                vel = '<v:shape coordorigin=\\\"0 0\\\" coordsize=\\\"' + this.pixelWidth + ' ' + this.pixelHeight + '\\\" ' +\\n                    ' id=\\\"jqsshape' + shapeid + '\\\" ' +\\n                    stroke +\\n                    fill +\\n                    ' style=\\\"position:absolute;left:0px;top:0px;height:' + this.pixelHeight + 'px;width:' + this.pixelWidth + 'px;padding:0px;margin:0px;\\\" ' +\\n                    ' path=\\\"m ' + initial + ' l ' + vpath.join(', ') + ' ' + closed + 'e\\\">' +\\n                    ' </v:shape>';\\n                return vel;\\n            },\\n\\n            _drawCircle: function (shapeid, x, y, radius, lineColor, fillColor, lineWidth) {\\n                var stroke, fill, vel;\\n                x -= radius;\\n                y -= radius;\\n                stroke = lineColor === undefined ? ' stroked=\\\"false\\\" ' : ' strokeWeight=\\\"' + lineWidth + 'px\\\" strokeColor=\\\"' + lineColor + '\\\" ';\\n                fill = fillColor === undefined ? ' filled=\\\"false\\\"' : ' fillColor=\\\"' + fillColor + '\\\" filled=\\\"true\\\" ';\\n                vel = '<v:oval ' +\\n                    ' id=\\\"jqsshape' + shapeid + '\\\" ' +\\n                    stroke +\\n                    fill +\\n                    ' style=\\\"position:absolute;top:' + y + 'px; left:' + x + 'px; width:' + (radius * 2) + 'px; height:' + (radius * 2) + 'px\\\"></v:oval>';\\n                return vel;\\n\\n            },\\n\\n            _drawPieSlice: function (shapeid, x, y, radius, startAngle, endAngle, lineColor, fillColor) {\\n                var vpath, startx, starty, endx, endy, stroke, fill, vel;\\n                if (startAngle === endAngle) {\\n                    return '';  // VML seems to have problem when start angle equals end angle.\\n                }\\n                if ((endAngle - startAngle) === (2 * Math.PI)) {\\n                    startAngle = 0.0;  // VML seems to have a problem when drawing a full circle that doesn't start 0\\n                    endAngle = (2 * Math.PI);\\n                }\\n\\n                startx = x + Math.round(Math.cos(startAngle) * radius);\\n                starty = y + Math.round(Math.sin(startAngle) * radius);\\n                endx = x + Math.round(Math.cos(endAngle) * radius);\\n                endy = y + Math.round(Math.sin(endAngle) * radius);\\n\\n                if (startx === endx && starty === endy) {\\n                    if ((endAngle - startAngle) < Math.PI) {\\n                        // Prevent very small slices from being mistaken as a whole pie\\n                        return '';\\n                    }\\n                    // essentially going to be the entire circle, so ignore startAngle\\n                    startx = endx = x + radius;\\n                    starty = endy = y;\\n                }\\n\\n                if (startx === endx && starty === endy && (endAngle - startAngle) < Math.PI) {\\n                    return '';\\n                }\\n\\n                vpath = [x - radius, y - radius, x + radius, y + radius, startx, starty, endx, endy];\\n                stroke = lineColor === undefined ? ' stroked=\\\"false\\\" ' : ' strokeWeight=\\\"1px\\\" strokeColor=\\\"' + lineColor + '\\\" ';\\n                fill = fillColor === undefined ? ' filled=\\\"false\\\"' : ' fillColor=\\\"' + fillColor + '\\\" filled=\\\"true\\\" ';\\n                vel = '<v:shape coordorigin=\\\"0 0\\\" coordsize=\\\"' + this.pixelWidth + ' ' + this.pixelHeight + '\\\" ' +\\n                    ' id=\\\"jqsshape' + shapeid + '\\\" ' +\\n                    stroke +\\n                    fill +\\n                    ' style=\\\"position:absolute;left:0px;top:0px;height:' + this.pixelHeight + 'px;width:' + this.pixelWidth + 'px;padding:0px;margin:0px;\\\" ' +\\n                    ' path=\\\"m ' + x + ',' + y + ' wa ' + vpath.join(', ') + ' x e\\\">' +\\n                    ' </v:shape>';\\n                return vel;\\n            },\\n\\n            _drawRect: function (shapeid, x, y, width, height, lineColor, fillColor) {\\n                return this._drawShape(shapeid, [[x, y], [x, y + height], [x + width, y + height], [x + width, y], [x, y]], lineColor, fillColor);\\n            },\\n\\n            reset: function () {\\n                this.group.innerHTML = '';\\n            },\\n\\n            appendShape: function (shape) {\\n                var vel = this['_draw' + shape.type].apply(this, shape.args);\\n                if (this.rendered) {\\n                    this.group.insertAdjacentHTML('beforeEnd', vel);\\n                } else {\\n                    this.prerender += vel;\\n                }\\n                this.lastShapeId = shape.id;\\n                return shape.id;\\n            },\\n\\n            replaceWithShape: function (shapeid, shape) {\\n                var existing = $('#jqsshape' + shapeid),\\n                    vel = this['_draw' + shape.type].apply(this, shape.args);\\n                existing[0].outerHTML = vel;\\n            },\\n\\n            replaceWithShapes: function (shapeids, shapes) {\\n                // replace the first shapeid with all the new shapes then toast the remaining old shapes\\n                var existing = $('#jqsshape' + shapeids[0]),\\n                    replace = '',\\n                    slen = shapes.length,\\n                    i;\\n                for (i = 0; i < slen; i++) {\\n                    replace += this['_draw' + shapes[i].type].apply(this, shapes[i].args);\\n                }\\n                existing[0].outerHTML = replace;\\n                for (i = 1; i < shapeids.length; i++) {\\n                    $('#jqsshape' + shapeids[i]).remove();\\n                }\\n            },\\n\\n            insertAfterShape: function (shapeid, shape) {\\n                var existing = $('#jqsshape' + shapeid),\\n                    vel = this['_draw' + shape.type].apply(this, shape.args);\\n                existing[0].insertAdjacentHTML('afterEnd', vel);\\n            },\\n\\n            removeShapeId: function (shapeid) {\\n                var existing = $('#jqsshape' + shapeid);\\n                this.group.removeChild(existing[0]);\\n            },\\n\\n            getShapeAt: function (el, x, y) {\\n                var shapeid = el.id.substr(8);\\n                return shapeid;\\n            },\\n\\n            render: function () {\\n                if (!this.rendered) {\\n                    // batch the intial render into a single repaint\\n                    this.group.innerHTML = this.prerender;\\n                    this.rendered = true;\\n                }\\n            }\\n        });\\n\\n    }))\\n}(document, Math));\\n\\n/*!\\n * JQVMap: jQuery Vector Map Library\\n * @author JQVMap\\n * @version 1.4.0\\n * @link http://jqvmap.com\\n * @license https://raw.githubusercontent.com/manifestinteractive/jqvmap/master/LICENSE\\n * @builddate 2015/12/06\\n */\\n\\nvar VectorCanvas = function (width, height, params) {\\n    this.mode = window.SVGAngle ? 'svg' : 'vml';\\n    this.params = params;\\n\\n    if (this.mode === 'svg') {\\n        this.createSvgNode = function (nodeName) {\\n            return document.createElementNS(this.svgns, nodeName);\\n        };\\n    } else {\\n        try {\\n            if (!document.namespaces.rvml) {\\n                document.namespaces.add('rvml', 'urn:schemas-microsoft-com:vml');\\n            }\\n            this.createVmlNode = function (tagName) {\\n                return document.createElement('<rvml:' + tagName + ' class=\\\"rvml\\\">');\\n            };\\n        } catch (e) {\\n            this.createVmlNode = function (tagName) {\\n                return document.createElement('<' + tagName + ' xmlns=\\\"urn:schemas-microsoft.com:vml\\\" class=\\\"rvml\\\">');\\n            };\\n        }\\n\\n        document.createStyleSheet().addRule('.rvml', 'behavior:url(#default#VML)');\\n    }\\n\\n    if (this.mode === 'svg') {\\n        this.canvas = this.createSvgNode('svg');\\n    } else {\\n        this.canvas = this.createVmlNode('group');\\n        this.canvas.style.position = 'absolute';\\n    }\\n\\n    this.setSize(width, height);\\n};\\n\\nVectorCanvas.prototype = {\\n    svgns: 'http://www.w3.org/2000/svg',\\n    mode: 'svg',\\n    width: 0,\\n    height: 0,\\n    canvas: null\\n};\\n\\nvar ColorScale = function (colors, normalizeFunction, minValue, maxValue) {\\n    if (colors) {\\n        this.setColors(colors);\\n    }\\n    if (normalizeFunction) {\\n        this.setNormalizeFunction(normalizeFunction);\\n    }\\n    if (minValue) {\\n        this.setMin(minValue);\\n    }\\n    if (minValue) {\\n        this.setMax(maxValue);\\n    }\\n};\\n\\nColorScale.prototype = {\\n    colors: []\\n};\\n\\nvar JQVMap = function (params) {\\n    params = params || {};\\n    var map = this;\\n    var mapData = JQVMap.maps[params.map];\\n    var mapPins;\\n\\n    if (!mapData) {\\n        throw new Error('Invalid \\\"' + params.map + '\\\" map parameter. Please make sure you have loaded this map file in your HTML.');\\n    }\\n\\n    this.selectedRegions = [];\\n    this.multiSelectRegion = params.multiSelectRegion;\\n\\n    this.container = params.container;\\n\\n    this.defaultWidth = mapData.width;\\n    this.defaultHeight = mapData.height;\\n\\n    this.color = params.color;\\n    this.selectedColor = params.selectedColor;\\n    this.hoverColor = params.hoverColor;\\n    this.hoverOpacity = params.hoverOpacity;\\n    this.setBackgroundColor(params.backgroundColor);\\n\\n    this.width = params.container.width();\\n    this.height = params.container.height();\\n\\n    this.resize();\\n\\n    jQuery(window).resize(function () {\\n        var newWidth = params.container.width();\\n        var newHeight = params.container.height();\\n\\n        if (newWidth && newHeight) {\\n            map.width = newWidth;\\n            map.height = newHeight;\\n            map.resize();\\n            map.canvas.setSize(map.width, map.height);\\n            map.applyTransform();\\n\\n            var resizeEvent = jQuery.Event('resize.jqvmap');\\n            jQuery(params.container).trigger(resizeEvent, [newWidth, newHeight]);\\n\\n            if (mapPins) {\\n                jQuery('.jqvmap_pin').remove();\\n                map.pinHandlers = false;\\n                map.placePins(mapPins.pins, mapPins.mode);\\n            }\\n        }\\n    });\\n\\n    this.canvas = new VectorCanvas(this.width, this.height, params);\\n    params.container.append(this.canvas.canvas);\\n\\n    this.makeDraggable();\\n\\n    this.rootGroup = this.canvas.createGroup(true);\\n\\n    this.index = JQVMap.mapIndex;\\n    this.label = jQuery('<div/>').addClass('jqvmap-label').appendTo(jQuery('body')).hide();\\n\\n    if (params.enableZoom) {\\n        jQuery('<div/>').addClass('jqvmap-zoomin').text('+').appendTo(params.container);\\n        jQuery('<div/>').addClass('jqvmap-zoomout').html('&#x2212;').appendTo(params.container);\\n    }\\n\\n    map.countries = [];\\n\\n    for (var key in mapData.paths) {\\n        var path = this.canvas.createPath({\\n            path: mapData.paths[key].path\\n        });\\n\\n        path.setFill(this.color);\\n        path.id = map.getCountryId(key);\\n        map.countries[key] = path;\\n\\n        if (this.canvas.mode === 'svg') {\\n            path.setAttribute('class', 'jvectormap-region');\\n        } else {\\n            jQuery(path).addClass('jvectormap-region');\\n        }\\n\\n        jQuery(this.rootGroup).append(path);\\n    }\\n\\n    jQuery(params.container).delegate(this.canvas.mode === 'svg' ? 'path' : 'shape', 'mouseover mouseout', function (e) {\\n        var containerPath = e.target,\\n            code = e.target.id.split('_').pop(),\\n            labelShowEvent = jQuery.Event('labelShow.jqvmap'),\\n            regionMouseOverEvent = jQuery.Event('regionMouseOver.jqvmap');\\n\\n        code = code.toLowerCase();\\n\\n        if (e.type === 'mouseover') {\\n            jQuery(params.container).trigger(regionMouseOverEvent, [code, mapData.paths[code].name]);\\n            if (!regionMouseOverEvent.isDefaultPrevented()) {\\n                map.highlight(code, containerPath);\\n            }\\n            if (params.showTooltip) {\\n                map.label.text(mapData.paths[code].name);\\n                jQuery(params.container).trigger(labelShowEvent, [map.label, code]);\\n\\n                if (!labelShowEvent.isDefaultPrevented()) {\\n                    map.label.show();\\n                    map.labelWidth = map.label.width();\\n                    map.labelHeight = map.label.height();\\n                }\\n            }\\n        } else {\\n            map.unhighlight(code, containerPath);\\n\\n            map.label.hide();\\n            jQuery(params.container).trigger('regionMouseOut.jqvmap', [code, mapData.paths[code].name]);\\n        }\\n    });\\n\\n    jQuery(params.container).delegate(this.canvas.mode === 'svg' ? 'path' : 'shape', 'click', function (regionClickEvent) {\\n        if (!params.multiSelectRegion) {\\n            for (var keyPath in mapData.paths) {\\n                map.countries[keyPath].currentFillColor = map.countries[keyPath].getOriginalFill();\\n                map.countries[keyPath].setFill(map.countries[keyPath].getOriginalFill());\\n            }\\n        }\\n\\n        var targetPath = regionClickEvent.target;\\n        var code = regionClickEvent.target.id.split('_').pop();\\n        var mapClickEvent = jQuery.Event('regionClick.jqvmap');\\n\\n        code = code.toLowerCase();\\n\\n        jQuery(params.container).trigger(mapClickEvent, [code, mapData.paths[code].name]);\\n        if (!mapClickEvent.isDefaultPrevented()) {\\n            if (map.isSelected(code)) {\\n                map.deselect(code, targetPath);\\n            } else {\\n                map.select(code, targetPath);\\n            }\\n        }\\n    });\\n\\n    if (params.showTooltip) {\\n        params.container.mousemove(function (e) {\\n            if (map.label.is(':visible')) {\\n                var left = e.pageX - 15 - map.labelWidth;\\n                var top = e.pageY - 15 - map.labelHeight;\\n\\n                if (left < 0) {\\n                    left = e.pageX + 15;\\n                }\\n                if (top < 0) {\\n                    top = e.pageY + 15;\\n                }\\n\\n                map.label.css({\\n                    left: left,\\n                    top: top\\n                });\\n            }\\n        });\\n    }\\n\\n    this.setColors(params.colors);\\n\\n    this.canvas.canvas.appendChild(this.rootGroup);\\n\\n    this.applyTransform();\\n\\n    this.colorScale = new ColorScale(params.scaleColors, params.normalizeFunction, params.valueMin, params.valueMax);\\n\\n    if (params.values) {\\n        this.values = params.values;\\n        this.setValues(params.values);\\n    }\\n\\n    if (params.selectedRegions) {\\n        if (params.selectedRegions instanceof Array) {\\n            for (var k in params.selectedRegions) {\\n                this.select(params.selectedRegions[k].toLowerCase());\\n            }\\n        } else {\\n            this.select(params.selectedRegions.toLowerCase());\\n        }\\n    }\\n\\n    this.bindZoomButtons();\\n\\n    if (params.pins) {\\n        mapPins = {\\n            pins: params.pins,\\n            mode: params.pinMode\\n        };\\n\\n        this.pinHandlers = false;\\n        this.placePins(params.pins, params.pinMode);\\n    }\\n\\n    if (params.showLabels) {\\n        this.pinHandlers = false;\\n\\n        var pins = {};\\n        for (key in map.countries) {\\n            if (typeof map.countries[key] !== 'function') {\\n                if (!params.pins || !params.pins[key]) {\\n                    pins[key] = key.toUpperCase();\\n                }\\n            }\\n        }\\n\\n        mapPins = {\\n            pins: pins,\\n            mode: 'content'\\n        };\\n\\n        this.placePins(pins, 'content');\\n    }\\n\\n    JQVMap.mapIndex++;\\n};\\n\\nJQVMap.prototype = {\\n    transX: 0,\\n    transY: 0,\\n    scale: 1,\\n    baseTransX: 0,\\n    baseTransY: 0,\\n    baseScale: 1,\\n    width: 0,\\n    height: 0,\\n    countries: {},\\n    countriesColors: {},\\n    countriesData: {},\\n    zoomStep: 1.4,\\n    zoomMaxStep: 4,\\n    zoomCurStep: 1\\n};\\n\\nJQVMap.xlink = 'http://www.w3.org/1999/xlink';\\nJQVMap.mapIndex = 1;\\nJQVMap.maps = {};\\n\\n(function () {\\n\\n    var apiParams = {\\n        colors: 1,\\n        values: 1,\\n        backgroundColor: 1,\\n        scaleColors: 1,\\n        normalizeFunction: 1,\\n        enableZoom: 1,\\n        showTooltip: 1,\\n        borderColor: 1,\\n        borderWidth: 1,\\n        borderOpacity: 1,\\n        selectedRegions: 1,\\n        multiSelectRegion: 1\\n    };\\n\\n    var apiEvents = {\\n        onLabelShow: 'labelShow',\\n        onLoad: 'load',\\n        onRegionOver: 'regionMouseOver',\\n        onRegionOut: 'regionMouseOut',\\n        onRegionClick: 'regionClick',\\n        onRegionSelect: 'regionSelect',\\n        onRegionDeselect: 'regionDeselect',\\n        onResize: 'resize'\\n    };\\n\\n    jQuery.fn.vectorMap = function (options) {\\n\\n        var defaultParams = {\\n            map: 'world_en',\\n            backgroundColor: '#a5bfdd',\\n            color: '#f4f3f0',\\n            hoverColor: '#c9dfaf',\\n            selectedColor: '#c9dfaf',\\n            scaleColors: ['#b6d6ff', '#005ace'],\\n            normalizeFunction: 'linear',\\n            enableZoom: true,\\n            showTooltip: true,\\n            borderColor: '#818181',\\n            borderWidth: 1,\\n            borderOpacity: 0.25,\\n            selectedRegions: null,\\n            multiSelectRegion: false\\n        }, map = this.data('mapObject');\\n\\n        if (options === 'addMap') {\\n            JQVMap.maps[arguments[1]] = arguments[2];\\n        } else if (options === 'set' && apiParams[arguments[1]]) {\\n            map['set' + arguments[1].charAt(0).toUpperCase() + arguments[1].substr(1)].apply(map, Array.prototype.slice.call(arguments, 2));\\n        } else if (typeof options === 'string' &&\\n            typeof map[options] === 'function') {\\n            return map[options].apply(map, Array.prototype.slice.call(arguments, 1));\\n        } else {\\n            jQuery.extend(defaultParams, options);\\n            defaultParams.container = this;\\n            this.css({position: 'relative', overflow: 'hidden'});\\n\\n            map = new JQVMap(defaultParams);\\n\\n            this.data('mapObject', map);\\n\\n            this.unbind('.jqvmap');\\n\\n            for (var e in apiEvents) {\\n                if (defaultParams[e]) {\\n                    this.bind(apiEvents[e] + '.jqvmap', defaultParams[e]);\\n                }\\n            }\\n\\n            var loadEvent = jQuery.Event('load.jqvmap');\\n            jQuery(defaultParams.container).trigger(loadEvent, map);\\n\\n            return map;\\n        }\\n    };\\n\\n})(jQuery);\\n\\nColorScale.arrayToRgb = function (ar) {\\n    var rgb = '#';\\n    var d;\\n    for (var i = 0; i < ar.length; i++) {\\n        d = ar[i].toString(16);\\n        rgb += d.length === 1 ? '0' + d : d;\\n    }\\n    return rgb;\\n};\\n\\nColorScale.prototype.getColor = function (value) {\\n    if (typeof this.normalize === 'function') {\\n        value = this.normalize(value);\\n    }\\n\\n    var lengthes = [];\\n    var fullLength = 0;\\n    var l;\\n\\n    for (var i = 0; i < this.colors.length - 1; i++) {\\n        l = this.vectorLength(this.vectorSubtract(this.colors[i + 1], this.colors[i]));\\n        lengthes.push(l);\\n        fullLength += l;\\n    }\\n\\n    var c = (this.maxValue - this.minValue) / fullLength;\\n\\n    for (i = 0; i < lengthes.length; i++) {\\n        lengthes[i] *= c;\\n    }\\n\\n    i = 0;\\n    value -= this.minValue;\\n\\n    while (value - lengthes[i] >= 0) {\\n        value -= lengthes[i];\\n        i++;\\n    }\\n\\n    var color;\\n    if (i === this.colors.length - 1) {\\n        color = this.vectorToNum(this.colors[i]).toString(16);\\n    } else {\\n        color = (this.vectorToNum(this.vectorAdd(this.colors[i], this.vectorMult(this.vectorSubtract(this.colors[i + 1], this.colors[i]), (value) / (lengthes[i]))))).toString(16);\\n    }\\n\\n    while (color.length < 6) {\\n        color = '0' + color;\\n    }\\n    return '#' + color;\\n};\\n\\nColorScale.rgbToArray = function (rgb) {\\n    rgb = rgb.substr(1);\\n    return [parseInt(rgb.substr(0, 2), 16), parseInt(rgb.substr(2, 2), 16), parseInt(rgb.substr(4, 2), 16)];\\n};\\n\\nColorScale.prototype.setColors = function (colors) {\\n    for (var i = 0; i < colors.length; i++) {\\n        colors[i] = ColorScale.rgbToArray(colors[i]);\\n    }\\n    this.colors = colors;\\n};\\n\\nColorScale.prototype.setMax = function (max) {\\n    this.clearMaxValue = max;\\n    if (typeof this.normalize === 'function') {\\n        this.maxValue = this.normalize(max);\\n    } else {\\n        this.maxValue = max;\\n    }\\n};\\n\\nColorScale.prototype.setMin = function (min) {\\n    this.clearMinValue = min;\\n\\n    if (typeof this.normalize === 'function') {\\n        this.minValue = this.normalize(min);\\n    } else {\\n        this.minValue = min;\\n    }\\n};\\n\\nColorScale.prototype.setNormalizeFunction = function (f) {\\n    if (f === 'polynomial') {\\n        this.normalize = function (value) {\\n            return Math.pow(value, 0.2);\\n        };\\n    } else if (f === 'linear') {\\n        delete this.normalize;\\n    } else {\\n        this.normalize = f;\\n    }\\n    this.setMin(this.clearMinValue);\\n    this.setMax(this.clearMaxValue);\\n};\\n\\nColorScale.prototype.vectorAdd = function (vector1, vector2) {\\n    var vector = [];\\n    for (var i = 0; i < vector1.length; i++) {\\n        vector[i] = vector1[i] + vector2[i];\\n    }\\n    return vector;\\n};\\n\\nColorScale.prototype.vectorLength = function (vector) {\\n    var result = 0;\\n    for (var i = 0; i < vector.length; i++) {\\n        result += vector[i] * vector[i];\\n    }\\n    return Math.sqrt(result);\\n};\\n\\nColorScale.prototype.vectorMult = function (vector, num) {\\n    var result = [];\\n    for (var i = 0; i < vector.length; i++) {\\n        result[i] = vector[i] * num;\\n    }\\n    return result;\\n};\\n\\nColorScale.prototype.vectorSubtract = function (vector1, vector2) {\\n    var vector = [];\\n    for (var i = 0; i < vector1.length; i++) {\\n        vector[i] = vector1[i] - vector2[i];\\n    }\\n    return vector;\\n};\\n\\nColorScale.prototype.vectorToNum = function (vector) {\\n    var num = 0;\\n    for (var i = 0; i < vector.length; i++) {\\n        num += Math.round(vector[i]) * Math.pow(256, vector.length - i - 1);\\n    }\\n    return num;\\n};\\n\\nJQVMap.prototype.applyTransform = function () {\\n    var maxTransX, maxTransY, minTransX, minTransY;\\n    if (this.defaultWidth * this.scale <= this.width) {\\n        maxTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale);\\n        minTransX = (this.width - this.defaultWidth * this.scale) / (2 * this.scale);\\n    } else {\\n        maxTransX = 0;\\n        minTransX = (this.width - this.defaultWidth * this.scale) / this.scale;\\n    }\\n\\n    if (this.defaultHeight * this.scale <= this.height) {\\n        maxTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale);\\n        minTransY = (this.height - this.defaultHeight * this.scale) / (2 * this.scale);\\n    } else {\\n        maxTransY = 0;\\n        minTransY = (this.height - this.defaultHeight * this.scale) / this.scale;\\n    }\\n\\n    if (this.transY > maxTransY) {\\n        this.transY = maxTransY;\\n    } else if (this.transY < minTransY) {\\n        this.transY = minTransY;\\n    }\\n    if (this.transX > maxTransX) {\\n        this.transX = maxTransX;\\n    } else if (this.transX < minTransX) {\\n        this.transX = minTransX;\\n    }\\n\\n    this.canvas.applyTransformParams(this.scale, this.transX, this.transY);\\n};\\n\\nJQVMap.prototype.bindZoomButtons = function () {\\n    var map = this;\\n    this.container.find('.jqvmap-zoomin').click(function () {\\n        map.zoomIn();\\n    });\\n    this.container.find('.jqvmap-zoomout').click(function () {\\n        map.zoomOut();\\n    });\\n};\\n\\nJQVMap.prototype.deselect = function (cc, path) {\\n    cc = cc.toLowerCase();\\n    path = path || jQuery('#' + this.getCountryId(cc))[0];\\n\\n    if (this.isSelected(cc)) {\\n        this.selectedRegions.splice(this.selectIndex(cc), 1);\\n\\n        jQuery(this.container).trigger('regionDeselect.jqvmap', [cc]);\\n        path.currentFillColor = path.getOriginalFill();\\n        path.setFill(path.getOriginalFill());\\n    } else {\\n        for (var key in this.countries) {\\n            this.selectedRegions.splice(this.selectedRegions.indexOf(key), 1);\\n            this.countries[key].currentFillColor = this.color;\\n            this.countries[key].setFill(this.color);\\n        }\\n    }\\n};\\n\\nJQVMap.prototype.getCountryId = function (cc) {\\n    return 'jqvmap' + this.index + '_' + cc;\\n};\\n\\nJQVMap.prototype.getPin = function (cc) {\\n    var pinObj = jQuery('#' + this.getPinId(cc));\\n    return pinObj.html();\\n};\\n\\nJQVMap.prototype.getPinId = function (cc) {\\n    return this.getCountryId(cc) + '_pin';\\n};\\n\\nJQVMap.prototype.getPins = function () {\\n    var pins = this.container.find('.jqvmap_pin');\\n    var ret = {};\\n    jQuery.each(pins, function (index, pinObj) {\\n        pinObj = jQuery(pinObj);\\n        var cc = pinObj.attr('for').toLowerCase();\\n        var pinContent = pinObj.html();\\n        ret[cc] = pinContent;\\n    });\\n    return JSON.stringify(ret);\\n};\\n\\nJQVMap.prototype.highlight = function (cc, path) {\\n    path = path || jQuery('#' + this.getCountryId(cc))[0];\\n    if (this.hoverOpacity) {\\n        path.setOpacity(this.hoverOpacity);\\n    } else if (this.hoverColor) {\\n        path.currentFillColor = path.getFill() + '';\\n        path.setFill(this.hoverColor);\\n    }\\n};\\n\\nJQVMap.prototype.isSelected = function (cc) {\\n    return this.selectIndex(cc) >= 0;\\n};\\n\\nJQVMap.prototype.makeDraggable = function () {\\n    var mouseDown = false;\\n    var oldPageX, oldPageY;\\n    var self = this;\\n\\n    self.isMoving = false;\\n    self.isMovingTimeout = false;\\n\\n    var lastTouchCount;\\n    var touchCenterX;\\n    var touchCenterY;\\n    var touchStartDistance;\\n    var touchStartScale;\\n    var touchX;\\n    var touchY;\\n\\n    this.container.mousemove(function (e) {\\n\\n        if (mouseDown) {\\n            self.transX -= (oldPageX - e.pageX) / self.scale;\\n            self.transY -= (oldPageY - e.pageY) / self.scale;\\n\\n            self.applyTransform();\\n\\n            oldPageX = e.pageX;\\n            oldPageY = e.pageY;\\n\\n            self.isMoving = true;\\n            if (self.isMovingTimeout) {\\n                clearTimeout(self.isMovingTimeout);\\n            }\\n\\n            self.container.trigger('drag');\\n        }\\n\\n        return false;\\n\\n    }).mousedown(function (e) {\\n\\n        mouseDown = true;\\n        oldPageX = e.pageX;\\n        oldPageY = e.pageY;\\n\\n        return false;\\n\\n    }).mouseup(function () {\\n\\n        mouseDown = false;\\n\\n        clearTimeout(self.isMovingTimeout);\\n        self.isMovingTimeout = setTimeout(function () {\\n            self.isMoving = false;\\n        }, 100);\\n\\n        return false;\\n\\n    }).mouseout(function () {\\n\\n        if (mouseDown && self.isMoving) {\\n\\n            clearTimeout(self.isMovingTimeout);\\n            self.isMovingTimeout = setTimeout(function () {\\n                mouseDown = false;\\n                self.isMoving = false;\\n            }, 100);\\n\\n            return false;\\n        }\\n    });\\n\\n    jQuery(this.container).bind('touchmove', function (e) {\\n\\n        var offset;\\n        var scale;\\n        var touches = e.originalEvent.touches;\\n        var transformXOld;\\n        var transformYOld;\\n\\n        if (touches.length === 1) {\\n            if (lastTouchCount === 1) {\\n\\n                if (touchX === touches[0].pageX && touchY === touches[0].pageY) {\\n                    return;\\n                }\\n\\n                transformXOld = self.transX;\\n                transformYOld = self.transY;\\n\\n                self.transX -= (touchX - touches[0].pageX) / self.scale;\\n                self.transY -= (touchY - touches[0].pageY) / self.scale;\\n\\n                self.applyTransform();\\n\\n                if (transformXOld !== self.transX || transformYOld !== self.transY) {\\n                    e.preventDefault();\\n                }\\n\\n                self.isMoving = true;\\n                if (self.isMovingTimeout) {\\n                    clearTimeout(self.isMovingTimeout);\\n                }\\n            }\\n\\n            touchX = touches[0].pageX;\\n            touchY = touches[0].pageY;\\n\\n        } else if (touches.length === 2) {\\n\\n            if (lastTouchCount === 2) {\\n                scale = Math.sqrt(\\n                        Math.pow(touches[0].pageX - touches[1].pageX, 2) +\\n                        Math.pow(touches[0].pageY - touches[1].pageY, 2)\\n                    ) / touchStartDistance;\\n\\n                self.setScale(\\n                    touchStartScale * scale,\\n                    touchCenterX,\\n                    touchCenterY\\n                );\\n\\n                e.preventDefault();\\n\\n            } else {\\n\\n                offset = jQuery(self.container).offset();\\n                if (touches[0].pageX > touches[1].pageX) {\\n                    touchCenterX = touches[1].pageX + (touches[0].pageX - touches[1].pageX) / 2;\\n                } else {\\n                    touchCenterX = touches[0].pageX + (touches[1].pageX - touches[0].pageX) / 2;\\n                }\\n\\n                if (touches[0].pageY > touches[1].pageY) {\\n                    touchCenterY = touches[1].pageY + (touches[0].pageY - touches[1].pageY) / 2;\\n                } else {\\n                    touchCenterY = touches[0].pageY + (touches[1].pageY - touches[0].pageY) / 2;\\n                }\\n\\n                touchCenterX -= offset.left;\\n                touchCenterY -= offset.top;\\n                touchStartScale = self.scale;\\n\\n                touchStartDistance = Math.sqrt(\\n                    Math.pow(touches[0].pageX - touches[1].pageX, 2) +\\n                    Math.pow(touches[0].pageY - touches[1].pageY, 2)\\n                );\\n            }\\n        }\\n\\n        lastTouchCount = touches.length;\\n    });\\n\\n    jQuery(this.container).bind('touchstart', function () {\\n        lastTouchCount = 0;\\n    });\\n\\n    jQuery(this.container).bind('touchend', function () {\\n        lastTouchCount = 0;\\n    });\\n};\\n\\nJQVMap.prototype.placePins = function (pins, pinMode) {\\n    var map = this;\\n\\n    if (!pinMode || (pinMode !== 'content' && pinMode !== 'id')) {\\n        pinMode = 'content';\\n    }\\n\\n    if (pinMode === 'content') {//treat pin as content\\n        jQuery.each(pins, function (index, pin) {\\n            if (jQuery('#' + map.getCountryId(index)).length === 0) {\\n                return;\\n            }\\n\\n            var pinIndex = map.getPinId(index);\\n            var $pin = jQuery('#' + pinIndex);\\n            if ($pin.length > 0) {\\n                $pin.remove();\\n            }\\n            map.container.append('<div id=\\\"' + pinIndex + '\\\" for=\\\"' + index + '\\\" class=\\\"jqvmap_pin\\\" style=\\\"position:absolute\\\">' + pin + '</div>');\\n        });\\n    } else { //treat pin as id of an html content\\n        jQuery.each(pins, function (index, pin) {\\n            if (jQuery('#' + map.getCountryId(index)).length === 0) {\\n                return;\\n            }\\n            var pinIndex = map.getPinId(index);\\n            var $pin = jQuery('#' + pinIndex);\\n            if ($pin.length > 0) {\\n                $pin.remove();\\n            }\\n            map.container.append('<div id=\\\"' + pinIndex + '\\\" for=\\\"' + index + '\\\" class=\\\"jqvmap_pin\\\" style=\\\"position:absolute\\\"></div>');\\n            $pin.append(jQuery('#' + pin));\\n        });\\n    }\\n\\n    this.positionPins();\\n    if (!this.pinHandlers) {\\n        this.pinHandlers = true;\\n        var positionFix = function () {\\n            map.positionPins();\\n        };\\n        this.container.bind('zoomIn', positionFix)\\n            .bind('zoomOut', positionFix)\\n            .bind('drag', positionFix);\\n    }\\n};\\n\\nJQVMap.prototype.positionPins = function () {\\n    var map = this;\\n    var pins = this.container.find('.jqvmap_pin');\\n    jQuery.each(pins, function (index, pinObj) {\\n        pinObj = jQuery(pinObj);\\n        var countryId = map.getCountryId(pinObj.attr('for').toLowerCase());\\n        var countryObj = jQuery('#' + countryId);\\n\\n        var bbox = document.getElementById(countryId).getBBox();\\n        var position = countryObj.position();\\n\\n        var scale = map.scale;\\n\\n        var left = position.left + (bbox.width / 2) * scale - pinObj.width() / 2,\\n            top = position.top + (bbox.height / 2) * scale - pinObj.height() / 2;\\n\\n        pinObj.css('left', left).css('top', top);\\n    });\\n};\\n\\nJQVMap.prototype.removePin = function (cc) {\\n    cc = cc.toLowerCase();\\n    jQuery('#' + this.getPinId(cc)).remove();\\n};\\n\\nJQVMap.prototype.removePins = function () {\\n    this.container.find('.jqvmap_pin').remove();\\n};\\n\\nJQVMap.prototype.reset = function () {\\n    for (var key in this.countries) {\\n        this.countries[key].setFill(this.color);\\n    }\\n    this.scale = this.baseScale;\\n    this.transX = this.baseTransX;\\n    this.transY = this.baseTransY;\\n    this.applyTransform();\\n};\\n\\nJQVMap.prototype.resize = function () {\\n    var curBaseScale = this.baseScale;\\n    if (this.width / this.height > this.defaultWidth / this.defaultHeight) {\\n        this.baseScale = this.height / this.defaultHeight;\\n        this.baseTransX = Math.abs(this.width - this.defaultWidth * this.baseScale) / (2 * this.baseScale);\\n    } else {\\n        this.baseScale = this.width / this.defaultWidth;\\n        this.baseTransY = Math.abs(this.height - this.defaultHeight * this.baseScale) / (2 * this.baseScale);\\n    }\\n    this.scale *= this.baseScale / curBaseScale;\\n    this.transX *= this.baseScale / curBaseScale;\\n    this.transY *= this.baseScale / curBaseScale;\\n};\\n\\nJQVMap.prototype.select = function (cc, path) {\\n    cc = cc.toLowerCase();\\n    path = path || jQuery('#' + this.getCountryId(cc))[0];\\n\\n    if (!this.isSelected(cc)) {\\n        if (this.multiSelectRegion) {\\n            this.selectedRegions.push(cc);\\n        } else {\\n            this.selectedRegions = [cc];\\n        }\\n\\n        jQuery(this.container).trigger('regionSelect.jqvmap', [cc]);\\n        if (this.selectedColor && path) {\\n            path.currentFillColor = this.selectedColor;\\n            path.setFill(this.selectedColor);\\n        }\\n    }\\n};\\n\\nJQVMap.prototype.selectIndex = function (cc) {\\n    cc = cc.toLowerCase();\\n    for (var i = 0; i < this.selectedRegions.length; i++) {\\n        if (cc === this.selectedRegions[i]) {\\n            return i;\\n        }\\n    }\\n    return -1;\\n};\\n\\nJQVMap.prototype.setBackgroundColor = function (backgroundColor) {\\n    this.container.css('background-color', backgroundColor);\\n};\\n\\nJQVMap.prototype.setColors = function (key, color) {\\n    if (typeof key === 'string') {\\n        this.countries[key].setFill(color);\\n        this.countries[key].setAttribute('original', color);\\n    } else {\\n        var colors = key;\\n\\n        for (var code in colors) {\\n            if (this.countries[code]) {\\n                this.countries[code].setFill(colors[code]);\\n                this.countries[code].setAttribute('original', colors[code]);\\n            }\\n        }\\n    }\\n};\\n\\nJQVMap.prototype.setNormalizeFunction = function (f) {\\n    this.colorScale.setNormalizeFunction(f);\\n\\n    if (this.values) {\\n        this.setValues(this.values);\\n    }\\n};\\n\\nJQVMap.prototype.setScale = function (scale) {\\n    this.scale = scale;\\n    this.applyTransform();\\n};\\n\\nJQVMap.prototype.setScaleColors = function (colors) {\\n    this.colorScale.setColors(colors);\\n\\n    if (this.values) {\\n        this.setValues(this.values);\\n    }\\n};\\n\\nJQVMap.prototype.setValues = function (values) {\\n    var max = 0,\\n        min = Number.MAX_VALUE,\\n        val;\\n\\n    for (var cc in values) {\\n        cc = cc.toLowerCase();\\n        val = parseFloat(values[cc]);\\n\\n        if (isNaN(val)) {\\n            continue;\\n        }\\n        if (val > max) {\\n            max = values[cc];\\n        }\\n        if (val < min) {\\n            min = val;\\n        }\\n    }\\n\\n    if (min === max) {\\n        max++;\\n    }\\n\\n    this.colorScale.setMin(min);\\n    this.colorScale.setMax(max);\\n\\n    var colors = {};\\n    for (cc in values) {\\n        cc = cc.toLowerCase();\\n        val = parseFloat(values[cc]);\\n        colors[cc] = isNaN(val) ? this.color : this.colorScale.getColor(val);\\n    }\\n    this.setColors(colors);\\n    this.values = values;\\n};\\n\\nJQVMap.prototype.unhighlight = function (cc, path) {\\n    cc = cc.toLowerCase();\\n    path = path || jQuery('#' + this.getCountryId(cc))[0];\\n    path.setOpacity(1);\\n    if (path.currentFillColor) {\\n        path.setFill(path.currentFillColor);\\n    }\\n};\\n\\nJQVMap.prototype.zoomIn = function () {\\n    var map = this;\\n    var sliderDelta = (jQuery('#zoom').innerHeight() - 6 * 2 - 15 * 2 - 3 * 2 - 7 - 6) / (this.zoomMaxStep - this.zoomCurStep);\\n\\n    if (map.zoomCurStep < map.zoomMaxStep) {\\n        map.transX -= (map.width / map.scale - map.width / (map.scale * map.zoomStep)) / 2;\\n        map.transY -= (map.height / map.scale - map.height / (map.scale * map.zoomStep)) / 2;\\n        map.setScale(map.scale * map.zoomStep);\\n        map.zoomCurStep++;\\n\\n        var $slider = jQuery('#zoomSlider');\\n\\n        $slider.css('top', parseInt($slider.css('top'), 10) - sliderDelta);\\n\\n        map.container.trigger('zoomIn');\\n    }\\n};\\n\\nJQVMap.prototype.zoomOut = function () {\\n    var map = this;\\n    var sliderDelta = (jQuery('#zoom').innerHeight() - 6 * 2 - 15 * 2 - 3 * 2 - 7 - 6) / (this.zoomMaxStep - this.zoomCurStep);\\n\\n    if (map.zoomCurStep > 1) {\\n        map.transX += (map.width / (map.scale / map.zoomStep) - map.width / map.scale) / 2;\\n        map.transY += (map.height / (map.scale / map.zoomStep) - map.height / map.scale) / 2;\\n        map.setScale(map.scale / map.zoomStep);\\n        map.zoomCurStep--;\\n\\n        var $slider = jQuery('#zoomSlider');\\n\\n        $slider.css('top', parseInt($slider.css('top'), 10) + sliderDelta);\\n\\n        map.container.trigger('zoomOut');\\n    }\\n};\\n\\nVectorCanvas.prototype.applyTransformParams = function (scale, transX, transY) {\\n    if (this.mode === 'svg') {\\n        this.rootGroup.setAttribute('transform', 'scale(' + scale + ') translate(' + transX + ', ' + transY + ')');\\n    } else {\\n        this.rootGroup.coordorigin = (this.width - transX) + ',' + (this.height - transY);\\n        this.rootGroup.coordsize = this.width / scale + ',' + this.height / scale;\\n    }\\n};\\n\\nVectorCanvas.prototype.createGroup = function (isRoot) {\\n    var node;\\n    if (this.mode === 'svg') {\\n        node = this.createSvgNode('g');\\n    } else {\\n        node = this.createVmlNode('group');\\n        node.style.width = this.width + 'px';\\n        node.style.height = this.height + 'px';\\n        node.style.left = '0px';\\n        node.style.top = '0px';\\n        node.coordorigin = '0 0';\\n        node.coordsize = this.width + ' ' + this.height;\\n    }\\n\\n    if (isRoot) {\\n        this.rootGroup = node;\\n    }\\n    return node;\\n};\\n\\nVectorCanvas.prototype.createPath = function (config) {\\n    var node;\\n    if (this.mode === 'svg') {\\n        node = this.createSvgNode('path');\\n        node.setAttribute('d', config.path);\\n\\n        if (this.params.borderColor !== null) {\\n            node.setAttribute('stroke', this.params.borderColor);\\n        }\\n        if (this.params.borderWidth > 0) {\\n            node.setAttribute('stroke-width', this.params.borderWidth);\\n            node.setAttribute('stroke-linecap', 'round');\\n            node.setAttribute('stroke-linejoin', 'round');\\n        }\\n        if (this.params.borderOpacity > 0) {\\n            node.setAttribute('stroke-opacity', this.params.borderOpacity);\\n        }\\n\\n        node.setFill = function (color) {\\n            this.setAttribute('fill', color);\\n            if (this.getAttribute('original') === null) {\\n                this.setAttribute('original', color);\\n            }\\n        };\\n\\n        node.getFill = function () {\\n            return this.getAttribute('fill');\\n        };\\n\\n        node.getOriginalFill = function () {\\n            return this.getAttribute('original');\\n        };\\n\\n        node.setOpacity = function (opacity) {\\n            this.setAttribute('fill-opacity', opacity);\\n        };\\n    } else {\\n        node = this.createVmlNode('shape');\\n        node.coordorigin = '0 0';\\n        node.coordsize = this.width + ' ' + this.height;\\n        node.style.width = this.width + 'px';\\n        node.style.height = this.height + 'px';\\n        node.fillcolor = JQVMap.defaultFillColor;\\n        node.stroked = false;\\n        node.path = VectorCanvas.pathSvgToVml(config.path);\\n\\n        var scale = this.createVmlNode('skew');\\n        scale.on = true;\\n        scale.matrix = '0.01,0,0,0.01,0,0';\\n        scale.offset = '0,0';\\n\\n        node.appendChild(scale);\\n\\n        var fill = this.createVmlNode('fill');\\n        node.appendChild(fill);\\n\\n        node.setFill = function (color) {\\n            this.getElementsByTagName('fill')[0].color = color;\\n            if (this.getAttribute('original') === null) {\\n                this.setAttribute('original', color);\\n            }\\n        };\\n\\n        node.getFill = function () {\\n            return this.getElementsByTagName('fill')[0].color;\\n        };\\n        node.getOriginalFill = function () {\\n            return this.getAttribute('original');\\n        };\\n        node.setOpacity = function (opacity) {\\n            this.getElementsByTagName('fill')[0].opacity = parseInt(opacity * 100, 10) + '%';\\n        };\\n    }\\n    return node;\\n};\\n\\nVectorCanvas.prototype.pathSvgToVml = function (path) {\\n    var result = '';\\n    var cx = 0, cy = 0, ctrlx, ctrly;\\n\\n    return path.replace(/([MmLlHhVvCcSs])((?:-?(?:\\\\d+)?(?:\\\\.\\\\d+)?,?\\\\s?)+)/g, function (segment, letter, coords) {\\n        coords = coords.replace(/(\\\\d)-/g, '$1,-').replace(/\\\\s+/g, ',').split(',');\\n        if (!coords[0]) {\\n            coords.shift();\\n        }\\n\\n        for (var i = 0, l = coords.length; i < l; i++) {\\n            coords[i] = Math.round(100 * coords[i]);\\n        }\\n\\n        switch (letter) {\\n            case 'm':\\n                cx += coords[0];\\n                cy += coords[1];\\n                result = 't' + coords.join(',');\\n                break;\\n\\n            case 'M':\\n                cx = coords[0];\\n                cy = coords[1];\\n                result = 'm' + coords.join(',');\\n                break;\\n\\n            case 'l':\\n                cx += coords[0];\\n                cy += coords[1];\\n                result = 'r' + coords.join(',');\\n                break;\\n\\n            case 'L':\\n                cx = coords[0];\\n                cy = coords[1];\\n                result = 'l' + coords.join(',');\\n                break;\\n\\n            case 'h':\\n                cx += coords[0];\\n                result = 'r' + coords[0] + ',0';\\n                break;\\n\\n            case 'H':\\n                cx = coords[0];\\n                result = 'l' + cx + ',' + cy;\\n                break;\\n\\n            case 'v':\\n                cy += coords[0];\\n                result = 'r0,' + coords[0];\\n                break;\\n\\n            case 'V':\\n                cy = coords[0];\\n                result = 'l' + cx + ',' + cy;\\n                break;\\n\\n            case 'c':\\n                ctrlx = cx + coords[coords.length - 4];\\n                ctrly = cy + coords[coords.length - 3];\\n                cx += coords[coords.length - 2];\\n                cy += coords[coords.length - 1];\\n                result = 'v' + coords.join(',');\\n                break;\\n\\n            case 'C':\\n                ctrlx = coords[coords.length - 4];\\n                ctrly = coords[coords.length - 3];\\n                cx = coords[coords.length - 2];\\n                cy = coords[coords.length - 1];\\n                result = 'c' + coords.join(',');\\n                break;\\n\\n            case 's':\\n                coords.unshift(cy - ctrly);\\n                coords.unshift(cx - ctrlx);\\n                ctrlx = cx + coords[coords.length - 4];\\n                ctrly = cy + coords[coords.length - 3];\\n                cx += coords[coords.length - 2];\\n                cy += coords[coords.length - 1];\\n                result = 'v' + coords.join(',');\\n                break;\\n\\n            case 'S':\\n                coords.unshift(cy + cy - ctrly);\\n                coords.unshift(cx + cx - ctrlx);\\n                ctrlx = coords[coords.length - 4];\\n                ctrly = coords[coords.length - 3];\\n                cx = coords[coords.length - 2];\\n                cy = coords[coords.length - 1];\\n                result = 'c' + coords.join(',');\\n                break;\\n\\n            default:\\n                break;\\n        }\\n\\n        return result;\\n\\n    }).replace(/z/g, '');\\n};\\n\\nVectorCanvas.prototype.setSize = function (width, height) {\\n    if (this.mode === 'svg') {\\n        this.canvas.setAttribute('width', width);\\n        this.canvas.setAttribute('height', height);\\n    } else {\\n        this.canvas.style.width = width + 'px';\\n        this.canvas.style.height = height + 'px';\\n        this.canvas.coordsize = width + ' ' + height;\\n        this.canvas.coordorigin = '0 0';\\n        if (this.rootGroup) {\\n            var paths = this.rootGroup.getElementsByTagName('shape');\\n            for (var i = 0, l = paths.length; i < l; i++) {\\n                paths[i].coordsize = width + ' ' + height;\\n                paths[i].style.width = width + 'px';\\n                paths[i].style.height = height + 'px';\\n            }\\n            this.rootGroup.coordsize = width + ' ' + height;\\n            this.rootGroup.style.width = width + 'px';\\n            this.rootGroup.style.height = height + 'px';\\n        }\\n    }\\n    this.width = width;\\n    this.height = height;\\n};\\n\\n/** Add World Map Data Points */\\njQuery.fn.vectorMap('addMap', 'world_en', {\\n    \\\"width\\\": 950,\\n    \\\"height\\\": 550,\\n    \\\"paths\\\": {\\n        \\\"id\\\": {\\n            \\\"path\\\": \\\"M781.68,324.4l-2.31,8.68l-12.53,4.23l-3.75-4.4l-1.82,0.5l3.4,13.12l5.09,0.57l6.79,2.57v2.57l3.11-0.57l4.53-6.27v-5.13l2.55-5.13l2.83,0.57l-3.4-7.13l-0.52-4.59L781.68,324.4L781.68,324.4M722.48,317.57l-0.28,2.28l6.79,11.41h1.98l14.15,23.67l5.66,0.57l2.83-8.27l-4.53-2.85l-0.85-4.56L722.48,317.57L722.48,317.57M789.53,349.11l2.26,2.77l-1.47,4.16v0.79h3.34l1.18-10.4l1.08,0.3l1.96,9.5l1.87,0.5l1.77-4.06l-1.77-6.14l-1.47-2.67l4.62-3.37l-1.08-1.49l-4.42,2.87h-1.18l-2.16-3.17l0.69-1.39l3.64-1.78l5.5,1.68l1.67-0.1l4.13-3.86l-1.67-1.68l-3.83,2.97h-2.46l-3.73-1.78l-2.65,0.1l-2.95,4.75l-1.87,8.22L789.53,349.11L789.53,349.11M814.19,330.5l-1.87,4.55l2.95,3.86h0.98l1.28-2.57l0.69-0.89l-1.28-1.39l-1.87-0.69L814.19,330.5L814.19,330.5M819.99,345.45l-4.03,0.89l-1.18,1.29l0.98,1.68l2.65-0.99l1.67-0.99l2.46,1.98l1.08-0.89l-1.96-2.38L819.99,345.45L819.99,345.45M753.17,358.32l-2.75,1.88l0.59,1.58l8.75,1.98l4.42,0.79l1.87,1.98l5.01,0.4l2.36,1.98l2.16-0.5l1.97-1.78l-3.64-1.68l-3.14-2.67l-8.16-1.98L753.17,358.32L753.17,358.32M781.77,366.93l-2.16,1.19l1.28,1.39l3.14-1.19L781.77,366.93L781.77,366.93M785.5,366.04l0.39,1.88l2.26,0.59l0.88-1.09l-0.98-1.49L785.5,366.04L785.5,366.04M790.91,370.99l-2.75,0.4l2.46,2.08h1.96L790.91,370.99L790.91,370.99M791.69,367.72l-0.59,1.19l4.42,0.69l3.44-1.98l-1.96-0.59l-3.14,0.89l-1.18-0.99L791.69,367.72L791.69,367.72M831.93,339.34l-4.17,0.47l-2.68,1.96l1.11,2.24l4.54,0.84v0.84l-2.87,2.33l1.39,4.85l1.39,0.09l1.2-4.76h2.22l0.93,4.66l10.83,8.96l0.28,7l3.7,4.01l1.67-0.09l0.37-24.72l-6.29-4.38l-5.93,4.01l-2.13,1.31l-3.52-2.24l-0.09-7.09L831.93,339.34L831.93,339.34z\\\",\\n            \\\"name\\\": \\\"Indonesia\\\"\\n        },\\n        \\\"pg\\\": {\\n            \\\"path\\\": \\\"M852.76,348.29l-0.37,24.44l3.52-0.19l4.63-5.41l3.89,0.19l2.5,2.24l0.83,6.9l7.96,4.2l2.04-0.75v-2.52l-6.39-5.32l-3.15-7.28l2.5-1.21l-1.85-4.01l-3.7-0.09l-0.93-4.29l-9.81-6.62L852.76,348.29L852.76,348.29M880.48,349l-0.88,1.25l4.81,4.26l0.66,2.5l1.31-0.15l0.15-2.57l-1.46-1.32L880.48,349L880.48,349M882.89,355.03l-0.95,0.22l-0.58,2.57l-1.82,1.18l-5.47,0.96l0.22,2.06l5.76-0.29l3.65-2.28l-0.22-3.97L882.89,355.03L882.89,355.03M889.38,359.51l1.24,3.45l2.19,2.13l0.66-0.59l-0.22-2.28l-2.48-3.01L889.38,359.51L889.38,359.51z\\\",\\n            \\\"name\\\": \\\"Papua New Guinea\\\"\\n        },\\n        \\\"mx\\\": {\\n            \\\"path\\\": \\\"M137.49,225.43l4.83,15.21l-2.25,1.26l0.25,3.02l4.25,3.27v6.05l5.25,5.04l-2.25-14.86l-3-9.83l0.75-6.8l2.5,0.25l1,2.27l-1,5.79l13,25.44v9.07l10.5,12.34l11.5,5.29l4.75-2.77l6.75,5.54l4-4.03l-1.75-4.54l5.75-1.76l1.75,1.01l1.75-1.76h2.75l5-8.82l-2.5-2.27l-9.75,2.27l-2.25,6.55l-5.75,1.01l-6.75-2.77l-3-9.57l2.27-12.07l-4.64-2.89l-2.21-11.59l-1.85-0.79l-3.38,3.43l-3.88-2.07l-1.52-7.73l-15.37-1.61l-7.94-5.97L137.49,225.43L137.49,225.43z\\\",\\n            \\\"name\\\": \\\"Mexico\\\"\\n        },\\n        \\\"ee\\\": {\\n            \\\"path\\\": \\\"M517.77,143.66l-5.6-0.2l-3.55,2.17l-0.05,1.61l2.3,2.17l7.15,1.21L517.77,143.66L517.77,143.66M506.76,147.64l-1.55-0.05l-0.9,0.91l0.65,0.96l1.55,0.1l0.8-1.16L506.76,147.64L506.76,147.64z\\\",\\n            \\\"name\\\": \\\"Estonia\\\"\\n        },\\n        \\\"dz\\\": {\\n            \\\"path\\\": \\\"M473.88,227.49l-4.08-1.37l-16.98,3.19l-3.7,2.81l2.26,11.67l-6.75,0.27l-4.06,6.53l-9.67,2.32l0.03,4.75l31.85,24.35l5.43,0.46l18.11-14.15l-1.81-2.28l-3.4-0.46l-2.04-3.42v-14.15l-1.36-1.37l0.23-3.65l-3.62-3.65l-0.45-3.88l1.58-1.14l-0.68-4.11L473.88,227.49L473.88,227.49z\\\",\\n            \\\"name\\\": \\\"Algeria\\\"\\n        },\\n        \\\"ma\\\": {\\n            \\\"path\\\": \\\"M448.29,232.28h-11.55l-2.26,5.02l-5.21,2.51l-4.3,11.64l-8.38,5.02l-11.77,19.39l11.55-0.23l0.45-5.7h2.94v-7.76h10.19l0.23-10.04l9.74-2.28l4.08-6.62l6.34-0.23L448.29,232.28L448.29,232.28z\\\",\\n            \\\"name\\\": \\\"Morocco\\\"\\n        },\\n        \\\"mr\\\": {\\n            \\\"path\\\": \\\"M404.9,276.66l2.18,2.85l-0.45,12.32l3.17-2.28l2.26-0.46l3.17,1.14l3.62,5.02l3.4-2.28l16.53-0.23l-4.08-27.61l4.38-0.02l-8.16-6.25l0.01,4.06l-10.33,0.01l-0.05,7.75l-2.97-0.01l-0.38,5.72L404.9,276.66L404.9,276.66z\\\",\\n            \\\"name\\\": \\\"Mauritania\\\"\\n        },\\n        \\\"sn\\\": {\\n            \\\"path\\\": \\\"M412.03,289.84L410.12,290.31L406.18,293.18L405.28,294.78L405,296.37L406.43,297.40L411.28,297.34L414.40,296.5L414.75,298.03L414.46,300.06L414.53,300.09L406.78,300.21L408.03,303.21L408.71,301.37L418,302.15L418.06,302.21L419.03,302.25L422,302.37L422.12,300.62L418.53,296.31L414.53,290.87L412.03,289.84z\\\",\\n            \\\"name\\\": \\\"Senegal\\\"\\n        },\\n        \\\"gm\\\": {\\n            \\\"path\\\": \\\"M406.89,298.34l-0.13,1.11l6.92-0.1l0.35-1.03l-0.15-1.04l-1.99,0.81L406.89,298.34L406.89,298.34z\\\",\\n            \\\"name\\\": \\\"Gambia\\\"\\n        },\\n        \\\"gw\\\": {\\n            \\\"path\\\": \\\"M408.6,304.53l1.4,2.77l3.93-3.38l0.04-1.04l-4.63-0.67L408.6,304.53L408.6,304.53z\\\",\\n            \\\"name\\\": \\\"Guinea-Bissau\\\"\\n        },\\n        \\\"gn\\\": {\\n            \\\"path\\\": \\\"M410.42,307.94l3.04,4.68l3.96-3.44l4.06-0.18l3.38,4.49l2.87,1.89l1.08-2.1l0.96-0.54l-0.07-4.62l-1.91-5.48l-5.86,0.65l-7.25-0.58l-0.04,1.86L410.42,307.94L410.42,307.94z\\\",\\n            \\\"name\\\": \\\"Guinea\\\"\\n        },\\n        \\\"sl\\\": {\\n            \\\"path\\\": \\\"M413.93,313.13l5.65,5.46l4.03-4.89l-2.52-3.95l-3.47,0.35L413.93,313.13L413.93,313.13z\\\",\\n            \\\"name\\\": \\\"Sierra Leone\\\"\\n        },\\n        \\\"lr\\\": {\\n            \\\"path\\\": \\\"M420.17,319.19l10.98,7.34l-0.26-5.56l-3.32-3.91l-3.24-2.87L420.17,319.19L420.17,319.19z\\\",\\n            \\\"name\\\": \\\"Liberia\\\"\\n        },\\n        \\\"ci\\\": {\\n            \\\"path\\\": \\\"M432.07,326.75l4.28-3.03l5.32-0.93l5.43,1.17l-2.77-4.19l-0.81-2.56l0.81-7.57l-4.85,0.23l-2.2-2.1l-4.62,0.12l-2.2,0.35l0.23,5.12l-1.16,0.47l-1.39,2.56l3.58,4.19L432.07,326.75L432.07,326.75z\\\",\\n            \\\"name\\\": \\\"Cote d'Ivoire\\\"\\n        },\\n        \\\"ml\\\": {\\n            \\\"path\\\": \\\"M419.46,295.84l3.08-2.11l17.12-0.1l-3.96-27.54l4.52-0.13l21.87,16.69l2.94,0.42l-1.11,9.28l-13.75,1.25l-10.61,7.92l-1.93,5.42l-7.37,0.31l-1.88-5.41l-5.65,0.4l0.22-1.77L419.46,295.84L419.46,295.84z\\\",\\n            \\\"name\\\": \\\"Mali\\\"\\n        },\\n        \\\"bf\\\": {\\n            \\\"path\\\": \\\"M450.59,294.28l3.64-0.29l5.97,8.44l-5.54,4.18l-4.01-1.03l-5.39,0.07l-0.87,3.16l-4.52,0.22l-1.24-1.69l1.6-5.14L450.59,294.28L450.59,294.28z\\\",\\n            \\\"name\\\": \\\"Burkina Faso\\\"\\n        },\\n        \\\"ne\\\": {\\n            \\\"path\\\": \\\"M460.89,302l2.55-0.06l2.3-3.45l3.86-0.69l4.11,2.51l8.77,0.25l6.78-2.76l2.55-2.19l0.19-2.88l4.73-4.77l1.25-10.53l-3.11-6.52l-7.96-1.94l-18.42,14.36l-2.61-0.25l-1.12,9.97l-9.4,0.94L460.89,302L460.89,302z\\\",\\n            \\\"name\\\": \\\"Niger\\\"\\n        },\\n        \\\"gh\\\": {\\n            \\\"path\\\": \\\"M444.34,317.05l1.12,2.63l2.92,4.58l1.62-0.06l4.42-2.51l-0.31-14.29l-3.42-1l-4.79,0.13L444.34,317.05L444.34,317.05z\\\",\\n            \\\"name\\\": \\\"Ghana\\\"\\n        },\\n        \\\"tg\\\": {\\n            \\\"path\\\": \\\"M455.22,321.25l2.68-1.57l-0.06-10.35l-1.74-2.82l-1.12,0.94L455.22,321.25L455.22,321.25z\\\",\\n            \\\"name\\\": \\\"Togo\\\"\\n        },\\n        \\\"bj\\\": {\\n            \\\"path\\\": \\\"M458.71,319.49h2.12l0.12-6.02l2.68-3.89l-0.12-6.77l-2.43-0.06l-4.17,3.26l1.74,3.32L458.71,319.49L458.71,319.49z\\\",\\n            \\\"name\\\": \\\"Benin\\\"\\n        },\\n        \\\"ng\\\": {\\n            \\\"path\\\": \\\"M461.57,319.37l3.92,0.19l4.73,5.27l2.3,0.63l1.8-0.88l2.74-0.38l0.93-3.82l3.73-2.45l4.04-0.19l7.4-13.61l-0.12-3.07l-3.42-2.63l-6.84,3.01l-9.15-0.13l-4.36-2.76l-3.11,0.69l-1.62,2.82l-0.12,7.96l-2.61,3.7L461.57,319.37L461.57,319.37z\\\",\\n            \\\"name\\\": \\\"Nigeria\\\"\\n        },\\n        \\\"tn\\\": {\\n            \\\"path\\\": \\\"M474.91,227.33l5.53-2.23l1.82,1.18l0.07,1.44l-0.85,1.11l0.13,1.97l0.85,0.46v3.54l-0.98,1.64l0.13,1.05l3.71,1.31l-2.99,4.65l-1.17-0.07l-0.2,3.74l-1.3,0.2l-1.11-0.98l0.26-3.8l-3.64-3.54l-0.46-3.08l1.76-1.38L474.91,227.33L474.91,227.33z\\\",\\n            \\\"name\\\": \\\"Tunisia\\\"\\n        },\\n        \\\"ly\\\": {\\n            \\\"path\\\": \\\"M480.05,248.03l1.56-0.26l0.46-3.6h0.78l3.19-5.24l7.87,2.29l2.15,3.34l7.74,3.54l4.03-1.7l-0.39-1.7l-1.76-1.7l0.2-1.18l2.86-2.42h5.66l2.15,2.88l4.55,0.66l0.59,36.89l-3.38-0.13l-20.42-10.62l-2.21,1.25l-8.39-2.1l-2.28-3.01l-3.32-0.46l-1.69-3.01L480.05,248.03L480.05,248.03z\\\",\\n            \\\"name\\\": \\\"Libya\\\"\\n        },\\n        \\\"eg\\\": {\\n            \\\"path\\\": \\\"M521.93,243.06l2.67,0.07l5.2,1.44l2.47,0.07l3.06-2.56h1.43l2.6,1.44h3.29l0.59-0.04l2.08,5.98l0.59,1.93l0.55,2.89l-0.98,0.72l-1.69-0.85l-1.95-6.36l-1.76-0.13l-0.13,2.16l1.17,3.74l9.37,11.6l0.2,4.98l-2.73,3.15L522.32,273L521.93,243.06L521.93,243.06z\\\",\\n            \\\"name\\\": \\\"Egypt\\\"\\n        },\\n        \\\"td\\\": {\\n            \\\"path\\\": \\\"M492.79,296l0.13-2.95l4.74-4.61l1.27-11.32l-3.16-6.04l2.21-1.13l21.4,11.15l-0.13,10.94l-3.77,3.21v5.64l2.47,4.78h-4.36l-7.22,7.14l-0.19,2.16l-5.33-0.07l-0.07,0.98l-3.04-0.4l-2.08-3.93l-1.56-0.77l0.2-1.2l1.96-1.5v-7.02l-2.71-0.42l-3.27-2.43L492.79,296L492.79,296L492.79,296z\\\",\\n            \\\"name\\\": \\\"Chad\\\"\\n        },\\n        \\\"sd\\\": {\\n            \\\"path\\\": \\\"M520.15,292.43l0.18-11.83l2.46,0.07l-0.28-6.57l25.8,0.23l3.69-3.72l7.96,12.73l-4.36,5.14v7.85l-6.86,14.75l-2.36,1.04l0.75,4.11h2.94l3.99,5.79l-3.2,0.41l-0.82,1.49l-0.08,2.15l-9.6-0.17l-0.98-1.49l-6.71-0.38l-12.32-12.68l1.23-0.74l0.33-2.98l-2.95-1.74l-2.69-5.31l0.15-4.94L520.15,292.43L520.15,292.43z\\\",\\n            \\\"name\\\": \\\"Sudan\\\"\\n        },\\n        \\\"cm\\\": {\\n            \\\"path\\\": \\\"M477.82,324.28l3.22,2.96l-0.23,4.58l17.66-0.41l1.44-1.62l-5.06-5.45l-0.75-1.97l3.22-6.03l-2.19-4l-1.84-0.99v-2.03l2.13-1.39l0.12-6.32l-1.69-0.19l-0.03,3.32l-7.42,13.85l-4.54,0.23l-3.11,2.14L477.82,324.28L477.82,324.28z\\\",\\n            \\\"name\\\": \\\"Cameroon\\\"\\n        },\\n        \\\"er\\\": {\\n            \\\"path\\\": \\\"M556.71,294.7l-0.25-5.89l3.96-4.62l1.07,0.82l1.95,6.52l9.36,6.97l-1.7,2.09l-6.85-5.89H556.71L556.71,294.7z\\\",\\n            \\\"name\\\": \\\"Eritrea\\\"\\n        },\\n        \\\"dj\\\": {\\n            \\\"path\\\": \\\"M571.48,301.54l-0.57,3.36l3.96-0.06l0.06-4.94l-1.45-0.89L571.48,301.54L571.48,301.54z\\\",\\n            \\\"name\\\": \\\"Djibouti\\\"\\n        },\\n        \\\"et\\\": {\\n            \\\"path\\\": \\\"M549.49,311.76l7.28-16.2l7.23,0.04l6.41,5.57l-0.45,4.59h4.97l0.51,2.76l8.04,4.81l4.96,0.25l-9.43,10.13l-12.95,3.99h-3.21l-5.72-4.88l-2.26-0.95l-4.38-6.45l-2.89,0.04l-0.34-2.96L549.49,311.76L549.49,311.76z\\\",\\n            \\\"name\\\": \\\"Ethiopia\\\"\\n        },\\n        \\\"so\\\": {\\n            \\\"path\\\": \\\"M575.74,305.04l4.08,2.78l1.21-0.06l10.13-3.48l1.15,3.71l-0.81,3.13l-2.19,1.74l-5.47-0.35l-7.83-4.81L575.74,305.04L575.74,305.04M591.97,304.05l4.37-1.68l1.55,0.93l-0.17,3.88l-4.03,11.48l-21.81,23.36l-2.53-1.74l-0.17-9.86l3.28-3.77l6.96-2.15l10.21-10.78l2.67-2.38l0.75-3.48L591.97,304.05L591.97,304.05z\\\",\\n            \\\"name\\\": \\\"Somalia\\\"\\n        },\\n        \\\"ye\\\": {\\n            \\\"path\\\": \\\"M599.62,299.65l2.13,2.38l2.88-1.74l1.04-0.35l-1.32-1.28l-2.53,0.75L599.62,299.65L599.62,299.65M571.99,289.23l1.44,4.28v4.18l3.46,3.14l24.38-9.93l0.23-2.73l-3.91-7.02l-9.81,3.13l-5.63,5.54l-6.53-3.86L571.99,289.23L571.99,289.23z\\\",\\n            \\\"name\\\": \\\"Yemen\\\"\\n        },\\n        \\\"cf\\\": {\\n            \\\"path\\\": \\\"M495.66,324.05l4.66,5.04l1.84-2.38l2.93,0.12l0.63-2.32l2.88-1.8l5.98,4.12l3.45-3.42l13.39,0.59L519,311.18l1.67-1.04l0.23-2.26l-2.82-1.33h-4.14l-6.67,6.61l-0.23,2.72l-5.29-0.17l-0.17,1.16l-3.45-0.35l-3.11,5.91L495.66,324.05L495.66,324.05z\\\",\\n            \\\"name\\\": \\\"Central African Republic\\\"\\n        },\\n        \\\"st\\\": {\\n            \\\"path\\\": \\\"M470.74,337.15l1.15-0.58l0.86,0.7l-0.86,1.33l-1.04-0.41L470.74,337.15L470.74,337.15M473.05,333.5l1.73-0.29l0.58,1.1l-0.86,0.93l-0.86-0.12L473.05,333.5L473.05,333.5z\\\",\\n            \\\"name\\\": \\\"Sao Tome and Principe\\\"\\n        },\\n        \\\"gq\\\": {\\n            \\\"path\\\": \\\"M476.84,327.41l-0.46,1.97l1.38,0.75l1.32-0.99l-0.46-2.03L476.84,327.41L476.84,327.41M480.99,332.69l-0.06,1.39l4.54,0.23l-0.06-1.57L480.99,332.69L480.99,332.69z\\\",\\n            \\\"name\\\": \\\"Equatorial Guinea\\\"\\n        },\\n        \\\"ga\\\": {\\n            \\\"path\\\": \\\"M486.39,332.63l-0.12,2.49l-5.64-0.12l-3.45,6.67l8.11,8.87l2.01-1.68l-0.06-1.74l-1.38-0.64v-1.22l3.11-1.97l2.76,2.09l3.05,0.06l-0.06-10.49l-4.83-0.23l-0.06-2.2L486.39,332.63L486.39,332.63z\\\",\\n            \\\"name\\\": \\\"Gabon\\\"\\n        },\\n        \\\"cg\\\": {\\n            \\\"path\\\": \\\"M491,332.52l-0.06,1.45l4.78,0.12l0.17,12.41l-4.37-0.12l-2.53-1.97l-1.96,1.1l-0.09,0.55l1.01,0.49l0.29,2.55l-2.7,2.32l0.58,1.22l2.99-2.32h1.44l0.46,1.39l1.9,0.81l6.1-5.16l-0.12-3.77l1.27-3.07l3.91-2.9l1.05-9.81l-2.78,0.01l-3.22,4.41L491,332.52L491,332.52z\\\",\\n            \\\"name\\\": \\\"Congo\\\"\\n        },\\n        \\\"ao\\\": {\\n            \\\"path\\\": \\\"M486.55,353.23l1.74,2.26l2.25-2.13l-0.66-2.21l-0.56-0.04L486.55,353.23L486.55,353.23M488.62,356.71l3.41,12.73l-0.08,4.02l-4.99,5.36l-0.75,8.71l19.2,0.17l6.24,2.26l5.15-0.67l-3-3.76l0.01-10.74l5.9-0.25v-4.19l-4.79-0.2l-0.96-9.92l-2.02,0.03l-1.09-0.98l-1.19,0.06l-1.58,3.06H502l-1.41-1.42l0.42-2.01l-1.66-2.43L488.62,356.71L488.62,356.71z\\\",\\n            \\\"name\\\": \\\"Angola\\\"\\n        },\\n        \\\"cd\\\": {\\n            \\\"path\\\": \\\"M489.38,355.71l10.31-0.18l2.09,2.97l-0.08,2.19l0.77,0.7h5.12l1.47-2.89h2.09l0.85,0.86l2.87-0.08l0.85,10.08l4.96,0.16v0.78l13.33,6.01l0.62,1.17h2.79l-0.31-4.22l-5.04-2.42l0.31-3.2l2.17-5.08l4.96-0.16l-4.26-14.14l0.08-6.01l6.74-10.54l0.08-1.48l-1.01-0.55l0.04-2.86l-1.23-0.11l-1.24-1.58l-20.35-0.92l-3.73,3.63l-6.11-4.02l-2.15,1.32l-1.56,13.13l-3.86,2.98l-1.16,2.64l0.21,3.91l-6.96,5.69l-1.85-0.84l0.25,1.09L489.38,355.71L489.38,355.71z\\\",\\n            \\\"name\\\": \\\"Congo\\\"\\n        },\\n        \\\"rw\\\": {\\n            \\\"path\\\": \\\"M537.82,339.9l2.81,2.59l-0.12,2.77l-4.36,0.09v-3.06L537.82,339.9L537.82,339.9z\\\",\\n            \\\"name\\\": \\\"Rwanda\\\"\\n        },\\n        \\\"bi\\\": {\\n            \\\"path\\\": \\\"M536.21,346.21l4.27-0.09l-1.11,3.74l-1.08,0.94h-1.32l-0.94-2.53L536.21,346.21L536.21,346.21z\\\",\\n            \\\"name\\\": \\\"Burundi\\\"\\n        },\\n        \\\"ug\\\": {\\n            \\\"path\\\": \\\"M538.3,339.09l3.03,2.84l1.9-1.21l5.14-0.84l0.88,0.09l0.33-1.95l2.9-6.1l-2.44-5.08l-7.91,0.05l-0.05,2.09l1.06,1.02l-0.16,2.09L538.3,339.09L538.3,339.09z\\\",\\n            \\\"name\\\": \\\"Uganda\\\"\\n        },\\n        \\\"ke\\\": {\\n            \\\"path\\\": \\\"M550.83,326.52l2.66,5.19l-3.19,6.69l-0.42,2.03l15.93,9.85l4.94-7.76l-2.5-2.03l-0.05-10.22l3.13-3.42l-4.99,1.66l-3.77,0.05l-5.9-4.98l-1.86-0.8l-3.45,0.32l-0.61,1.02L550.83,326.52L550.83,326.52z\\\",\\n            \\\"name\\\": \\\"Kenya\\\"\\n        },\\n        \\\"tz\\\": {\\n            \\\"path\\\": \\\"M550.57,371.42l17.47-2.14l-3.93-7.6l-0.21-7.28l1.27-3.48l-16.62-10.44l-5.21,0.86l-1.81,1.34l-0.16,3.05l-1.17,4.23l-1.22,1.45l-1.75,0.16l3.35,11.61l5.47,2.57l3.77,0.11L550.57,371.42L550.57,371.42z\\\",\\n            \\\"name\\\": \\\"Tanzania\\\"\\n        },\\n        \\\"zm\\\": {\\n            \\\"path\\\": \\\"M514.55,384.7l3.17,4.4l4.91,0.3l1.74,0.96l5.14,0.06l4.43-6.21l12.38-5.54l1.08-4.88l-1.44-6.99l-6.46-3.68l-4.31,0.3l-2.15,4.76l0.06,2.17l5.08,2.47l0.3,5.37l-4.37,0.24l-1.08-1.81l-12.14-5.18l-0.36,3.98l-5.74,0.18L514.55,384.7L514.55,384.7z\\\",\\n            \\\"name\\\": \\\"Zambia\\\"\\n        },\\n        \\\"mw\\\": {\\n            \\\"path\\\": \\\"M547.16,379.4l3.11,3.25l-0.06,4.16l0.6,1.75l4.13-4.46l-0.48-5.67l-2.21-1.69l-1.97-9.95l-3.41-0.12l1.55,7.17L547.16,379.4L547.16,379.4z\\\",\\n            \\\"name\\\": \\\"Malawi\\\"\\n        },\\n        \\\"mz\\\": {\\n            \\\"path\\\": \\\"M541.17,413.28l2.69,2.23l6.34-3.86l1.02-5.73v-9.46l10.17-8.32l1.74,0.06l6.16-5.91l-0.96-12.18L552,372.17l0.48,3.68l2.81,2.17l0.66,6.63l-5.5,5.37l-1.32-3.01l0.24-3.98l-3.17-3.44l-7.78,3.62l7.24,3.68l0.24,10.73l-4.79,7.11L541.17,413.28L541.17,413.28z\\\",\\n            \\\"name\\\": \\\"Mozambique\\\"\\n        },\\n        \\\"zw\\\": {\\n            \\\"path\\\": \\\"M524.66,392.3l8.97,10.13l6.88,1.75l4.61-7.23l-0.36-9.58l-7.48-3.86l-2.81,1.27l-4.19,6.39l-5.8-0.06L524.66,392.3L524.66,392.3z\\\",\\n            \\\"name\\\": \\\"Zimbabwe\\\"\\n        },\\n        \\\"na\\\": {\\n            \\\"path\\\": \\\"M496.55,421.96l3.35,0.24l1.97,1.99l4.67,0.06l1.14-13.26v-8.68l2.99-0.6l1.14-9.1l7.6-0.24l2.69-2.23l-4.55-0.18l-6.16,0.84l-6.64-2.41h-18.66l0.48,5.3l6.22,9.16l-1.08,4.7l0.06,2.47L496.55,421.96L496.55,421.96z\\\",\\n            \\\"name\\\": \\\"Namibia\\\"\\n        },\\n        \\\"bw\\\": {\\n            \\\"path\\\": \\\"M508.51,411.23l2.15,0.66l-0.3,6.15l2.21,0.3l5.08-4.58l6.1,0.66l1.62-4.1l7.72-7.05l-9.27-10.67l-0.12-1.75l-1.02-0.3l-2.81,2.59l-7.3,0.18l-1.02,9.1l-2.87,0.66L508.51,411.23L508.51,411.23z\\\",\\n            \\\"name\\\": \\\"Botswana\\\"\\n        },\\n        \\\"sz\\\": {\\n            \\\"path\\\": \\\"M540.87,414l-2.51,0.42l-1.08,2.95l1.92,1.75h2.33l1.97-2.83L540.87,414L540.87,414z\\\",\\n            \\\"name\\\": \\\"Swaziland\\\"\\n        },\\n        \\\"ls\\\": {\\n            \\\"path\\\": \\\"M527.41,425.39l3.05-2.35l1.44,0.06l1.74,2.17l-0.18,2.17l-2.93,1.08v0.84l-3.23-0.18l-0.78-2.35L527.41,425.39L527.41,425.39z\\\",\\n            \\\"name\\\": \\\"Lesotho\\\"\\n        },\\n        \\\"za\\\": {\\n            \\\"path\\\": \\\"M534.16,403.63l-7.9,7.3l-1.88,4.51l-6.26-0.78l-5.21,4.63l-3.46-0.34l0.28-6.4l-1.23-0.43l-0.86,13.09l-6.14-0.06l-1.85-2.18l-2.71-0.03l2.47,7.09l4.41,4.17l-3.15,3.67l2.04,4.6l4.72,1.8l3.76-3.2l10.77,0.06l0.77-0.96l4.78-0.84l16.17-16.1l-0.06-5.07l-1.73,2.24h-2.59l-3.15-2.64l1.6-3.98l2.75-0.56l-0.25-8.18L534.16,403.63L534.16,403.63z M530.37,422.13l1.51-0.06l2.45,2.66l-0.07,3.08l-2.87,1.45l-0.18,1.02l-4.38,0.05l-1.37-3.3l1.25-2.42L530.37,422.13L530.37,422.13z\\\",\\n            \\\"name\\\": \\\"South Africa\\\"\\n        },\\n        \\\"gl\\\": {\\n            \\\"path\\\": \\\"M321.13,50.07l-1.36,2.17l2.45,2.45l-1.09,2.45l3.54,4.62l4.35-1.36l5.71-0.54l6.53,7.07l4.35,11.69l-3.53,7.34l4.89-0.82l2.72,1.63l0.27,3.54l-5.98,0.27l3.26,3.26l4.08,0.82l-8.97,11.96l-1.09,7.34l1.9,5.98l-1.36,3.54l2.45,7.61l4.62,5.17l1.36-0.27l2.99-0.82l0.27,4.35l1.9,2.72l3.53-0.27l2.72-10.06l8.16-10.06l12.24-4.89l7.61-9.52l3.53,1.63h7.34l5.98-5.98l7.34-2.99l0.82-4.62l-4.62-4.08l-4.08-1.36l-2.18-5.71l5.17-2.99l8.16,4.35l2.72-2.99l-4.35-2.45l9.25-12.51l-1.63-5.44l-4.35-0.27l1.63-4.89l5.44-2.45l11.15-9.79l-3.26-3.53l-12.51,1.09l-6.53,6.53l3.81-8.43l-4.35-1.09l-2.45,4.35l-3.53-2.99l-9.79,1.09l2.72-4.35l16.04-0.54l-4.08-5.44l-17.4-3.26l-7.07,1.09l0.27,3.54l-7.34-2.45l0.27-2.45l-5.17,1.09l-1.09,2.72l5.44,1.9l-5.71,4.08l-4.08-4.62l-5.71-1.63l-0.82,4.35h-5.71l-2.18-4.62l-8.97-1.36l-4.89,2.45l-0.27,3.26l-6.25-0.82l-3.81,1.63l0.27,3.81v1.9l-7.07,1.36l-3.26-2.17l-2.18,3.53l3.26,3.54l6.8-0.82l0.54,2.18l-5.17,2.45L321.13,50.07L321.13,50.07M342.89,92.49l1.63,2.45l-0.82,2.99h-1.63l-2.18-2.45l0.54-1.9L342.89,92.49L342.89,92.49M410.87,85.69l4.62,1.36l-0.27,3.81l-4.89-2.45l-1.09-1.36L410.87,85.69L410.87,85.69z\\\",\\n            \\\"name\\\": \\\"Greenland\\\"\\n        },\\n        \\\"au\\\": {\\n            \\\"path\\\": \\\"M761.17,427.98l-0.35,25.38l-3.9,2.86l-0.35,2.5l5.32,3.57l13.13-2.5h6.74l2.48-3.58l14.9-2.86l10.64,3.22l-0.71,4.29l1.42,4.29l8.16-1.43l0.35,2.14l-5.32,3.93l1.77,1.43l3.9-1.43l-1.06,11.8l7.45,5.72l4.26-1.43l2.13,2.14l12.42-1.79l11.71-18.95l4.26-1.07l8.51-15.73l2.13-13.58l-5.32-6.79l2.13-1.43l-4.26-13.23l-4.61-3.22l0.71-17.87l-4.26-3.22l-1.06-10.01h-2.13l-7.1,23.59l-3.9,0.36l-8.87-8.94l4.97-13.23l-9.22-1.79l-10.29,2.86l-2.84,8.22l-4.61,1.07l-0.35-5.72l-18.8,11.44l0.35,4.29l-2.84,3.93h-7.1l-15.26,6.43L761.17,427.98L761.17,427.98M825.74,496.26l-1.77,7.15l0.35,5l5.32-0.36l6.03-9.29L825.74,496.26L825.74,496.26z\\\",\\n            \\\"name\\\": \\\"Australia\\\"\\n        },\\n        \\\"nz\\\": {\\n            \\\"path\\\": \\\"M913.02,481.96l1.06,11.8l-1.42,5.36l-5.32,3.93l0.35,4.65v5l1.42,1.79l14.55-12.51v-2.86h-3.55l-4.97-16.8L913.02,481.96L913.02,481.96M902.38,507.7l2.84,5.36l-7.81,7.51l-0.71,3.93l-5.32,0.71l-8.87,8.22l-8.16-3.93l-0.71-2.86l14.9-6.43L902.38,507.7L902.38,507.7z\\\",\\n            \\\"name\\\": \\\"New Zealand\\\"\\n        },\\n        \\\"nc\\\": {\\n            \\\"path\\\": \\\"M906.64,420.47l-0.35,1.79l4.61,6.43l2.48,1.07l0.35-2.5L906.64,420.47L906.64,420.47z\\\",\\n            \\\"name\\\": \\\"New Caledonia\\\"\\n        },\\n        \\\"my\\\": {\\n            \\\"path\\\": \\\"M764.14,332.92l3.02,3.49l11.58-4.01l2.29-8.84l5.16-0.37l4.72-3.42l-6.12-4.46l-1.4-2.45l-3.02,5.57l1.11,3.2l-1.84,2.67l-3.47-0.89l-8.41,6.17l0.22,3.57L764.14,332.92L764.14,332.92M732.71,315.45l2.01,4.51l0.45,5.86l2.69,4.17l6.49,3.94l2.46,0.23l-0.45-4.06l-2.13-5.18l-3.12-6.63l-0.26,1.16l-3.76-0.17l-2.7-3.88L732.71,315.45L732.71,315.45z\\\",\\n            \\\"name\\\": \\\"Malaysia\\\"\\n        },\\n        \\\"bn\\\": {\\n            \\\"path\\\": \\\"M779.77,319.25l-2.88,3.49l2.36,0.74l1.33-1.86L779.77,319.25L779.77,319.25z\\\",\\n            \\\"name\\\": \\\"Brunei Darussalam\\\"\\n        },\\n        \\\"tl\\\": {\\n            \\\"path\\\": \\\"M806.14,368.42l-5.11,4.26l0.49,1.09l2.16-0.4l2.55-2.38l5.01-0.69l-0.98-1.68L806.14,368.42L806.14,368.42z\\\",\\n            \\\"name\\\": \\\"Timor-Leste\\\"\\n        },\\n        \\\"sb\\\": {\\n            \\\"path\\\": \\\"M895.43,364.65l0.15,2.28l1.39,1.32l1.31-0.81l-1.17-2.43L895.43,364.65L895.43,364.65M897.18,370.31l-1.17,1.25l1.24,2.28l1.46,0.44l-0.07-1.54L897.18,370.31L897.18,370.31M900.03,368.99l1.02,2.5l1.97,2.35l1.09-1.76l-1.46-2.5L900.03,368.99L900.03,368.99M905.14,372.74l0.58,3.09l1.39,1.91l1.17-2.42L905.14,372.74L905.14,372.74M906.74,379.65l-0.51,0.88l1.68,2.21l1.17,0.07l-0.73-2.87L906.74,379.65L906.74,379.65M903.02,384.05l-1.75,0.81l1.53,2.13l1.31-0.74L903.02,384.05L903.02,384.05z\\\",\\n            \\\"name\\\": \\\"Solomon Islands\\\"\\n        },\\n        \\\"vu\\\": {\\n            \\\"path\\\": \\\"M920.87,397.22l-1.24,1.66l0.52,1.87l0.62,0.42l1.13-1.46L920.87,397.22L920.87,397.22M921.49,402.31l0.1,1.35l1.34,0.42l0.93-0.52l-0.93-1.46L921.49,402.31L921.49,402.31M923.45,414.37l-0.62,0.94l0.93,1.04l1.55-0.52L923.45,414.37L923.45,414.37z\\\",\\n            \\\"name\\\": \\\"Vanuatu\\\"\\n        },\\n        \\\"fj\\\": {\\\"path\\\": \\\"M948.62,412.29l-1.24,1.66l-0.1,1.87l1.44,1.46L948.62,412.29L948.62,412.29z\\\", \\\"name\\\": \\\"Fiji\\\"},\\n        \\\"ph\\\": {\\n            \\\"path\\\": \\\"M789.37,297.53l-0.86,1.64l-0.48,2.02l-4.78,6.07l0.29,1.25l2.01-0.29l6.21-6.94L789.37,297.53L789.37,297.53M797.11,295.22l-0.1,5.01l1.82,1.83l0.67,3.56l1.82,0.39l0.86-2.22l-1.43-1.06l-0.38-6.26L797.11,295.22L797.11,295.22M802.28,297.15l-0.1,4.43l1.05,1.73l1.82-2.12l-0.48-3.85L802.28,297.15L802.28,297.15M803.42,293.29l1.82,2.41l0.86,2.31h1.63l-0.29-3.95l-1.82-1.25L803.42,293.29L803.42,293.29M806.96,302.35l0.38,2.89l-3.35,2.7l-2.77,0.29l-2.96,3.18l0.1,1.45l2.77-0.87l1.91-1.25l1.63,4.14l2.87,2.02l1.15-0.39l1.05-1.25l-2.29-2.31l1.34-1.06l1.53,1.25l1.05-1.73l-1.05-2.12l-0.19-4.72L806.96,302.35L806.96,302.35M791.38,272.97l-2.58,1.83l-0.29,5.78l4.02,7.8l1.34,1.06l1.72-1.16l2.96,0.48l0.57,2.6l2.2,0.19l1.05-1.44l-1.34-1.83l-1.63-1.54l-3.44-0.38l-1.82-2.99l2.1-3.18l0.19-2.79l-1.43-3.56L791.38,272.97L791.38,272.97M792.72,290.21l0.76,2.7l1.34,0.87l0.96-1.25l-1.53-2.12L792.72,290.21L792.72,290.21z\\\",\\n            \\\"name\\\": \\\"Philippines\\\"\\n        },\\n        \\\"cn\\\": {\\n            \\\"path\\\": \\\"M759.83,270.17l-2.39,0.67l-1.72,2.12l1.43,2.79l2.1,0.19l2.39-2.12l0.57-2.79L759.83,270.17L759.83,270.17M670.4,170.07l-3.46,8.7l-4.77-0.25l-5.03,11.01l4.27,5.44l-8.8,12.15l-4.52-0.76l-3.02,3.8l0.75,2.28l3.52,0.25l1.76,4.05l3.52,0.76l10.81,13.93v7.09l5.28,3.29l5.78-1.01l7.29,4.3l8.8,2.53l4.27-0.51l4.78-0.51l10.05-6.58l3.27,0.51l1.25,2.97l2.77,0.83l3.77,5.57l-2.51,5.57l1.51,3.8l4.27,1.52l0.75,4.56l5.03,0.51l0.75-2.28l7.29-3.8l4.52,0.25l5.28,5.82l3.52-1.52l2.26,0.25l1.01,2.79l1.76,0.25l2.51-3.54l10.05-3.8l9.05-10.89l3.02-10.38l-0.25-6.84l-3.77-0.76l2.26-2.53l-0.5-4.05l-9.55-9.62v-4.81l2.76-3.54l2.76-1.27l0.25-2.79h-7.04l-1.26,3.8l-3.27-0.76l-4.02-4.3l2.51-6.58l3.52-3.8l3.27,0.25l-0.5,5.82l1.76,1.52l4.27-4.3l1.51-0.25l-0.5-3.29l4.02-4.81l3.02,0.25l1.76-5.57l2.06-1.09l0.21-3.47l-2-2.1l-0.17-5.48l3.85-0.25l-0.25-14.13l-2.7,1.62l-1.01,3.62l-4.51-0.01l-13.07-7.35l-9.44-11.38l-9.58-0.1l-2.44,2.12l3.1,7.1l-1.08,6.66l-3.86,1.6l-2.17-0.17l-0.16,6.59l2.26,0.51l4.02-1.77l5.28,2.53v2.53l-3.77,0.25l-3.02,6.58l-2.76,0.25l-9.8,12.91l-10.3,4.56l-7.04,0.51l-4.77-3.29l-6.79,3.55l-7.29-2.28l-1.76-4.81l-12.31-0.76l-6.53-10.63h-2.76l-2.22-4.93L670.4,170.07z\\\",\\n            \\\"name\\\": \\\"China\\\"\\n        },\\n        \\\"tw\\\": {\\n            \\\"path\\\": \\\"M787.46,248.31l-3.54,2.7l-0.19,5.2l3.06,3.56l0.76-0.67L787.46,248.31L787.46,248.31z\\\",\\n            \\\"name\\\": \\\"Taiwan\\\"\\n        },\\n        \\\"jp\\\": {\\n            \\\"path\\\": \\\"M803.23,216.42l-1.63,1.64l0.67,2.31l1.43,0.1l0.96,5.01l1.15,1.25l2.01-1.83l0.86-3.28l-2.49-3.56L803.23,216.42L803.23,216.42M812.03,213.15l-2.77,2.6l-0.1,2.99l0.67,0.87l3.73-3.18l-0.29-3.18L812.03,213.15L812.03,213.15M808.2,206.98l-4.88,5.59l0.86,1.35l2.39,0.29l4.49-3.47l3.16-0.58l2.87,3.37l2.2-0.77l0.86-3.28l4.11-0.1l4.02-4.82l-2.1-8l-0.96-4.24l2.1-1.73l-4.78-7.22l-1.24,0.1l-2.58,2.89v2.41l1.15,1.35l0.38,6.36l-2.96,3.66l-1.72-1.06l-1.34,2.99l-0.29,2.79l1.05,1.64l-0.67,1.25l-2.2-1.83h-1.53l-1.34,0.77L808.2,206.98L808.2,206.98M816.43,163.44l-1.53,1.35l0.77,2.89l1.34,1.35l-0.1,4.43l-1.72,0.67l-1.34,2.99l3.92,5.39l2.58-0.87l0.48-1.35l-2.77-2.5l1.72-2.22l1.82,0.29l1.43,1.54l0.1-3.18l3.92-3.18l2.2-0.58l-1.82-3.08l-0.86-1.35l-1.43,0.96l-1.24,1.54l-2.68-0.58l-2.77-1.83L816.43,163.44L816.43,163.44z\\\",\\n            \\\"name\\\": \\\"Japan\\\"\\n        },\\n        \\\"ru\\\": {\\n            \\\"path\\\": \\\"M506.61,151.72l-1.5-0.15l-2.7,3.23v1.51l0.9,0.35l1.75,0.05l2.9-2.37l0.4-0.81L506.61,151.72L506.61,151.72M830.86,160.45l-2.68,3.76l0.19,1.83l1.34-0.58l3.15-3.95L830.86,160.45L830.86,160.45M834.4,154.96l-0.96,2.6l0.1,1.73l1.63-1.06l1.53-3.08V154L834.4,154.96L834.4,154.96M840.04,132.03l-1.24,1.54l0.1,2.41l1.15-0.1l1.91-3.37L840.04,132.03L840.04,132.03M837.75,137.91v4.24l1.34,0.48l0.96-1.54v-3.27L837.75,137.91L837.75,137.91M798.64,122.59l-0.09,6.17l7.74,11.95l2.77,10.4l4.88,9.25l1.91,0.67l1.63-1.35l0.76-2.22l-6.98-7.61l0.19-3.95l1.53-0.67l0.38-2.31l-13.67-19.36L798.64,122.59L798.64,122.59M852.57,103.42l-1.91,0.19l1.15,1.64l2.39,1.64l0.67-0.77L852.57,103.42L852.57,103.42M856.29,104.58l0.29,1.64l2.96,0.87l0.29-1.16L856.29,104.58L856.29,104.58M547.82,38.79l1.72,0.69l-1.21,2.08v2.95l-2.58,1.56H543l-1.55-1.91l0.17-2.08l1.21-1.56h2.41L547.82,38.79L547.82,38.79M554.36,36.88v2.08l1.72,1.39l2.41-0.17l2.07-1.91v-1.39h-1.89l-1.55,0.52l-1.21-1.39L554.36,36.88L554.36,36.88M564.18,37.06l1.21,2.6l2.41,0.17l1.72-0.69l-0.86-2.43l-2.24-0.52L564.18,37.06L564.18,37.06M573.99,33.59l-1.89-0.35l-1.72,1.74l0.86,1.56l0.52,2.43l2.24-1.73l0.52-1.91L573.99,33.59L573.99,33.59M584.49,51.98l-0.52,2.43l-3.96,3.47l-8.44,1.91l-6.89,11.45l-1.21,3.3l6.89,1.74l1.03-4.16l2.07-6.42l5.34-2.78l4.48-3.47l3.27-1.39h1.72v-4.68L584.49,51.98L584.49,51.98M562.28,77.31l4.65,0.52l1.55,5.38l3.96,4.16l-1.38,2.78h-2.41l-2.24-2.6l-4.99-0.17l-2.07-2.78v-1.91l3.1-0.87L562.28,77.31L562.28,77.31M634.95,18.15l-2.24-1.39h-2.58l-0.52,1.56l-2.75,1.56l-2.07,0.69l-0.34,2.08l4.82,0.35L634.95,18.15L634.95,18.15M640.28,18.67l-1.21,2.6l-2.41-0.17l-3.79,2.78l-1.03,3.47h2.41l1.38-2.26l3.27,2.43l3.1-1.39l2.24-1.91l-0.86-2.95l-1.21-2.08L640.28,18.67L640.28,18.67M645.28,20.58l1.21,4.86l1.89,4.51l2.07-3.64l3.96-0.87v-2.6l-2.58-1.91L645.28,20.58L645.28,20.58M739.76,12.8l2.69,2.26l1.91-0.79l0.56-3.17L741,8.39l-2.58,1.7l-6.28,0.57v2.83l-6.62,0.11v4.63l7.74,5.76l2.02-1.47l-0.45-4.07l4.94-1.24l-1.01-1.92l-1.79-1.81L739.76,12.8L739.76,12.8M746.94,10.09l1.79,3.39l6.96-0.79l1.91-2.49l-0.45-2.15l-1.91-0.79l-1.79,1.36l-5.16,1.13L746.94,10.09L746.94,10.09M746.49,23.31l-3.48-0.9L741,24.56l-0.9,2.94l4.71-0.45l3.59-1.81L746.49,23.31L746.49,23.31M836.68,3.76l-2.92-0.9L830.4,4.1l-1.68,2.49l2.13,2.83l5.61-2.49l1.12-1.24L836.68,3.76L836.68,3.76M817.97,72.93l1.76,6.08l3.52,1.01l3.52-5.57l-2.01-3.8l0.75-3.29h5.28l-1.26,2.53l0.5,9.12l-7.54,18.74l0.75,4.05l-0.25,6.84l14.07,20.51l2.76,0.76l0.25-16.71l2.76-2.53l-3.02-6.58l2.51-2.79l-5.53-7.34l-3.02,0.25l-1-12.15l7.79-2.03l0.5-3.55l4.02-1.01l2.26,2.03l2.76-11.14l4.77-8.1l3.77-2.03l3.27,0.25v-3.8l-5.28-1.01l-7.29-6.08l3.52-4.05l-3.02-6.84l2.51-2.53l3.02,4.05l7.54,2.79l8.29,0.76l1.01-3.54l-4.27-4.3l4.77-6.58l-10.81-3.8l-2.76,5.57l-3.52-4.56l-19.85-6.84l-18.85,3.29l-2.76,1.52v1.52l4.02,2.03l-0.5,4.81l-7.29-3.04l-16.08,6.33l-2.76-5.82h-11.06l-5.03,5.32l-17.84-4.05l-16.33,3.29l-2.01,5.06l2.51,0.76l-0.25,3.8l-15.83,1.77l1.01,5.06l-14.58-2.53l3.52-6.58l-14.83-0.76l1.26,6.84l-4.77,2.28l-4.02-3.8l-16.33,2.79l-6.28,5.82l-0.25,3.54l-4.02,0.25l-0.5-4.05l12.82-11.14v-7.6l-8.29-2.28l-10.81,3.54l-4.52-4.56h-2.01l-2.51,5.06l2.01,2.28l-14.33,7.85l-12.31,9.37l-7.54,10.38v4.3l8.04,3.29l-4.02,3.04l-8.54-3.04l-3.52,3.04l-5.28-6.08l-1.01,2.28l5.78,18.23l1.51,0.51l4.02-2.03l2.01,1.52v3.29l-3.77-1.52l-2.26,1.77l1.51,3.29l-1.26,8.61l-7.79,0.76l-0.5-2.79l4.52-2.79l1.01-7.6l-5.03-6.58l-1.76-11.39l-8.04-1.27l-0.75,4.05l1.51,2.03l-3.27,2.79l1.26,7.6l4.77,2.03l1.01,5.57l-4.78-3.04l-12.31-2.28l-1.51,4.05l-9.8,3.54l-1.51-2.53l-12.82,7.09l-0.25,4.81l-5.03,0.76l1.51-3.54v-3.54l-5.03-1.77l-3.27,1.27l2.76,5.32l2.01,3.54v2.79l-3.77-0.76l-0.75-0.76l-3.77,4.05l2.01,3.54l-8.54-0.25l2.76,3.55l-0.75,1.52h-4.52l-3.27-2.28l-0.75-6.33l-5.28-2.03v-2.53l11.06,2.28l6.03,0.51l2.51-3.8l-2.26-4.05l-16.08-6.33l-5.55,1.38l-1.9,1.63l0.59,3.75l2.36,0.41l-0.55,5.9l7.28,17.1l-5.26,8.34l-0.36,1.88l2.67,1.88l-2.41,1.59l-1.6,0.03l0.3,7.35l2.21,3.13l0.03,3.04l2.83,0.26l4.33,1.65l4.58,6.3l0.05,1.66l-1.49,2.55l3.42-0.19l3.33,0.96l4.5,6.37l11.08,1.01l-0.48,7.58l-3.82,3.27l0.79,1.28l-3.77,4.05l-1,3.8l2.26,3.29l7.29,2.53l3.02-1.77l19.35,7.34l0.75-2.03l-4.02-3.8v-4.81l-2.51-0.76l0.5-4.05l4.02-4.81l-7.21-5.4l0.5-7.51l7.71-5.07l9.05,0.51l1.51,2.79l9.3,0.51l6.79-3.8l-3.52-3.8l0.75-7.09l17.59-8.61l13.53,6.1l4.52-4.05l13.32,12.66l10.05-1.01l3.52,3.54l9.55,1.01l6.28-8.61l8.04,3.55l4.27,0.76l4.27-3.8l-3.77-2.53l3.27-5.06l9.3,3.04l2.01,4.05l4.02,0.25l2.51-1.77l6.79-0.25l0.75,1.77l7.79,0.51l5.28-5.57l10.81,1.27l3.27-1.27l1-6.08l-3.27-7.34l3.27-2.79h10.3l9.8,11.65l12.56,7.09h3.77l0.5-3.04l4.52-2.79l0.5,16.46l-4.02,0.25v4.05l2.26,2.79l-0.42,3.62l1.67,0.69l1.01-2.53l1.51,0.51l1,1.01l4.52-1.01l4.52-13.17l0.5-16.46l-5.78-13.17l-7.29-8.86l-3.52,0.51v2.79l-8.54-3.29l3.27-7.09l2.76-18.74l11.56-3.54l5.53-3.54h6.03L805.86,96l1.51,2.53l5.28-5.57l3.02,0.25l-0.5-3.29l-4.78-1.01l3.27-11.9L817.97,72.93L817.97,72.93z\\\",\\n            \\\"name\\\": \\\"Russian Federation\\\"\\n        },\\n        \\\"us\\\": {\\n            \\\"path\\\": \\\"M69.17,53.35l3.46,6.47l2.22-0.5v-2.24L69.17,53.35L69.17,53.35M49.66,110.26l-0.17,3.01l2.16-0.5v-1.34L49.66,110.26L49.66,110.26M46.34,111.6l-4.32,2.18l0.67,2.34l1.66-1.34l3.32-1.51L46.34,111.6L46.34,111.6M28.39,114.44l-2.99-0.67l-0.5,1.34l0.33,2.51L28.39,114.44L28.39,114.44M22.07,114.28l-2.83-1.17l-1,1.84l1.83,1.84L22.07,114.28L22.07,114.28M12.27,111.6l-1.33-1.84l-1.33,0.5v2.51l1.5,1L12.27,111.6L12.27,111.6M1.47,99.71l1.66,1.17l-0.5,1.34H1.47V99.71L1.47,99.71M10,248.7l-0.14,2.33l2.04,1.37l1.22-1.09L10,248.7L10,248.7M15.29,252.13l-1.9,1.37l1.63,2.05l1.9-1.64L15.29,252.13L15.29,252.13M19.1,255.41l-1.63,2.19l0.54,1.37l2.31-1.09L19.1,255.41L19.1,255.41M21.81,259.65l-0.95,5.47l0.95,2.05l3.12-0.96l1.63-2.74l-3.4-3.15L21.81,259.65L21.81,259.65M271.05,281.06l-2.64-0.89l-2.12,1.33l1.06,1.24l3.61,0.53L271.05,281.06L271.05,281.06M93.11,44.89l-8.39,1.99l1.73,9.45l9.13,2.49l0.49,1.99L82.5,65.04l-7.65,12.68l2.71,13.43L82,94.13l3.46-3.23l0.99,1.99l-4.2,4.97l-16.29,7.46l-10.37,2.49l-0.25,3.73l23.94-6.96l9.87-2.74l9.13-11.19l10.12-6.71l-5.18,8.7l5.68,0.75l9.63-4.23l1.73,6.96l6.66,1.49l6.91,6.71l0.49,4.97l-0.99,1.24l1.23,4.72h1.73l0.25-7.96h1.97l0.49,19.64l4.94-4.23l-3.46-20.39h-5.18l-5.68-7.21l27.89-47.25l-27.64-21.63l-30.85,5.97l-1.23,9.45l6.66,3.98l-2.47,6.47L93.11,44.89L93.11,44.89M148.76,158.34l-1,4.02l-3.49-2.26h-1.74l-1,4.27l-12.21,27.36l3.24,23.84l3.99,2.01l0.75,6.53h8.22l7.97,6.02l15.69,1.51l1.74,8.03l2.49,1.76l3.49-3.51l2.74,1.25l2.49,11.54l4.23,2.76l3.49-6.53l10.71-7.78l6.97,3.26l5.98,0.5l0.25-3.76l12.45,0.25l2.49,2.76l0.5,6.27l-1.49,3.51l1.74,6.02h3.74l3.74-5.77l-1.49-2.76l-1.49-6.02l2.24-6.78l10.21-8.78l7.72-2.26l-1-7.28l10.71-11.55l10.71-1.76L272.8,199l10.46-6.02v-8.03l-1-0.5l-3.74,1.25l-0.5,4.92l-12.43,0.15l-9.74,6.47l-15.29,5l-2.44-2.99l6.94-10.5l-3.43-3.27l-2.33-4.44l-4.83-3.88l-5.25-0.44l-9.92-6.77L148.76,158.34L148.76,158.34z\\\",\\n            \\\"name\\\": \\\"United States of America\\\"\\n        },\\n        \\\"mu\\\": {\\\"path\\\": \\\"M613.01,398.99l-1.52,1.99l0.3,2.15l3.2-2.61L613.01,398.99L613.01,398.99z\\\", \\\"name\\\": \\\"Mauritius\\\"},\\n        \\\"re\\\": {\\n            \\\"path\\\": \\\"M607.38,402.37l-2.28,0.15l-0.15,1.99l1.52,0.31l2.28-1.07L607.38,402.37L607.38,402.37z\\\",\\n            \\\"name\\\": \\\"Reunion\\\"\\n        },\\n        \\\"mg\\\": {\\n            \\\"path\\\": \\\"M592.3,372.92l-2.13,5.06l-3.65,6.44l-6.39,0.46l-2.74,3.22l0.46,9.82l-3.96,4.6l0.46,7.82l3.35,3.83l3.96-0.46l3.96-2.92l-0.91-4.6l9.13-15.8l-1.83-1.99l1.83-3.83l1.98,0.61l0.61-1.53l-1.83-7.82l-1.07-3.22L592.3,372.92L592.3,372.92z\\\",\\n            \\\"name\\\": \\\"Madagascar\\\"\\n        },\\n        \\\"km\\\": {\\n            \\\"path\\\": \\\"M577.69,371.23l0.46,1.53l1.98,0.31l0.76-1.99L577.69,371.23L577.69,371.23M580.58,374.3l0.76,1.69h1.22l0.61-2.15L580.58,374.3L580.58,374.3z\\\",\\n            \\\"name\\\": \\\"Comoros\\\"\\n        },\\n        \\\"sc\\\": {\\n            \\\"path\\\": \\\"M602.35,358.34l-0.61,1.23l1.67,1.38l1.22-1.38L602.35,358.34L602.35,358.34M610.88,349.14l-1.83,1.23l1.37,2.15h1.83L610.88,349.14L610.88,349.14M611.64,354.51l-1.22,1.38l0.91,1.38l1.67,0.31l0.15-2.92L611.64,354.51L611.64,354.51z\\\",\\n            \\\"name\\\": \\\"Seychelles\\\"\\n        },\\n        \\\"mv\\\": {\\n            \\\"path\\\": \\\"M656.4,320.76l0.3,2.61l1.67,0.61l0.3-2.3L656.4,320.76L656.4,320.76M658.53,326.28l-0.15,3.22l1.22,0.61l1.07-2.15L658.53,326.28L658.53,326.28M658.84,332.57l-1.07,1.07l1.22,1.07l1.52-1.07L658.84,332.57L658.84,332.57z\\\",\\n            \\\"name\\\": \\\"Maldives\\\"\\n        },\\n        \\\"pt\\\": {\\n            \\\"path\\\": \\\"M372.64,217.02l-1.36,1.37l2.44,1.37l0.27-1.91L372.64,217.02L372.64,217.02M379.97,216.2l-1.63,1.09l1.36,1.09l2.17-0.55L379.97,216.2L379.97,216.2M381.05,220.03l-0.81,2.19l1.08,1.37l1.36-1.09L381.05,220.03L381.05,220.03M387.56,224.4l-0.54,1.37l0.81,0.82l2.17-1.37L387.56,224.4L387.56,224.4M408.18,236.42l-1.08,1.37l1.08,1.37l1.63-0.82L408.18,236.42L408.18,236.42M430.93,211.24l-0.62,8.65l-1.77,1.6l0.18,0.98l1.24,2.05l-0.8,2.5l1.33,0.45l3.1-0.36l-0.18-2.5l2.03-11.59l-0.44-1.6L430.93,211.24L430.93,211.24z\\\",\\n            \\\"name\\\": \\\"Portugal\\\"\\n        },\\n        \\\"es\\\": {\\n            \\\"path\\\": \\\"M415.62,253.73l-1.75,1.01l0.81,0.82L415.62,253.73L415.62,253.73M409.54,253.92l-2.17,0.55l1.08,1.64h1.63L409.54,253.92L409.54,253.92M404.38,252.28l-1.36,1.37l1.9,1.64l1.08-2.46L404.38,252.28L404.38,252.28M448.36,205h-12.74l-2.57-1.16l-1.24,0.09l-1.5,3.12l0.53,3.21l4.87,0.45l0.62,2.05l-2.12,11.95l0.09,2.14l3.45,1.87l3.98,0.27l7.96-1.96l3.89-4.9l0.09-4.99l6.9-6.24l0.35-2.76l-6.28-0.09L448.36,205L448.36,205M461.1,217.21l-1.59,0.54l0.35,1.43h2.3l0.97-1.07L461.1,217.21L461.1,217.21z\\\",\\n            \\\"name\\\": \\\"Spain\\\"\\n        },\\n        \\\"cv\\\": {\\n            \\\"path\\\": \\\"M387.56,290.54l-1.9,1.09l1.36,1.09l1.63-0.82L387.56,290.54L387.56,290.54M392.23,292.74l-1.24,1.1l0.88,1.63l2.12-0.95L392.23,292.74L392.23,292.74M389.52,295.83l-1.59,0.95l1.71,2.29l1.35-0.71L389.52,295.83L389.52,295.83z\\\",\\n            \\\"name\\\": \\\"Cape Verde\\\"\\n        },\\n        \\\"pf\\\": {\\n            \\\"path\\\": \\\"M27.25,402.68l-1.9-0.14l-0.14,1.78l1.49,0.96l1.77-1.09L27.25,402.68L27.25,402.68M33.77,404.6l-2.72,1.78l2.04,2.46l1.77-0.41l0.95-1.23L33.77,404.6L33.77,404.6z\\\",\\n            \\\"name\\\": \\\"French Polynesia\\\"\\n        },\\n        \\\"kn\\\": {\\n            \\\"path\\\": \\\"M276.6,283.37l-1.5,0.62l0.53,1.33l1.76-1.15l-0.35-0.36L276.6,283.37L276.6,283.37z\\\",\\n            \\\"name\\\": \\\"Saint Kitts and Nevis\\\"\\n        },\\n        \\\"ag\\\": {\\n            \\\"path\\\": \\\"M279.07,284.88l-0.88,1.87l1.06,1.42l1.32-1.15L279.07,284.88L279.07,284.88z\\\",\\n            \\\"name\\\": \\\"Antigua and Barbuda\\\"\\n        },\\n        \\\"dm\\\": {\\\"path\\\": \\\"M282.07,290.03l-1.06,0.98l0.79,1.6l1.5-0.44L282.07,290.03L282.07,290.03z\\\", \\\"name\\\": \\\"Dominica\\\"},\\n        \\\"lc\\\": {\\n            \\\"path\\\": \\\"M281.98,294.03l-0.71,1.51l1.15,1.24l1.5-0.8L281.98,294.03L281.98,294.03z\\\",\\n            \\\"name\\\": \\\"Saint Lucia\\\"\\n        },\\n        \\\"bb\\\": {\\n            \\\"path\\\": \\\"M282.07,297.85l-1.23,0.89l0.97,1.78l1.59-0.89L282.07,297.85L282.07,297.85z\\\",\\n            \\\"name\\\": \\\"Barbados\\\"\\n        },\\n        \\\"gd\\\": {\\n            \\\"path\\\": \\\"M280.57,301.31l-1.15,1.15l0.44,0.71h1.41l0.44-1.16L280.57,301.31L280.57,301.31z\\\",\\n            \\\"name\\\": \\\"Grenada\\\"\\n        },\\n        \\\"tt\\\": {\\n            \\\"path\\\": \\\"M282.24,304.78l-1.06,0.98l-1.15,0.18v1.42l2.12,1.95l0.88-1.42l0.53-1.6l-0.18-1.33L282.24,304.78L282.24,304.78z\\\",\\n            \\\"name\\\": \\\"Trinidad and Tobago\\\"\\n        },\\n        \\\"do\\\": {\\n            \\\"path\\\": \\\"M263.11,280.44l-5.29-3.46l-2.5-0.85l-0.84,6l0.88,1.69l1.15-1.33l3.35-0.89l2.91,0.62L263.11,280.44L263.11,280.44z\\\",\\n            \\\"name\\\": \\\"Dominican Republic\\\"\\n        },\\n        \\\"ht\\\": {\\n            \\\"path\\\": \\\"M250.86,275.38l3.44,0.36l-0.41,4.22l-0.34,2.22l-4.01-0.22l-0.71,1.07l-1.23-0.09l-0.44-2.31l4.23-0.35l-0.26-2.4l-1.94-0.8L250.86,275.38L250.86,275.38z\\\",\\n            \\\"name\\\": \\\"Haiti\\\"\\n        },\\n        \\\"fk\\\": {\\n            \\\"path\\\": \\\"M307.95,508.18l-2.63-0.29l-2.62,1.76l1.9,2.06L307.95,508.18L307.95,508.18M310.57,506.86l-0.87,2.79l-2.48,2.2l0.15,0.73l4.23-1.62l1.75-2.2L310.57,506.86L310.57,506.86z\\\",\\n            \\\"name\\\": \\\"Falkland Islands\\\"\\n        },\\n        \\\"is\\\": {\\n            \\\"path\\\": \\\"M406.36,117.31l-1.96-1.11l-2.64,1.67l-2.27,2.1l0.06,1.17l2.94,0.37l-0.18,2.1l-1.04,1.05l0.25,0.68l2.94,0.19v3.4l4.23,0.74l2.51,1.42l2.82,0.12l4.84-2.41l3.74-4.94l0.06-3.34l-2.27-1.92l-1.9-1.61l-0.86,0.62l-1.29,1.67l-1.47-0.19l-1.47-1.61l-1.9,0.18l-2.76,2.29l-1.66,1.79l-0.92-0.8l-0.06-1.98l0.92-0.62L406.36,117.31L406.36,117.31z\\\",\\n            \\\"name\\\": \\\"Iceland\\\"\\n        },\\n        \\\"no\\\": {\\n            \\\"path\\\": \\\"M488.26,53.96l-1.65-1.66l-3.66,1.78h-6.72L475.17,58l3.77,3.33l1.65-0.24l2.36-4.04l2,1.43l-1.42,2.85l-0.71,4.16l1.65,2.61l3.54-5.94l4.6-5.59l-1.77-1.54L488.26,53.96L488.26,53.96M490.26,46.83l-2.95,2.73l1.77,2.73h3.18l1.3,1.78l3.89,2.02l4.48-2.61l3.07-2.61l-1.06-2.14l-3.07-1.78l-2.24,2.02l-1.53-1.9l-1.18,0.12l-1.53,3.33l-2.24-2.26l-0.24-1.54L490.26,46.83L490.26,46.83M496.98,59.07l-2.36,2.14l-2,1.54l0.94,1.66l1.89,0.59l3.07-1.43l1.42-1.78l-1.3-2.14L496.98,59.07L496.98,59.07M515.46,102.14l2.02-1.48L517.3,99l-1.28-0.74l0.18-2.03h1.1v-1.11l-4.77-1.29l-7.15,0.74l-0.73,3.14L503,97.16l-1.1-1.85l-3.49,0.18L498.04,99l-1.65,0.74l-0.92-1.85l-7.34,5.91l1.47,1.66l-2.75,1.29l-6.24,12.38l-2.2,1.48l0.18,1.11l2.2,1.11l-0.55,2.4l-3.67-0.19l-1.1-1.29l-2.38,2.77l-1.47,1.11l-0.37,2.59l-1.28,0.74l-3.3,0.74l-1.65,5.18l1.1,8.5l1.28,3.88l1.47,1.48l3.3-0.18l4.77-4.62l1.83-3.14l0.55,4.62l3.12-5.54l0.18-15.53l2.54-1.6l0.76-8.57l7.7-11.09l3.67-1.29l1.65-2.03l5.5,1.29l2.75,1.66l0.92-4.62l4.59-2.77L515.46,102.14L515.46,102.14z\\\",\\n            \\\"name\\\": \\\"Norway\\\"\\n        },\\n        \\\"lk\\\": {\\n            \\\"path\\\": \\\"M680.54,308.05l0.25,2.72l0.25,1.98l-1.47,0.25l0.74,4.45l2.21,1.24l3.43-1.98l-0.98-4.69l0.25-1.73l-3.19-2.96L680.54,308.05L680.54,308.05z\\\",\\n            \\\"name\\\": \\\"Sri Lanka\\\"\\n        },\\n        \\\"cu\\\": {\\n            \\\"path\\\": \\\"M220.85,266.92v1.27l5.32,0.1l2.51-1.46l0.39,1.07l5.22,1.27l4.64,4.19l-1.06,1.46l0.19,1.66l3.87,0.97l3.87-1.75l1.74-1.75l-2.51-1.27l-12.95-7.6l-4.54-0.49L220.85,266.92L220.85,266.92z\\\",\\n            \\\"name\\\": \\\"Cuba\\\"\\n        },\\n        \\\"bs\\\": {\\n            \\\"path\\\": \\\"M239.61,259.13l-1.26-0.39l-0.1,2.43l1.55,1.56l1.06-1.56L239.61,259.13L239.61,259.13M242.12,262.93l-1.74,0.97l1.64,2.34l0.87-1.17L242.12,262.93L242.12,262.93M247.73,264.68l-1.84-0.1l0.19,1.17l1.35,1.95l1.16-1.27L247.73,264.68L247.73,264.68M246.86,262.35l-3-1.27l-0.58-3.02l1.16-0.49l1.16,2.34l1.16,0.88L246.86,262.35L246.86,262.35M243.96,256.21l-1.55-0.39l-0.29-1.95l-1.64-0.58l1.06-1.07l1.93,0.68l1.45,0.88L243.96,256.21L243.96,256.21z\\\",\\n            \\\"name\\\": \\\"Bahamas\\\"\\n        },\\n        \\\"jm\\\": {\\n            \\\"path\\\": \\\"M238.93,279.59l-3.48,0.88v0.97l2.03,1.17h2.13l1.35-1.56L238.93,279.59L238.93,279.59z\\\",\\n            \\\"name\\\": \\\"Jamaica\\\"\\n        },\\n        \\\"ec\\\": {\\n            \\\"path\\\": \\\"M230.2,335.85l-4.73,2.94l-0.34,4.36l-0.95,1.43l2.98,2.86l-1.29,1.41l0.3,3.6l5.33,1.27l8.07-9.55l-0.02-3.33l-3.87-0.25L230.2,335.85L230.2,335.85z\\\",\\n            \\\"name\\\": \\\"Ecuador\\\"\\n        },\\n        \\\"ca\\\": {\\n            \\\"path\\\": \\\"M203.73,35.89l0.22,4.02l-7.98,8.27l2,6.7l5.76-1.56l3.33-4.92l8.42-3.13l6.87-0.45l-5.32-5.81l-2.66,2.01l-2-0.67l-1.11-2.46l-2.44-2.46L203.73,35.89L203.73,35.89M214.15,24.05l-1.77,3.13l8.65,3.13l3.1-4.69l1.33,3.13h2.22l4.21-4.69l-5.1-1.34l-2-1.56l-2.66,2.68L214.15,24.05L214.15,24.05M229.23,30.31l-6.87,2.9v2.23l8.87,3.35l-2,2.23l1.33,2.9l5.54-2.46h4.66l2.22,3.57l3.77-3.8l-0.89-3.58l-3.1,1.12l-0.44-4.47l1.55-2.68h-1.55l-2.44,1.56l-1.11,0.89l0.67,3.13l-1.77,1.34l-2.66-0.22l-0.67-4.02L229.23,30.31L229.23,30.31M238.32,23.38l-0.67,2.23l4.21,2.01l3.1-1.79l-0.22-1.34L238.32,23.38L238.32,23.38M241.64,19.58l-3.1,1.12l0.22,1.56l6.87-0.45l-0.22-1.56L241.64,19.58L241.64,19.58M256.5,23.38l-0.44,1.56l-1.11,1.56v2.23l4.21-0.67l4.43,3.8h1.55v-3.8l-4.43-4.92L256.5,23.38L256.5,23.38M267.81,27.85l1.77,2.01l-1.55,2.68l1.11,2.9l4.88-2.68v-2.01l-2.88-3.35L267.81,27.85L267.81,27.85M274.24,22.71l0.22,3.57h5.99l1.55,1.34l-0.22,1.56l-5.32,0.67l3.77,5.14l5.1,0.89l7.09-3.13l-10.2-15.42l-3.1,2.01l0.22,2.68l-3.55-1.34L274.24,22.71L274.24,22.71M222.58,47.96l-8.42,2.23l-4.88,4.25l0.44,4.69l8.87,2.68l-2,4.47l-6.43-4.02l-1.77,3.35l4.21,2.9l-0.22,4.69l6.43,1.79l7.76-0.45l1.33-2.46l5.76,6.48l3.99-1.34l0.67-4.47l2.88,2.01l0.44-4.47l-3.55-2.23l0.22-14.07l-3.1-2.46L231.89,56L222.58,47.96L222.58,47.96M249.63,57.79l-2.88-1.34l-1.55,2.01l3.1,4.92l0.22,4.69l6.65-4.02v-5.81l2.44-2.46l-2.44-1.79h-3.99L249.63,57.79L249.63,57.79M263.82,55.78l-4.66,3.8l1.11,4.69h2.88l1.33-2.46l2,2.01l2-0.22l5.32-4.47L263.82,55.78L263.82,55.78M263.37,48.4l-1.11,2.23l4.88,1.79l1.33-2.01L263.37,48.4L263.37,48.4M260.49,39.91l-4.88,0.67l-2.88,2.68l5.32,0.22l-1.55,4.02l1.11,1.79l1.55-0.22l3.77-6.03L260.49,39.91L260.49,39.91M268.92,38.35l-2.66,0.89l0.44,3.57l4.43,2.9l0.22,2.23l-1.33,1.34l0.67,4.47l17.07,5.58l4.66,1.56l4.66-4.02l-5.54-4.47l-5.1,1.34l-7.09-0.67l-2.66-2.68l-0.67-7.37l-4.43-2.23L268.92,38.35L268.92,38.35M282.88,61.59L278,61.14l-5.76,2.23l-3.1,4.24l0.89,11.62l9.53,0.45l9.09,4.47l6.43,7.37l4.88-0.22l-1.33,6.92l-4.43,7.37l-4.88,2.23l-3.55-0.67l-1.77-1.56l-2.66,3.57l1.11,3.57l3.77,0.22l4.66-2.23l3.99,10.28l9.98,6.48l6.87-8.71l-5.76-9.38l3.33-3.8l4.66,7.82l8.42-7.37l-1.55-3.35l-5.76,1.79l-3.99-10.95l3.77-6.25l-7.54-8.04l-4.21,2.9l-3.99-8.71l-8.42,1.12l-2.22-10.5l-6.87,4.69l-0.67,5.81h-3.77l0.44-5.14L282.88,61.59L282.88,61.59M292.86,65.61l-1.77,1.79l1.55,2.46l7.32,0.89l-4.66-4.92L292.86,65.61L292.86,65.61M285.77,40.36v2.01l-4.88,1.12l1.33,2.23l5.54,2.23l6.21,0.67l4.43,3.13l4.43-2.46l-3.1-3.13h3.99l2.44-2.68l5.99-0.89v-1.34l-3.33-2.23l0.44-2.46l9.31,1.56l13.75-5.36l-5.1-1.56l1.33-1.79h10.64l1.77-1.79l-21.51-7.6l-5.1-1.79l-5.54,4.02l-6.21-5.14l-3.33-0.22l-0.67,4.25l-4.21-3.8l-4.88,1.56l0.89,2.46l7.32,1.56l-0.44,3.57l3.99,2.46l9.76-2.46l0.22,3.35l-7.98,3.8l-4.88-3.8l-4.43,0.45l4.43,6.26l-2.22,1.12l-3.33-2.9l-2.44,1.56l2.22,4.24h3.77l-0.89,4.02l-3.1-0.45l-3.99-4.25L285.77,40.36L285.77,40.36M266.01,101.85l-4.23,5.32l-0.26,5.86l3.7-2.13h4.49l3.17,2.93l2.91-2.4L266.01,101.85L266.01,101.85M317.52,171.05l-10.57,10.12l1.06,2.4l12.94,4.79l1.85-3.19l-1.06-5.32l-4.23,0.53l-2.38-2.66l3.96-3.99L317.52,171.05L317.52,171.05M158.22,48.66l1.99,3.01l1,4.02l4.98,1.25l3.49-3.76l2.99,1.51l8.47,0.75l5.98-2.51l1,8.28h3.49V57.7l3.49,0.25l8.72,10.29l5.73,3.51l-2.99,4.77l1.25,1.25L219,80.03l0.25,5.02l2.99,0.5l0.75-7.53l4.73-1.25l3.49,5.27l7.47,3.51l3.74,0.75l2.49-3.01l0.25-4.77l4.48-2.76l1.49,4.02l-3.99,7.03l0.5,3.51l2.24-3.51l4.48-4.02l0.25-5.27l-2.49-4.02l0.75-3.26l5.98-3.01l2.74,2.01l0.5,17.57l4.23-3.76l2.49,1.51l-3.49,6.02l4.48,1l6.48-10.04l5.48,5.77l-2.24,10.29l-5.48,3.01l-5.23-2.51l-9.46,2.01l1,3.26l-2.49,4.02l-7.72,1.76l-8.72,6.78l-7.72,10.29l-1,3.26l5.23,2.01l1.99,5.02l7.22,7.28l11.46,5.02l-2.49,11.54l-0.25,3.26l2.99,2.01l3.99-5.27l0.5-10.04l6.23-0.25l2.99-5.77l0.5-8.78l7.97-15.56l9.96,3.51l5.23,7.28l-2.24,7.28l3.99,2.26l9.71-6.53l2.74,17.82l8.97,10.79l0.25,5.52l-9.96,2.51l-4.73,5.02l-9.96-2.26l-4.98-0.25l-8.72,6.78l5.23-1.25l6.48-1.25l1.25,1.51l-1.74,5.52l0.25,5.02l2.99,2.01l2.99-0.75l1.5-2.26h1.99l-3.24,6.02l-6.23,0.25l-2.74,4.02h-3.49l-1-3.01l4.98-5.02l-5.98,2.01l-0.27-8.53l-1.72-1l-5.23,2.26l-0.5,4.27h-11.96l-10.21,7.03l-13.7,4.52l-1.49-2.01l6.9-10.3l-3.92-3.77l-2.49-4.78l-5.07-3.87l-5.44-0.45l-9.75-6.83l-70.71-11.62l-1.17-4.79l-6.48-6.02v-5.02l1-4.52l-0.5-2.51l-2.49-2.51l-0.5-4.02l6.48-4.52l-3.99-21.58l-5.48-0.25l-4.98-6.53L158.22,48.66L158.22,48.66M133.83,128.41l-1.7,3.26l0.59,2.31l1.11,0.69l-0.26,0.94l-1.19,0.34l0.34,3.43l1.28,1.29l1.02-1.11l-1.28-3.34l0.76-2.66l1.87-2.49l-1.36-2.31L133.83,128.41L133.83,128.41M139.45,147.95l-1.53,0.6l2.81,3.26l0.68,3.86l2.81,3l2.38-0.43v-3.94l-2.89-1.8L139.45,147.95L139.45,147.95z\\\",\\n            \\\"name\\\": \\\"Canada\\\"\\n        },\\n        \\\"gt\\\": {\\n            \\\"path\\\": \\\"M194.88,291.52l5.93,4.34l5.98-7.43l-1.02-1.54l-2.04-0.07v-4.35l-1.53-0.93l-4.63,1.38l1.77,4.08L194.88,291.52L194.88,291.52z\\\",\\n            \\\"name\\\": \\\"Guatemala\\\"\\n        },\\n        \\\"hn\\\": {\\n            \\\"path\\\": \\\"M207.55,288.78l9.24-0.35l2.74,3.26l-1.71-0.39l-3.29,0.14l-4.3,4.04l-1.84,4.09l-1.21-0.64l-0.01-4.48l-2.66-1.78L207.55,288.78L207.55,288.78z\\\",\\n            \\\"name\\\": \\\"Honduras\\\"\\n        },\\n        \\\"sv\\\": {\\n            \\\"path\\\": \\\"M201.65,296.27l4.7,2.34l-0.07-3.71l-2.41-1.47L201.65,296.27L201.65,296.27z\\\",\\n            \\\"name\\\": \\\"El Salvador\\\"\\n        },\\n        \\\"ni\\\": {\\n            \\\"path\\\": \\\"M217.74,292.11l2.19,0.44l0.07,4.49l-2.55,7.28l-6.87-0.68l-1.53-3.51l2.04-4.26l3.87-3.6L217.74,292.11L217.74,292.11z\\\",\\n            \\\"name\\\": \\\"Nicaragua\\\"\\n        },\\n        \\\"cr\\\": {\\n            \\\"path\\\": \\\"M217.38,304.98l1.39,2.72l1.13,1.5l-1.52,4.51l-2.9-2.04l-4.74-4.34v-2.87L217.38,304.98L217.38,304.98z\\\",\\n            \\\"name\\\": \\\"Costa Rica\\\"\\n        },\\n        \\\"pa\\\": {\\n            \\\"path\\\": \\\"M220.59,309.61l-1.46,4.56l4.82,1.25l2.99,0.59l0.51-3.53l3.21-1.62l2.85,1.47l1.12,1.79l1.36-0.16l1.07-3.25l-3.56-1.47l-2.7-1.47l-2.7,1.84l-3.21,1.62l-3.28-1.32L220.59,309.61L220.59,309.61z\\\",\\n            \\\"name\\\": \\\"Panama\\\"\\n        },\\n        \\\"co\\\": {\\n            \\\"path\\\": \\\"M253.73,299.78l-2.06-0.21l-13.62,11.23l-1.44,3.95l-1.86,0.21l0.83,8.73l-4.75,11.65l5.16,4.37l6.61,0.42l4.54,6.66l6.6,0.21l-0.21,4.99H256l2.68-9.15l-2.48-3.12l0.62-5.82l5.16-0.42l-0.62-13.52l-11.56-3.74l-2.68-7.28L253.73,299.78L253.73,299.78z\\\",\\n            \\\"name\\\": \\\"Colombia\\\"\\n        },\\n        \\\"ve\\\": {\\n            \\\"path\\\": \\\"M250.46,305.92l0.44,2.59l3.25,1.03l0.74-4.77l3.43-3.55l3.43,4.02l7.89,2.15l6.68-1.4l4.55,5.61l3.43,2.15l-3.76,5.73l1.26,4.34l-2.15,2.66l-2.23,1.87l-4.83-2.43l-1.11,1.12v3.46l3.53,1.68l-2.6,2.81l-2.6,2.81l-3.43-0.28l-3.45-3.79l-0.73-14.26l-11.78-4.02l-2.14-6.27L250.46,305.92L250.46,305.92z\\\",\\n            \\\"name\\\": \\\"Venezuela\\\"\\n        },\\n        \\\"gy\\\": {\\n            \\\"path\\\": \\\"M285.05,314.13l7.22,6.54l-2.87,3.32l-0.23,1.97l3.77,3.89l-0.09,3.74l-6.56,2.5l-3.93-5.31l0.84-6.38l-1.68-4.75L285.05,314.13L285.05,314.13z\\\",\\n            \\\"name\\\": \\\"Guyana\\\"\\n        },\\n        \\\"sr\\\": {\\n            \\\"path\\\": \\\"M293.13,321.14l2.04,1.87l3.16-1.96l2.88,0.09l-0.37,1.12l-1.21,2.52l-0.19,6.27l-5.75,2.34l0.28-4.02l-3.71-3.46l0.19-1.78L293.13,321.14L293.13,321.14z\\\",\\n            \\\"name\\\": \\\"Suriname\\\"\\n        },\\n        \\\"gf\\\": {\\n            \\\"path\\\": \\\"M302.13,321.8l5.85,3.65l-3.06,6.08l-1.11,1.4l-3.25-1.87l0.09-6.55L302.13,321.8L302.13,321.8z\\\",\\n            \\\"name\\\": \\\"French Guiana\\\"\\n        },\\n        \\\"pe\\\": {\\n            \\\"path\\\": \\\"M225.03,349.52l-1.94,1.96l0.13,3.13l16.94,30.88l17.59,11.34l2.72-4.56l0.65-10.03l-1.42-6.25l-4.79-8.08l-2.85,0.91l-1.29,1.43l-5.69-6.52l1.42-7.69l6.6-4.3l-0.52-4.04l-6.72-0.26l-3.49-5.86l-1.94-0.65l0.13,3.52l-8.66,10.29l-6.47-1.56L225.03,349.52L225.03,349.52z\\\",\\n            \\\"name\\\": \\\"Peru\\\"\\n        },\\n        \\\"bo\\\": {\\n            \\\"path\\\": \\\"M258.71,372.79l8.23-3.59l2.72,0.26l1.81,7.56l12.54,4.17l2.07,6.39l5.17,0.65l2.2,5.47l-1.55,4.95l-8.41,0.65l-3.1,7.95l-6.6-0.13l-2.07-0.39l-3.81,3.7l-1.88-0.18l-6.47-14.99l1.79-2.68l0.63-10.6l-1.6-6.31L258.71,372.79L258.71,372.79z\\\",\\n            \\\"name\\\": \\\"Bolivia\\\"\\n        },\\n        \\\"py\\\": {\\n            \\\"path\\\": \\\"M291.76,399.51l2.2,2.4l-0.26,5.08l6.34-0.39l4.79,6.13l-0.39,5.47l-3.1,4.69l-6.34,0.26l-0.26-2.61l1.81-4.3l-6.21-3.91h-5.17l-3.88-4.17l2.82-8.06L291.76,399.51L291.76,399.51z\\\",\\n            \\\"name\\\": \\\"Paraguay\\\"\\n        },\\n        \\\"uy\\\": {\\n            \\\"path\\\": \\\"M300.36,431.93l-2.05,2.19l0.85,11.78l6.44,1.87l8.19-8.21L300.36,431.93L300.36,431.93z\\\",\\n            \\\"name\\\": \\\"Uruguay\\\"\\n        },\\n        \\\"ar\\\": {\\n            \\\"path\\\": \\\"M305.47,418.2l1.94,1.82l-7.37,10.95l-2.59,2.87l0.9,12.51l5.69,6.91l-4.78,8.34l-3.62,1.56h-4.14l1.16,6.51l-6.47,2.22l1.55,5.47l-3.88,12.38l4.79,3.91l-2.59,6.38l-4.4,6.91l2.33,4.82l-5.69,0.91l-4.66-5.73l-0.78-17.85l-7.24-30.32l2.19-10.6l-4.66-13.55l3.1-17.59l2.85-3.39l-0.7-2.57l3.66-3.34l8.16,0.56l4.56,4.87l5.27,0.09l5.4,3.3l-1.59,3.72l0.38,3.76l7.65-0.36L305.47,418.2L305.47,418.2M288.92,518.79l0.26,5.73l4.4-0.39l3.75-2.48l-6.34-1.3L288.92,518.79L288.92,518.79z\\\",\\n            \\\"name\\\": \\\"Argentina\\\"\\n        },\\n        \\\"cl\\\": {\\n            \\\"path\\\": \\\"M285.04,514.1l-4.27,9.38l7.37,0.78l0.13-6.25L285.04,514.1L285.04,514.1M283.59,512.63l-3.21,3.55l-0.39,4.17l-6.21-3.52l-6.6-9.51l-1.94-3.39l2.72-3.52l-0.26-4.43l-3.1-1.3l-2.46-1.82l0.52-2.48l3.23-0.91l0.65-14.33l-5.04-2.87l-3.29-74.59l0.85-1.48l6.44,14.85l2.06,0.04l0.67,2.37l-2.74,3.32l-3.15,17.87l4.48,13.76l-2.07,10.42l7.3,30.64l0.77,17.92l5.23,6.05L283.59,512.63L283.59,512.63M262.28,475.14l-1.29,1.95l0.65,3.39l1.29,0.13l0.65-4.3L262.28,475.14L262.28,475.14z\\\",\\n            \\\"name\\\": \\\"Chile\\\"\\n        },\\n        \\\"br\\\": {\\n            \\\"path\\\": \\\"M314.24,438.85l6.25-12.02l0.23-10.1l11.66-7.52h6.53l5.13-8.69l0.93-16.68l-2.1-4.46l12.36-11.28l0.47-12.45l-16.79-8.22l-20.28-6.34l-9.56-0.94l2.57-5.4l-0.7-8.22l-2.09-0.69l-3.09,6.14l-1.62,2.03l-4.16-1.84l-13.99,4.93l-4.66-5.87l0.75-6.13l-4.4,4.48l-4.86-2.62l-0.49,0.69l0.01,2.13l4.19,2.25l-6.29,6.63l-3.97-0.04l-4.02-4.09l-4.55,0.14l-0.56,4.86l2.61,3.17l-3.08,9.87l-3.6,0.28l-5.73,3.62l-1.4,7.11l4.97,5.32l0.91-1.03l3.49-0.94l2.98,5.02l8.53-3.66l3.31,0.19l2.28,8.07l12.17,3.86l2.1,6.44l5.18,0.62l2.47,6.15l-1.67,5.47l2.18,2.86l-0.32,4.26l5.84-0.55l5.35,6.76l-0.42,4.75l3.17,2.68l-7.6,11.51L314.24,438.85L314.24,438.85z\\\",\\n            \\\"name\\\": \\\"Brazil\\\"\\n        },\\n        \\\"bz\\\": {\\\"path\\\": \\\"M204.56,282.4l-0.05,3.65h0.84l2.86-5.34h-1.94L204.56,282.4L204.56,282.4z\\\", \\\"name\\\": \\\"Belize\\\"},\\n        \\\"mn\\\": {\\n            \\\"path\\\": \\\"M673.8,170.17l5.82-7.72l6.99,3.23l4.75,1.27l5.82-5.34l-3.95-2.91l2.6-3.67l7.76,2.74l2.69,4.41l4.86,0.13l2.54-1.89l5.23-0.21l1.14,1.94l8.69,0.44l5.5-5.61l7.61,0.8l-0.44,7.64l3.33,0.76l4.09-1.86l4.33,2.14l-0.1,1.08l-3.14,0.09l-3.27,6.86l-2.54,0.25l-9.88,12.91l-10.09,4.45l-6.31,0.49l-5.24-3.38l-6.7,3.58l-6.6-2.05l-1.87-4.79l-12.5-0.88l-6.4-10.85l-3.11-0.2L673.8,170.17L673.8,170.17z\\\",\\n            \\\"name\\\": \\\"Mongolia\\\"\\n        },\\n        \\\"kp\\\": {\\n            \\\"path\\\": \\\"M778.28,194.27l1.84,0.77l0.56,6.44l3.65,0.21l3.44-4.03l-1.19-1.06l0.14-4.32l3.16-3.82l-1.61-2.9l1.05-1.2l0.58-3l-1.83-0.83l-1.56,0.79l-1.93,5.86l-3.12-0.27l-3.61,4.26L778.28,194.27L778.28,194.27z\\\",\\n            \\\"name\\\": \\\"North Korea\\\"\\n        },\\n        \\\"kr\\\": {\\n            \\\"path\\\": \\\"M788.34,198.2l6.18,5.04l1.05,4.88l-0.21,2.62l-3.02,3.4l-2.6,0.14l-2.95-6.37l-1.12-3.04l1.19-0.92l-0.28-1.27l-1.47-0.66L788.34,198.2L788.34,198.2z\\\",\\n            \\\"name\\\": \\\"South Korea\\\"\\n        },\\n        \\\"kz\\\": {\\n            \\\"path\\\": \\\"M576.69,188.62l4.1-1.75l4.58-0.16l0.32,7h-2.68l-2.05,3.34l2.68,4.45l3.95,2.23l0.36,2.55l1.45-0.48l1.34-1.59l2.21,0.48l1.11,2.23h2.84v-2.86l-1.74-5.09l-0.79-4.13l5.05-2.23l6.79,1.11l4.26,4.29l9.63-0.95l5.37,7.63l6.31,0.32l1.74-2.86l2.21-0.48l0.32-3.18l3.31-0.16l1.74,2.07l1.74-4.13l14.99,2.07l2.52-3.34l-4.26-5.25l5.68-12.4l4.58,0.32l3.16-7.63l-6.31-0.64l-3.63-3.5l-10,1.16l-12.88-12.45l-4.54,4.03l-13.77-6.25l-16.89,8.27l-0.47,5.88l3.95,4.61l-7.7,4.35l-9.99-0.22l-2.09-3.07l-7.83-0.43l-7.42,4.77l-0.16,6.52L576.69,188.62L576.69,188.62z\\\",\\n            \\\"name\\\": \\\"Kazakhstan\\\"\\n        },\\n        \\\"tm\\\": {\\n            \\\"path\\\": \\\"M593.85,207.59l-0.62,2.63h-4.15v3.56l4.46,2.94l-1.38,4.03v1.86l1.85,0.31l2.46-3.25l5.54-1.24l11.84,4.49l0.15,3.25l6.61,0.62l7.38-7.75l-0.92-2.48l-4.92-1.08l-13.84-8.99l-0.62-3.25h-5.23l-2.31,4.34h-2.31L593.85,207.59L593.85,207.59z\\\",\\n            \\\"name\\\": \\\"Turkmenistan\\\"\\n        },\\n        \\\"uz\\\": {\\n            \\\"path\\\": \\\"M628.92,219.06l3.08,0.16v-5.27l-2.92-1.7l4.92-6.2h2l2,2.33l5.23-2.01l-7.23-2.48l-0.28-1.5l-1.72,0.42l-1.69,2.94l-7.29-0.24l-5.35-7.57l-9.4,0.93l-4.48-4.44l-6.2-1.05l-4.5,1.83l2.61,8.68l0.03,2.92l1.9,0.04l2.33-4.44l6.2,0.08l0.92,3.41l13.29,8.82l5.14,1.18L628.92,219.06L628.92,219.06z\\\",\\n            \\\"name\\\": \\\"Uzbekistan\\\"\\n        },\\n        \\\"tj\\\": {\\n            \\\"path\\\": \\\"M630.19,211.84l4.11-5.1h1.55l0.54,1.14l-1.9,1.38v1.14l1.25,0.9l6.01,0.36l1.96-0.84l0.89,0.18l0.6,1.92l3.57,0.36l1.79,3.78l-0.54,1.14l-0.71,0.06l-0.71-1.44l-1.55-0.12l-2.68,0.36l-0.18,2.52l-2.68-0.18l0.12-3.18l-1.96-1.92l-2.98,2.46l0.06,1.62l-2.62,0.9h-1.55l0.12-5.58L630.19,211.84L630.19,211.84z\\\",\\n            \\\"name\\\": \\\"Tajikistan\\\"\\n        },\\n        \\\"kg\\\": {\\n            \\\"path\\\": \\\"M636.81,199.21l-0.31,2.53l0.25,1.56l8.7,2.92l-7.64,3.08l-0.87-0.72l-1.65,1.06l0.08,0.58l0.88,0.4l5.36,0.14l2.72-0.82l3.49-4.4l4.37,0.76l5.27-7.3l-14.1-1.92l-1.95,4.73l-2.46-2.64L636.81,199.21L636.81,199.21z\\\",\\n            \\\"name\\\": \\\"Kyrgyz Republic\\\"\\n        },\\n        \\\"af\\\": {\\n            \\\"path\\\": \\\"M614.12,227.05l1.59,12.46l3.96,0.87l0.37,2.24l-2.84,2.37l5.29,4.27l10.28-3.7l0.82-4.38l6.47-4.04l2.48-9.36l1.85-1.99l-1.92-3.34l6.26-3.87l-0.8-1.12l-2.89,0.18l-0.26,2.66l-3.88-0.04l-0.07-3.55l-1.25-1.49l-2.1,1.91l0.06,1.75l-3.17,1.2l-5.85-0.37l-7.6,7.96L614.12,227.05L614.12,227.05z\\\",\\n            \\\"name\\\": \\\"Afghanistan\\\"\\n        },\\n        \\\"pk\\\": {\\n            \\\"path\\\": \\\"M623.13,249.84l2.6,3.86l-0.25,1.99l-3.46,1.37l-0.25,3.24h3.96l1.36-1.12h7.54l6.8,5.98l0.87-2.87h5.07l0.12-3.61l-5.19-4.98l1.11-2.74l5.32-0.37l7.17-14.95l-3.96-3.11l-1.48-5.23l9.64-0.87l-5.69-8.1l-3.03-0.82l-1.24,1.5l-0.93,0.07l-5.69,3.61l1.86,3.12l-2.1,2.24l-2.6,9.59l-6.43,4.11l-0.87,4.49L623.13,249.84L623.13,249.84z\\\",\\n            \\\"name\\\": \\\"Pakistan\\\"\\n        },\\n        \\\"in\\\": {\\n            \\\"path\\\": \\\"M670.98,313.01l4.58-2.24l2.72-9.84l-0.12-12.08l15.58-16.82v-3.99l3.21-1.25l-0.12-4.61l-3.46-6.73l1.98-3.61l4.33,3.99l5.56,0.25v2.24l-1.73,1.87l0.37,1l2.97,0.12l0.62,3.36h0.87l2.23-3.99l1.11-10.46l3.71-2.62l0.12-3.61l-1.48-2.87l-2.35-0.12l-9.2,6.08l0.58,3.91l-6.46-0.02l-2.28-2.79l-1.24,0.16l0.42,3.88l-13.97-1l-8.66-3.86l-0.46-4.75l-5.77-3.58l-0.07-7.37l-3.96-4.53l-9.1,0.87l0.99,3.96l4.46,3.61l-7.71,15.78l-5.16,0.39l-0.85,1.9l5.08,4.7l-0.25,4.75l-5.19-0.08l-0.56,2.36l4.31-0.19l0.12,1.87l-3.09,1.62l1.98,3.74l3.83,1.25l2.35-1.74l1.11-3.11l1.36-0.62l1.61,1.62l-0.49,3.99l-1.11,1.87l0.25,3.24L670.98,313.01L670.98,313.01z\\\",\\n            \\\"name\\\": \\\"India\\\"\\n        },\\n        \\\"np\\\": {\\n            \\\"path\\\": \\\"M671.19,242.56l0.46,4.27l8.08,3.66l12.95,0.96l-0.49-3.13l-8.65-2.38l-7.34-4.37L671.19,242.56L671.19,242.56z\\\",\\n            \\\"name\\\": \\\"Nepal\\\"\\n        },\\n        \\\"bt\\\": {\\\"path\\\": \\\"M695.4,248.08l1.55,2.12l5.24,0.04l-0.53-2.9L695.4,248.08L695.4,248.08z\\\", \\\"name\\\": \\\"Bhutan\\\"},\\n        \\\"bd\\\": {\\n            \\\"path\\\": \\\"M695.57,253.11l-1.31,2.37l3.4,6.46l0.1,5.04l0.62,1.35l3.99,0.07l2.26-2.17l1.64,0.99l0.33,3.07l1.31-0.82l0.08-3.92l-1.1-0.13l-0.69-3.33l-2.78-0.1l-0.69-1.85l1.7-2.27l0.03-1.12h-4.94L695.57,253.11L695.57,253.11z\\\",\\n            \\\"name\\\": \\\"Bangladesh\\\"\\n        },\\n        \\\"mm\\\": {\\n            \\\"path\\\": \\\"M729.44,303.65l-2.77-4.44l2.01-2.82l-1.9-3.49l-1.79-0.34l-0.34-5.86l-2.68-5.19l-0.78,1.24l-1.79,3.04l-2.24,0.34l-1.12-1.47l-0.56-3.95l-1.68-3.16l-6.84-6.45l1.68-1.11l0.31-4.67l2.5-4.2l1.08-10.45l3.62-2.47l0.12-3.81l2.17,0.72l3.42,4.95l-2.54,5.44l1.71,4.27l4.23,1.66l0.77,4.65l5.68,0.88l-1.57,2.71l-7.16,2.82l-0.78,4.62l5.26,6.76l0.22,3.61l-1.23,1.24l0.11,1.13l3.92,5.75l0.11,5.97L729.44,303.65L729.44,303.65z\\\",\\n            \\\"name\\\": \\\"Myanmar\\\"\\n        },\\n        \\\"th\\\": {\\n            \\\"path\\\": \\\"M730.03,270.47l3.24,4.17v5.07l1.12,0.56l5.15-2.48l1.01,0.34l6.15,7.1l-0.22,4.85l-2.01-0.34l-1.79-1.13l-1.34,0.11l-2.35,3.94l0.45,2.14l1.9,1.01l-0.11,2.37l-1.34,0.68l-4.59-3.16v-2.82l-1.9-0.11l-0.78,1.24l-0.4,12.62l2.97,5.42l5.26,5.07l-0.22,1.47l-2.8-0.11l-2.57-3.83h-2.69l-3.36-2.71l-1.01-2.82l1.45-2.37l0.5-2.14l1.58-2.8l-0.07-6.44l-3.86-5.58l-0.16-0.68l1.25-1.26l-0.29-4.43l-5.14-6.51l0.6-3.75L730.03,270.47L730.03,270.47z\\\",\\n            \\\"name\\\": \\\"Thailand\\\"\\n        },\\n        \\\"kh\\\": {\\n            \\\"path\\\": \\\"M740.48,299.47l4.09,4.37l7.61-5.64l0.67-8.9l-3.93,2.71l-2.04-1.14l-2.77-0.37l-1.55-1.09l-0.75,0.04l-2.03,3.33l0.33,1.54l2.06,1.15l-0.25,3.13L740.48,299.47L740.48,299.47z\\\",\\n            \\\"name\\\": \\\"Cambodia\\\"\\n        },\\n        \\\"la\\\": {\\n            \\\"path\\\": \\\"M735.47,262.93l-2.42,1.23l-2.01,5.86l3.36,4.28l-0.56,4.73l0.56,0.23l5.59-2.71l7.5,8.38l-0.18,5.28l1.63,0.88l4.03-3.27l-0.33-2.59l-11.63-11.05l0.11-1.69l1.45-1.01l-1.01-2.82l-4.81-0.79L735.47,262.93L735.47,262.93z\\\",\\n            \\\"name\\\": \\\"Lao People's Democratic Republic\\\"\\n        },\\n        \\\"vn\\\": {\\n            \\\"path\\\": \\\"M745.06,304.45l1.19,1.87l0.22,2.14l3.13,0.34l3.8-5.07l3.58-1.01l1.9-5.18l-0.89-8.34l-3.69-5.07l-3.89-3.11l-4.95-8.5l3.55-5.94l-5.08-5.83l-4.07-0.18l-3.66,1.97l1.09,4.71l4.88,0.86l1.31,3.63l-1.72,1.12l0.11,0.9l11.45,11.2l0.45,3.29l-0.69,10.4L745.06,304.45L745.06,304.45z\\\",\\n            \\\"name\\\": \\\"Vietnam\\\"\\n        },\\n        \\\"ge\\\": {\\n            \\\"path\\\": \\\"M555.46,204.16l3.27,4.27l4.08,1.88l2.51-0.01l4.31-1.17l1.08-1.69l-12.75-4.77L555.46,204.16L555.46,204.16z\\\",\\n            \\\"name\\\": \\\"Georgia\\\"\\n        },\\n        \\\"am\\\": {\\n            \\\"path\\\": \\\"M569.72,209.89l4.8,6.26l-1.41,1.65l-3.4-0.59l-4.22-3.78l0.23-2.48L569.72,209.89L569.72,209.89z\\\",\\n            \\\"name\\\": \\\"Armenia\\\"\\n        },\\n        \\\"az\\\": {\\n            \\\"path\\\": \\\"M571.41,207.72l-1.01,1.72l4.71,6.18l1.64-0.53l2.7,2.83l1.17-4.96l2.93,0.47l-0.12-1.42l-4.82-4.22l-0.92,2.48L571.41,207.72L571.41,207.72z\\\",\\n            \\\"name\\\": \\\"Azerbaijan\\\"\\n        },\\n        \\\"ir\\\": {\\n            \\\"path\\\": \\\"M569.65,217.95l-1.22,1.27l0.12,2.01l1.52,2.13l5.39,5.9l-0.82,2.36h-0.94l-0.47,2.36l3.05,3.9l2.81,0.24l5.63,7.79l3.16,0.24l2.46,1.77l0.12,3.54l9.73,5.67h3.63l2.23-1.89l2.81-0.12l1.64,3.78l10.51,1.46l0.31-3.86l3.48-1.26l0.16-1.38l-2.77-3.78l-6.17-4.96l3.24-2.95l-0.23-1.3l-4.06-0.63l-1.72-13.7l-0.2-3.15l-11.01-4.21l-4.88,1.1l-2.73,3.35l-2.42-0.16l-0.7,0.59l-5.39-0.35l-6.8-4.96l-2.53-2.77l-1.16,0.28l-2.09,2.39L569.65,217.95L569.65,217.95z\\\",\\n            \\\"name\\\": \\\"Iran\\\"\\n        },\\n        \\\"tr\\\": {\\n            \\\"path\\\": \\\"M558.7,209.19l-2.23,2.36l-8.2-0.24l-4.92-2.95l-4.8-0.12l-5.51,3.9l-5.16,0.24l-0.47,2.95h-5.86l-2.34,2.13v1.18l1.41,1.18v1.3l-0.59,1.54l0.59,1.3l1.88-0.94l1.88,2.01l-0.47,1.42l-0.7,0.95l1.05,1.18l5.16,1.06l3.63-1.54v-2.24l1.76,0.35l4.22,2.48l4.57-0.71l1.99-1.89l1.29,0.47v2.13h1.76l1.52-2.95l13.36-1.42l5.83-0.71l-1.54-2.02l-0.03-2.73l1.17-1.4l-4.26-3.42l0.23-2.95h-2.34L558.7,209.19L558.7,209.19M523.02,209.7l-0.16,3.55l3.1-0.95l1.42-0.95l-0.42-1.54l-1.47-1.17L523.02,209.7L523.02,209.7z\\\",\\n            \\\"name\\\": \\\"Turkey\\\"\\n        },\\n        \\\"om\\\": {\\n            \\\"path\\\": \\\"M598.38,280.84l7.39-4.26l1.31-6.25l-1.62-0.93l0.67-6.7l1.41-0.82l1.51,2.37l8.99,4.7v2.61l-10.89,16.03l-5.01,0.17L598.38,280.84L598.38,280.84z\\\",\\n            \\\"name\\\": \\\"Oman\\\"\\n        },\\n        \\\"ae\\\": {\\n            \\\"path\\\": \\\"M594.01,264.94l0.87,3.48l9.86,0.87l0.69-7.14l1.9-1.04l0.52-2.61l-3.11,0.87l-3.46,5.23L594.01,264.94L594.01,264.94z\\\",\\n            \\\"name\\\": \\\"United Arab Emirates\\\"\\n        },\\n        \\\"qa\\\": {\\n            \\\"path\\\": \\\"M592.63,259.02l-0.52,4.01l1.54,1.17l1.4-0.13l0.52-5.05l-1.21-0.87L592.63,259.02L592.63,259.02z\\\",\\n            \\\"name\\\": \\\"Qatar\\\"\\n        },\\n        \\\"kw\\\": {\\n            \\\"path\\\": \\\"M583.29,247.17l-2.25-1.22l-1.56,1.57l0.17,3.14l3.63,1.39L583.29,247.17L583.29,247.17z\\\",\\n            \\\"name\\\": \\\"Kuwait\\\"\\n        },\\n        \\\"sa\\\": {\\n            \\\"path\\\": \\\"M584,253.24l7.01,9.77l2.26,1.8l1.01,4.38l10.79,0.85l1.22,0.64l-1.21,5.4l-7.09,4.18l-10.37,3.14l-5.53,5.4l-6.57-3.83l-3.98,3.48L566,279.4l-3.8-1.74l-1.38-2.09v-4.53l-13.83-16.72l-0.52-2.96h3.98l4.84-4.18l0.17-2.09l-1.38-1.39l2.77-2.26l5.88,0.35l10.03,8.36l5.92-0.27l0.38,1.46L584,253.24L584,253.24z\\\",\\n            \\\"name\\\": \\\"Saudi Arabia\\\"\\n        },\\n        \\\"sy\\\": {\\n            \\\"path\\\": \\\"M546.67,229.13l-0.35,2.54l2.82,1.18l-0.12,7.04l2.82-0.06l2.82-2.13l1.06-0.18l6.4-5.09l1.29-7.39l-12.79,1.3l-1.35,2.96L546.67,229.13L546.67,229.13z\\\",\\n            \\\"name\\\": \\\"Syrian Arab Republic\\\"\\n        },\\n        \\\"iq\\\": {\\n            \\\"path\\\": \\\"M564.31,225.03l-1.56,7.71l-6.46,5.38l0.41,2.54l6.31,0.43l10.05,8.18l5.62-0.16l0.15-1.89l2.06-2.21l2.88,1.63l0.38-0.36l-5.57-7.41l-2.64-0.16l-3.51-4.51l0.7-3.32l1.07-0.14l0.37-1.47l-4.78-5.03L564.31,225.03L564.31,225.03z\\\",\\n            \\\"name\\\": \\\"Iraq\\\"\\n        },\\n        \\\"jo\\\": {\\n            \\\"path\\\": \\\"M548.9,240.78l-2.46,8.58l-0.11,1.31h3.87l4.33-3.82l0.11-1.45l-1.77-1.81l3.17-2.63l-0.46-2.44l-0.87,0.2l-2.64,1.89L548.9,240.78L548.9,240.78z\\\",\\n            \\\"name\\\": \\\"Jordan\\\"\\n        },\\n        \\\"lb\\\": {\\n            \\\"path\\\": \\\"M546.2,232.44l0.06,1.95l-0.82,2.96l2.82,0.24l0.18-4.2L546.2,232.44L546.2,232.44z\\\",\\n            \\\"name\\\": \\\"Lebanon\\\"\\n        },\\n        \\\"il\\\": {\\n            \\\"path\\\": \\\"M545.32,238.06l-1.58,5.03l2.05,6.03l2.35-8.81v-1.89L545.32,238.06L545.32,238.06z\\\",\\n            \\\"name\\\": \\\"Israel\\\"\\n        },\\n        \\\"cy\\\": {\\n            \\\"path\\\": \\\"M543.21,229.84l1.23,0.89l-3.81,3.61l-1.82-0.06l-1.35-0.95l0.18-1.77l2.76-0.18L543.21,229.84L543.21,229.84z\\\",\\n            \\\"name\\\": \\\"Cyprus\\\"\\n        },\\n        \\\"gb\\\": {\\n            \\\"path\\\": \\\"M446.12,149.08l-1.83,2.77l0.73,1.11h4.22v1.85l-1.1,1.48l0.73,3.88l2.38,4.62l1.83,4.25l2.93,1.11l1.28,2.22l-0.18,2.03l-1.83,1.11l-0.18,0.92l1.28,0.74l-1.1,1.48l-2.57,1.11l-4.95-0.55l-7.71,3.51l-2.57-1.29l7.34-4.25l-0.92-0.55l-3.85-0.37l2.38-3.51l0.37-2.96l3.12-0.37l-0.55-5.73l-3.67-0.18l-1.1-1.29l0.18-4.25l-2.2,0.18l2.2-7.39l4.04-2.96L446.12,149.08L446.12,149.08M438.42,161.47l-3.3,0.37l-0.18,2.96l2.2,1.48l2.38-0.55l0.92-1.66L438.42,161.47L438.42,161.47z\\\",\\n            \\\"name\\\": \\\"United Kingdom\\\"\\n        },\\n        \\\"ie\\\": {\\n            \\\"path\\\": \\\"M439.51,166.55l-0.91,6l-8.07,2.96h-2.57l-1.83-1.29v-1.11l4.04-2.59l-1.1-2.22l0.18-3.14l3.49,0.18l1.6-3.76l-0.21,3.34l2.71,2.15L439.51,166.55L439.51,166.55z\\\",\\n            \\\"name\\\": \\\"Ireland\\\"\\n        },\\n        \\\"se\\\": {\\n            \\\"path\\\": \\\"M497.72,104.58l1.96,1.81h3.67l2.02,3.88l0.55,6.65l-4.95,3.51v3.51l-3.49,4.81l-2.02,0.18l-2.75,4.62l0.18,4.44l4.77,3.51l-0.37,2.03l-1.83,2.77l-2.75,2.4l0.18,7.95l-4.22,1.48l-1.47,3.14h-2.02l-1.1-5.54l-4.59-7.04l3.77-6.31l0.26-15.59l2.6-1.43l0.63-8.92l7.41-10.61L497.72,104.58L497.72,104.58M498.49,150.17l-2.11,1.67l1.06,2.45l1.87-1.82L498.49,150.17L498.49,150.17z\\\",\\n            \\\"name\\\": \\\"Sweden\\\"\\n        },\\n        \\\"fi\\\": {\\n            \\\"path\\\": \\\"M506.79,116.94l2.07,0.91l1.28,2.4l-1.28,1.66l-6.42,7.02l-1.1,3.7l1.47,5.36l4.95,3.7l6.6-3.14l5.32-0.74l4.95-7.95l-3.67-8.69l-3.49-8.32l0.55-5.36l-2.2-0.37l-0.57-3.91l-2.96-4.83l-3.28,2.27l-1.29,5.27l-3.48-2.09l-4.84-1.18l-1.08,1.26l1.86,1.68l3.39-0.06l2.73,4.41L506.79,116.94L506.79,116.94z\\\",\\n            \\\"name\\\": \\\"Finland\\\"\\n        },\\n        \\\"lv\\\": {\\n            \\\"path\\\": \\\"M518.07,151.37l-6.85-1.11l0.15,3.83l6.35,3.88l2.6-0.76l-0.15-2.92L518.07,151.37L518.07,151.37z\\\",\\n            \\\"name\\\": \\\"Latvia\\\"\\n        },\\n        \\\"lt\\\": {\\n            \\\"path\\\": \\\"M510.81,154.7l-2.15-0.05l-2.95,2.82h-2.5l0.15,3.53l-1.5,2.77l5.4,0.05l1.55-0.2l1.55,1.87l3.55-0.15l3.4-4.33l-0.2-2.57L510.81,154.7L510.81,154.7z\\\",\\n            \\\"name\\\": \\\"Lithuania\\\"\\n        },\\n        \\\"by\\\": {\\n            \\\"path\\\": \\\"M510.66,166.29l1.5,2.47l-0.6,1.97l0.1,1.56l0.55,1.87l3.1-1.76l3.85,0.1l2.7,1.11h6.85l2-4.79l1.2-1.81v-1.21l-4.3-6.05l-3.8-1.51l-3.1-0.35l-2.7,0.86l0.1,2.72l-3.75,4.74L510.66,166.29L510.66,166.29z\\\",\\n            \\\"name\\\": \\\"Belarus\\\"\\n        },\\n        \\\"pl\\\": {\\n            \\\"path\\\": \\\"M511.46,174.76l0.85,1.56l0.2,1.66l-0.7,1.61l-1.6,3.08l-1.35,0.61l-1.75-0.76l-1.05,0.05l-2.55,0.96l-2.9-0.86l-4.7-3.33l-4.6-2.47l-1.85-2.82l-0.35-6.65l3.6-3.13l4.7-1.56l1.75-0.2l-0.7,1.41l0.45,0.55l7.91,0.15l1.7-0.05l2.8,4.29l-0.7,1.76l0.3,2.07L511.46,174.76L511.46,174.76z\\\",\\n            \\\"name\\\": \\\"Poland\\\"\\n        },\\n        \\\"it\\\": {\\n            \\\"path\\\": \\\"M477.56,213.38l-2.65,1.34l0.35,5.17l2.12,0.36l1.59-1.52v-4.9L477.56,213.38L477.56,213.38M472.27,196.98l-0.62,1.57l0.17,1.71l2.39,2.79l3.76-0.13l8.3,9.64l5.18,1.5l3.06,2.89l0.73,6.59l1.64-0.96l1.42-3.59l-0.35-2.58l2.43-0.22l0.35-1.46l-6.85-3.28l-6.5-6.39l-2.59-3.82l-0.63-3.63l3.31-0.79l-0.85-2.39l-2.03-1.71l-1.75-0.08l-2.44,0.67l-2.3,3.22l-1.39,0.92l-2.15-1.32L472.27,196.98L472.27,196.98M492.44,223.02l-1.45-0.78l-4.95,0.78l0.17,1.34l4.45,2.24l0.67,0.73l1.17,0.17L492.44,223.02L492.44,223.02z\\\",\\n            \\\"name\\\": \\\"Italy\\\"\\n        },\\n        \\\"fr\\\": {\\n            \\\"path\\\": \\\"M477.83,206.96l-1.95,1.96l-0.18,1.78l1.59,0.98l0.62-0.09l0.35-2.59L477.83,206.96L477.83,206.96M460.4,178.7l-2.21,0.54l-4.42,4.81l-1.33,0.09l-1.77-1.25l-1.15,0.27l-0.88,2.76l-6.46,0.18l0.18,1.43l4.42,2.94l5.13,4.1l-0.09,4.9l-2.74,4.81l5.93,2.85l6.02,0.18l1.86-2.14l3.8,0.09l1.06,0.98l3.8-0.27l1.95-2.5l-2.48-2.94l-0.18-1.87l0.53-2.05l-1.24-1.78l-2.12,0.62l-0.27-1.6l4.69-5.17v-3.12l-3.1-1.78l-1.59-0.27L460.4,178.7L460.4,178.7z\\\",\\n            \\\"name\\\": \\\"France\\\"\\n        },\\n        \\\"nl\\\": {\\n            \\\"path\\\": \\\"M470.09,168.27l-4.53,2.23l0.96,0.87l0.1,2.23l-0.96-0.19l-1.06-1.65l-2.53,4.01l3.89,0.81l1.45,1.53l0.77,0.02l0.51-3.46l2.45-1.03L470.09,168.27L470.09,168.27z\\\",\\n            \\\"name\\\": \\\"Netherlands\\\"\\n        },\\n        \\\"be\\\": {\\n            \\\"path\\\": \\\"M461.61,176.52l-0.64,1.6l6.88,4.54l1.98,0.47l0.07-2.15l-1.73-1.94h-1.06l-1.45-1.65L461.61,176.52L461.61,176.52z\\\",\\n            \\\"name\\\": \\\"Belgium\\\"\\n        },\\n        \\\"de\\\": {\\n            \\\"path\\\": \\\"M471.14,167.88l3.57-0.58v-2.52l2.99-0.49l1.64,1.65l1.73,0.19l2.7-1.17l2.41,0.68l2.12,1.84l0.29,6.89l2.12,2.82l-2.79,0.39l-4.63,2.91l0.39,0.97l4.14,3.88l-0.29,1.94l-3.85,1.94l-3.57,0.1l-0.87,1.84h-1.83l-0.87-1.94l-3.18-0.78l-0.1-3.2l-2.7-1.84l0.29-2.33l-1.83-2.52l0.48-3.3l2.5-1.17L471.14,167.88L471.14,167.88z\\\",\\n            \\\"name\\\": \\\"Germany\\\"\\n        },\\n        \\\"dk\\\": {\\n            \\\"path\\\": \\\"M476.77,151.5l-4.15,4.59l-0.15,2.99l1.89,4.93l2.96-0.56l-0.37-4.03l2.04-2.28l-0.04-1.79l-1.44-3.73L476.77,151.5L476.77,151.5M481.44,159.64l-0.93-0.04l-1.22,1.12l0.15,1.75l2.89,0.08l0.15-1.98L481.44,159.64L481.44,159.64z\\\",\\n            \\\"name\\\": \\\"Denmark\\\"\\n        },\\n        \\\"ch\\\": {\\n            \\\"path\\\": \\\"M472.91,189.38l-4.36,4.64l0.09,0.47l1.79-0.56l1.61,2.24l2.72-0.96l1.88,1.46l0.77-0.44l2.32-3.64l-0.59-0.56l-2.29-0.06l-1.11-2.27L472.91,189.38L472.91,189.38z\\\",\\n            \\\"name\\\": \\\"Switzerland\\\"\\n        },\\n        \\\"cz\\\": {\\n            \\\"path\\\": \\\"M488.43,184.87h2.97h1.46l2.37,1.69l4.39-3.65l-4.26-3.04l-4.22-2.04l-2.89,0.52l-3.92,2.52L488.43,184.87L488.43,184.87z\\\",\\n            \\\"name\\\": \\\"Czech Republic\\\"\\n        },\\n        \\\"sk\\\": {\\n            \\\"path\\\": \\\"M495.84,187.13l0.69,0.61l0.09,1.04l7.63-0.17l5.64-2.43l-0.09-2.47l-1.08,0.48l-1.55-0.83l-0.95-0.04l-2.5,1l-3.4-0.82L495.84,187.13L495.84,187.13z\\\",\\n            \\\"name\\\": \\\"Slovakia\\\"\\n        },\\n        \\\"at\\\": {\\n            \\\"path\\\": \\\"M480.63,190.12l-0.65,1.35l0.56,0.96l2.33-0.48h1.98l2.15,1.82l4.57-0.83l3.36-2l0.86-1.35l-0.13-1.74l-3.02-2.26l-4.05,0.04l-0.34,2.3l-4.26,2.08L480.63,190.12L480.63,190.12z\\\",\\n            \\\"name\\\": \\\"Austria\\\"\\n        },\\n        \\\"hu\\\": {\\n            \\\"path\\\": \\\"M496.74,189.6l-1.16,1.82l0.09,2.78l1.85,0.95l5.69,0.17l7.93-6.68l0.04-1.48l-0.86-0.43l-5.73,2.6L496.74,189.6L496.74,189.6z\\\",\\n            \\\"name\\\": \\\"Hungary\\\"\\n        },\\n        \\\"si\\\": {\\n            \\\"path\\\": \\\"M494.8,191.99l-2.54,1.52l-4.74,1.04l0.95,2.74l3.32,0.04l3.06-2.56L494.8,191.99L494.8,191.99z\\\",\\n            \\\"name\\\": \\\"Slovenia\\\"\\n        },\\n        \\\"hr\\\": {\\n            \\\"path\\\": \\\"M495.62,195.16l-3.53,2.91h-3.58l-0.43,2.52l1.64,0.43l0.82-1.22l1.29,1.13l1.03,3.6l7.07,3.3l0.7-0.8l-7.17-7.4l0.73-1.35l6.81-0.26l0.69-2.17l-4.44,0.13L495.62,195.16L495.62,195.16z\\\",\\n            \\\"name\\\": \\\"Croatia\\\"\\n        },\\n        \\\"ba\\\": {\\n            \\\"path\\\": \\\"M494.8,198.94l-0.37,0.61l6.71,6.92l2.46-3.62l-0.09-1.43l-2.15-2.61L494.8,198.94L494.8,198.94z\\\",\\n            \\\"name\\\": \\\"Bosnia and Herzegovina\\\"\\n        },\\n        \\\"mt\\\": {\\n            \\\"path\\\": \\\"M492.61,230.47l-1.67,0.34l0.06,1.85l1.5,0.5l0.67-0.56L492.61,230.47L492.61,230.47z\\\",\\n            \\\"name\\\": \\\"Malta\\\"\\n        },\\n        \\\"ua\\\": {\\n            \\\"path\\\": \\\"M515.57,173.15l-2.9,1.63l0.72,3.08l-2.68,5.65l0.02,2.49l1.26,0.8l8.08,0.4l2.26-1.87l2.42,0.81l3.47,4.63l-2.54,4.56l3.02,0.88l3.95-4.55l2.26,0.41l2.1,1.46l-1.85,2.44l2.5,3.9h2.66l1.37-2.6l2.82-0.57l0.08-2.11l-5.24-0.81l0.16-2.27h5.08l5.48-4.39l2.42-2.11l0.4-6.66l-10.8-0.97l-4.43-6.25l-3.06-1.05l-3.71,0.16l-1.67,4.13l-7.6,0.1l-2.47-1.14L515.57,173.15L515.57,173.15z\\\",\\n            \\\"name\\\": \\\"Ukraine\\\"\\n        },\\n        \\\"md\\\": {\\n            \\\"path\\\": \\\"M520.75,187.71l3.1,4.77l-0.26,2.7l1.11,0.05l2.63-4.45l-3.16-3.92l-1.79-0.74L520.75,187.71L520.75,187.71z\\\",\\n            \\\"name\\\": \\\"Moldova\\\"\\n        },\\n        \\\"ro\\\": {\\n            \\\"path\\\": \\\"M512.18,187.6l-0.26,1.48l-5.79,4.82l4.84,7.1l3.1,2.17h5.58l1.84-1.54l2.47-0.32l1.84,1.11l3.26-3.71l-0.63-1.86l-3.31-0.85l-2.26-0.11l0.11-3.18l-3-4.72L512.18,187.6L512.18,187.6z\\\",\\n            \\\"name\\\": \\\"Romania\\\"\\n        },\\n        \\\"rs\\\": {\\n            \\\"path\\\": \\\"M505.55,194.54l-2.05,1.54h-1l-0.68,2.12l2.42,2.81l0.16,2.23l-3,4.24l0.42,1.27l1.74,0.32l1.37-1.86l0.74-0.05l1.26,1.22l3.84-1.17l-0.32-5.46L505.55,194.54L505.55,194.54z\\\",\\n            \\\"name\\\": \\\"Serbia\\\"\\n        },\\n        \\\"bg\\\": {\\n            \\\"path\\\": \\\"M511.44,202.39l0.16,4.98l1.68,3.5l6.31,0.11l2.84-2.01l2.79-1.11l-0.68-3.18l0.63-1.7l-1.42-0.74l-1.95,0.16l-1.53,1.54l-6.42,0.05L511.44,202.39L511.44,202.39z\\\",\\n            \\\"name\\\": \\\"Bulgaria\\\"\\n        },\\n        \\\"al\\\": {\\n            \\\"path\\\": \\\"M504.02,209.76v4.61l1.32,2.49l0.95-0.11l1.63-2.97l-0.95-1.33l-0.37-3.29l-1.26-1.17L504.02,209.76L504.02,209.76z\\\",\\n            \\\"name\\\": \\\"Albania\\\"\\n        },\\n        \\\"mk\\\": {\\n            \\\"path\\\": \\\"M510.92,208.01l-3.37,1.11l0.16,2.86l0.79,1.01l4-1.86L510.92,208.01L510.92,208.01z\\\",\\n            \\\"name\\\": \\\"Macedonia\\\"\\n        },\\n        \\\"gr\\\": {\\n            \\\"path\\\": \\\"M506.71,217.6l-0.11,1.33l4.63,2.33l2.21,0.85l-1.16,1.22l-2.58,0.26l-0.37,1.17l0.89,2.01l2.89,1.54l1.26,0.11l0.16-3.45l1.89-2.28l-5.16-6.1l0.68-2.07l1.21-0.05l1.84,1.48l1.16-0.58l0.37-2.07l5.42,0.05l0.21-3.18l-2.26,1.59l-6.63-0.16l-4.31,2.23L506.71,217.6L506.71,217.6M516.76,230.59l1.63,0.05l0.68,1.01h2.37l1.58-0.58l0.53,0.64l-1.05,1.38l-4.63,0.16l-0.84-1.11l-0.89-0.53L516.76,230.59L516.76,230.59z\\\",\\n            \\\"name\\\": \\\"Greece\\\"\\n        }\\n    }\\n});\\n\\n/*\\n * metismenu - v2.0.3\\n * A jQuery menu plugin\\n * https://github.com/onokumus/metisMenu\\n *\\n * Made by Osman Nuri Okumus\\n * Under MIT License\\n */\\n\\n(function ($) {\\n    'use strict';\\n\\n    function transitionEnd() {\\n        var el = document.createElement('mm');\\n\\n        var transEndEventNames = {\\n            WebkitTransition: 'webkitTransitionEnd',\\n            MozTransition: 'transitionend',\\n            OTransition: 'oTransitionEnd otransitionend',\\n            transition: 'transitionend'\\n        };\\n\\n        for (var name in transEndEventNames) {\\n            if (el.style[name] !== undefined) {\\n                return {\\n                    end: transEndEventNames[name]\\n                };\\n            }\\n        }\\n        return false;\\n    }\\n\\n    $.fn.emulateTransitionEnd = function (duration) {\\n        var called = false;\\n        var $el = this;\\n        $(this).one('mmTransitionEnd', function () {\\n            called = true;\\n        });\\n        var callback = function () {\\n            if (!called) {\\n                $($el).trigger($transition.end);\\n            }\\n        };\\n        setTimeout(callback, duration);\\n        return this;\\n    };\\n\\n    var $transition = transitionEnd();\\n    if (!!$transition) {\\n        $.event.special.mmTransitionEnd = {\\n            bindType: $transition.end,\\n            delegateType: $transition.end,\\n            handle: function (e) {\\n                if ($(e.target).is(this)) {\\n                    return e.handleObj.handler.apply(this, arguments);\\n                }\\n            }\\n        };\\n    }\\n\\n    var MetisMenu = function (element, options) {\\n        this.$element = $(element);\\n        this.options = $.extend({}, MetisMenu.DEFAULTS, options);\\n        this.transitioning = null;\\n\\n        this.init();\\n    };\\n\\n    MetisMenu.TRANSITION_DURATION = 350;\\n\\n    MetisMenu.DEFAULTS = {\\n        toggle: true,\\n        doubleTapToGo: false,\\n        activeClass: 'active',\\n        collapseClass: 'collapse',\\n        collapseInClass: 'in',\\n        collapsingClass: 'collapsing'\\n    };\\n\\n    MetisMenu.prototype.init = function () {\\n        var $this = this;\\n        var activeClass = this.options.activeClass;\\n        var collapseClass = this.options.collapseClass;\\n        var collapseInClass = this.options.collapseInClass;\\n\\n        this\\n            .$element\\n            .find('li.' + activeClass)\\n            .has('ul')\\n            .children('ul')\\n            .addClass(collapseClass + ' ' + collapseInClass);\\n\\n        this\\n            .$element\\n            .find('li')\\n            .not('.' + activeClass)\\n            .has('ul')\\n            .children('ul')\\n            .addClass(collapseClass);\\n\\n        //add the 'doubleTapToGo' class to active items if needed\\n        if (this.options.doubleTapToGo) {\\n            this\\n                .$element\\n                .find('li.' + activeClass)\\n                .has('ul')\\n                .children('a')\\n                .addClass('doubleTapToGo');\\n        }\\n\\n        this\\n            .$element\\n            .find('li')\\n            .has('ul')\\n            .children('a')\\n            .on('click.metisMenu', function (e) {\\n                var self = $(this);\\n                var $parent = self.parent('li');\\n                var $list = $parent.children('ul');\\n                e.preventDefault();\\n\\n                if ($parent.hasClass(activeClass) && !$this.options.doubleTapToGo) {\\n                    $this.hide($list);\\n                } else {\\n                    $this.show($list);\\n                }\\n\\n                //Do we need to enable the double tap\\n                if ($this.options.doubleTapToGo) {\\n                    //if we hit a second time on the link and the href is valid, navigate to that url\\n                    if ($this.doubleTapToGo(self) && self.attr('href') !== '#' && self.attr('href') !== '') {\\n                        e.stopPropagation();\\n                        document.location = self.attr('href');\\n                        return;\\n                    }\\n                }\\n            });\\n    };\\n\\n    MetisMenu.prototype.doubleTapToGo = function (elem) {\\n        var $this = this.$element;\\n        //if the class 'doubleTapToGo' exists, remove it and return\\n        if (elem.hasClass('doubleTapToGo')) {\\n            elem.removeClass('doubleTapToGo');\\n            return true;\\n        }\\n        //does not exists, add a new class and return false\\n        if (elem.parent().children('ul').length) {\\n            //first remove all other class\\n            $this\\n                .find('.doubleTapToGo')\\n                .removeClass('doubleTapToGo');\\n            //add the class on the current element\\n            elem.addClass('doubleTapToGo');\\n            return false;\\n        }\\n    };\\n\\n    MetisMenu.prototype.show = function (el) {\\n        var activeClass = this.options.activeClass;\\n        var collapseClass = this.options.collapseClass;\\n        var collapseInClass = this.options.collapseInClass;\\n        var collapsingClass = this.options.collapsingClass;\\n        var $this = $(el);\\n        var $parent = $this.parent('li');\\n        if (this.transitioning || $this.hasClass(collapseInClass)) {\\n            return;\\n        }\\n\\n        $parent.addClass(activeClass);\\n\\n        if (this.options.toggle) {\\n            this.hide($parent.siblings().children('ul.' + collapseInClass));\\n        }\\n\\n        $this\\n            .removeClass(collapseClass)\\n            .addClass(collapsingClass)\\n            .height(0);\\n\\n        this.transitioning = 1;\\n        var complete = function () {\\n            $this\\n                .removeClass(collapsingClass)\\n                .addClass(collapseClass + ' ' + collapseInClass)\\n                .height('');\\n            this.transitioning = 0;\\n        };\\n        if (!$transition) {\\n            return complete.call(this);\\n        }\\n        $this\\n            .one('mmTransitionEnd', $.proxy(complete, this))\\n            .emulateTransitionEnd(MetisMenu.TRANSITION_DURATION)\\n            .height($this[0].scrollHeight);\\n    };\\n\\n    MetisMenu.prototype.hide = function (el) {\\n        var activeClass = this.options.activeClass;\\n        var collapseClass = this.options.collapseClass;\\n        var collapseInClass = this.options.collapseInClass;\\n        var collapsingClass = this.options.collapsingClass;\\n        var $this = $(el);\\n\\n        if (this.transitioning || !$this.hasClass(collapseInClass)) {\\n            return;\\n        }\\n\\n        $this.parent('li').removeClass(activeClass);\\n        $this.height($this.height())[0].offsetHeight;\\n\\n        $this\\n            .addClass(collapsingClass)\\n            .removeClass(collapseClass)\\n            .removeClass(collapseInClass);\\n\\n        this.transitioning = 1;\\n\\n        var complete = function () {\\n            this.transitioning = 0;\\n            $this\\n                .removeClass(collapsingClass)\\n                .addClass(collapseClass);\\n        };\\n\\n        if (!$transition) {\\n            return complete.call(this);\\n        }\\n        $this\\n            .height(0)\\n            .one('mmTransitionEnd', $.proxy(complete, this))\\n            .emulateTransitionEnd(MetisMenu.TRANSITION_DURATION);\\n    };\\n\\n    function Plugin(option) {\\n        return this.each(function () {\\n            var $this = $(this);\\n            var data = $this.data('mm');\\n            var options = $.extend({},\\n                MetisMenu.DEFAULTS,\\n                $this.data(),\\n                typeof option === 'object' && option\\n            );\\n\\n            if (!data) {\\n                $this.data('mm', (data = new MetisMenu(this, options)));\\n            }\\n            if (typeof option === 'string') {\\n                data[option]();\\n            }\\n        });\\n    }\\n\\n    var old = $.fn.metisMenu;\\n\\n    $.fn.metisMenu = Plugin;\\n    $.fn.metisMenu.Constructor = MetisMenu;\\n\\n    $.fn.metisMenu.noConflict = function () {\\n        $.fn.metisMenu = old;\\n        return this;\\n    };\\n\\n})(jQuery);\\n\\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\\n//\\n// Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n// you may not use this file except in compliance with the License.\\n// You may obtain a copy of the License at\\n//\\n// http://www.apache.org/licenses/LICENSE-2.0\\n//\\n// Unless required by applicable law or agreed to in writing, software\\n// distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n// See the License for the specific language governing permissions and\\n// limitations under the License.\\n// ┌────────────────────────────────────────────────────────────┐ \\\\\\\\\\n// │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\\\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\\\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\\\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\\\\\\n\\n(function (glob) {\\n    var version = \\\"0.5.0\\\",\\n        has = \\\"hasOwnProperty\\\",\\n        separator = /[\\\\.\\\\/]/,\\n        comaseparator = /\\\\s*,\\\\s*/,\\n        wildcard = \\\"*\\\",\\n        fun = function () {\\n        },\\n        numsort = function (a, b) {\\n            return a - b;\\n        },\\n        current_event,\\n        stop,\\n        events = {n: {}},\\n        firstDefined = function () {\\n            for (var i = 0, ii = this.length; i < ii; i++) {\\n                if (typeof this[i] != \\\"undefined\\\") {\\n                    return this[i];\\n                }\\n            }\\n        },\\n        lastDefined = function () {\\n            var i = this.length;\\n            while (--i) {\\n                if (typeof this[i] != \\\"undefined\\\") {\\n                    return this[i];\\n                }\\n            }\\n        },\\n        objtos = Object.prototype.toString,\\n        Str = String,\\n        isArray = Array.isArray || function (ar) {\\n                return ar instanceof Array || objtos.call(ar) == \\\"[object Array]\\\";\\n            };\\n    /*\\\\\\n     * eve\\n     [ method ]\\n\\n     * Fires event with given `name`, given scope and other parameters.\\n\\n     > Arguments\\n\\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\\n     - scope (object) context for the event handlers\\n     - varargs (...) the rest of arguments will be sent to event handlers\\n\\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\\n     \\\\*/\\n    eve = function (name, scope) {\\n        var e = events,\\n            oldstop = stop,\\n            args = Array.prototype.slice.call(arguments, 2),\\n            listeners = eve.listeners(name),\\n            z = 0,\\n            f = false,\\n            l,\\n            indexed = [],\\n            queue = {},\\n            out = [],\\n            ce = current_event,\\n            errors = [];\\n        out.firstDefined = firstDefined;\\n        out.lastDefined = lastDefined;\\n        current_event = name;\\n        stop = 0;\\n        for (var i = 0, ii = listeners.length; i < ii; i++) if (\\\"zIndex\\\" in listeners[i]) {\\n            indexed.push(listeners[i].zIndex);\\n            if (listeners[i].zIndex < 0) {\\n                queue[listeners[i].zIndex] = listeners[i];\\n            }\\n        }\\n        indexed.sort(numsort);\\n        while (indexed[z] < 0) {\\n            l = queue[indexed[z++]];\\n            out.push(l.apply(scope, args));\\n            if (stop) {\\n                stop = oldstop;\\n                return out;\\n            }\\n        }\\n        for (i = 0; i < ii; i++) {\\n            l = listeners[i];\\n            if (\\\"zIndex\\\" in l) {\\n                if (l.zIndex == indexed[z]) {\\n                    out.push(l.apply(scope, args));\\n                    if (stop) {\\n                        break;\\n                    }\\n                    do {\\n                        z++;\\n                        l = queue[indexed[z]];\\n                        l && out.push(l.apply(scope, args));\\n                        if (stop) {\\n                            break;\\n                        }\\n                    } while (l)\\n                } else {\\n                    queue[l.zIndex] = l;\\n                }\\n            } else {\\n                out.push(l.apply(scope, args));\\n                if (stop) {\\n                    break;\\n                }\\n            }\\n        }\\n        stop = oldstop;\\n        current_event = ce;\\n        return out;\\n    };\\n    // Undocumented. Debug only.\\n    eve._events = events;\\n    /*\\\\\\n     * eve.listeners\\n     [ method ]\\n\\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\\n\\n     > Arguments\\n\\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\\n\\n     = (array) array of event handlers\\n     \\\\*/\\n    eve.listeners = function (name) {\\n        var names = isArray(name) ? name : name.split(separator),\\n            e = events,\\n            item,\\n            items,\\n            k,\\n            i,\\n            ii,\\n            j,\\n            jj,\\n            nes,\\n            es = [e],\\n            out = [];\\n        for (i = 0, ii = names.length; i < ii; i++) {\\n            nes = [];\\n            for (j = 0, jj = es.length; j < jj; j++) {\\n                e = es[j].n;\\n                items = [e[names[i]], e[wildcard]];\\n                k = 2;\\n                while (k--) {\\n                    item = items[k];\\n                    if (item) {\\n                        nes.push(item);\\n                        out = out.concat(item.f || []);\\n                    }\\n                }\\n            }\\n            es = nes;\\n        }\\n        return out;\\n    };\\n    /*\\\\\\n     * eve.separator\\n     [ method ]\\n\\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\\n     * here. Be aware that if you pass a string longer than one character it will be treated as\\n     * a list of characters.\\n\\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\\n     \\\\*/\\n    eve.separator = function (sep) {\\n        if (sep) {\\n            sep = Str(sep).replace(/(?=[\\\\.\\\\^\\\\]\\\\[\\\\-])/g, \\\"\\\\\\\\\\\");\\n            sep = \\\"[\\\" + sep + \\\"]\\\";\\n            separator = new RegExp(sep);\\n        } else {\\n            separator = /[\\\\.\\\\/]/;\\n        }\\n    };\\n    /*\\\\\\n     * eve.on\\n     [ method ]\\n     **\\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\\n     | eve.on(\\\"*.under.*\\\", f);\\n     | eve(\\\"mouse.under.floor\\\"); // triggers f\\n     * Use @eve to trigger the listener.\\n     **\\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\\n     - f (function) event handler function\\n     **\\n     - name (array) if you don’t want to use separators, you can use array of strings\\n     - f (function) event handler function\\n     **\\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\\n     > Example:\\n     | eve.on(\\\"mouse\\\", eatIt)(2);\\n     | eve.on(\\\"mouse\\\", scream);\\n     | eve.on(\\\"mouse\\\", catchIt)(1);\\n     * This will ensure that `catchIt` function will be called before `eatIt`.\\n     *\\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\\n     \\\\*/\\n    eve.on = function (name, f) {\\n        if (typeof f != \\\"function\\\") {\\n            return function () {\\n            };\\n        }\\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\\n        for (var i = 0, ii = names.length; i < ii; i++) {\\n            (function (name) {\\n                var names = isArray(name) ? name : Str(name).split(separator),\\n                    e = events,\\n                    exist;\\n                for (var i = 0, ii = names.length; i < ii; i++) {\\n                    e = e.n;\\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\\n                }\\n                e.f = e.f || [];\\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\\n                    exist = true;\\n                    break;\\n                }\\n                !exist && e.f.push(f);\\n            }(names[i]));\\n        }\\n        return function (zIndex) {\\n            if (+zIndex == +zIndex) {\\n                f.zIndex = +zIndex;\\n            }\\n        };\\n    };\\n    /*\\\\\\n     * eve.f\\n     [ method ]\\n     **\\n     * Returns function that will fire given event with optional arguments.\\n     * Arguments that will be passed to the result function will be also\\n     * concated to the list of final arguments.\\n     | el.onclick = eve.f(\\\"click\\\", 1, 2);\\n     | eve.on(\\\"click\\\", function (a, b, c) {\\n     |     console.log(a, b, c); // 1, 2, [event object]\\n     | });\\n     > Arguments\\n     - event (string) event name\\n     - varargs (…) and any other arguments\\n     = (function) possible event handler function\\n     \\\\*/\\n    eve.f = function (event) {\\n        var attrs = [].slice.call(arguments, 1);\\n        return function () {\\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\\n        };\\n    };\\n    /*\\\\\\n     * eve.stop\\n     [ method ]\\n     **\\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\\n     \\\\*/\\n    eve.stop = function () {\\n        stop = 1;\\n    };\\n    /*\\\\\\n     * eve.nt\\n     [ method ]\\n     **\\n     * Could be used inside event handler to figure out actual name of the event.\\n     **\\n     > Arguments\\n     **\\n     - subname (string) #optional subname of the event\\n     **\\n     = (string) name of the event, if `subname` is not specified\\n     * or\\n     = (boolean) `true`, if current event’s name contains `subname`\\n     \\\\*/\\n    eve.nt = function (subname) {\\n        var cur = isArray(current_event) ? current_event.join(\\\".\\\") : current_event;\\n        if (subname) {\\n            return new RegExp(\\\"(?:\\\\\\\\.|\\\\\\\\/|^)\\\" + subname + \\\"(?:\\\\\\\\.|\\\\\\\\/|$)\\\").test(cur);\\n        }\\n        return cur;\\n    };\\n    /*\\\\\\n     * eve.nts\\n     [ method ]\\n     **\\n     * Could be used inside event handler to figure out actual name of the event.\\n     **\\n     **\\n     = (array) names of the event\\n     \\\\*/\\n    eve.nts = function () {\\n        return isArray(current_event) ? current_event : current_event.split(separator);\\n    };\\n    /*\\\\\\n     * eve.off\\n     [ method ]\\n     **\\n     * Removes given function from the list of event listeners assigned to given name.\\n     * If no arguments specified all the events will be cleared.\\n     **\\n     > Arguments\\n     **\\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\\n     - f (function) event handler function\\n     \\\\*/\\n    /*\\\\\\n     * eve.unbind\\n     [ method ]\\n     **\\n     * See @eve.off\\n     \\\\*/\\n    eve.off = eve.unbind = function (name, f) {\\n        if (!name) {\\n            eve._events = events = {n: {}};\\n            return;\\n        }\\n        var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\\n        if (names.length > 1) {\\n            for (var i = 0, ii = names.length; i < ii; i++) {\\n                eve.off(names[i], f);\\n            }\\n            return;\\n        }\\n        names = isArray(name) ? name : Str(name).split(separator);\\n        var e,\\n            key,\\n            splice,\\n            i, ii, j, jj,\\n            cur = [events];\\n        for (i = 0, ii = names.length; i < ii; i++) {\\n            for (j = 0; j < cur.length; j += splice.length - 2) {\\n                splice = [j, 1];\\n                e = cur[j].n;\\n                if (names[i] != wildcard) {\\n                    if (e[names[i]]) {\\n                        splice.push(e[names[i]]);\\n                    }\\n                } else {\\n                    for (key in e) if (e[has](key)) {\\n                        splice.push(e[key]);\\n                    }\\n                }\\n                cur.splice.apply(cur, splice);\\n            }\\n        }\\n        for (i = 0, ii = cur.length; i < ii; i++) {\\n            e = cur[i];\\n            while (e.n) {\\n                if (f) {\\n                    if (e.f) {\\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\\n                            e.f.splice(j, 1);\\n                            break;\\n                        }\\n                        !e.f.length && delete e.f;\\n                    }\\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\\n                        var funcs = e.n[key].f;\\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\\n                            funcs.splice(j, 1);\\n                            break;\\n                        }\\n                        !funcs.length && delete e.n[key].f;\\n                    }\\n                } else {\\n                    delete e.f;\\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\\n                        delete e.n[key].f;\\n                    }\\n                }\\n                e = e.n;\\n            }\\n        }\\n    };\\n    /*\\\\\\n     * eve.once\\n     [ method ]\\n     **\\n     * Binds given event handler with a given name to only run once then unbind itself.\\n     | eve.once(\\\"login\\\", f);\\n     | eve(\\\"login\\\"); // triggers f\\n     | eve(\\\"login\\\"); // no listeners\\n     * Use @eve to trigger the listener.\\n     **\\n     > Arguments\\n     **\\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\\n     - f (function) event handler function\\n     **\\n     = (function) same return function as @eve.on\\n     \\\\*/\\n    eve.once = function (name, f) {\\n        var f2 = function () {\\n            eve.off(name, f2);\\n            return f.apply(this, arguments);\\n        };\\n        return eve.on(name, f2);\\n    };\\n    /*\\\\\\n     * eve.version\\n     [ property (string) ]\\n     **\\n     * Current version of the library.\\n     \\\\*/\\n    eve.version = version;\\n    eve.toString = function () {\\n        return \\\"You are running Eve \\\" + version;\\n    };\\n    (typeof module != \\\"undefined\\\" && module.exports) ? (module.exports = eve) : (typeof define === \\\"function\\\" && define.amd ? (define(\\\"eve\\\", [], function () {\\n                return eve;\\n            })) : (glob.eve = eve));\\n})(this);\\n\\n;(function () {\\n\\n// CommonJS require()\\n\\n    function require(p) {\\n        var path = require.resolve(p)\\n            , mod = require.modules[path];\\n        if (!mod) throw new Error('failed to require \\\"' + p + '\\\"');\\n        if (!mod.exports) {\\n            mod.exports = {};\\n            mod.call(mod.exports, mod, mod.exports, require.relative(path));\\n        }\\n        return mod.exports;\\n    }\\n\\n    require.modules = {};\\n\\n    require.resolve = function (path) {\\n        var orig = path\\n            , reg = path + '.js'\\n            , index = path + '/index.js';\\n        return require.modules[reg] && reg\\n            || require.modules[index] && index\\n            || orig;\\n    };\\n\\n    require.register = function (path, fn) {\\n        require.modules[path] = fn;\\n    };\\n\\n    require.relative = function (parent) {\\n        return function (p) {\\n            if ('.' != p.charAt(0)) return require(p);\\n\\n            var path = parent.split('/')\\n                , segs = p.split('/');\\n            path.pop();\\n\\n            for (var i = 0; i < segs.length; i++) {\\n                var seg = segs[i];\\n                if ('..' == seg) path.pop();\\n                else if ('.' != seg) path.push(seg);\\n            }\\n\\n            return require(path.join('/'));\\n        };\\n    };\\n\\n\\n    require.register(\\\"browser/debug.js\\\", function (module, exports, require) {\\n\\n        module.exports = function (type) {\\n            return function () {\\n            }\\n        };\\n\\n    }); // module: browser/debug.js\\n\\n    require.register(\\\"browser/diff.js\\\", function (module, exports, require) {\\n        /* See LICENSE file for terms of use */\\n\\n        /*\\n         * Text diff implementation.\\n         *\\n         * This library supports the following APIS:\\n         * JsDiff.diffChars: Character by character diff\\n         * JsDiff.diffWords: Word (as defined by \\\\b regex) diff which ignores whitespace\\n         * JsDiff.diffLines: Line based diff\\n         *\\n         * JsDiff.diffCss: Diff targeted at CSS content\\n         *\\n         * These methods are based on the implementation proposed in\\n         * \\\"An O(ND) Difference Algorithm and its Variations\\\" (Myers, 1986).\\n         * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.4.6927\\n         */\\n        var JsDiff = (function () {\\n            /*jshint maxparams: 5*/\\n            function clonePath(path) {\\n                return {newPos: path.newPos, components: path.components.slice(0)};\\n            }\\n\\n            function removeEmpty(array) {\\n                var ret = [];\\n                for (var i = 0; i < array.length; i++) {\\n                    if (array[i]) {\\n                        ret.push(array[i]);\\n                    }\\n                }\\n                return ret;\\n            }\\n\\n            function escapeHTML(s) {\\n                var n = s;\\n                n = n.replace(/&/g, '&amp;');\\n                n = n.replace(/</g, '&lt;');\\n                n = n.replace(/>/g, '&gt;');\\n                n = n.replace(/\\\"/g, '&quot;');\\n\\n                return n;\\n            }\\n\\n            var Diff = function (ignoreWhitespace) {\\n                this.ignoreWhitespace = ignoreWhitespace;\\n            };\\n            Diff.prototype = {\\n                diff: function (oldString, newString) {\\n                    // Handle the identity case (this is due to unrolling editLength == 0\\n                    if (newString === oldString) {\\n                        return [{value: newString}];\\n                    }\\n                    if (!newString) {\\n                        return [{value: oldString, removed: true}];\\n                    }\\n                    if (!oldString) {\\n                        return [{value: newString, added: true}];\\n                    }\\n\\n                    newString = this.tokenize(newString);\\n                    oldString = this.tokenize(oldString);\\n\\n                    var newLen = newString.length, oldLen = oldString.length;\\n                    var maxEditLength = newLen + oldLen;\\n                    var bestPath = [{newPos: -1, components: []}];\\n\\n                    // Seed editLength = 0\\n                    var oldPos = this.extractCommon(bestPath[0], newString, oldString, 0);\\n                    if (bestPath[0].newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\\n                        return bestPath[0].components;\\n                    }\\n\\n                    for (var editLength = 1; editLength <= maxEditLength; editLength++) {\\n                        for (var diagonalPath = -1 * editLength; diagonalPath <= editLength; diagonalPath += 2) {\\n                            var basePath;\\n                            var addPath = bestPath[diagonalPath - 1],\\n                                removePath = bestPath[diagonalPath + 1];\\n                            oldPos = (removePath ? removePath.newPos : 0) - diagonalPath;\\n                            if (addPath) {\\n                                // No one else is going to attempt to use this value, clear it\\n                                bestPath[diagonalPath - 1] = undefined;\\n                            }\\n\\n                            var canAdd = addPath && addPath.newPos + 1 < newLen;\\n                            var canRemove = removePath && 0 <= oldPos && oldPos < oldLen;\\n                            if (!canAdd && !canRemove) {\\n                                bestPath[diagonalPath] = undefined;\\n                                continue;\\n                            }\\n\\n                            // Select the diagonal that we want to branch from. We select the prior\\n                            // path whose position in the new string is the farthest from the origin\\n                            // and does not pass the bounds of the diff graph\\n                            if (!canAdd || (canRemove && addPath.newPos < removePath.newPos)) {\\n                                basePath = clonePath(removePath);\\n                                this.pushComponent(basePath.components, oldString[oldPos], undefined, true);\\n                            } else {\\n                                basePath = clonePath(addPath);\\n                                basePath.newPos++;\\n                                this.pushComponent(basePath.components, newString[basePath.newPos], true, undefined);\\n                            }\\n\\n                            var oldPos = this.extractCommon(basePath, newString, oldString, diagonalPath);\\n\\n                            if (basePath.newPos + 1 >= newLen && oldPos + 1 >= oldLen) {\\n                                return basePath.components;\\n                            } else {\\n                                bestPath[diagonalPath] = basePath;\\n                            }\\n                        }\\n                    }\\n                },\\n\\n                pushComponent: function (components, value, added, removed) {\\n                    var last = components[components.length - 1];\\n                    if (last && last.added === added && last.removed === removed) {\\n                        // We need to clone here as the component clone operation is just\\n                        // as shallow array clone\\n                        components[components.length - 1] =\\n                            {value: this.join(last.value, value), added: added, removed: removed};\\n                    } else {\\n                        components.push({value: value, added: added, removed: removed});\\n                    }\\n                },\\n                extractCommon: function (basePath, newString, oldString, diagonalPath) {\\n                    var newLen = newString.length,\\n                        oldLen = oldString.length,\\n                        newPos = basePath.newPos,\\n                        oldPos = newPos - diagonalPath;\\n                    while (newPos + 1 < newLen && oldPos + 1 < oldLen && this.equals(newString[newPos + 1], oldString[oldPos + 1])) {\\n                        newPos++;\\n                        oldPos++;\\n\\n                        this.pushComponent(basePath.components, newString[newPos], undefined, undefined);\\n                    }\\n                    basePath.newPos = newPos;\\n                    return oldPos;\\n                },\\n\\n                equals: function (left, right) {\\n                    var reWhitespace = /\\\\S/;\\n                    if (this.ignoreWhitespace && !reWhitespace.test(left) && !reWhitespace.test(right)) {\\n                        return true;\\n                    } else {\\n                        return left === right;\\n                    }\\n                },\\n                join: function (left, right) {\\n                    return left + right;\\n                },\\n                tokenize: function (value) {\\n                    return value;\\n                }\\n            };\\n\\n            var CharDiff = new Diff();\\n\\n            var WordDiff = new Diff(true);\\n            var WordWithSpaceDiff = new Diff();\\n            WordDiff.tokenize = WordWithSpaceDiff.tokenize = function (value) {\\n                return removeEmpty(value.split(/(\\\\s+|\\\\b)/));\\n            };\\n\\n            var CssDiff = new Diff(true);\\n            CssDiff.tokenize = function (value) {\\n                return removeEmpty(value.split(/([{}:;,]|\\\\s+)/));\\n            };\\n\\n            var LineDiff = new Diff();\\n            LineDiff.tokenize = function (value) {\\n                return value.split(/^/m);\\n            };\\n\\n            return {\\n                Diff: Diff,\\n\\n                diffChars: function (oldStr, newStr) {\\n                    return CharDiff.diff(oldStr, newStr);\\n                },\\n                diffWords: function (oldStr, newStr) {\\n                    return WordDiff.diff(oldStr, newStr);\\n                },\\n                diffWordsWithSpace: function (oldStr, newStr) {\\n                    return WordWithSpaceDiff.diff(oldStr, newStr);\\n                },\\n                diffLines: function (oldStr, newStr) {\\n                    return LineDiff.diff(oldStr, newStr);\\n                },\\n\\n                diffCss: function (oldStr, newStr) {\\n                    return CssDiff.diff(oldStr, newStr);\\n                },\\n\\n                createPatch: function (fileName, oldStr, newStr, oldHeader, newHeader) {\\n                    var ret = [];\\n\\n                    ret.push('Index: ' + fileName);\\n                    ret.push('===================================================================');\\n                    ret.push('--- ' + fileName + (typeof oldHeader === 'undefined' ? '' : '\\\\t' + oldHeader));\\n                    ret.push('+++ ' + fileName + (typeof newHeader === 'undefined' ? '' : '\\\\t' + newHeader));\\n\\n                    var diff = LineDiff.diff(oldStr, newStr);\\n                    if (!diff[diff.length - 1].value) {\\n                        diff.pop();   // Remove trailing newline add\\n                    }\\n                    diff.push({value: '', lines: []});   // Append an empty value to make cleanup easier\\n\\n                    function contextLines(lines) {\\n                        return lines.map(function (entry) {\\n                            return ' ' + entry;\\n                        });\\n                    }\\n\\n                    function eofNL(curRange, i, current) {\\n                        var last = diff[diff.length - 2],\\n                            isLast = i === diff.length - 2,\\n                            isLastOfType = i === diff.length - 3 && (current.added !== last.added || current.removed !== last.removed);\\n\\n                        // Figure out if this is the last line for the given file and missing NL\\n                        if (!/\\\\n$/.test(current.value) && (isLast || isLastOfType)) {\\n                            curRange.push('\\\\\\\\ No newline at end of file');\\n                        }\\n                    }\\n\\n                    var oldRangeStart = 0, newRangeStart = 0, curRange = [],\\n                        oldLine = 1, newLine = 1;\\n                    for (var i = 0; i < diff.length; i++) {\\n                        var current = diff[i],\\n                            lines = current.lines || current.value.replace(/\\\\n$/, '').split('\\\\n');\\n                        current.lines = lines;\\n\\n                        if (current.added || current.removed) {\\n                            if (!oldRangeStart) {\\n                                var prev = diff[i - 1];\\n                                oldRangeStart = oldLine;\\n                                newRangeStart = newLine;\\n\\n                                if (prev) {\\n                                    curRange = contextLines(prev.lines.slice(-4));\\n                                    oldRangeStart -= curRange.length;\\n                                    newRangeStart -= curRange.length;\\n                                }\\n                            }\\n                            curRange.push.apply(curRange, lines.map(function (entry) {\\n                                return (current.added ? '+' : '-') + entry;\\n                            }));\\n                            eofNL(curRange, i, current);\\n\\n                            if (current.added) {\\n                                newLine += lines.length;\\n                            } else {\\n                                oldLine += lines.length;\\n                            }\\n                        } else {\\n                            if (oldRangeStart) {\\n                                // Close out any changes that have been output (or join overlapping)\\n                                if (lines.length <= 8 && i < diff.length - 2) {\\n                                    // Overlapping\\n                                    curRange.push.apply(curRange, contextLines(lines));\\n                                } else {\\n                                    // end the range and output\\n                                    var contextSize = Math.min(lines.length, 4);\\n                                    ret.push(\\n                                        '@@ -' + oldRangeStart + ',' + (oldLine - oldRangeStart + contextSize)\\n                                        + ' +' + newRangeStart + ',' + (newLine - newRangeStart + contextSize)\\n                                        + ' @@');\\n                                    ret.push.apply(ret, curRange);\\n                                    ret.push.apply(ret, contextLines(lines.slice(0, contextSize)));\\n                                    if (lines.length <= 4) {\\n                                        eofNL(ret, i, current);\\n                                    }\\n\\n                                    oldRangeStart = 0;\\n                                    newRangeStart = 0;\\n                                    curRange = [];\\n                                }\\n                            }\\n                            oldLine += lines.length;\\n                            newLine += lines.length;\\n                        }\\n                    }\\n\\n                    return ret.join('\\\\n') + '\\\\n';\\n                },\\n\\n                applyPatch: function (oldStr, uniDiff) {\\n                    var diffstr = uniDiff.split('\\\\n');\\n                    var diff = [];\\n                    var remEOFNL = false,\\n                        addEOFNL = false;\\n\\n                    for (var i = (diffstr[0][0] === 'I' ? 4 : 0); i < diffstr.length; i++) {\\n                        if (diffstr[i][0] === '@') {\\n                            var meh = diffstr[i].split(/@@ -(\\\\d+),(\\\\d+) \\\\+(\\\\d+),(\\\\d+) @@/);\\n                            diff.unshift({\\n                                start: meh[3],\\n                                oldlength: meh[2],\\n                                oldlines: [],\\n                                newlength: meh[4],\\n                                newlines: []\\n                            });\\n                        } else if (diffstr[i][0] === '+') {\\n                            diff[0].newlines.push(diffstr[i].substr(1));\\n                        } else if (diffstr[i][0] === '-') {\\n                            diff[0].oldlines.push(diffstr[i].substr(1));\\n                        } else if (diffstr[i][0] === ' ') {\\n                            diff[0].newlines.push(diffstr[i].substr(1));\\n                            diff[0].oldlines.push(diffstr[i].substr(1));\\n                        } else if (diffstr[i][0] === '\\\\\\\\') {\\n                            if (diffstr[i - 1][0] === '+') {\\n                                remEOFNL = true;\\n                            } else if (diffstr[i - 1][0] === '-') {\\n                                addEOFNL = true;\\n                            }\\n                        }\\n                    }\\n\\n                    var str = oldStr.split('\\\\n');\\n                    for (var i = diff.length - 1; i >= 0; i--) {\\n                        var d = diff[i];\\n                        for (var j = 0; j < d.oldlength; j++) {\\n                            if (str[d.start - 1 + j] !== d.oldlines[j]) {\\n                                return false;\\n                            }\\n                        }\\n                        Array.prototype.splice.apply(str, [d.start - 1, +d.oldlength].concat(d.newlines));\\n                    }\\n\\n                    if (remEOFNL) {\\n                        while (!str[str.length - 1]) {\\n                            str.pop();\\n                        }\\n                    } else if (addEOFNL) {\\n                        str.push('');\\n                    }\\n                    return str.join('\\\\n');\\n                },\\n\\n                convertChangesToXML: function (changes) {\\n                    var ret = [];\\n                    for (var i = 0; i < changes.length; i++) {\\n                        var change = changes[i];\\n                        if (change.added) {\\n                            ret.push('<ins>');\\n                        } else if (change.removed) {\\n                            ret.push('<del>');\\n                        }\\n\\n                        ret.push(escapeHTML(change.value));\\n\\n                        if (change.added) {\\n                            ret.push('</ins>');\\n                        } else if (change.removed) {\\n                            ret.push('</del>');\\n                        }\\n                    }\\n                    return ret.join('');\\n                },\\n\\n                // See: http://code.google.com/p/google-diff-match-patch/wiki/API\\n                convertChangesToDMP: function (changes) {\\n                    var ret = [], change;\\n                    for (var i = 0; i < changes.length; i++) {\\n                        change = changes[i];\\n                        ret.push([(change.added ? 1 : change.removed ? -1 : 0), change.value]);\\n                    }\\n                    return ret;\\n                }\\n            };\\n        })();\\n\\n        if (typeof module !== 'undefined') {\\n            module.exports = JsDiff;\\n        }\\n\\n    }); // module: browser/diff.js\\n\\n    require.register(\\\"browser/events.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module exports.\\n         */\\n\\n        exports.EventEmitter = EventEmitter;\\n\\n        /**\\n         * Check if `obj` is an array.\\n         */\\n\\n        function isArray(obj) {\\n            return '[object Array]' == {}.toString.call(obj);\\n        }\\n\\n        /**\\n         * Event emitter constructor.\\n         *\\n         * @api public\\n         */\\n\\n        function EventEmitter() {\\n        };\\n\\n        /**\\n         * Adds a listener.\\n         *\\n         * @api public\\n         */\\n\\n        EventEmitter.prototype.on = function (name, fn) {\\n            if (!this.$events) {\\n                this.$events = {};\\n            }\\n\\n            if (!this.$events[name]) {\\n                this.$events[name] = fn;\\n            } else if (isArray(this.$events[name])) {\\n                this.$events[name].push(fn);\\n            } else {\\n                this.$events[name] = [this.$events[name], fn];\\n            }\\n\\n            return this;\\n        };\\n\\n        EventEmitter.prototype.addListener = EventEmitter.prototype.on;\\n\\n        /**\\n         * Adds a volatile listener.\\n         *\\n         * @api public\\n         */\\n\\n        EventEmitter.prototype.once = function (name, fn) {\\n            var self = this;\\n\\n            function on() {\\n                self.removeListener(name, on);\\n                fn.apply(this, arguments);\\n            };\\n\\n            on.listener = fn;\\n            this.on(name, on);\\n\\n            return this;\\n        };\\n\\n        /**\\n         * Removes a listener.\\n         *\\n         * @api public\\n         */\\n\\n        EventEmitter.prototype.removeListener = function (name, fn) {\\n            if (this.$events && this.$events[name]) {\\n                var list = this.$events[name];\\n\\n                if (isArray(list)) {\\n                    var pos = -1;\\n\\n                    for (var i = 0, l = list.length; i < l; i++) {\\n                        if (list[i] === fn || (list[i].listener && list[i].listener === fn)) {\\n                            pos = i;\\n                            break;\\n                        }\\n                    }\\n\\n                    if (pos < 0) {\\n                        return this;\\n                    }\\n\\n                    list.splice(pos, 1);\\n\\n                    if (!list.length) {\\n                        delete this.$events[name];\\n                    }\\n                } else if (list === fn || (list.listener && list.listener === fn)) {\\n                    delete this.$events[name];\\n                }\\n            }\\n\\n            return this;\\n        };\\n\\n        /**\\n         * Removes all listeners for an event.\\n         *\\n         * @api public\\n         */\\n\\n        EventEmitter.prototype.removeAllListeners = function (name) {\\n            if (name === undefined) {\\n                this.$events = {};\\n                return this;\\n            }\\n\\n            if (this.$events && this.$events[name]) {\\n                this.$events[name] = null;\\n            }\\n\\n            return this;\\n        };\\n\\n        /**\\n         * Gets all listeners for a certain event.\\n         *\\n         * @api public\\n         */\\n\\n        EventEmitter.prototype.listeners = function (name) {\\n            if (!this.$events) {\\n                this.$events = {};\\n            }\\n\\n            if (!this.$events[name]) {\\n                this.$events[name] = [];\\n            }\\n\\n            if (!isArray(this.$events[name])) {\\n                this.$events[name] = [this.$events[name]];\\n            }\\n\\n            return this.$events[name];\\n        };\\n\\n        /**\\n         * Emits an event.\\n         *\\n         * @api public\\n         */\\n\\n        EventEmitter.prototype.emit = function (name) {\\n            if (!this.$events) {\\n                return false;\\n            }\\n\\n            var handler = this.$events[name];\\n\\n            if (!handler) {\\n                return false;\\n            }\\n\\n            var args = [].slice.call(arguments, 1);\\n\\n            if ('function' == typeof handler) {\\n                handler.apply(this, args);\\n            } else if (isArray(handler)) {\\n                var listeners = handler.slice();\\n\\n                for (var i = 0, l = listeners.length; i < l; i++) {\\n                    listeners[i].apply(this, args);\\n                }\\n            } else {\\n                return false;\\n            }\\n\\n            return true;\\n        };\\n    }); // module: browser/events.js\\n\\n    require.register(\\\"browser/fs.js\\\", function (module, exports, require) {\\n\\n    }); // module: browser/fs.js\\n\\n    require.register(\\\"browser/path.js\\\", function (module, exports, require) {\\n\\n    }); // module: browser/path.js\\n\\n    require.register(\\\"browser/progress.js\\\", function (module, exports, require) {\\n        /**\\n         * Expose `Progress`.\\n         */\\n\\n        module.exports = Progress;\\n\\n        /**\\n         * Initialize a new `Progress` indicator.\\n         */\\n\\n        function Progress() {\\n            this.percent = 0;\\n            this.size(0);\\n            this.fontSize(11);\\n            this.font('helvetica, arial, sans-serif');\\n        }\\n\\n        /**\\n         * Set progress size to `n`.\\n         *\\n         * @param {Number} n\\n         * @return {Progress} for chaining\\n         * @api public\\n         */\\n\\n        Progress.prototype.size = function (n) {\\n            this._size = n;\\n            return this;\\n        };\\n\\n        /**\\n         * Set text to `str`.\\n         *\\n         * @param {String} str\\n         * @return {Progress} for chaining\\n         * @api public\\n         */\\n\\n        Progress.prototype.text = function (str) {\\n            this._text = str;\\n            return this;\\n        };\\n\\n        /**\\n         * Set font size to `n`.\\n         *\\n         * @param {Number} n\\n         * @return {Progress} for chaining\\n         * @api public\\n         */\\n\\n        Progress.prototype.fontSize = function (n) {\\n            this._fontSize = n;\\n            return this;\\n        };\\n\\n        /**\\n         * Set font `family`.\\n         *\\n         * @param {String} family\\n         * @return {Progress} for chaining\\n         */\\n\\n        Progress.prototype.font = function (family) {\\n            this._font = family;\\n            return this;\\n        };\\n\\n        /**\\n         * Update percentage to `n`.\\n         *\\n         * @param {Number} n\\n         * @return {Progress} for chaining\\n         */\\n\\n        Progress.prototype.update = function (n) {\\n            this.percent = n;\\n            return this;\\n        };\\n\\n        /**\\n         * Draw on `ctx`.\\n         *\\n         * @param {CanvasRenderingContext2d} ctx\\n         * @return {Progress} for chaining\\n         */\\n\\n        Progress.prototype.draw = function (ctx) {\\n            try {\\n                var percent = Math.min(this.percent, 100)\\n                    , size = this._size\\n                    , half = size / 2\\n                    , x = half\\n                    , y = half\\n                    , rad = half - 1\\n                    , fontSize = this._fontSize;\\n\\n                ctx.font = fontSize + 'px ' + this._font;\\n\\n                var angle = Math.PI * 2 * (percent / 100);\\n                ctx.clearRect(0, 0, size, size);\\n\\n                // outer circle\\n                ctx.strokeStyle = '#9f9f9f';\\n                ctx.beginPath();\\n                ctx.arc(x, y, rad, 0, angle, false);\\n                ctx.stroke();\\n\\n                // inner circle\\n                ctx.strokeStyle = '#eee';\\n                ctx.beginPath();\\n                ctx.arc(x, y, rad - 1, 0, angle, true);\\n                ctx.stroke();\\n\\n                // text\\n                var text = this._text || (percent | 0) + '%'\\n                    , w = ctx.measureText(text).width;\\n\\n                ctx.fillText(\\n                    text\\n                    , x - w / 2 + 1\\n                    , y + fontSize / 2 - 1);\\n            } catch (ex) {\\n            } //don't fail if we can't render progress\\n            return this;\\n        };\\n\\n    }); // module: browser/progress.js\\n\\n    require.register(\\\"browser/tty.js\\\", function (module, exports, require) {\\n\\n        exports.isatty = function () {\\n            return true;\\n        };\\n\\n        exports.getWindowSize = function () {\\n            if ('innerHeight' in global) {\\n                return [global.innerHeight, global.innerWidth];\\n            } else {\\n                // In a Web Worker, the DOM Window is not available.\\n                return [640, 480];\\n            }\\n        };\\n\\n    }); // module: browser/tty.js\\n\\n    require.register(\\\"context.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Expose `Context`.\\n         */\\n\\n        module.exports = Context;\\n\\n        /**\\n         * Initialize a new `Context`.\\n         *\\n         * @api private\\n         */\\n\\n        function Context() {\\n        }\\n\\n        /**\\n         * Set or get the context `Runnable` to `runnable`.\\n         *\\n         * @param {Runnable} runnable\\n         * @return {Context}\\n         * @api private\\n         */\\n\\n        Context.prototype.runnable = function (runnable) {\\n            if (0 == arguments.length) return this._runnable;\\n            this.test = this._runnable = runnable;\\n            return this;\\n        };\\n\\n        /**\\n         * Set test timeout `ms`.\\n         *\\n         * @param {Number} ms\\n         * @return {Context} self\\n         * @api private\\n         */\\n\\n        Context.prototype.timeout = function (ms) {\\n            this.runnable().timeout(ms);\\n            return this;\\n        };\\n\\n        /**\\n         * Set test slowness threshold `ms`.\\n         *\\n         * @param {Number} ms\\n         * @return {Context} self\\n         * @api private\\n         */\\n\\n        Context.prototype.slow = function (ms) {\\n            this.runnable().slow(ms);\\n            return this;\\n        };\\n\\n        /**\\n         * Inspect the context void of `._runnable`.\\n         *\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        Context.prototype.inspect = function () {\\n            return JSON.stringify(this, function (key, val) {\\n                if ('_runnable' == key) return;\\n                if ('test' == key) return;\\n                return val;\\n            }, 2);\\n        };\\n\\n    }); // module: context.js\\n\\n    require.register(\\\"hook.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Runnable = require('./runnable');\\n\\n        /**\\n         * Expose `Hook`.\\n         */\\n\\n        module.exports = Hook;\\n\\n        /**\\n         * Initialize a new `Hook` with the given `title` and callback `fn`.\\n         *\\n         * @param {String} title\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        function Hook(title, fn) {\\n            Runnable.call(this, title, fn);\\n            this.type = 'hook';\\n        }\\n\\n        /**\\n         * Inherit from `Runnable.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = Runnable.prototype;\\n        Hook.prototype = new F;\\n        Hook.prototype.constructor = Hook;\\n\\n\\n        /**\\n         * Get or set the test `err`.\\n         *\\n         * @param {Error} err\\n         * @return {Error}\\n         * @api public\\n         */\\n\\n        Hook.prototype.error = function (err) {\\n            if (0 == arguments.length) {\\n                var err = this._error;\\n                this._error = null;\\n                return err;\\n            }\\n\\n            this._error = err;\\n        };\\n\\n    }); // module: hook.js\\n\\n    require.register(\\\"interfaces/bdd.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Suite = require('../suite')\\n            , Test = require('../test')\\n            , utils = require('../utils');\\n\\n        /**\\n         * BDD-style interface:\\n         *\\n         *      describe('Array', function(){\\n *        describe('#indexOf()', function(){\\n *          it('should return -1 when not present', function(){\\n *\\n *          });\\n *\\n *          it('should return the index when present', function(){\\n *\\n *          });\\n *        });\\n *      });\\n         *\\n         */\\n\\n        module.exports = function (suite) {\\n            var suites = [suite];\\n\\n            suite.on('pre-require', function (context, file, mocha) {\\n\\n                /**\\n                 * Execute before running tests.\\n                 */\\n\\n                context.before = function (fn) {\\n                    suites[0].beforeAll(fn);\\n                };\\n\\n                /**\\n                 * Execute after running tests.\\n                 */\\n\\n                context.after = function (fn) {\\n                    suites[0].afterAll(fn);\\n                };\\n\\n                /**\\n                 * Execute before each test case.\\n                 */\\n\\n                context.beforeEach = function (fn) {\\n                    suites[0].beforeEach(fn);\\n                };\\n\\n                /**\\n                 * Execute after each test case.\\n                 */\\n\\n                context.afterEach = function (fn) {\\n                    suites[0].afterEach(fn);\\n                };\\n\\n                /**\\n                 * Describe a \\\"suite\\\" with the given `title`\\n                 * and callback `fn` containing nested suites\\n                 * and/or tests.\\n                 */\\n\\n                context.describe = context.context = function (title, fn) {\\n                    var suite = Suite.create(suites[0], title);\\n                    suites.unshift(suite);\\n                    fn.call(suite);\\n                    suites.shift();\\n                    return suite;\\n                };\\n\\n                /**\\n                 * Pending describe.\\n                 */\\n\\n                context.xdescribe =\\n                    context.xcontext =\\n                        context.describe.skip = function (title, fn) {\\n                            var suite = Suite.create(suites[0], title);\\n                            suite.pending = true;\\n                            suites.unshift(suite);\\n                            fn.call(suite);\\n                            suites.shift();\\n                        };\\n\\n                /**\\n                 * Exclusive suite.\\n                 */\\n\\n                context.describe.only = function (title, fn) {\\n                    var suite = context.describe(title, fn);\\n                    mocha.grep(suite.fullTitle());\\n                    return suite;\\n                };\\n\\n                /**\\n                 * Describe a specification or test-case\\n                 * with the given `title` and callback `fn`\\n                 * acting as a thunk.\\n                 */\\n\\n                context.it = context.specify = function (title, fn) {\\n                    var suite = suites[0];\\n                    if (suite.pending) var fn = null;\\n                    var test = new Test(title, fn);\\n                    suite.addTest(test);\\n                    return test;\\n                };\\n\\n                /**\\n                 * Exclusive test-case.\\n                 */\\n\\n                context.it.only = function (title, fn) {\\n                    var test = context.it(title, fn);\\n                    var reString = '^' + utils.escapeRegexp(test.fullTitle()) + '$';\\n                    mocha.grep(new RegExp(reString));\\n                    return test;\\n                };\\n\\n                /**\\n                 * Pending test case.\\n                 */\\n\\n                context.xit =\\n                    context.xspecify =\\n                        context.it.skip = function (title) {\\n                            context.it(title);\\n                        };\\n            });\\n        };\\n\\n    }); // module: interfaces/bdd.js\\n\\n    require.register(\\\"interfaces/exports.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Suite = require('../suite')\\n            , Test = require('../test');\\n\\n        /**\\n         * TDD-style interface:\\n         *\\n         *     exports.Array = {\\n *       '#indexOf()': {\\n *         'should return -1 when the value is not present': function(){\\n *\\n *         },\\n *\\n *         'should return the correct index when the value is present': function(){\\n *\\n *         }\\n *       }\\n *     };\\n         *\\n         */\\n\\n        module.exports = function (suite) {\\n            var suites = [suite];\\n\\n            suite.on('require', visit);\\n\\n            function visit(obj) {\\n                var suite;\\n                for (var key in obj) {\\n                    if ('function' == typeof obj[key]) {\\n                        var fn = obj[key];\\n                        switch (key) {\\n                            case 'before':\\n                                suites[0].beforeAll(fn);\\n                                break;\\n                            case 'after':\\n                                suites[0].afterAll(fn);\\n                                break;\\n                            case 'beforeEach':\\n                                suites[0].beforeEach(fn);\\n                                break;\\n                            case 'afterEach':\\n                                suites[0].afterEach(fn);\\n                                break;\\n                            default:\\n                                suites[0].addTest(new Test(key, fn));\\n                        }\\n                    } else {\\n                        var suite = Suite.create(suites[0], key);\\n                        suites.unshift(suite);\\n                        visit(obj[key]);\\n                        suites.shift();\\n                    }\\n                }\\n            }\\n        };\\n\\n    }); // module: interfaces/exports.js\\n\\n    require.register(\\\"interfaces/index.js\\\", function (module, exports, require) {\\n\\n        exports.bdd = require('./bdd');\\n        exports.tdd = require('./tdd');\\n        exports.qunit = require('./qunit');\\n        exports.exports = require('./exports');\\n\\n    }); // module: interfaces/index.js\\n\\n    require.register(\\\"interfaces/qunit.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Suite = require('../suite')\\n            , Test = require('../test')\\n            , utils = require('../utils');\\n\\n        /**\\n         * QUnit-style interface:\\n         *\\n         *     suite('Array');\\n         *\\n         *     test('#length', function(){\\n *       var arr = [1,2,3];\\n *       ok(arr.length == 3);\\n *     });\\n         *\\n         *     test('#indexOf()', function(){\\n *       var arr = [1,2,3];\\n *       ok(arr.indexOf(1) == 0);\\n *       ok(arr.indexOf(2) == 1);\\n *       ok(arr.indexOf(3) == 2);\\n *     });\\n         *\\n         *     suite('String');\\n         *\\n         *     test('#length', function(){\\n *       ok('foo'.length == 3);\\n *     });\\n         *\\n         */\\n\\n        module.exports = function (suite) {\\n            var suites = [suite];\\n\\n            suite.on('pre-require', function (context, file, mocha) {\\n\\n                /**\\n                 * Execute before running tests.\\n                 */\\n\\n                context.before = function (fn) {\\n                    suites[0].beforeAll(fn);\\n                };\\n\\n                /**\\n                 * Execute after running tests.\\n                 */\\n\\n                context.after = function (fn) {\\n                    suites[0].afterAll(fn);\\n                };\\n\\n                /**\\n                 * Execute before each test case.\\n                 */\\n\\n                context.beforeEach = function (fn) {\\n                    suites[0].beforeEach(fn);\\n                };\\n\\n                /**\\n                 * Execute after each test case.\\n                 */\\n\\n                context.afterEach = function (fn) {\\n                    suites[0].afterEach(fn);\\n                };\\n\\n                /**\\n                 * Describe a \\\"suite\\\" with the given `title`.\\n                 */\\n\\n                context.suite = function (title) {\\n                    if (suites.length > 1) suites.shift();\\n                    var suite = Suite.create(suites[0], title);\\n                    suites.unshift(suite);\\n                    return suite;\\n                };\\n\\n                /**\\n                 * Exclusive test-case.\\n                 */\\n\\n                context.suite.only = function (title, fn) {\\n                    var suite = context.suite(title, fn);\\n                    mocha.grep(suite.fullTitle());\\n                };\\n\\n                /**\\n                 * Describe a specification or test-case\\n                 * with the given `title` and callback `fn`\\n                 * acting as a thunk.\\n                 */\\n\\n                context.test = function (title, fn) {\\n                    var test = new Test(title, fn);\\n                    suites[0].addTest(test);\\n                    return test;\\n                };\\n\\n                /**\\n                 * Exclusive test-case.\\n                 */\\n\\n                context.test.only = function (title, fn) {\\n                    var test = context.test(title, fn);\\n                    var reString = '^' + utils.escapeRegexp(test.fullTitle()) + '$';\\n                    mocha.grep(new RegExp(reString));\\n                };\\n\\n                /**\\n                 * Pending test case.\\n                 */\\n\\n                context.test.skip = function (title) {\\n                    context.test(title);\\n                };\\n            });\\n        };\\n\\n    }); // module: interfaces/qunit.js\\n\\n    require.register(\\\"interfaces/tdd.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Suite = require('../suite')\\n            , Test = require('../test')\\n            , utils = require('../utils');\\n        ;\\n\\n        /**\\n         * TDD-style interface:\\n         *\\n         *      suite('Array', function(){\\n *        suite('#indexOf()', function(){\\n *          suiteSetup(function(){\\n *\\n *          });\\n *\\n *          test('should return -1 when not present', function(){\\n *\\n *          });\\n *\\n *          test('should return the index when present', function(){\\n *\\n *          });\\n *\\n *          suiteTeardown(function(){\\n *\\n *          });\\n *        });\\n *      });\\n         *\\n         */\\n\\n        module.exports = function (suite) {\\n            var suites = [suite];\\n\\n            suite.on('pre-require', function (context, file, mocha) {\\n\\n                /**\\n                 * Execute before each test case.\\n                 */\\n\\n                context.setup = function (fn) {\\n                    suites[0].beforeEach(fn);\\n                };\\n\\n                /**\\n                 * Execute after each test case.\\n                 */\\n\\n                context.teardown = function (fn) {\\n                    suites[0].afterEach(fn);\\n                };\\n\\n                /**\\n                 * Execute before the suite.\\n                 */\\n\\n                context.suiteSetup = function (fn) {\\n                    suites[0].beforeAll(fn);\\n                };\\n\\n                /**\\n                 * Execute after the suite.\\n                 */\\n\\n                context.suiteTeardown = function (fn) {\\n                    suites[0].afterAll(fn);\\n                };\\n\\n                /**\\n                 * Describe a \\\"suite\\\" with the given `title`\\n                 * and callback `fn` containing nested suites\\n                 * and/or tests.\\n                 */\\n\\n                context.suite = function (title, fn) {\\n                    var suite = Suite.create(suites[0], title);\\n                    suites.unshift(suite);\\n                    fn.call(suite);\\n                    suites.shift();\\n                    return suite;\\n                };\\n\\n                /**\\n                 * Pending suite.\\n                 */\\n                context.suite.skip = function (title, fn) {\\n                    var suite = Suite.create(suites[0], title);\\n                    suite.pending = true;\\n                    suites.unshift(suite);\\n                    fn.call(suite);\\n                    suites.shift();\\n                };\\n\\n                /**\\n                 * Exclusive test-case.\\n                 */\\n\\n                context.suite.only = function (title, fn) {\\n                    var suite = context.suite(title, fn);\\n                    mocha.grep(suite.fullTitle());\\n                };\\n\\n                /**\\n                 * Describe a specification or test-case\\n                 * with the given `title` and callback `fn`\\n                 * acting as a thunk.\\n                 */\\n\\n                context.test = function (title, fn) {\\n                    var suite = suites[0];\\n                    if (suite.pending) var fn = null;\\n                    var test = new Test(title, fn);\\n                    suite.addTest(test);\\n                    return test;\\n                };\\n\\n                /**\\n                 * Exclusive test-case.\\n                 */\\n\\n                context.test.only = function (title, fn) {\\n                    var test = context.test(title, fn);\\n                    var reString = '^' + utils.escapeRegexp(test.fullTitle()) + '$';\\n                    mocha.grep(new RegExp(reString));\\n                };\\n\\n                /**\\n                 * Pending test case.\\n                 */\\n\\n                context.test.skip = function (title) {\\n                    context.test(title);\\n                };\\n            });\\n        };\\n\\n    }); // module: interfaces/tdd.js\\n\\n    require.register(\\\"mocha.js\\\", function (module, exports, require) {\\n        /*!\\n         * mocha\\n         * Copyright(c) 2011 TJ Holowaychuk <tj@vision-media.ca>\\n         * MIT Licensed\\n         */\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var path = require('browser/path')\\n            , utils = require('./utils');\\n\\n        /**\\n         * Expose `Mocha`.\\n         */\\n\\n        exports = module.exports = Mocha;\\n\\n        /**\\n         * Expose internals.\\n         */\\n\\n        exports.utils = utils;\\n        exports.interfaces = require('./interfaces');\\n        exports.reporters = require('./reporters');\\n        exports.Runnable = require('./runnable');\\n        exports.Context = require('./context');\\n        exports.Runner = require('./runner');\\n        exports.Suite = require('./suite');\\n        exports.Hook = require('./hook');\\n        exports.Test = require('./test');\\n\\n        /**\\n         * Return image `name` path.\\n         *\\n         * @param {String} name\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        function image(name) {\\n            return __dirname + '/../images/' + name + '.png';\\n        }\\n\\n        /**\\n         * Setup mocha with `options`.\\n         *\\n         * Options:\\n         *\\n         *   - `ui` name \\\"bdd\\\", \\\"tdd\\\", \\\"exports\\\" etc\\n         *   - `reporter` reporter instance, defaults to `mocha.reporters.Dot`\\n         *   - `globals` array of accepted globals\\n         *   - `timeout` timeout in milliseconds\\n         *   - `bail` bail on the first test failure\\n         *   - `slow` milliseconds to wait before considering a test slow\\n         *   - `ignoreLeaks` ignore global leaks\\n         *   - `grep` string or regexp to filter tests with\\n         *\\n         * @param {Object} options\\n         * @api public\\n         */\\n\\n        function Mocha(options) {\\n            options = options || {};\\n            this.files = [];\\n            this.options = options;\\n            this.grep(options.grep);\\n            this.suite = new exports.Suite('', new exports.Context);\\n            this.ui(options.ui);\\n            this.bail(options.bail);\\n            this.reporter(options.reporter);\\n            if (null != options.timeout) this.timeout(options.timeout);\\n            this.useColors(options.useColors)\\n            if (options.slow) this.slow(options.slow);\\n\\n            this.suite.on('pre-require', function (context) {\\n                exports.afterEach = context.afterEach || context.teardown;\\n                exports.after = context.after || context.suiteTeardown;\\n                exports.beforeEach = context.beforeEach || context.setup;\\n                exports.before = context.before || context.suiteSetup;\\n                exports.describe = context.describe || context.suite;\\n                exports.it = context.it || context.test;\\n                exports.setup = context.setup || context.beforeEach;\\n                exports.suiteSetup = context.suiteSetup || context.before;\\n                exports.suiteTeardown = context.suiteTeardown || context.after;\\n                exports.suite = context.suite || context.describe;\\n                exports.teardown = context.teardown || context.afterEach;\\n                exports.test = context.test || context.it;\\n            });\\n        }\\n\\n        /**\\n         * Enable or disable bailing on the first failure.\\n         *\\n         * @param {Boolean} [bail]\\n         * @api public\\n         */\\n\\n        Mocha.prototype.bail = function (bail) {\\n            if (0 == arguments.length) bail = true;\\n            this.suite.bail(bail);\\n            return this;\\n        };\\n\\n        /**\\n         * Add test `file`.\\n         *\\n         * @param {String} file\\n         * @api public\\n         */\\n\\n        Mocha.prototype.addFile = function (file) {\\n            this.files.push(file);\\n            return this;\\n        };\\n\\n        /**\\n         * Set reporter to `reporter`, defaults to \\\"dot\\\".\\n         *\\n         * @param {String|Function} reporter name or constructor\\n         * @api public\\n         */\\n\\n        Mocha.prototype.reporter = function (reporter) {\\n            if ('function' == typeof reporter) {\\n                this._reporter = reporter;\\n            } else {\\n                reporter = reporter || 'dot';\\n                var _reporter;\\n                try {\\n                    _reporter = require('./reporters/' + reporter);\\n                } catch (err) {\\n                }\\n                ;\\n                if (!_reporter) try {\\n                    _reporter = require(reporter);\\n                } catch (err) {\\n                }\\n                ;\\n                if (!_reporter && reporter === 'teamcity')\\n                    console.warn('The Teamcity reporter was moved to a package named ' +\\n                        'mocha-teamcity-reporter ' +\\n                        '(https://npmjs.org/package/mocha-teamcity-reporter).');\\n                if (!_reporter) throw new Error('invalid reporter \\\"' + reporter + '\\\"');\\n                this._reporter = _reporter;\\n            }\\n            return this;\\n        };\\n\\n        /**\\n         * Set test UI `name`, defaults to \\\"bdd\\\".\\n         *\\n         * @param {String} bdd\\n         * @api public\\n         */\\n\\n        Mocha.prototype.ui = function (name) {\\n            name = name || 'bdd';\\n            this._ui = exports.interfaces[name];\\n            if (!this._ui) try {\\n                this._ui = require(name);\\n            } catch (err) {\\n            }\\n            ;\\n            if (!this._ui) throw new Error('invalid interface \\\"' + name + '\\\"');\\n            this._ui = this._ui(this.suite);\\n            return this;\\n        };\\n\\n        /**\\n         * Load registered files.\\n         *\\n         * @api private\\n         */\\n\\n        Mocha.prototype.loadFiles = function (fn) {\\n            var self = this;\\n            var suite = this.suite;\\n            var pending = this.files.length;\\n            this.files.forEach(function (file) {\\n                file = path.resolve(file);\\n                suite.emit('pre-require', global, file, self);\\n                suite.emit('require', require(file), file, self);\\n                suite.emit('post-require', global, file, self);\\n                --pending || (fn && fn());\\n            });\\n        };\\n\\n        /**\\n         * Enable growl support.\\n         *\\n         * @api private\\n         */\\n\\n        Mocha.prototype._growl = function (runner, reporter) {\\n            var notify = require('growl');\\n\\n            runner.on('end', function () {\\n                var stats = reporter.stats;\\n                if (stats.failures) {\\n                    var msg = stats.failures + ' of ' + runner.total + ' tests failed';\\n                    notify(msg, {name: 'mocha', title: 'Failed', image: image('error')});\\n                } else {\\n                    notify(stats.passes + ' tests passed in ' + stats.duration + 'ms', {\\n                        name: 'mocha'\\n                        , title: 'Passed'\\n                        , image: image('ok')\\n                    });\\n                }\\n            });\\n        };\\n\\n        /**\\n         * Add regexp to grep, if `re` is a string it is escaped.\\n         *\\n         * @param {RegExp|String} re\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.grep = function (re) {\\n            this.options.grep = 'string' == typeof re\\n                ? new RegExp(utils.escapeRegexp(re))\\n                : re;\\n            return this;\\n        };\\n\\n        /**\\n         * Invert `.grep()` matches.\\n         *\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.invert = function () {\\n            this.options.invert = true;\\n            return this;\\n        };\\n\\n        /**\\n         * Ignore global leaks.\\n         *\\n         * @param {Boolean} ignore\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.ignoreLeaks = function (ignore) {\\n            this.options.ignoreLeaks = !!ignore;\\n            return this;\\n        };\\n\\n        /**\\n         * Enable global leak checking.\\n         *\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.checkLeaks = function () {\\n            this.options.ignoreLeaks = false;\\n            return this;\\n        };\\n\\n        /**\\n         * Enable growl support.\\n         *\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.growl = function () {\\n            this.options.growl = true;\\n            return this;\\n        };\\n\\n        /**\\n         * Ignore `globals` array or string.\\n         *\\n         * @param {Array|String} globals\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.globals = function (globals) {\\n            this.options.globals = (this.options.globals || []).concat(globals);\\n            return this;\\n        };\\n\\n        /**\\n         * Emit color output.\\n         *\\n         * @param {Boolean} colors\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.useColors = function (colors) {\\n            this.options.useColors = arguments.length && colors != undefined\\n                ? colors\\n                : true;\\n            return this;\\n        };\\n\\n        /**\\n         * Use inline diffs rather than +/-.\\n         *\\n         * @param {Boolean} inlineDiffs\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.useInlineDiffs = function (inlineDiffs) {\\n            this.options.useInlineDiffs = arguments.length && inlineDiffs != undefined\\n                ? inlineDiffs\\n                : false;\\n            return this;\\n        };\\n\\n        /**\\n         * Set the timeout in milliseconds.\\n         *\\n         * @param {Number} timeout\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.timeout = function (timeout) {\\n            this.suite.timeout(timeout);\\n            return this;\\n        };\\n\\n        /**\\n         * Set slowness threshold in milliseconds.\\n         *\\n         * @param {Number} slow\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.slow = function (slow) {\\n            this.suite.slow(slow);\\n            return this;\\n        };\\n\\n        /**\\n         * Makes all tests async (accepting a callback)\\n         *\\n         * @return {Mocha}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.asyncOnly = function () {\\n            this.options.asyncOnly = true;\\n            return this;\\n        };\\n\\n        /**\\n         * Run tests and invoke `fn()` when complete.\\n         *\\n         * @param {Function} fn\\n         * @return {Runner}\\n         * @api public\\n         */\\n\\n        Mocha.prototype.run = function (fn) {\\n            if (this.files.length) this.loadFiles();\\n            var suite = this.suite;\\n            var options = this.options;\\n            var runner = new exports.Runner(suite);\\n            var reporter = new this._reporter(runner);\\n            runner.ignoreLeaks = false !== options.ignoreLeaks;\\n            runner.asyncOnly = options.asyncOnly;\\n            if (options.grep) runner.grep(options.grep, options.invert);\\n            if (options.globals) runner.globals(options.globals);\\n            if (options.growl) this._growl(runner, reporter);\\n            exports.reporters.Base.useColors = options.useColors;\\n            exports.reporters.Base.inlineDiffs = options.useInlineDiffs;\\n            return runner.run(fn);\\n        };\\n\\n    }); // module: mocha.js\\n\\n    require.register(\\\"ms.js\\\", function (module, exports, require) {\\n        /**\\n         * Helpers.\\n         */\\n\\n        var s = 1000;\\n        var m = s * 60;\\n        var h = m * 60;\\n        var d = h * 24;\\n        var y = d * 365.25;\\n\\n        /**\\n         * Parse or format the given `val`.\\n         *\\n         * Options:\\n         *\\n         *  - `long` verbose formatting [false]\\n         *\\n         * @param {String|Number} val\\n         * @param {Object} options\\n         * @return {String|Number}\\n         * @api public\\n         */\\n\\n        module.exports = function (val, options) {\\n            options = options || {};\\n            if ('string' == typeof val) return parse(val);\\n            return options.long ? longFormat(val) : shortFormat(val);\\n        };\\n\\n        /**\\n         * Parse the given `str` and return milliseconds.\\n         *\\n         * @param {String} str\\n         * @return {Number}\\n         * @api private\\n         */\\n\\n        function parse(str) {\\n            var match = /^((?:\\\\d+)?\\\\.?\\\\d+) *(ms|seconds?|s|minutes?|m|hours?|h|days?|d|years?|y)?$/i.exec(str);\\n            if (!match) return;\\n            var n = parseFloat(match[1]);\\n            var type = (match[2] || 'ms').toLowerCase();\\n            switch (type) {\\n                case 'years':\\n                case 'year':\\n                case 'y':\\n                    return n * y;\\n                case 'days':\\n                case 'day':\\n                case 'd':\\n                    return n * d;\\n                case 'hours':\\n                case 'hour':\\n                case 'h':\\n                    return n * h;\\n                case 'minutes':\\n                case 'minute':\\n                case 'm':\\n                    return n * m;\\n                case 'seconds':\\n                case 'second':\\n                case 's':\\n                    return n * s;\\n                case 'ms':\\n                    return n;\\n            }\\n        }\\n\\n        /**\\n         * Short format for `ms`.\\n         *\\n         * @param {Number} ms\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        function shortFormat(ms) {\\n            if (ms >= d) return Math.round(ms / d) + 'd';\\n            if (ms >= h) return Math.round(ms / h) + 'h';\\n            if (ms >= m) return Math.round(ms / m) + 'm';\\n            if (ms >= s) return Math.round(ms / s) + 's';\\n            return ms + 'ms';\\n        }\\n\\n        /**\\n         * Long format for `ms`.\\n         *\\n         * @param {Number} ms\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        function longFormat(ms) {\\n            return plural(ms, d, 'day')\\n                || plural(ms, h, 'hour')\\n                || plural(ms, m, 'minute')\\n                || plural(ms, s, 'second')\\n                || ms + ' ms';\\n        }\\n\\n        /**\\n         * Pluralization helper.\\n         */\\n\\n        function plural(ms, n, name) {\\n            if (ms < n) return;\\n            if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\\n            return Math.ceil(ms / n) + ' ' + name + 's';\\n        }\\n\\n    }); // module: ms.js\\n\\n    require.register(\\\"reporters/base.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var tty = require('browser/tty')\\n            , diff = require('browser/diff')\\n            , ms = require('../ms')\\n            , utils = require('../utils');\\n\\n        /**\\n         * Save timer references to avoid Sinon interfering (see GH-237).\\n         */\\n\\n        var Date = global.Date\\n            , setTimeout = global.setTimeout\\n            , setInterval = global.setInterval\\n            , clearTimeout = global.clearTimeout\\n            , clearInterval = global.clearInterval;\\n\\n        /**\\n         * Check if both stdio streams are associated with a tty.\\n         */\\n\\n        var isatty = tty.isatty(1) && tty.isatty(2);\\n\\n        /**\\n         * Expose `Base`.\\n         */\\n\\n        exports = module.exports = Base;\\n\\n        /**\\n         * Enable coloring by default.\\n         */\\n\\n        exports.useColors = isatty || (process.env.MOCHA_COLORS !== undefined);\\n\\n        /**\\n         * Inline diffs instead of +/-\\n         */\\n\\n        exports.inlineDiffs = false;\\n\\n        /**\\n         * Default color map.\\n         */\\n\\n        exports.colors = {\\n            'pass': 90\\n            , 'fail': 31\\n            , 'bright pass': 92\\n            , 'bright fail': 91\\n            , 'bright yellow': 93\\n            , 'pending': 36\\n            , 'suite': 0\\n            , 'error title': 0\\n            , 'error message': 31\\n            , 'error stack': 90\\n            , 'checkmark': 32\\n            , 'fast': 90\\n            , 'medium': 33\\n            , 'slow': 31\\n            , 'green': 32\\n            , 'light': 90\\n            , 'diff gutter': 90\\n            , 'diff added': 42\\n            , 'diff removed': 41\\n        };\\n\\n        /**\\n         * Default symbol map.\\n         */\\n\\n        exports.symbols = {\\n            ok: '✓',\\n            err: '✖',\\n            dot: '․'\\n        };\\n\\n// With node.js on Windows: use symbols available in terminal default fonts\\n        if ('win32' == process.platform) {\\n            exports.symbols.ok = '\\\\u221A';\\n            exports.symbols.err = '\\\\u00D7';\\n            exports.symbols.dot = '.';\\n        }\\n\\n        /**\\n         * Color `str` with the given `type`,\\n         * allowing colors to be disabled,\\n         * as well as user-defined color\\n         * schemes.\\n         *\\n         * @param {String} type\\n         * @param {String} str\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        var color = exports.color = function (type, str) {\\n            if (!exports.useColors) return str;\\n            return '\\\\u001b[' + exports.colors[type] + 'm' + str + '\\\\u001b[0m';\\n        };\\n\\n        /**\\n         * Expose term window size, with some\\n         * defaults for when stderr is not a tty.\\n         */\\n\\n        exports.window = {\\n            width: isatty\\n                ? process.stdout.getWindowSize\\n                    ? process.stdout.getWindowSize(1)[0]\\n                    : tty.getWindowSize()[1]\\n                : 75\\n        };\\n\\n        /**\\n         * Expose some basic cursor interactions\\n         * that are common among reporters.\\n         */\\n\\n        exports.cursor = {\\n            hide: function () {\\n                isatty && process.stdout.write('\\\\u001b[?25l');\\n            },\\n\\n            show: function () {\\n                isatty && process.stdout.write('\\\\u001b[?25h');\\n            },\\n\\n            deleteLine: function () {\\n                isatty && process.stdout.write('\\\\u001b[2K');\\n            },\\n\\n            beginningOfLine: function () {\\n                isatty && process.stdout.write('\\\\u001b[0G');\\n            },\\n\\n            CR: function () {\\n                if (isatty) {\\n                    exports.cursor.deleteLine();\\n                    exports.cursor.beginningOfLine();\\n                } else {\\n                    process.stdout.write('\\\\r');\\n                }\\n            }\\n        };\\n\\n        /**\\n         * Outut the given `failures` as a list.\\n         *\\n         * @param {Array} failures\\n         * @api public\\n         */\\n\\n        exports.list = function (failures) {\\n            console.error();\\n            failures.forEach(function (test, i) {\\n                // format\\n                var fmt = color('error title', '  %s) %s:\\\\n')\\n                    + color('error message', '     %s')\\n                    + color('error stack', '\\\\n%s\\\\n');\\n\\n                // msg\\n                var err = test.err\\n                    , message = err.message || ''\\n                    , stack = err.stack || message\\n                    , index = stack.indexOf(message) + message.length\\n                    , msg = stack.slice(0, index)\\n                    , actual = err.actual\\n                    , expected = err.expected\\n                    , escape = true;\\n\\n                // uncaught\\n                if (err.uncaught) {\\n                    msg = 'Uncaught ' + msg;\\n                }\\n\\n                // explicitly show diff\\n                if (err.showDiff && sameType(actual, expected)) {\\n                    escape = false;\\n                    err.actual = actual = stringify(canonicalize(actual));\\n                    err.expected = expected = stringify(canonicalize(expected));\\n                }\\n\\n                // actual / expected diff\\n                if ('string' == typeof actual && 'string' == typeof expected) {\\n                    fmt = color('error title', '  %s) %s:\\\\n%s') + color('error stack', '\\\\n%s\\\\n');\\n                    var match = message.match(/^([^:]+): expected/);\\n                    msg = '\\\\n      ' + color('error message', match ? match[1] : msg);\\n\\n                    if (exports.inlineDiffs) {\\n                        msg += inlineDiff(err, escape);\\n                    } else {\\n                        msg += unifiedDiff(err, escape);\\n                    }\\n                }\\n\\n                // indent stack trace without msg\\n                stack = stack.slice(index ? index + 1 : index)\\n                    .replace(/^/gm, '  ');\\n\\n                console.error(fmt, (i + 1), test.fullTitle(), msg, stack);\\n            });\\n        };\\n\\n        /**\\n         * Initialize a new `Base` reporter.\\n         *\\n         * All other reporters generally\\n         * inherit from this reporter, providing\\n         * stats such as test duration, number\\n         * of tests passed / failed etc.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function Base(runner) {\\n            var self = this\\n                , stats = this.stats = {suites: 0, tests: 0, passes: 0, pending: 0, failures: 0}\\n                , failures = this.failures = [];\\n\\n            if (!runner) return;\\n            this.runner = runner;\\n\\n            runner.stats = stats;\\n\\n            runner.on('start', function () {\\n                stats.start = new Date;\\n            });\\n\\n            runner.on('suite', function (suite) {\\n                stats.suites = stats.suites || 0;\\n                suite.root || stats.suites++;\\n            });\\n\\n            runner.on('test end', function (test) {\\n                stats.tests = stats.tests || 0;\\n                stats.tests++;\\n            });\\n\\n            runner.on('pass', function (test) {\\n                stats.passes = stats.passes || 0;\\n\\n                var medium = test.slow() / 2;\\n                test.speed = test.duration > test.slow()\\n                    ? 'slow'\\n                    : test.duration > medium\\n                        ? 'medium'\\n                        : 'fast';\\n\\n                stats.passes++;\\n            });\\n\\n            runner.on('fail', function (test, err) {\\n                stats.failures = stats.failures || 0;\\n                stats.failures++;\\n                test.err = err;\\n                failures.push(test);\\n            });\\n\\n            runner.on('end', function () {\\n                stats.end = new Date;\\n                stats.duration = new Date - stats.start;\\n            });\\n\\n            runner.on('pending', function () {\\n                stats.pending++;\\n            });\\n        }\\n\\n        /**\\n         * Output common epilogue used by many of\\n         * the bundled reporters.\\n         *\\n         * @api public\\n         */\\n\\n        Base.prototype.epilogue = function () {\\n            var stats = this.stats;\\n            var tests;\\n            var fmt;\\n\\n            console.log();\\n\\n            // passes\\n            fmt = color('bright pass', ' ')\\n                + color('green', ' %d passing')\\n                + color('light', ' (%s)');\\n\\n            console.log(fmt,\\n                stats.passes || 0,\\n                ms(stats.duration));\\n\\n            // pending\\n            if (stats.pending) {\\n                fmt = color('pending', ' ')\\n                    + color('pending', ' %d pending');\\n\\n                console.log(fmt, stats.pending);\\n            }\\n\\n            // failures\\n            if (stats.failures) {\\n                fmt = color('fail', '  %d failing');\\n\\n                console.error(fmt,\\n                    stats.failures);\\n\\n                Base.list(this.failures);\\n                console.error();\\n            }\\n\\n            console.log();\\n        };\\n\\n        /**\\n         * Pad the given `str` to `len`.\\n         *\\n         * @param {String} str\\n         * @param {String} len\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        function pad(str, len) {\\n            str = String(str);\\n            return Array(len - str.length + 1).join(' ') + str;\\n        }\\n\\n\\n        /**\\n         * Returns an inline diff between 2 strings with coloured ANSI output\\n         *\\n         * @param {Error} Error with actual/expected\\n         * @return {String} Diff\\n         * @api private\\n         */\\n\\n        function inlineDiff(err, escape) {\\n            var msg = errorDiff(err, 'WordsWithSpace', escape);\\n\\n            // linenos\\n            var lines = msg.split('\\\\n');\\n            if (lines.length > 4) {\\n                var width = String(lines.length).length;\\n                msg = lines.map(function (str, i) {\\n                    return pad(++i, width) + ' |' + ' ' + str;\\n                }).join('\\\\n');\\n            }\\n\\n            // legend\\n            msg = '\\\\n'\\n                + color('diff removed', 'actual')\\n                + ' '\\n                + color('diff added', 'expected')\\n                + '\\\\n\\\\n'\\n                + msg\\n                + '\\\\n';\\n\\n            // indent\\n            msg = msg.replace(/^/gm, '      ');\\n            return msg;\\n        }\\n\\n        /**\\n         * Returns a unified diff between 2 strings\\n         *\\n         * @param {Error} Error with actual/expected\\n         * @return {String} Diff\\n         * @api private\\n         */\\n\\n        function unifiedDiff(err, escape) {\\n            var indent = '      ';\\n\\n            function cleanUp(line) {\\n                if (escape) {\\n                    line = escapeInvisibles(line);\\n                }\\n                if (line[0] === '+') return indent + colorLines('diff added', line);\\n                if (line[0] === '-') return indent + colorLines('diff removed', line);\\n                if (line.match(/\\\\@\\\\@/)) return null;\\n                if (line.match(/\\\\\\\\ No newline/)) return null;\\n                else return indent + line;\\n            }\\n\\n            function notBlank(line) {\\n                return line != null;\\n            }\\n\\n            msg = diff.createPatch('string', err.actual, err.expected);\\n            var lines = msg.split('\\\\n').splice(4);\\n            return '\\\\n      '\\n                + colorLines('diff added', '+ expected') + ' '\\n                + colorLines('diff removed', '- actual')\\n                + '\\\\n\\\\n'\\n                + lines.map(cleanUp).filter(notBlank).join('\\\\n');\\n        }\\n\\n        /**\\n         * Return a character diff for `err`.\\n         *\\n         * @param {Error} err\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        function errorDiff(err, type, escape) {\\n            var actual = escape ? escapeInvisibles(err.actual) : err.actual;\\n            var expected = escape ? escapeInvisibles(err.expected) : err.expected;\\n            return diff['diff' + type](actual, expected).map(function (str) {\\n                if (str.added) return colorLines('diff added', str.value);\\n                if (str.removed) return colorLines('diff removed', str.value);\\n                return str.value;\\n            }).join('');\\n        }\\n\\n        /**\\n         * Returns a string with all invisible characters in plain text\\n         *\\n         * @param {String} line\\n         * @return {String}\\n         * @api private\\n         */\\n        function escapeInvisibles(line) {\\n            return line.replace(/\\\\t/g, '<tab>')\\n                .replace(/\\\\r/g, '<CR>')\\n                .replace(/\\\\n/g, '<LF>\\\\n');\\n        }\\n\\n        /**\\n         * Color lines for `str`, using the color `name`.\\n         *\\n         * @param {String} name\\n         * @param {String} str\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        function colorLines(name, str) {\\n            return str.split('\\\\n').map(function (str) {\\n                return color(name, str);\\n            }).join('\\\\n');\\n        }\\n\\n        /**\\n         * Stringify `obj`.\\n         *\\n         * @param {Object} obj\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        function stringify(obj) {\\n            if (obj instanceof RegExp) return obj.toString();\\n            return JSON.stringify(obj, null, 2);\\n        }\\n\\n        /**\\n         * Return a new object that has the keys in sorted order.\\n         * @param {Object} obj\\n         * @return {Object}\\n         * @api private\\n         */\\n\\n        function canonicalize(obj, stack) {\\n            stack = stack || [];\\n\\n            if (utils.indexOf(stack, obj) !== -1) return obj;\\n\\n            var canonicalizedObj;\\n\\n            if ('[object Array]' == {}.toString.call(obj)) {\\n                stack.push(obj);\\n                canonicalizedObj = utils.map(obj, function (item) {\\n                    return canonicalize(item, stack);\\n                });\\n                stack.pop();\\n            } else if (typeof obj === 'object' && obj !== null) {\\n                stack.push(obj);\\n                canonicalizedObj = {};\\n                utils.forEach(utils.keys(obj).sort(), function (key) {\\n                    canonicalizedObj[key] = canonicalize(obj[key], stack);\\n                });\\n                stack.pop();\\n            } else {\\n                canonicalizedObj = obj;\\n            }\\n\\n            return canonicalizedObj;\\n        }\\n\\n        /**\\n         * Check that a / b have the same type.\\n         *\\n         * @param {Object} a\\n         * @param {Object} b\\n         * @return {Boolean}\\n         * @api private\\n         */\\n\\n        function sameType(a, b) {\\n            a = Object.prototype.toString.call(a);\\n            b = Object.prototype.toString.call(b);\\n            return a == b;\\n        }\\n\\n\\n    }); // module: reporters/base.js\\n\\n    require.register(\\\"reporters/doc.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , utils = require('../utils');\\n\\n        /**\\n         * Expose `Doc`.\\n         */\\n\\n        exports = module.exports = Doc;\\n\\n        /**\\n         * Initialize a new `Doc` reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function Doc(runner) {\\n            Base.call(this, runner);\\n\\n            var self = this\\n                , stats = this.stats\\n                , total = runner.total\\n                , indents = 2;\\n\\n            function indent() {\\n                return Array(indents).join('  ');\\n            }\\n\\n            runner.on('suite', function (suite) {\\n                if (suite.root) return;\\n                ++indents;\\n                console.log('%s<section class=\\\"suite\\\">', indent());\\n                ++indents;\\n                console.log('%s<h1>%s</h1>', indent(), utils.escape(suite.title));\\n                console.log('%s<dl>', indent());\\n            });\\n\\n            runner.on('suite end', function (suite) {\\n                if (suite.root) return;\\n                console.log('%s</dl>', indent());\\n                --indents;\\n                console.log('%s</section>', indent());\\n                --indents;\\n            });\\n\\n            runner.on('pass', function (test) {\\n                console.log('%s  <dt>%s</dt>', indent(), utils.escape(test.title));\\n                var code = utils.escape(utils.clean(test.fn.toString()));\\n                console.log('%s  <dd><pre><code>%s</code></pre></dd>', indent(), code);\\n            });\\n        }\\n\\n    }); // module: reporters/doc.js\\n\\n    require.register(\\\"reporters/dot.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , color = Base.color;\\n\\n        /**\\n         * Expose `Dot`.\\n         */\\n\\n        exports = module.exports = Dot;\\n\\n        /**\\n         * Initialize a new `Dot` matrix test reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function Dot(runner) {\\n            Base.call(this, runner);\\n\\n            var self = this\\n                , stats = this.stats\\n                , width = Base.window.width * .75 | 0\\n                , n = 0;\\n\\n            runner.on('start', function () {\\n                process.stdout.write('\\\\n  ');\\n            });\\n\\n            runner.on('pending', function (test) {\\n                process.stdout.write(color('pending', Base.symbols.dot));\\n            });\\n\\n            runner.on('pass', function (test) {\\n                if (++n % width == 0) process.stdout.write('\\\\n  ');\\n                if ('slow' == test.speed) {\\n                    process.stdout.write(color('bright yellow', Base.symbols.dot));\\n                } else {\\n                    process.stdout.write(color(test.speed, Base.symbols.dot));\\n                }\\n            });\\n\\n            runner.on('fail', function (test, err) {\\n                if (++n % width == 0) process.stdout.write('\\\\n  ');\\n                process.stdout.write(color('fail', Base.symbols.dot));\\n            });\\n\\n            runner.on('end', function () {\\n                console.log();\\n                self.epilogue();\\n            });\\n        }\\n\\n        /**\\n         * Inherit from `Base.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = Base.prototype;\\n        Dot.prototype = new F;\\n        Dot.prototype.constructor = Dot;\\n\\n    }); // module: reporters/dot.js\\n\\n    require.register(\\\"reporters/html-cov.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var JSONCov = require('./json-cov')\\n            , fs = require('browser/fs');\\n\\n        /**\\n         * Expose `HTMLCov`.\\n         */\\n\\n        exports = module.exports = HTMLCov;\\n\\n        /**\\n         * Initialize a new `JsCoverage` reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function HTMLCov(runner) {\\n            var jade = require('jade')\\n                , file = __dirname + '/templates/coverage.jade'\\n                , str = fs.readFileSync(file, 'utf8')\\n                , fn = jade.compile(str, {filename: file})\\n                , self = this;\\n\\n            JSONCov.call(this, runner, false);\\n\\n            runner.on('end', function () {\\n                process.stdout.write(fn({\\n                    cov: self.cov\\n                    , coverageClass: coverageClass\\n                }));\\n            });\\n        }\\n\\n        /**\\n         * Return coverage class for `n`.\\n         *\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        function coverageClass(n) {\\n            if (n >= 75) return 'high';\\n            if (n >= 50) return 'medium';\\n            if (n >= 25) return 'low';\\n            return 'terrible';\\n        }\\n    }); // module: reporters/html-cov.js\\n\\n    require.register(\\\"reporters/html.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , utils = require('../utils')\\n            , Progress = require('../browser/progress')\\n            , escape = utils.escape;\\n\\n        /**\\n         * Save timer references to avoid Sinon interfering (see GH-237).\\n         */\\n\\n        var Date = global.Date\\n            , setTimeout = global.setTimeout\\n            , setInterval = global.setInterval\\n            , clearTimeout = global.clearTimeout\\n            , clearInterval = global.clearInterval;\\n\\n        /**\\n         * Expose `HTML`.\\n         */\\n\\n        exports = module.exports = HTML;\\n\\n        /**\\n         * Stats template.\\n         */\\n\\n        var statsTemplate = '<ul id=\\\"mocha-stats\\\">'\\n            + '<li class=\\\"progress\\\"><canvas width=\\\"40\\\" height=\\\"40\\\"></canvas></li>'\\n            + '<li class=\\\"passes\\\"><a href=\\\"#\\\">passes:</a> <em>0</em></li>'\\n            + '<li class=\\\"failures\\\"><a href=\\\"#\\\">failures:</a> <em>0</em></li>'\\n            + '<li class=\\\"duration\\\">duration: <em>0</em>s</li>'\\n            + '</ul>';\\n\\n        /**\\n         * Initialize a new `HTML` reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function HTML(runner, root) {\\n            Base.call(this, runner);\\n\\n            var self = this\\n                , stats = this.stats\\n                , total = runner.total\\n                , stat = fragment(statsTemplate)\\n                , items = stat.getElementsByTagName('li')\\n                , passes = items[1].getElementsByTagName('em')[0]\\n                , passesLink = items[1].getElementsByTagName('a')[0]\\n                , failures = items[2].getElementsByTagName('em')[0]\\n                , failuresLink = items[2].getElementsByTagName('a')[0]\\n                , duration = items[3].getElementsByTagName('em')[0]\\n                , canvas = stat.getElementsByTagName('canvas')[0]\\n                , report = fragment('<ul id=\\\"mocha-report\\\"></ul>')\\n                , stack = [report]\\n                , progress\\n                , ctx\\n\\n            root = root || document.getElementById('mocha');\\n\\n            if (canvas.getContext) {\\n                var ratio = window.devicePixelRatio || 1;\\n                canvas.style.width = canvas.width;\\n                canvas.style.height = canvas.height;\\n                canvas.width *= ratio;\\n                canvas.height *= ratio;\\n                ctx = canvas.getContext('2d');\\n                ctx.scale(ratio, ratio);\\n                progress = new Progress;\\n            }\\n\\n            if (!root) return error('#mocha div missing, add it to your document');\\n\\n            // pass toggle\\n            on(passesLink, 'click', function () {\\n                unhide();\\n                var name = /pass/.test(report.className) ? '' : ' pass';\\n                report.className = report.className.replace(/fail|pass/g, '') + name;\\n                if (report.className.trim()) hideSuitesWithout('test pass');\\n            });\\n\\n            // failure toggle\\n            on(failuresLink, 'click', function () {\\n                unhide();\\n                var name = /fail/.test(report.className) ? '' : ' fail';\\n                report.className = report.className.replace(/fail|pass/g, '') + name;\\n                if (report.className.trim()) hideSuitesWithout('test fail');\\n            });\\n\\n            root.appendChild(stat);\\n            root.appendChild(report);\\n\\n            if (progress) progress.size(40);\\n\\n            runner.on('suite', function (suite) {\\n                if (suite.root) return;\\n\\n                // suite\\n                var url = self.suiteURL(suite);\\n                var el = fragment('<li class=\\\"suite\\\"><h1><a href=\\\"%s\\\">%s</a></h1></li>', url, escape(suite.title));\\n\\n                // container\\n                stack[0].appendChild(el);\\n                stack.unshift(document.createElement('ul'));\\n                el.appendChild(stack[0]);\\n            });\\n\\n            runner.on('suite end', function (suite) {\\n                if (suite.root) return;\\n                stack.shift();\\n            });\\n\\n            runner.on('fail', function (test, err) {\\n                if ('hook' == test.type) runner.emit('test end', test);\\n            });\\n\\n            runner.on('test end', function (test) {\\n                // TODO: add to stats\\n                var percent = stats.tests / this.total * 100 | 0;\\n                if (progress) progress.update(percent).draw(ctx);\\n\\n                // update stats\\n                var ms = new Date - stats.start;\\n                text(passes, stats.passes);\\n                text(failures, stats.failures);\\n                text(duration, (ms / 1000).toFixed(2));\\n\\n                // test\\n                if ('passed' == test.state) {\\n                    var url = self.testURL(test);\\n                    var el = fragment('<li class=\\\"test pass %e\\\"><h2>%e<span class=\\\"duration\\\">%ems</span> <a href=\\\"%s\\\" class=\\\"replay\\\">‣</a></h2></li>', test.speed, test.title, test.duration, url);\\n                } else if (test.pending) {\\n                    var el = fragment('<li class=\\\"test pass pending\\\"><h2>%e</h2></li>', test.title);\\n                } else {\\n                    var el = fragment('<li class=\\\"test fail\\\"><h2>%e <a href=\\\"?grep=%e\\\" class=\\\"replay\\\">‣</a></h2></li>', test.title, encodeURIComponent(test.fullTitle()));\\n                    var str = test.err.stack || test.err.toString();\\n\\n                    // FF / Opera do not add the message\\n                    if (!~str.indexOf(test.err.message)) {\\n                        str = test.err.message + '\\\\n' + str;\\n                    }\\n\\n                    // <=IE7 stringifies to [Object Error]. Since it can be overloaded, we\\n                    // check for the result of the stringifying.\\n                    if ('[object Error]' == str) str = test.err.message;\\n\\n                    // Safari doesn't give you a stack. Let's at least provide a source line.\\n                    if (!test.err.stack && test.err.sourceURL && test.err.line !== undefined) {\\n                        str += \\\"\\\\n(\\\" + test.err.sourceURL + \\\":\\\" + test.err.line + \\\")\\\";\\n                    }\\n\\n                    el.appendChild(fragment('<pre class=\\\"error\\\">%e</pre>', str));\\n                }\\n\\n                // toggle code\\n                // TODO: defer\\n                if (!test.pending) {\\n                    var h2 = el.getElementsByTagName('h2')[0];\\n\\n                    on(h2, 'click', function () {\\n                        pre.style.display = 'none' == pre.style.display\\n                            ? 'block'\\n                            : 'none';\\n                    });\\n\\n                    var pre = fragment('<pre><code>%e</code></pre>', utils.clean(test.fn.toString()));\\n                    el.appendChild(pre);\\n                    pre.style.display = 'none';\\n                }\\n\\n                // Don't call .appendChild if #mocha-report was already .shift()'ed off the stack.\\n                if (stack[0]) stack[0].appendChild(el);\\n            });\\n        }\\n\\n        /**\\n         * Provide suite URL\\n         *\\n         * @param {Object} [suite]\\n         */\\n\\n        HTML.prototype.suiteURL = function (suite) {\\n            return '?grep=' + encodeURIComponent(suite.fullTitle());\\n        };\\n\\n        /**\\n         * Provide test URL\\n         *\\n         * @param {Object} [test]\\n         */\\n\\n        HTML.prototype.testURL = function (test) {\\n            return '?grep=' + encodeURIComponent(test.fullTitle());\\n        };\\n\\n        /**\\n         * Display error `msg`.\\n         */\\n\\n        function error(msg) {\\n            document.body.appendChild(fragment('<div id=\\\"mocha-error\\\">%s</div>', msg));\\n        }\\n\\n        /**\\n         * Return a DOM fragment from `html`.\\n         */\\n\\n        function fragment(html) {\\n            var args = arguments\\n                , div = document.createElement('div')\\n                , i = 1;\\n\\n            div.innerHTML = html.replace(/%([se])/g, function (_, type) {\\n                switch (type) {\\n                    case 's':\\n                        return String(args[i++]);\\n                    case 'e':\\n                        return escape(args[i++]);\\n                }\\n            });\\n\\n            return div.firstChild;\\n        }\\n\\n        /**\\n         * Check for suites that do not have elements\\n         * with `classname`, and hide them.\\n         */\\n\\n        function hideSuitesWithout(classname) {\\n            var suites = document.getElementsByClassName('suite');\\n            for (var i = 0; i < suites.length; i++) {\\n                var els = suites[i].getElementsByClassName(classname);\\n                if (0 == els.length) suites[i].className += ' hidden';\\n            }\\n        }\\n\\n        /**\\n         * Unhide .hidden suites.\\n         */\\n\\n        function unhide() {\\n            var els = document.getElementsByClassName('suite hidden');\\n            for (var i = 0; i < els.length; ++i) {\\n                els[i].className = els[i].className.replace('suite hidden', 'suite');\\n            }\\n        }\\n\\n        /**\\n         * Set `el` text to `str`.\\n         */\\n\\n        function text(el, str) {\\n            if (el.textContent) {\\n                el.textContent = str;\\n            } else {\\n                el.innerText = str;\\n            }\\n        }\\n\\n        /**\\n         * Listen on `event` with callback `fn`.\\n         */\\n\\n        function on(el, event, fn) {\\n            if (el.addEventListener) {\\n                el.addEventListener(event, fn, false);\\n            } else {\\n                el.attachEvent('on' + event, fn);\\n            }\\n        }\\n\\n    }); // module: reporters/html.js\\n\\n    require.register(\\\"reporters/index.js\\\", function (module, exports, require) {\\n\\n        exports.Base = require('./base');\\n        exports.Dot = require('./dot');\\n        exports.Doc = require('./doc');\\n        exports.TAP = require('./tap');\\n        exports.JSON = require('./json');\\n        exports.HTML = require('./html');\\n        exports.List = require('./list');\\n        exports.Min = require('./min');\\n        exports.Spec = require('./spec');\\n        exports.Nyan = require('./nyan');\\n        exports.XUnit = require('./xunit');\\n        exports.Markdown = require('./markdown');\\n        exports.Progress = require('./progress');\\n        exports.Landing = require('./landing');\\n        exports.JSONCov = require('./json-cov');\\n        exports.HTMLCov = require('./html-cov');\\n        exports.JSONStream = require('./json-stream');\\n\\n    }); // module: reporters/index.js\\n\\n    require.register(\\\"reporters/json-cov.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base');\\n\\n        /**\\n         * Expose `JSONCov`.\\n         */\\n\\n        exports = module.exports = JSONCov;\\n\\n        /**\\n         * Initialize a new `JsCoverage` reporter.\\n         *\\n         * @param {Runner} runner\\n         * @param {Boolean} output\\n         * @api public\\n         */\\n\\n        function JSONCov(runner, output) {\\n            var self = this\\n                , output = 1 == arguments.length ? true : output;\\n\\n            Base.call(this, runner);\\n\\n            var tests = []\\n                , failures = []\\n                , passes = [];\\n\\n            runner.on('test end', function (test) {\\n                tests.push(test);\\n            });\\n\\n            runner.on('pass', function (test) {\\n                passes.push(test);\\n            });\\n\\n            runner.on('fail', function (test) {\\n                failures.push(test);\\n            });\\n\\n            runner.on('end', function () {\\n                var cov = global._$jscoverage || {};\\n                var result = self.cov = map(cov);\\n                result.stats = self.stats;\\n                result.tests = tests.map(clean);\\n                result.failures = failures.map(clean);\\n                result.passes = passes.map(clean);\\n                if (!output) return;\\n                process.stdout.write(JSON.stringify(result, null, 2));\\n            });\\n        }\\n\\n        /**\\n         * Map jscoverage data to a JSON structure\\n         * suitable for reporting.\\n         *\\n         * @param {Object} cov\\n         * @return {Object}\\n         * @api private\\n         */\\n\\n        function map(cov) {\\n            var ret = {\\n                instrumentation: 'node-jscoverage'\\n                , sloc: 0\\n                , hits: 0\\n                , misses: 0\\n                , coverage: 0\\n                , files: []\\n            };\\n\\n            for (var filename in cov) {\\n                var data = coverage(filename, cov[filename]);\\n                ret.files.push(data);\\n                ret.hits += data.hits;\\n                ret.misses += data.misses;\\n                ret.sloc += data.sloc;\\n            }\\n\\n            ret.files.sort(function (a, b) {\\n                return a.filename.localeCompare(b.filename);\\n            });\\n\\n            if (ret.sloc > 0) {\\n                ret.coverage = (ret.hits / ret.sloc) * 100;\\n            }\\n\\n            return ret;\\n        };\\n\\n        /**\\n         * Map jscoverage data for a single source file\\n         * to a JSON structure suitable for reporting.\\n         *\\n         * @param {String} filename name of the source file\\n         * @param {Object} data jscoverage coverage data\\n         * @return {Object}\\n         * @api private\\n         */\\n\\n        function coverage(filename, data) {\\n            var ret = {\\n                filename: filename,\\n                coverage: 0,\\n                hits: 0,\\n                misses: 0,\\n                sloc: 0,\\n                source: {}\\n            };\\n\\n            data.source.forEach(function (line, num) {\\n                num++;\\n\\n                if (data[num] === 0) {\\n                    ret.misses++;\\n                    ret.sloc++;\\n                } else if (data[num] !== undefined) {\\n                    ret.hits++;\\n                    ret.sloc++;\\n                }\\n\\n                ret.source[num] = {\\n                    source: line\\n                    , coverage: data[num] === undefined\\n                        ? ''\\n                        : data[num]\\n                };\\n            });\\n\\n            ret.coverage = ret.hits / ret.sloc * 100;\\n\\n            return ret;\\n        }\\n\\n        /**\\n         * Return a plain-object representation of `test`\\n         * free of cyclic properties etc.\\n         *\\n         * @param {Object} test\\n         * @return {Object}\\n         * @api private\\n         */\\n\\n        function clean(test) {\\n            return {\\n                title: test.title\\n                , fullTitle: test.fullTitle()\\n                , duration: test.duration\\n            }\\n        }\\n\\n    }); // module: reporters/json-cov.js\\n\\n    require.register(\\\"reporters/json-stream.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , color = Base.color;\\n\\n        /**\\n         * Expose `List`.\\n         */\\n\\n        exports = module.exports = List;\\n\\n        /**\\n         * Initialize a new `List` test reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function List(runner) {\\n            Base.call(this, runner);\\n\\n            var self = this\\n                , stats = this.stats\\n                , total = runner.total;\\n\\n            runner.on('start', function () {\\n                console.log(JSON.stringify(['start', {total: total}]));\\n            });\\n\\n            runner.on('pass', function (test) {\\n                console.log(JSON.stringify(['pass', clean(test)]));\\n            });\\n\\n            runner.on('fail', function (test, err) {\\n                console.log(JSON.stringify(['fail', clean(test)]));\\n            });\\n\\n            runner.on('end', function () {\\n                process.stdout.write(JSON.stringify(['end', self.stats]));\\n            });\\n        }\\n\\n        /**\\n         * Return a plain-object representation of `test`\\n         * free of cyclic properties etc.\\n         *\\n         * @param {Object} test\\n         * @return {Object}\\n         * @api private\\n         */\\n\\n        function clean(test) {\\n            return {\\n                title: test.title\\n                , fullTitle: test.fullTitle()\\n                , duration: test.duration\\n            }\\n        }\\n    }); // module: reporters/json-stream.js\\n\\n    require.register(\\\"reporters/json.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , cursor = Base.cursor\\n            , color = Base.color;\\n\\n        /**\\n         * Expose `JSON`.\\n         */\\n\\n        exports = module.exports = JSONReporter;\\n\\n        /**\\n         * Initialize a new `JSON` reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function JSONReporter(runner) {\\n            var self = this;\\n            Base.call(this, runner);\\n\\n            var tests = []\\n                , failures = []\\n                , passes = [];\\n\\n            runner.on('test end', function (test) {\\n                tests.push(test);\\n            });\\n\\n            runner.on('pass', function (test) {\\n                passes.push(test);\\n            });\\n\\n            runner.on('fail', function (test) {\\n                failures.push(test);\\n            });\\n\\n            runner.on('end', function () {\\n                var obj = {\\n                    stats: self.stats\\n                    , tests: tests.map(clean)\\n                    , failures: failures.map(clean)\\n                    , passes: passes.map(clean)\\n                };\\n\\n                process.stdout.write(JSON.stringify(obj, null, 2));\\n            });\\n        }\\n\\n        /**\\n         * Return a plain-object representation of `test`\\n         * free of cyclic properties etc.\\n         *\\n         * @param {Object} test\\n         * @return {Object}\\n         * @api private\\n         */\\n\\n        function clean(test) {\\n            return {\\n                title: test.title\\n                , fullTitle: test.fullTitle()\\n                , duration: test.duration\\n            }\\n        }\\n    }); // module: reporters/json.js\\n\\n    require.register(\\\"reporters/landing.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , cursor = Base.cursor\\n            , color = Base.color;\\n\\n        /**\\n         * Expose `Landing`.\\n         */\\n\\n        exports = module.exports = Landing;\\n\\n        /**\\n         * Airplane color.\\n         */\\n\\n        Base.colors.plane = 0;\\n\\n        /**\\n         * Airplane crash color.\\n         */\\n\\n        Base.colors['plane crash'] = 31;\\n\\n        /**\\n         * Runway color.\\n         */\\n\\n        Base.colors.runway = 90;\\n\\n        /**\\n         * Initialize a new `Landing` reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function Landing(runner) {\\n            Base.call(this, runner);\\n\\n            var self = this\\n                , stats = this.stats\\n                , width = Base.window.width * .75 | 0\\n                , total = runner.total\\n                , stream = process.stdout\\n                , plane = color('plane', '✈')\\n                , crashed = -1\\n                , n = 0;\\n\\n            function runway() {\\n                var buf = Array(width).join('-');\\n                return '  ' + color('runway', buf);\\n            }\\n\\n            runner.on('start', function () {\\n                stream.write('\\\\n  ');\\n                cursor.hide();\\n            });\\n\\n            runner.on('test end', function (test) {\\n                // check if the plane crashed\\n                var col = -1 == crashed\\n                    ? width * ++n / total | 0\\n                    : crashed;\\n\\n                // show the crash\\n                if ('failed' == test.state) {\\n                    plane = color('plane crash', '✈');\\n                    crashed = col;\\n                }\\n\\n                // render landing strip\\n                stream.write('\\\\u001b[4F\\\\n\\\\n');\\n                stream.write(runway());\\n                stream.write('\\\\n  ');\\n                stream.write(color('runway', Array(col).join('⋅')));\\n                stream.write(plane)\\n                stream.write(color('runway', Array(width - col).join('⋅') + '\\\\n'));\\n                stream.write(runway());\\n                stream.write('\\\\u001b[0m');\\n            });\\n\\n            runner.on('end', function () {\\n                cursor.show();\\n                console.log();\\n                self.epilogue();\\n            });\\n        }\\n\\n        /**\\n         * Inherit from `Base.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = Base.prototype;\\n        Landing.prototype = new F;\\n        Landing.prototype.constructor = Landing;\\n\\n    }); // module: reporters/landing.js\\n\\n    require.register(\\\"reporters/list.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , cursor = Base.cursor\\n            , color = Base.color;\\n\\n        /**\\n         * Expose `List`.\\n         */\\n\\n        exports = module.exports = List;\\n\\n        /**\\n         * Initialize a new `List` test reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function List(runner) {\\n            Base.call(this, runner);\\n\\n            var self = this\\n                , stats = this.stats\\n                , n = 0;\\n\\n            runner.on('start', function () {\\n                console.log();\\n            });\\n\\n            runner.on('test', function (test) {\\n                process.stdout.write(color('pass', '    ' + test.fullTitle() + ': '));\\n            });\\n\\n            runner.on('pending', function (test) {\\n                var fmt = color('checkmark', '  -')\\n                    + color('pending', ' %s');\\n                console.log(fmt, test.fullTitle());\\n            });\\n\\n            runner.on('pass', function (test) {\\n                var fmt = color('checkmark', '  ' + Base.symbols.dot)\\n                    + color('pass', ' %s: ')\\n                    + color(test.speed, '%dms');\\n                cursor.CR();\\n                console.log(fmt, test.fullTitle(), test.duration);\\n            });\\n\\n            runner.on('fail', function (test, err) {\\n                cursor.CR();\\n                console.log(color('fail', '  %d) %s'), ++n, test.fullTitle());\\n            });\\n\\n            runner.on('end', self.epilogue.bind(self));\\n        }\\n\\n        /**\\n         * Inherit from `Base.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = Base.prototype;\\n        List.prototype = new F;\\n        List.prototype.constructor = List;\\n\\n\\n    }); // module: reporters/list.js\\n\\n    require.register(\\\"reporters/markdown.js\\\", function (module, exports, require) {\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , utils = require('../utils');\\n\\n        /**\\n         * Expose `Markdown`.\\n         */\\n\\n        exports = module.exports = Markdown;\\n\\n        /**\\n         * Initialize a new `Markdown` reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function Markdown(runner) {\\n            Base.call(this, runner);\\n\\n            var self = this\\n                , stats = this.stats\\n                , level = 0\\n                , buf = '';\\n\\n            function title(str) {\\n                return Array(level).join('#') + ' ' + str;\\n            }\\n\\n            function indent() {\\n                return Array(level).join('  ');\\n            }\\n\\n            function mapTOC(suite, obj) {\\n                var ret = obj;\\n                obj = obj[suite.title] = obj[suite.title] || {suite: suite};\\n                suite.suites.forEach(function (suite) {\\n                    mapTOC(suite, obj);\\n                });\\n                return ret;\\n            }\\n\\n            function stringifyTOC(obj, level) {\\n                ++level;\\n                var buf = '';\\n                var link;\\n                for (var key in obj) {\\n                    if ('suite' == key) continue;\\n                    if (key) link = ' - [' + key + '](#' + utils.slug(obj[key].suite.fullTitle()) + ')\\\\n';\\n                    if (key) buf += Array(level).join('  ') + link;\\n                    buf += stringifyTOC(obj[key], level);\\n                }\\n                --level;\\n                return buf;\\n            }\\n\\n            function generateTOC(suite) {\\n                var obj = mapTOC(suite, {});\\n                return stringifyTOC(obj, 0);\\n            }\\n\\n            generateTOC(runner.suite);\\n\\n            runner.on('suite', function (suite) {\\n                ++level;\\n                var slug = utils.slug(suite.fullTitle());\\n                buf += '<a name=\\\"' + slug + '\\\"></a>' + '\\\\n';\\n                buf += title(suite.title) + '\\\\n';\\n            });\\n\\n            runner.on('suite end', function (suite) {\\n                --level;\\n            });\\n\\n            runner.on('pass', function (test) {\\n                var code = utils.clean(test.fn.toString());\\n                buf += test.title + '.\\\\n';\\n                buf += '\\\\n```js\\\\n';\\n                buf += code + '\\\\n';\\n                buf += '```\\\\n\\\\n';\\n            });\\n\\n            runner.on('end', function () {\\n                process.stdout.write('# TOC\\\\n');\\n                process.stdout.write(generateTOC(runner.suite));\\n                process.stdout.write(buf);\\n            });\\n        }\\n    }); // module: reporters/markdown.js\\n\\n    require.register(\\\"reporters/min.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base');\\n\\n        /**\\n         * Expose `Min`.\\n         */\\n\\n        exports = module.exports = Min;\\n\\n        /**\\n         * Initialize a new `Min` minimal test reporter (best used with --watch).\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function Min(runner) {\\n            Base.call(this, runner);\\n\\n            runner.on('start', function () {\\n                // clear screen\\n                process.stdout.write('\\\\u001b[2J');\\n                // set cursor position\\n                process.stdout.write('\\\\u001b[1;3H');\\n            });\\n\\n            runner.on('end', this.epilogue.bind(this));\\n        }\\n\\n        /**\\n         * Inherit from `Base.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = Base.prototype;\\n        Min.prototype = new F;\\n        Min.prototype.constructor = Min;\\n\\n\\n    }); // module: reporters/min.js\\n\\n    require.register(\\\"reporters/nyan.js\\\", function (module, exports, require) {\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , color = Base.color;\\n\\n        /**\\n         * Expose `Dot`.\\n         */\\n\\n        exports = module.exports = NyanCat;\\n\\n        /**\\n         * Initialize a new `Dot` matrix test reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function NyanCat(runner) {\\n            Base.call(this, runner);\\n            var self = this\\n                , stats = this.stats\\n                , width = Base.window.width * .75 | 0\\n                , rainbowColors = this.rainbowColors = self.generateColors()\\n                , colorIndex = this.colorIndex = 0\\n                , numerOfLines = this.numberOfLines = 4\\n                , trajectories = this.trajectories = [[], [], [], []]\\n                , nyanCatWidth = this.nyanCatWidth = 11\\n                , trajectoryWidthMax = this.trajectoryWidthMax = (width - nyanCatWidth)\\n                , scoreboardWidth = this.scoreboardWidth = 5\\n                , tick = this.tick = 0\\n                , n = 0;\\n\\n            runner.on('start', function () {\\n                Base.cursor.hide();\\n                self.draw();\\n            });\\n\\n            runner.on('pending', function (test) {\\n                self.draw();\\n            });\\n\\n            runner.on('pass', function (test) {\\n                self.draw();\\n            });\\n\\n            runner.on('fail', function (test, err) {\\n                self.draw();\\n            });\\n\\n            runner.on('end', function () {\\n                Base.cursor.show();\\n                for (var i = 0; i < self.numberOfLines; i++) write('\\\\n');\\n                self.epilogue();\\n            });\\n        }\\n\\n        /**\\n         * Draw the nyan cat\\n         *\\n         * @api private\\n         */\\n\\n        NyanCat.prototype.draw = function () {\\n            this.appendRainbow();\\n            this.drawScoreboard();\\n            this.drawRainbow();\\n            this.drawNyanCat();\\n            this.tick = !this.tick;\\n        };\\n\\n        /**\\n         * Draw the \\\"scoreboard\\\" showing the number\\n         * of passes, failures and pending tests.\\n         *\\n         * @api private\\n         */\\n\\n        NyanCat.prototype.drawScoreboard = function () {\\n            var stats = this.stats;\\n            var colors = Base.colors;\\n\\n            function draw(color, n) {\\n                write(' ');\\n                write('\\\\u001b[' + color + 'm' + n + '\\\\u001b[0m');\\n                write('\\\\n');\\n            }\\n\\n            draw(colors.green, stats.passes);\\n            draw(colors.fail, stats.failures);\\n            draw(colors.pending, stats.pending);\\n            write('\\\\n');\\n\\n            this.cursorUp(this.numberOfLines);\\n        };\\n\\n        /**\\n         * Append the rainbow.\\n         *\\n         * @api private\\n         */\\n\\n        NyanCat.prototype.appendRainbow = function () {\\n            var segment = this.tick ? '_' : '-';\\n            var rainbowified = this.rainbowify(segment);\\n\\n            for (var index = 0; index < this.numberOfLines; index++) {\\n                var trajectory = this.trajectories[index];\\n                if (trajectory.length >= this.trajectoryWidthMax) trajectory.shift();\\n                trajectory.push(rainbowified);\\n            }\\n        };\\n\\n        /**\\n         * Draw the rainbow.\\n         *\\n         * @api private\\n         */\\n\\n        NyanCat.prototype.drawRainbow = function () {\\n            var self = this;\\n\\n            this.trajectories.forEach(function (line, index) {\\n                write('\\\\u001b[' + self.scoreboardWidth + 'C');\\n                write(line.join(''));\\n                write('\\\\n');\\n            });\\n\\n            this.cursorUp(this.numberOfLines);\\n        };\\n\\n        /**\\n         * Draw the nyan cat\\n         *\\n         * @api private\\n         */\\n\\n        NyanCat.prototype.drawNyanCat = function () {\\n            var self = this;\\n            var startWidth = this.scoreboardWidth + this.trajectories[0].length;\\n            var color = '\\\\u001b[' + startWidth + 'C';\\n            var padding = '';\\n\\n            write(color);\\n            write('_,------,');\\n            write('\\\\n');\\n\\n            write(color);\\n            padding = self.tick ? '  ' : '   ';\\n            write('_|' + padding + '/\\\\\\\\_/\\\\\\\\ ');\\n            write('\\\\n');\\n\\n            write(color);\\n            padding = self.tick ? '_' : '__';\\n            var tail = self.tick ? '~' : '^';\\n            var face;\\n            write(tail + '|' + padding + this.face() + ' ');\\n            write('\\\\n');\\n\\n            write(color);\\n            padding = self.tick ? ' ' : '  ';\\n            write(padding + '\\\"\\\"  \\\"\\\" ');\\n            write('\\\\n');\\n\\n            this.cursorUp(this.numberOfLines);\\n        };\\n\\n        /**\\n         * Draw nyan cat face.\\n         *\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        NyanCat.prototype.face = function () {\\n            var stats = this.stats;\\n            if (stats.failures) {\\n                return '( x .x)';\\n            } else if (stats.pending) {\\n                return '( o .o)';\\n            } else if (stats.passes) {\\n                return '( ^ .^)';\\n            } else {\\n                return '( - .-)';\\n            }\\n        }\\n\\n        /**\\n         * Move cursor up `n`.\\n         *\\n         * @param {Number} n\\n         * @api private\\n         */\\n\\n        NyanCat.prototype.cursorUp = function (n) {\\n            write('\\\\u001b[' + n + 'A');\\n        };\\n\\n        /**\\n         * Move cursor down `n`.\\n         *\\n         * @param {Number} n\\n         * @api private\\n         */\\n\\n        NyanCat.prototype.cursorDown = function (n) {\\n            write('\\\\u001b[' + n + 'B');\\n        };\\n\\n        /**\\n         * Generate rainbow colors.\\n         *\\n         * @return {Array}\\n         * @api private\\n         */\\n\\n        NyanCat.prototype.generateColors = function () {\\n            var colors = [];\\n\\n            for (var i = 0; i < (6 * 7); i++) {\\n                var pi3 = Math.floor(Math.PI / 3);\\n                var n = (i * (1.0 / 6));\\n                var r = Math.floor(3 * Math.sin(n) + 3);\\n                var g = Math.floor(3 * Math.sin(n + 2 * pi3) + 3);\\n                var b = Math.floor(3 * Math.sin(n + 4 * pi3) + 3);\\n                colors.push(36 * r + 6 * g + b + 16);\\n            }\\n\\n            return colors;\\n        };\\n\\n        /**\\n         * Apply rainbow to the given `str`.\\n         *\\n         * @param {String} str\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        NyanCat.prototype.rainbowify = function (str) {\\n            var color = this.rainbowColors[this.colorIndex % this.rainbowColors.length];\\n            this.colorIndex += 1;\\n            return '\\\\u001b[38;5;' + color + 'm' + str + '\\\\u001b[0m';\\n        };\\n\\n        /**\\n         * Stdout helper.\\n         */\\n\\n        function write(string) {\\n            process.stdout.write(string);\\n        }\\n\\n        /**\\n         * Inherit from `Base.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = Base.prototype;\\n        NyanCat.prototype = new F;\\n        NyanCat.prototype.constructor = NyanCat;\\n\\n\\n    }); // module: reporters/nyan.js\\n\\n    require.register(\\\"reporters/progress.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , cursor = Base.cursor\\n            , color = Base.color;\\n\\n        /**\\n         * Expose `Progress`.\\n         */\\n\\n        exports = module.exports = Progress;\\n\\n        /**\\n         * General progress bar color.\\n         */\\n\\n        Base.colors.progress = 90;\\n\\n        /**\\n         * Initialize a new `Progress` bar test reporter.\\n         *\\n         * @param {Runner} runner\\n         * @param {Object} options\\n         * @api public\\n         */\\n\\n        function Progress(runner, options) {\\n            Base.call(this, runner);\\n\\n            var self = this\\n                , options = options || {}\\n                , stats = this.stats\\n                , width = Base.window.width * .50 | 0\\n                , total = runner.total\\n                , complete = 0\\n                , max = Math.max;\\n\\n            // default chars\\n            options.open = options.open || '[';\\n            options.complete = options.complete || '▬';\\n            options.incomplete = options.incomplete || Base.symbols.dot;\\n            options.close = options.close || ']';\\n            options.verbose = false;\\n\\n            // tests started\\n            runner.on('start', function () {\\n                console.log();\\n                cursor.hide();\\n            });\\n\\n            // tests complete\\n            runner.on('test end', function () {\\n                complete++;\\n                var incomplete = total - complete\\n                    , percent = complete / total\\n                    , n = width * percent | 0\\n                    , i = width - n;\\n\\n                cursor.CR();\\n                process.stdout.write('\\\\u001b[J');\\n                process.stdout.write(color('progress', '  ' + options.open));\\n                process.stdout.write(Array(n).join(options.complete));\\n                process.stdout.write(Array(i).join(options.incomplete));\\n                process.stdout.write(color('progress', options.close));\\n                if (options.verbose) {\\n                    process.stdout.write(color('progress', ' ' + complete + ' of ' + total));\\n                }\\n            });\\n\\n            // tests are complete, output some stats\\n            // and the failures if any\\n            runner.on('end', function () {\\n                cursor.show();\\n                console.log();\\n                self.epilogue();\\n            });\\n        }\\n\\n        /**\\n         * Inherit from `Base.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = Base.prototype;\\n        Progress.prototype = new F;\\n        Progress.prototype.constructor = Progress;\\n\\n\\n    }); // module: reporters/progress.js\\n\\n    require.register(\\\"reporters/spec.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , cursor = Base.cursor\\n            , color = Base.color;\\n\\n        /**\\n         * Expose `Spec`.\\n         */\\n\\n        exports = module.exports = Spec;\\n\\n        /**\\n         * Initialize a new `Spec` test reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function Spec(runner) {\\n            Base.call(this, runner);\\n\\n            var self = this\\n                , stats = this.stats\\n                , indents = 0\\n                , n = 0;\\n\\n            function indent() {\\n                return Array(indents).join('  ')\\n            }\\n\\n            runner.on('start', function () {\\n                console.log();\\n            });\\n\\n            runner.on('suite', function (suite) {\\n                ++indents;\\n                console.log(color('suite', '%s%s'), indent(), suite.title);\\n            });\\n\\n            runner.on('suite end', function (suite) {\\n                --indents;\\n                if (1 == indents) console.log();\\n            });\\n\\n            runner.on('pending', function (test) {\\n                var fmt = indent() + color('pending', '  - %s');\\n                console.log(fmt, test.title);\\n            });\\n\\n            runner.on('pass', function (test) {\\n                if ('fast' == test.speed) {\\n                    var fmt = indent()\\n                        + color('checkmark', '  ' + Base.symbols.ok)\\n                        + color('pass', ' %s ');\\n                    cursor.CR();\\n                    console.log(fmt, test.title);\\n                } else {\\n                    var fmt = indent()\\n                        + color('checkmark', '  ' + Base.symbols.ok)\\n                        + color('pass', ' %s ')\\n                        + color(test.speed, '(%dms)');\\n                    cursor.CR();\\n                    console.log(fmt, test.title, test.duration);\\n                }\\n            });\\n\\n            runner.on('fail', function (test, err) {\\n                cursor.CR();\\n                console.log(indent() + color('fail', '  %d) %s'), ++n, test.title);\\n            });\\n\\n            runner.on('end', self.epilogue.bind(self));\\n        }\\n\\n        /**\\n         * Inherit from `Base.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = Base.prototype;\\n        Spec.prototype = new F;\\n        Spec.prototype.constructor = Spec;\\n\\n\\n    }); // module: reporters/spec.js\\n\\n    require.register(\\\"reporters/tap.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , cursor = Base.cursor\\n            , color = Base.color;\\n\\n        /**\\n         * Expose `TAP`.\\n         */\\n\\n        exports = module.exports = TAP;\\n\\n        /**\\n         * Initialize a new `TAP` reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function TAP(runner) {\\n            Base.call(this, runner);\\n\\n            var self = this\\n                , stats = this.stats\\n                , n = 1\\n                , passes = 0\\n                , failures = 0;\\n\\n            runner.on('start', function () {\\n                var total = runner.grepTotal(runner.suite);\\n                console.log('%d..%d', 1, total);\\n            });\\n\\n            runner.on('test end', function () {\\n                ++n;\\n            });\\n\\n            runner.on('pending', function (test) {\\n                console.log('ok %d %s # SKIP -', n, title(test));\\n            });\\n\\n            runner.on('pass', function (test) {\\n                passes++;\\n                console.log('ok %d %s', n, title(test));\\n            });\\n\\n            runner.on('fail', function (test, err) {\\n                failures++;\\n                console.log('not ok %d %s', n, title(test));\\n                if (err.stack) console.log(err.stack.replace(/^/gm, '  '));\\n            });\\n\\n            runner.on('end', function () {\\n                console.log('# tests ' + (passes + failures));\\n                console.log('# pass ' + passes);\\n                console.log('# fail ' + failures);\\n            });\\n        }\\n\\n        /**\\n         * Return a TAP-safe title of `test`\\n         *\\n         * @param {Object} test\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        function title(test) {\\n            return test.fullTitle().replace(/#/g, '');\\n        }\\n\\n    }); // module: reporters/tap.js\\n\\n    require.register(\\\"reporters/xunit.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Base = require('./base')\\n            , utils = require('../utils')\\n            , escape = utils.escape;\\n\\n        /**\\n         * Save timer references to avoid Sinon interfering (see GH-237).\\n         */\\n\\n        var Date = global.Date\\n            , setTimeout = global.setTimeout\\n            , setInterval = global.setInterval\\n            , clearTimeout = global.clearTimeout\\n            , clearInterval = global.clearInterval;\\n\\n        /**\\n         * Expose `XUnit`.\\n         */\\n\\n        exports = module.exports = XUnit;\\n\\n        /**\\n         * Initialize a new `XUnit` reporter.\\n         *\\n         * @param {Runner} runner\\n         * @api public\\n         */\\n\\n        function XUnit(runner) {\\n            Base.call(this, runner);\\n            var stats = this.stats\\n                , tests = []\\n                , self = this;\\n\\n            runner.on('pending', function (test) {\\n                tests.push(test);\\n            });\\n\\n            runner.on('pass', function (test) {\\n                tests.push(test);\\n            });\\n\\n            runner.on('fail', function (test) {\\n                tests.push(test);\\n            });\\n\\n            runner.on('end', function () {\\n                console.log(tag('testsuite', {\\n                    name: 'Mocha Tests'\\n                    , tests: stats.tests\\n                    , failures: stats.failures\\n                    , errors: stats.failures\\n                    , skipped: stats.tests - stats.failures - stats.passes\\n                    , timestamp: (new Date).toUTCString()\\n                    , time: (stats.duration / 1000) || 0\\n                }, false));\\n\\n                tests.forEach(test);\\n                console.log('</testsuite>');\\n            });\\n        }\\n\\n        /**\\n         * Inherit from `Base.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = Base.prototype;\\n        XUnit.prototype = new F;\\n        XUnit.prototype.constructor = XUnit;\\n\\n\\n        /**\\n         * Output tag for the given `test.`\\n         */\\n\\n        function test(test) {\\n            var attrs = {\\n                classname: test.parent.fullTitle()\\n                , name: test.title\\n                , time: (test.duration / 1000) || 0\\n            };\\n\\n            if ('failed' == test.state) {\\n                var err = test.err;\\n                attrs.message = escape(err.message);\\n                console.log(tag('testcase', attrs, false, tag('failure', attrs, false, cdata(err.stack))));\\n            } else if (test.pending) {\\n                console.log(tag('testcase', attrs, false, tag('skipped', {}, true)));\\n            } else {\\n                console.log(tag('testcase', attrs, true));\\n            }\\n        }\\n\\n        /**\\n         * HTML tag helper.\\n         */\\n\\n        function tag(name, attrs, close, content) {\\n            var end = close ? '/>' : '>'\\n                , pairs = []\\n                , tag;\\n\\n            for (var key in attrs) {\\n                pairs.push(key + '=\\\"' + escape(attrs[key]) + '\\\"');\\n            }\\n\\n            tag = '<' + name + (pairs.length ? ' ' + pairs.join(' ') : '') + end;\\n            if (content) tag += content + '</' + name + end;\\n            return tag;\\n        }\\n\\n        /**\\n         * Return cdata escaped CDATA `str`.\\n         */\\n\\n        function cdata(str) {\\n            return '<![CDATA[' + escape(str) + ']]>';\\n        }\\n\\n    }); // module: reporters/xunit.js\\n\\n    require.register(\\\"runnable.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var EventEmitter = require('browser/events').EventEmitter\\n            , debug = require('browser/debug')('mocha:runnable')\\n            , milliseconds = require('./ms');\\n\\n        /**\\n         * Save timer references to avoid Sinon interfering (see GH-237).\\n         */\\n\\n        var Date = global.Date\\n            , setTimeout = global.setTimeout\\n            , setInterval = global.setInterval\\n            , clearTimeout = global.clearTimeout\\n            , clearInterval = global.clearInterval;\\n\\n        /**\\n         * Object#toString().\\n         */\\n\\n        var toString = Object.prototype.toString;\\n\\n        /**\\n         * Expose `Runnable`.\\n         */\\n\\n        module.exports = Runnable;\\n\\n        /**\\n         * Initialize a new `Runnable` with the given `title` and callback `fn`.\\n         *\\n         * @param {String} title\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        function Runnable(title, fn) {\\n            this.title = title;\\n            this.fn = fn;\\n            this.async = fn && fn.length;\\n            this.sync = !this.async;\\n            this._timeout = 2000;\\n            this._slow = 75;\\n            this.timedOut = false;\\n        }\\n\\n        /**\\n         * Inherit from `EventEmitter.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = EventEmitter.prototype;\\n        Runnable.prototype = new F;\\n        Runnable.prototype.constructor = Runnable;\\n\\n\\n        /**\\n         * Set & get timeout `ms`.\\n         *\\n         * @param {Number|String} ms\\n         * @return {Runnable|Number} ms or self\\n         * @api private\\n         */\\n\\n        Runnable.prototype.timeout = function (ms) {\\n            if (0 == arguments.length) return this._timeout;\\n            if ('string' == typeof ms) ms = milliseconds(ms);\\n            debug('timeout %d', ms);\\n            this._timeout = ms;\\n            if (this.timer) this.resetTimeout();\\n            return this;\\n        };\\n\\n        /**\\n         * Set & get slow `ms`.\\n         *\\n         * @param {Number|String} ms\\n         * @return {Runnable|Number} ms or self\\n         * @api private\\n         */\\n\\n        Runnable.prototype.slow = function (ms) {\\n            if (0 === arguments.length) return this._slow;\\n            if ('string' == typeof ms) ms = milliseconds(ms);\\n            debug('timeout %d', ms);\\n            this._slow = ms;\\n            return this;\\n        };\\n\\n        /**\\n         * Return the full title generated by recursively\\n         * concatenating the parent's full title.\\n         *\\n         * @return {String}\\n         * @api public\\n         */\\n\\n        Runnable.prototype.fullTitle = function () {\\n            return this.parent.fullTitle() + ' ' + this.title;\\n        };\\n\\n        /**\\n         * Clear the timeout.\\n         *\\n         * @api private\\n         */\\n\\n        Runnable.prototype.clearTimeout = function () {\\n            clearTimeout(this.timer);\\n        };\\n\\n        /**\\n         * Inspect the runnable void of private properties.\\n         *\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        Runnable.prototype.inspect = function () {\\n            return JSON.stringify(this, function (key, val) {\\n                if ('_' == key[0]) return;\\n                if ('parent' == key) return '#<Suite>';\\n                if ('ctx' == key) return '#<Context>';\\n                return val;\\n            }, 2);\\n        };\\n\\n        /**\\n         * Reset the timeout.\\n         *\\n         * @api private\\n         */\\n\\n        Runnable.prototype.resetTimeout = function () {\\n            var self = this;\\n            var ms = this.timeout() || 1e9;\\n\\n            this.clearTimeout();\\n            this.timer = setTimeout(function () {\\n                self.callback(new Error('timeout of ' + ms + 'ms exceeded'));\\n                self.timedOut = true;\\n            }, ms);\\n        };\\n\\n        /**\\n         * Whitelist these globals for this test run\\n         *\\n         * @api private\\n         */\\n        Runnable.prototype.globals = function (arr) {\\n            var self = this;\\n            this._allowedGlobals = arr;\\n        };\\n\\n        /**\\n         * Run the test and invoke `fn(err)`.\\n         *\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        Runnable.prototype.run = function (fn) {\\n            var self = this\\n                , ms = this.timeout()\\n                , start = new Date\\n                , ctx = this.ctx\\n                , finished\\n                , emitted;\\n\\n            if (ctx) ctx.runnable(this);\\n\\n            // timeout\\n            if (this.async) {\\n                if (ms) {\\n                    this.timer = setTimeout(function () {\\n                        done(new Error('timeout of ' + ms + 'ms exceeded'));\\n                        self.timedOut = true;\\n                    }, ms);\\n                }\\n            }\\n\\n            // called multiple times\\n            function multiple(err) {\\n                if (emitted) return;\\n                emitted = true;\\n                self.emit('error', err || new Error('done() called multiple times'));\\n            }\\n\\n            // finished\\n            function done(err) {\\n                if (self.timedOut) return;\\n                if (finished) return multiple(err);\\n                self.clearTimeout();\\n                self.duration = new Date - start;\\n                finished = true;\\n                fn(err);\\n            }\\n\\n            // for .resetTimeout()\\n            this.callback = done;\\n\\n            // async\\n            if (this.async) {\\n                try {\\n                    this.fn.call(ctx, function (err) {\\n                        if (err instanceof Error || toString.call(err) === \\\"[object Error]\\\") return done(err);\\n                        if (null != err) return done(new Error('done() invoked with non-Error: ' + err));\\n                        done();\\n                    });\\n                } catch (err) {\\n                    done(err);\\n                }\\n                return;\\n            }\\n\\n            if (this.asyncOnly) {\\n                return done(new Error('--async-only option in use without declaring `done()`'));\\n            }\\n\\n            // sync\\n            try {\\n                if (!this.pending) this.fn.call(ctx);\\n                this.duration = new Date - start;\\n                fn();\\n            } catch (err) {\\n                fn(err);\\n            }\\n        };\\n\\n    }); // module: runnable.js\\n\\n    require.register(\\\"runner.js\\\", function (module, exports, require) {\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var EventEmitter = require('browser/events').EventEmitter\\n            , debug = require('browser/debug')('mocha:runner')\\n            , Test = require('./test')\\n            , utils = require('./utils')\\n            , filter = utils.filter\\n            , keys = utils.keys;\\n\\n        /**\\n         * Non-enumerable globals.\\n         */\\n\\n        var globals = [\\n            'setTimeout',\\n            'clearTimeout',\\n            'setInterval',\\n            'clearInterval',\\n            'XMLHttpRequest',\\n            'Date'\\n        ];\\n\\n        /**\\n         * Expose `Runner`.\\n         */\\n\\n        module.exports = Runner;\\n\\n        /**\\n         * Initialize a `Runner` for the given `suite`.\\n         *\\n         * Events:\\n         *\\n         *   - `start`  execution started\\n         *   - `end`  execution complete\\n         *   - `suite`  (suite) test suite execution started\\n         *   - `suite end`  (suite) all tests (and sub-suites) have finished\\n         *   - `test`  (test) test execution started\\n         *   - `test end`  (test) test completed\\n         *   - `hook`  (hook) hook execution started\\n         *   - `hook end`  (hook) hook complete\\n         *   - `pass`  (test) test passed\\n         *   - `fail`  (test, err) test failed\\n         *   - `pending`  (test) test pending\\n         *\\n         * @api public\\n         */\\n\\n        function Runner(suite) {\\n            var self = this;\\n            this._globals = [];\\n            this._abort = false;\\n            this.suite = suite;\\n            this.total = suite.total();\\n            this.failures = 0;\\n            this.on('test end', function (test) {\\n                self.checkGlobals(test);\\n            });\\n            this.on('hook end', function (hook) {\\n                self.checkGlobals(hook);\\n            });\\n            this.grep(/.*/);\\n            this.globals(this.globalProps().concat(extraGlobals()));\\n        }\\n\\n        /**\\n         * Wrapper for setImmediate, process.nextTick, or browser polyfill.\\n         *\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        Runner.immediately = global.setImmediate || process.nextTick;\\n\\n        /**\\n         * Inherit from `EventEmitter.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = EventEmitter.prototype;\\n        Runner.prototype = new F;\\n        Runner.prototype.constructor = Runner;\\n\\n\\n        /**\\n         * Run tests with full titles matching `re`. Updates runner.total\\n         * with number of tests matched.\\n         *\\n         * @param {RegExp} re\\n         * @param {Boolean} invert\\n         * @return {Runner} for chaining\\n         * @api public\\n         */\\n\\n        Runner.prototype.grep = function (re, invert) {\\n            debug('grep %s', re);\\n            this._grep = re;\\n            this._invert = invert;\\n            this.total = this.grepTotal(this.suite);\\n            return this;\\n        };\\n\\n        /**\\n         * Returns the number of tests matching the grep search for the\\n         * given suite.\\n         *\\n         * @param {Suite} suite\\n         * @return {Number}\\n         * @api public\\n         */\\n\\n        Runner.prototype.grepTotal = function (suite) {\\n            var self = this;\\n            var total = 0;\\n\\n            suite.eachTest(function (test) {\\n                var match = self._grep.test(test.fullTitle());\\n                if (self._invert) match = !match;\\n                if (match) total++;\\n            });\\n\\n            return total;\\n        };\\n\\n        /**\\n         * Return a list of global properties.\\n         *\\n         * @return {Array}\\n         * @api private\\n         */\\n\\n        Runner.prototype.globalProps = function () {\\n            var props = utils.keys(global);\\n\\n            // non-enumerables\\n            for (var i = 0; i < globals.length; ++i) {\\n                if (~utils.indexOf(props, globals[i])) continue;\\n                props.push(globals[i]);\\n            }\\n\\n            return props;\\n        };\\n\\n        /**\\n         * Allow the given `arr` of globals.\\n         *\\n         * @param {Array} arr\\n         * @return {Runner} for chaining\\n         * @api public\\n         */\\n\\n        Runner.prototype.globals = function (arr) {\\n            if (0 == arguments.length) return this._globals;\\n            debug('globals %j', arr);\\n            this._globals = this._globals.concat(arr);\\n            return this;\\n        };\\n\\n        /**\\n         * Check for global variable leaks.\\n         *\\n         * @api private\\n         */\\n\\n        Runner.prototype.checkGlobals = function (test) {\\n            if (this.ignoreLeaks) return;\\n            var ok = this._globals;\\n\\n            var globals = this.globalProps();\\n            var isNode = process.kill;\\n            var leaks;\\n\\n            if (test) {\\n                ok = ok.concat(test._allowedGlobals || []);\\n            }\\n\\n            if (this.prevGlobalsLength == globals.length) return;\\n            this.prevGlobalsLength = globals.length;\\n\\n            leaks = filterLeaks(ok, globals);\\n            this._globals = this._globals.concat(leaks);\\n\\n            if (leaks.length > 1) {\\n                this.fail(test, new Error('global leaks detected: ' + leaks.join(', ') + ''));\\n            } else if (leaks.length) {\\n                this.fail(test, new Error('global leak detected: ' + leaks[0]));\\n            }\\n        };\\n\\n        /**\\n         * Fail the given `test`.\\n         *\\n         * @param {Test} test\\n         * @param {Error} err\\n         * @api private\\n         */\\n\\n        Runner.prototype.fail = function (test, err) {\\n            ++this.failures;\\n            test.state = 'failed';\\n\\n            if ('string' == typeof err) {\\n                err = new Error('the string \\\"' + err + '\\\" was thrown, throw an Error :)');\\n            }\\n\\n            this.emit('fail', test, err);\\n        };\\n\\n        /**\\n         * Fail the given `hook` with `err`.\\n         *\\n         * Hook failures work in the following pattern:\\n         * - If bail, then exit\\n         * - Failed `before` hook skips all tests in a suite and subsuites,\\n         *   but jumps to corresponding `after` hook\\n         * - Failed `before each` hook skips remaining tests in a\\n         *   suite and jumps to corresponding `after each` hook,\\n         *   which is run only once\\n         * - Failed `after` hook does not alter\\n         *   execution order\\n         * - Failed `after each` hook skips remaining tests in a\\n         *   suite and subsuites, but executes other `after each`\\n         *   hooks\\n         *\\n         * @param {Hook} hook\\n         * @param {Error} err\\n         * @api private\\n         */\\n\\n        Runner.prototype.failHook = function (hook, err) {\\n            this.fail(hook, err);\\n            if (this.suite.bail()) {\\n                this.emit('end');\\n            }\\n        };\\n\\n        /**\\n         * Run hook `name` callbacks and then invoke `fn()`.\\n         *\\n         * @param {String} name\\n         * @param {Function} function\\n         * @api private\\n         */\\n\\n        Runner.prototype.hook = function (name, fn) {\\n            var suite = this.suite\\n                , hooks = suite['_' + name]\\n                , self = this\\n                , timer;\\n\\n            function next(i) {\\n                var hook = hooks[i];\\n                if (!hook) return fn();\\n                if (self.failures && suite.bail()) return fn();\\n                self.currentRunnable = hook;\\n\\n                hook.ctx.currentTest = self.test;\\n\\n                self.emit('hook', hook);\\n\\n                hook.on('error', function (err) {\\n                    self.failHook(hook, err);\\n                });\\n\\n                hook.run(function (err) {\\n                    hook.removeAllListeners('error');\\n                    var testError = hook.error();\\n                    if (testError) self.fail(self.test, testError);\\n                    if (err) {\\n                        self.failHook(hook, err);\\n\\n                        // stop executing hooks, notify callee of hook err\\n                        return fn(err);\\n                    }\\n                    self.emit('hook end', hook);\\n                    delete hook.ctx.currentTest;\\n                    next(++i);\\n                });\\n            }\\n\\n            Runner.immediately(function () {\\n                next(0);\\n            });\\n        };\\n\\n        /**\\n         * Run hook `name` for the given array of `suites`\\n         * in order, and callback `fn(err, errSuite)`.\\n         *\\n         * @param {String} name\\n         * @param {Array} suites\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        Runner.prototype.hooks = function (name, suites, fn) {\\n            var self = this\\n                , orig = this.suite;\\n\\n            function next(suite) {\\n                self.suite = suite;\\n\\n                if (!suite) {\\n                    self.suite = orig;\\n                    return fn();\\n                }\\n\\n                self.hook(name, function (err) {\\n                    if (err) {\\n                        var errSuite = self.suite;\\n                        self.suite = orig;\\n                        return fn(err, errSuite);\\n                    }\\n\\n                    next(suites.pop());\\n                });\\n            }\\n\\n            next(suites.pop());\\n        };\\n\\n        /**\\n         * Run hooks from the top level down.\\n         *\\n         * @param {String} name\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        Runner.prototype.hookUp = function (name, fn) {\\n            var suites = [this.suite].concat(this.parents()).reverse();\\n            this.hooks(name, suites, fn);\\n        };\\n\\n        /**\\n         * Run hooks from the bottom up.\\n         *\\n         * @param {String} name\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        Runner.prototype.hookDown = function (name, fn) {\\n            var suites = [this.suite].concat(this.parents());\\n            this.hooks(name, suites, fn);\\n        };\\n\\n        /**\\n         * Return an array of parent Suites from\\n         * closest to furthest.\\n         *\\n         * @return {Array}\\n         * @api private\\n         */\\n\\n        Runner.prototype.parents = function () {\\n            var suite = this.suite\\n                , suites = [];\\n            while (suite = suite.parent) suites.push(suite);\\n            return suites;\\n        };\\n\\n        /**\\n         * Run the current test and callback `fn(err)`.\\n         *\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        Runner.prototype.runTest = function (fn) {\\n            var test = this.test\\n                , self = this;\\n\\n            if (this.asyncOnly) test.asyncOnly = true;\\n\\n            try {\\n                test.on('error', function (err) {\\n                    self.fail(test, err);\\n                });\\n                test.run(fn);\\n            } catch (err) {\\n                fn(err);\\n            }\\n        };\\n\\n        /**\\n         * Run tests in the given `suite` and invoke\\n         * the callback `fn()` when complete.\\n         *\\n         * @param {Suite} suite\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        Runner.prototype.runTests = function (suite, fn) {\\n            var self = this\\n                , tests = suite.tests.slice()\\n                , test;\\n\\n\\n            function hookErr(err, errSuite, after) {\\n                // before/after Each hook for errSuite failed:\\n                var orig = self.suite;\\n\\n                // for failed 'after each' hook start from errSuite parent,\\n                // otherwise start from errSuite itself\\n                self.suite = after ? errSuite.parent : errSuite;\\n\\n                if (self.suite) {\\n                    // call hookUp afterEach\\n                    self.hookUp('afterEach', function (err2, errSuite2) {\\n                        self.suite = orig;\\n                        // some hooks may fail even now\\n                        if (err2) return hookErr(err2, errSuite2, true);\\n                        // report error suite\\n                        fn(errSuite);\\n                    });\\n                } else {\\n                    // there is no need calling other 'after each' hooks\\n                    self.suite = orig;\\n                    fn(errSuite);\\n                }\\n            }\\n\\n            function next(err, errSuite) {\\n                // if we bail after first err\\n                if (self.failures && suite._bail) return fn();\\n\\n                if (self._abort) return fn();\\n\\n                if (err) return hookErr(err, errSuite, true);\\n\\n                // next test\\n                test = tests.shift();\\n\\n                // all done\\n                if (!test) return fn();\\n\\n                // grep\\n                var match = self._grep.test(test.fullTitle());\\n                if (self._invert) match = !match;\\n                if (!match) return next();\\n\\n                // pending\\n                if (test.pending) {\\n                    self.emit('pending', test);\\n                    self.emit('test end', test);\\n                    return next();\\n                }\\n\\n                // execute test and hook(s)\\n                self.emit('test', self.test = test);\\n                self.hookDown('beforeEach', function (err, errSuite) {\\n\\n                    if (err) return hookErr(err, errSuite, false);\\n\\n                    self.currentRunnable = self.test;\\n                    self.runTest(function (err) {\\n                        test = self.test;\\n\\n                        if (err) {\\n                            self.fail(test, err);\\n                            self.emit('test end', test);\\n                            return self.hookUp('afterEach', next);\\n                        }\\n\\n                        test.state = 'passed';\\n                        self.emit('pass', test);\\n                        self.emit('test end', test);\\n                        self.hookUp('afterEach', next);\\n                    });\\n                });\\n            }\\n\\n            this.next = next;\\n            next();\\n        };\\n\\n        /**\\n         * Run the given `suite` and invoke the\\n         * callback `fn()` when complete.\\n         *\\n         * @param {Suite} suite\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        Runner.prototype.runSuite = function (suite, fn) {\\n            var total = this.grepTotal(suite)\\n                , self = this\\n                , i = 0;\\n\\n            debug('run suite %s', suite.fullTitle());\\n\\n            if (!total) return fn();\\n\\n            this.emit('suite', this.suite = suite);\\n\\n            function next(errSuite) {\\n                if (errSuite) {\\n                    // current suite failed on a hook from errSuite\\n                    if (errSuite == suite) {\\n                        // if errSuite is current suite\\n                        // continue to the next sibling suite\\n                        return done();\\n                    } else {\\n                        // errSuite is among the parents of current suite\\n                        // stop execution of errSuite and all sub-suites\\n                        return done(errSuite);\\n                    }\\n                }\\n\\n                if (self._abort) return done();\\n\\n                var curr = suite.suites[i++];\\n                if (!curr) return done();\\n                self.runSuite(curr, next);\\n            }\\n\\n            function done(errSuite) {\\n                self.suite = suite;\\n                self.hook('afterAll', function () {\\n                    self.emit('suite end', suite);\\n                    fn(errSuite);\\n                });\\n            }\\n\\n            this.hook('beforeAll', function (err) {\\n                if (err) return done();\\n                self.runTests(suite, next);\\n            });\\n        };\\n\\n        /**\\n         * Handle uncaught exceptions.\\n         *\\n         * @param {Error} err\\n         * @api private\\n         */\\n\\n        Runner.prototype.uncaught = function (err) {\\n            debug('uncaught exception %s', err.message);\\n            var runnable = this.currentRunnable;\\n            if (!runnable || 'failed' == runnable.state) return;\\n            runnable.clearTimeout();\\n            err.uncaught = true;\\n            this.fail(runnable, err);\\n\\n            // recover from test\\n            if ('test' == runnable.type) {\\n                this.emit('test end', runnable);\\n                this.hookUp('afterEach', this.next);\\n                return;\\n            }\\n\\n            // bail on hooks\\n            this.emit('end');\\n        };\\n\\n        /**\\n         * Run the root suite and invoke `fn(failures)`\\n         * on completion.\\n         *\\n         * @param {Function} fn\\n         * @return {Runner} for chaining\\n         * @api public\\n         */\\n\\n        Runner.prototype.run = function (fn) {\\n            var self = this\\n                , fn = fn || function () {\\n                };\\n\\n            function uncaught(err) {\\n                self.uncaught(err);\\n            }\\n\\n            debug('start');\\n\\n            // callback\\n            this.on('end', function () {\\n                debug('end');\\n                process.removeListener('uncaughtException', uncaught);\\n                fn(self.failures);\\n            });\\n\\n            // run suites\\n            this.emit('start');\\n            this.runSuite(this.suite, function () {\\n                debug('finished running');\\n                self.emit('end');\\n            });\\n\\n            // uncaught exception\\n            process.on('uncaughtException', uncaught);\\n\\n            return this;\\n        };\\n\\n        /**\\n         * Cleanly abort execution\\n         *\\n         * @return {Runner} for chaining\\n         * @api public\\n         */\\n        Runner.prototype.abort = function () {\\n            debug('aborting');\\n            this._abort = true;\\n        }\\n\\n        /**\\n         * Filter leaks with the given globals flagged as `ok`.\\n         *\\n         * @param {Array} ok\\n         * @param {Array} globals\\n         * @return {Array}\\n         * @api private\\n         */\\n\\n        function filterLeaks(ok, globals) {\\n            return filter(globals, function (key) {\\n                // Firefox and Chrome exposes iframes as index inside the window object\\n                if (/^d+/.test(key)) return false;\\n\\n                // in firefox\\n                // if runner runs in an iframe, this iframe's window.getInterface method not init at first\\n                // it is assigned in some seconds\\n                if (global.navigator && /^getInterface/.test(key)) return false;\\n\\n                // an iframe could be approached by window[iframeIndex]\\n                // in ie6,7,8 and opera, iframeIndex is enumerable, this could cause leak\\n                if (global.navigator && /^\\\\d+/.test(key)) return false;\\n\\n                // Opera and IE expose global variables for HTML element IDs (issue #243)\\n                if (/^mocha-/.test(key)) return false;\\n\\n                var matched = filter(ok, function (ok) {\\n                    if (~ok.indexOf('*')) return 0 == key.indexOf(ok.split('*')[0]);\\n                    return key == ok;\\n                });\\n                return matched.length == 0 && (!global.navigator || 'onerror' !== key);\\n            });\\n        }\\n\\n        /**\\n         * Array of globals dependent on the environment.\\n         *\\n         * @return {Array}\\n         * @api private\\n         */\\n\\n        function extraGlobals() {\\n            if (typeof(process) === 'object' &&\\n                typeof(process.version) === 'string') {\\n\\n                var nodeVersion = process.version.split('.').reduce(function (a, v) {\\n                    return a << 8 | v;\\n                });\\n\\n                // 'errno' was renamed to process._errno in v0.9.11.\\n\\n                if (nodeVersion < 0x00090B) {\\n                    return ['errno'];\\n                }\\n            }\\n\\n            return [];\\n        }\\n\\n    }); // module: runner.js\\n\\n    require.register(\\\"suite.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var EventEmitter = require('browser/events').EventEmitter\\n            , debug = require('browser/debug')('mocha:suite')\\n            , milliseconds = require('./ms')\\n            , utils = require('./utils')\\n            , Hook = require('./hook');\\n\\n        /**\\n         * Expose `Suite`.\\n         */\\n\\n        exports = module.exports = Suite;\\n\\n        /**\\n         * Create a new `Suite` with the given `title`\\n         * and parent `Suite`. When a suite with the\\n         * same title is already present, that suite\\n         * is returned to provide nicer reporter\\n         * and more flexible meta-testing.\\n         *\\n         * @param {Suite} parent\\n         * @param {String} title\\n         * @return {Suite}\\n         * @api public\\n         */\\n\\n        exports.create = function (parent, title) {\\n            var suite = new Suite(title, parent.ctx);\\n            suite.parent = parent;\\n            if (parent.pending) suite.pending = true;\\n            title = suite.fullTitle();\\n            parent.addSuite(suite);\\n            return suite;\\n        };\\n\\n        /**\\n         * Initialize a new `Suite` with the given\\n         * `title` and `ctx`.\\n         *\\n         * @param {String} title\\n         * @param {Context} ctx\\n         * @api private\\n         */\\n\\n        function Suite(title, ctx) {\\n            this.title = title;\\n            this.ctx = ctx;\\n            this.suites = [];\\n            this.tests = [];\\n            this.pending = false;\\n            this._beforeEach = [];\\n            this._beforeAll = [];\\n            this._afterEach = [];\\n            this._afterAll = [];\\n            this.root = !title;\\n            this._timeout = 2000;\\n            this._slow = 75;\\n            this._bail = false;\\n        }\\n\\n        /**\\n         * Inherit from `EventEmitter.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = EventEmitter.prototype;\\n        Suite.prototype = new F;\\n        Suite.prototype.constructor = Suite;\\n\\n\\n        /**\\n         * Return a clone of this `Suite`.\\n         *\\n         * @return {Suite}\\n         * @api private\\n         */\\n\\n        Suite.prototype.clone = function () {\\n            var suite = new Suite(this.title);\\n            debug('clone');\\n            suite.ctx = this.ctx;\\n            suite.timeout(this.timeout());\\n            suite.slow(this.slow());\\n            suite.bail(this.bail());\\n            return suite;\\n        };\\n\\n        /**\\n         * Set timeout `ms` or short-hand such as \\\"2s\\\".\\n         *\\n         * @param {Number|String} ms\\n         * @return {Suite|Number} for chaining\\n         * @api private\\n         */\\n\\n        Suite.prototype.timeout = function (ms) {\\n            if (0 == arguments.length) return this._timeout;\\n            if ('string' == typeof ms) ms = milliseconds(ms);\\n            debug('timeout %d', ms);\\n            this._timeout = parseInt(ms, 10);\\n            return this;\\n        };\\n\\n        /**\\n         * Set slow `ms` or short-hand such as \\\"2s\\\".\\n         *\\n         * @param {Number|String} ms\\n         * @return {Suite|Number} for chaining\\n         * @api private\\n         */\\n\\n        Suite.prototype.slow = function (ms) {\\n            if (0 === arguments.length) return this._slow;\\n            if ('string' == typeof ms) ms = milliseconds(ms);\\n            debug('slow %d', ms);\\n            this._slow = ms;\\n            return this;\\n        };\\n\\n        /**\\n         * Sets whether to bail after first error.\\n         *\\n         * @parma {Boolean} bail\\n         * @return {Suite|Number} for chaining\\n         * @api private\\n         */\\n\\n        Suite.prototype.bail = function (bail) {\\n            if (0 == arguments.length) return this._bail;\\n            debug('bail %s', bail);\\n            this._bail = bail;\\n            return this;\\n        };\\n\\n        /**\\n         * Run `fn(test[, done])` before running tests.\\n         *\\n         * @param {Function} fn\\n         * @return {Suite} for chaining\\n         * @api private\\n         */\\n\\n        Suite.prototype.beforeAll = function (fn) {\\n            if (this.pending) return this;\\n            var hook = new Hook('\\\"before all\\\" hook', fn);\\n            hook.parent = this;\\n            hook.timeout(this.timeout());\\n            hook.slow(this.slow());\\n            hook.ctx = this.ctx;\\n            this._beforeAll.push(hook);\\n            this.emit('beforeAll', hook);\\n            return this;\\n        };\\n\\n        /**\\n         * Run `fn(test[, done])` after running tests.\\n         *\\n         * @param {Function} fn\\n         * @return {Suite} for chaining\\n         * @api private\\n         */\\n\\n        Suite.prototype.afterAll = function (fn) {\\n            if (this.pending) return this;\\n            var hook = new Hook('\\\"after all\\\" hook', fn);\\n            hook.parent = this;\\n            hook.timeout(this.timeout());\\n            hook.slow(this.slow());\\n            hook.ctx = this.ctx;\\n            this._afterAll.push(hook);\\n            this.emit('afterAll', hook);\\n            return this;\\n        };\\n\\n        /**\\n         * Run `fn(test[, done])` before each test case.\\n         *\\n         * @param {Function} fn\\n         * @return {Suite} for chaining\\n         * @api private\\n         */\\n\\n        Suite.prototype.beforeEach = function (fn) {\\n            if (this.pending) return this;\\n            var hook = new Hook('\\\"before each\\\" hook', fn);\\n            hook.parent = this;\\n            hook.timeout(this.timeout());\\n            hook.slow(this.slow());\\n            hook.ctx = this.ctx;\\n            this._beforeEach.push(hook);\\n            this.emit('beforeEach', hook);\\n            return this;\\n        };\\n\\n        /**\\n         * Run `fn(test[, done])` after each test case.\\n         *\\n         * @param {Function} fn\\n         * @return {Suite} for chaining\\n         * @api private\\n         */\\n\\n        Suite.prototype.afterEach = function (fn) {\\n            if (this.pending) return this;\\n            var hook = new Hook('\\\"after each\\\" hook', fn);\\n            hook.parent = this;\\n            hook.timeout(this.timeout());\\n            hook.slow(this.slow());\\n            hook.ctx = this.ctx;\\n            this._afterEach.push(hook);\\n            this.emit('afterEach', hook);\\n            return this;\\n        };\\n\\n        /**\\n         * Add a test `suite`.\\n         *\\n         * @param {Suite} suite\\n         * @return {Suite} for chaining\\n         * @api private\\n         */\\n\\n        Suite.prototype.addSuite = function (suite) {\\n            suite.parent = this;\\n            suite.timeout(this.timeout());\\n            suite.slow(this.slow());\\n            suite.bail(this.bail());\\n            this.suites.push(suite);\\n            this.emit('suite', suite);\\n            return this;\\n        };\\n\\n        /**\\n         * Add a `test` to this suite.\\n         *\\n         * @param {Test} test\\n         * @return {Suite} for chaining\\n         * @api private\\n         */\\n\\n        Suite.prototype.addTest = function (test) {\\n            test.parent = this;\\n            test.timeout(this.timeout());\\n            test.slow(this.slow());\\n            test.ctx = this.ctx;\\n            this.tests.push(test);\\n            this.emit('test', test);\\n            return this;\\n        };\\n\\n        /**\\n         * Return the full title generated by recursively\\n         * concatenating the parent's full title.\\n         *\\n         * @return {String}\\n         * @api public\\n         */\\n\\n        Suite.prototype.fullTitle = function () {\\n            if (this.parent) {\\n                var full = this.parent.fullTitle();\\n                if (full) return full + ' ' + this.title;\\n            }\\n            return this.title;\\n        };\\n\\n        /**\\n         * Return the total number of tests.\\n         *\\n         * @return {Number}\\n         * @api public\\n         */\\n\\n        Suite.prototype.total = function () {\\n            return utils.reduce(this.suites, function (sum, suite) {\\n                    return sum + suite.total();\\n                }, 0) + this.tests.length;\\n        };\\n\\n        /**\\n         * Iterates through each suite recursively to find\\n         * all tests. Applies a function in the format\\n         * `fn(test)`.\\n         *\\n         * @param {Function} fn\\n         * @return {Suite}\\n         * @api private\\n         */\\n\\n        Suite.prototype.eachTest = function (fn) {\\n            utils.forEach(this.tests, fn);\\n            utils.forEach(this.suites, function (suite) {\\n                suite.eachTest(fn);\\n            });\\n            return this;\\n        };\\n\\n    }); // module: suite.js\\n\\n    require.register(\\\"test.js\\\", function (module, exports, require) {\\n\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var Runnable = require('./runnable');\\n\\n        /**\\n         * Expose `Test`.\\n         */\\n\\n        module.exports = Test;\\n\\n        /**\\n         * Initialize a new `Test` with the given `title` and callback `fn`.\\n         *\\n         * @param {String} title\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        function Test(title, fn) {\\n            Runnable.call(this, title, fn);\\n            this.pending = !fn;\\n            this.type = 'test';\\n        }\\n\\n        /**\\n         * Inherit from `Runnable.prototype`.\\n         */\\n\\n        function F() {\\n        };\\n        F.prototype = Runnable.prototype;\\n        Test.prototype = new F;\\n        Test.prototype.constructor = Test;\\n\\n\\n    }); // module: test.js\\n\\n    require.register(\\\"utils.js\\\", function (module, exports, require) {\\n        /**\\n         * Module dependencies.\\n         */\\n\\n        var fs = require('browser/fs')\\n            , path = require('browser/path')\\n            , join = path.join\\n            , debug = require('browser/debug')('mocha:watch');\\n\\n        /**\\n         * Ignored directories.\\n         */\\n\\n        var ignore = ['node_modules', '.git'];\\n\\n        /**\\n         * Escape special characters in the given string of html.\\n         *\\n         * @param  {String} html\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        exports.escape = function (html) {\\n            return String(html)\\n                .replace(/&/g, '&amp;')\\n                .replace(/\\\"/g, '&quot;')\\n                .replace(/</g, '&lt;')\\n                .replace(/>/g, '&gt;');\\n        };\\n\\n        /**\\n         * Array#forEach (<=IE8)\\n         *\\n         * @param {Array} array\\n         * @param {Function} fn\\n         * @param {Object} scope\\n         * @api private\\n         */\\n\\n        exports.forEach = function (arr, fn, scope) {\\n            for (var i = 0, l = arr.length; i < l; i++)\\n                fn.call(scope, arr[i], i);\\n        };\\n\\n        /**\\n         * Array#map (<=IE8)\\n         *\\n         * @param {Array} array\\n         * @param {Function} fn\\n         * @param {Object} scope\\n         * @api private\\n         */\\n\\n        exports.map = function (arr, fn, scope) {\\n            var result = [];\\n            for (var i = 0, l = arr.length; i < l; i++)\\n                result.push(fn.call(scope, arr[i], i));\\n            return result;\\n        };\\n\\n        /**\\n         * Array#indexOf (<=IE8)\\n         *\\n         * @parma {Array} arr\\n         * @param {Object} obj to find index of\\n         * @param {Number} start\\n         * @api private\\n         */\\n\\n        exports.indexOf = function (arr, obj, start) {\\n            for (var i = start || 0, l = arr.length; i < l; i++) {\\n                if (arr[i] === obj)\\n                    return i;\\n            }\\n            return -1;\\n        };\\n\\n        /**\\n         * Array#reduce (<=IE8)\\n         *\\n         * @param {Array} array\\n         * @param {Function} fn\\n         * @param {Object} initial value\\n         * @api private\\n         */\\n\\n        exports.reduce = function (arr, fn, val) {\\n            var rval = val;\\n\\n            for (var i = 0, l = arr.length; i < l; i++) {\\n                rval = fn(rval, arr[i], i, arr);\\n            }\\n\\n            return rval;\\n        };\\n\\n        /**\\n         * Array#filter (<=IE8)\\n         *\\n         * @param {Array} array\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        exports.filter = function (arr, fn) {\\n            var ret = [];\\n\\n            for (var i = 0, l = arr.length; i < l; i++) {\\n                var val = arr[i];\\n                if (fn(val, i, arr)) ret.push(val);\\n            }\\n\\n            return ret;\\n        };\\n\\n        /**\\n         * Object.keys (<=IE8)\\n         *\\n         * @param {Object} obj\\n         * @return {Array} keys\\n         * @api private\\n         */\\n\\n        exports.keys = Object.keys || function (obj) {\\n                var keys = []\\n                    , has = Object.prototype.hasOwnProperty // for `window` on <=IE8\\n\\n                for (var key in obj) {\\n                    if (has.call(obj, key)) {\\n                        keys.push(key);\\n                    }\\n                }\\n\\n                return keys;\\n            };\\n\\n        /**\\n         * Watch the given `files` for changes\\n         * and invoke `fn(file)` on modification.\\n         *\\n         * @param {Array} files\\n         * @param {Function} fn\\n         * @api private\\n         */\\n\\n        exports.watch = function (files, fn) {\\n            var options = {interval: 100};\\n            files.forEach(function (file) {\\n                debug('file %s', file);\\n                fs.watchFile(file, options, function (curr, prev) {\\n                    if (prev.mtime < curr.mtime) fn(file);\\n                });\\n            });\\n        };\\n\\n        /**\\n         * Ignored files.\\n         */\\n\\n        function ignored(path) {\\n            return !~ignore.indexOf(path);\\n        }\\n\\n        /**\\n         * Lookup files in the given `dir`.\\n         *\\n         * @return {Array}\\n         * @api private\\n         */\\n\\n        exports.files = function (dir, ret) {\\n            ret = ret || [];\\n\\n            fs.readdirSync(dir)\\n                .filter(ignored)\\n                .forEach(function (path) {\\n                    path = join(dir, path);\\n                    if (fs.statSync(path).isDirectory()) {\\n                        exports.files(path, ret);\\n                    } else if (path.match(/\\\\.(js|coffee|litcoffee|coffee.md)$/)) {\\n                        ret.push(path);\\n                    }\\n                });\\n\\n            return ret;\\n        };\\n\\n        /**\\n         * Compute a slug from the given `str`.\\n         *\\n         * @param {String} str\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        exports.slug = function (str) {\\n            return str\\n                .toLowerCase()\\n                .replace(/ +/g, '-')\\n                .replace(/[^-\\\\w]/g, '');\\n        };\\n\\n        /**\\n         * Strip the function definition from `str`,\\n         * and re-indent for pre whitespace.\\n         */\\n\\n        exports.clean = function (str) {\\n            str = str\\n                .replace(/\\\\r\\\\n?|[\\\\n\\\\u2028\\\\u2029]/g, \\\"\\\\n\\\").replace(/^\\\\uFEFF/, '')\\n                .replace(/^function *\\\\(.*\\\\) *{/, '')\\n                .replace(/\\\\s+\\\\}$/, '');\\n\\n            var spaces = str.match(/^\\\\n?( *)/)[1].length\\n                , tabs = str.match(/^\\\\n?(\\\\t*)/)[1].length\\n                , re = new RegExp('^\\\\n?' + (tabs ? '\\\\t' : ' ') + '{' + (tabs ? tabs : spaces) + '}', 'gm');\\n\\n            str = str.replace(re, '');\\n\\n            return exports.trim(str);\\n        };\\n\\n        /**\\n         * Escape regular expression characters in `str`.\\n         *\\n         * @param {String} str\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        exports.escapeRegexp = function (str) {\\n            return str.replace(/[-\\\\\\\\^$*+?.()|[\\\\]{}]/g, \\\"\\\\\\\\$&\\\");\\n        };\\n\\n        /**\\n         * Trim the given `str`.\\n         *\\n         * @param {String} str\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        exports.trim = function (str) {\\n            return str.replace(/^\\\\s+|\\\\s+$/g, '');\\n        };\\n\\n        /**\\n         * Parse the given `qs`.\\n         *\\n         * @param {String} qs\\n         * @return {Object}\\n         * @api private\\n         */\\n\\n        exports.parseQuery = function (qs) {\\n            return exports.reduce(qs.replace('?', '').split('&'), function (obj, pair) {\\n                var i = pair.indexOf('=')\\n                    , key = pair.slice(0, i)\\n                    , val = pair.slice(++i);\\n\\n                obj[key] = decodeURIComponent(val);\\n                return obj;\\n            }, {});\\n        };\\n\\n        /**\\n         * Highlight the given string of `js`.\\n         *\\n         * @param {String} js\\n         * @return {String}\\n         * @api private\\n         */\\n\\n        function highlight(js) {\\n            return js\\n                .replace(/</g, '&lt;')\\n                .replace(/>/g, '&gt;')\\n                .replace(/\\\\/\\\\/(.*)/gm, '<span class=\\\"comment\\\">//$1</span>')\\n                .replace(/('.*?')/gm, '<span class=\\\"string\\\">$1</span>')\\n                .replace(/(\\\\d+\\\\.\\\\d+)/gm, '<span class=\\\"number\\\">$1</span>')\\n                .replace(/(\\\\d+)/gm, '<span class=\\\"number\\\">$1</span>')\\n                .replace(/\\\\bnew *(\\\\w+)/gm, '<span class=\\\"keyword\\\">new</span> <span class=\\\"init\\\">$1</span>')\\n                .replace(/\\\\b(function|new|throw|return|var|if|else)\\\\b/gm, '<span class=\\\"keyword\\\">$1</span>')\\n        }\\n\\n        /**\\n         * Highlight the contents of tag `name`.\\n         *\\n         * @param {String} name\\n         * @api private\\n         */\\n\\n        exports.highlightTags = function (name) {\\n            var code = document.getElementsByTagName(name);\\n            for (var i = 0, len = code.length; i < len; ++i) {\\n                code[i].innerHTML = highlight(code[i].innerHTML);\\n            }\\n        };\\n\\n    }); // module: utils.js\\n// The global object is \\\"self\\\" in Web Workers.\\n    global = (function () {\\n        return this;\\n    })();\\n\\n    /**\\n     * Save timer references to avoid Sinon interfering (see GH-237).\\n     */\\n\\n    var Date = global.Date;\\n    var setTimeout = global.setTimeout;\\n    var setInterval = global.setInterval;\\n    var clearTimeout = global.clearTimeout;\\n    var clearInterval = global.clearInterval;\\n\\n    /**\\n     * Node shims.\\n     *\\n     * These are meant only to allow\\n     * mocha.js to run untouched, not\\n     * to allow running node code in\\n     * the browser.\\n     */\\n\\n    var process = {};\\n    process.exit = function (status) {\\n    };\\n    process.stdout = {};\\n\\n    var uncaughtExceptionHandlers = [];\\n\\n    /**\\n     * Remove uncaughtException listener.\\n     */\\n\\n    process.removeListener = function (e, fn) {\\n        if ('uncaughtException' == e) {\\n            global.onerror = function () {\\n            };\\n            var i = Mocha.utils.indexOf(uncaughtExceptionHandlers, fn);\\n            if (i != -1) {\\n                uncaughtExceptionHandlers.splice(i, 1);\\n            }\\n        }\\n    };\\n\\n    /**\\n     * Implements uncaughtException listener.\\n     */\\n\\n    process.on = function (e, fn) {\\n        if ('uncaughtException' == e) {\\n            global.onerror = function (err, url, line) {\\n                fn(new Error(err + ' (' + url + ':' + line + ')'));\\n                return true;\\n            };\\n            uncaughtExceptionHandlers.push(fn);\\n        }\\n    };\\n\\n    /**\\n     * Expose mocha.\\n     */\\n\\n    var Mocha = global.Mocha = require('mocha'),\\n        mocha = global.mocha = new Mocha({reporter: 'html'});\\n\\n// The BDD UI is registered by default, but no UI will be functional in the\\n// browser without an explicit call to the overridden `mocha.ui` (see below).\\n// Ensure that this default UI does not expose its methods to the global scope.\\n    mocha.suite.removeAllListeners('pre-require');\\n\\n    var immediateQueue = []\\n        , immediateTimeout;\\n\\n    function timeslice() {\\n        var immediateStart = new Date().getTime();\\n        while (immediateQueue.length && (new Date().getTime() - immediateStart) < 100) {\\n            immediateQueue.shift()();\\n        }\\n        if (immediateQueue.length) {\\n            immediateTimeout = setTimeout(timeslice, 0);\\n        } else {\\n            immediateTimeout = null;\\n        }\\n    }\\n\\n    /**\\n     * High-performance override of Runner.immediately.\\n     */\\n\\n    Mocha.Runner.immediately = function (callback) {\\n        immediateQueue.push(callback);\\n        if (!immediateTimeout) {\\n            immediateTimeout = setTimeout(timeslice, 0);\\n        }\\n    };\\n\\n    /**\\n     * Function to allow assertion libraries to throw errors directly into mocha.\\n     * This is useful when running tests in a browser because window.onerror will\\n     * only receive the 'message' attribute of the Error.\\n     */\\n    mocha.throwError = function (err) {\\n        Mocha.utils.forEach(uncaughtExceptionHandlers, function (fn) {\\n            fn(err);\\n        });\\n        throw err;\\n    };\\n\\n    /**\\n     * Override ui to ensure that the ui functions are initialized.\\n     * Normally this would happen in Mocha.prototype.loadFiles.\\n     */\\n\\n    mocha.ui = function (ui) {\\n        Mocha.prototype.ui.call(this, ui);\\n        this.suite.emit('pre-require', global, null, this);\\n        return this;\\n    };\\n\\n    /**\\n     * Setup mocha with the given setting options.\\n     */\\n\\n    mocha.setup = function (opts) {\\n        if ('string' == typeof opts) opts = {ui: opts};\\n        for (var opt in opts) this[opt](opts[opt]);\\n        return this;\\n    };\\n\\n    /**\\n     * Run mocha, returning the Runner.\\n     */\\n\\n    mocha.run = function (fn) {\\n        var options = mocha.options;\\n        mocha.globals('location');\\n\\n        var query = Mocha.utils.parseQuery(global.location.search || '');\\n        if (query.grep) mocha.grep(query.grep);\\n        if (query.invert) mocha.invert();\\n\\n        return Mocha.prototype.run.call(mocha, function () {\\n            // The DOM Document is not available in Web Workers.\\n            if (global.document) {\\n                Mocha.utils.highlightTags('code');\\n            }\\n            if (fn) fn();\\n        });\\n    };\\n\\n    /**\\n     * Expose the process shim.\\n     */\\n\\n    Mocha.process = process;\\n})();\\n/* NProgress, (c) 2013, 2014 Rico Sta. Cruz - http://ricostacruz.com/nprogress\\n * @license MIT */\\n\\n;(function (root, factory) {\\n\\n    if (typeof define === 'function' && define.amd) {\\n        define(factory);\\n    } else if (typeof exports === 'object') {\\n        module.exports = factory();\\n    } else {\\n        root.NProgress = factory();\\n    }\\n\\n})(this, function () {\\n    var NProgress = {};\\n\\n    NProgress.version = '0.2.0';\\n\\n    var Settings = NProgress.settings = {\\n        minimum: 0.08,\\n        easing: 'ease',\\n        positionUsing: '',\\n        speed: 200,\\n        trickle: true,\\n        trickleRate: 0.02,\\n        trickleSpeed: 800,\\n        showSpinner: true,\\n        barSelector: '[role=\\\"bar\\\"]',\\n        spinnerSelector: '[role=\\\"spinner\\\"]',\\n        parent: 'body',\\n        template: '<div class=\\\"bar\\\" role=\\\"bar\\\"><div class=\\\"peg\\\"></div></div><div class=\\\"spinner\\\" role=\\\"spinner\\\"><div class=\\\"spinner-icon\\\"></div></div>'\\n    };\\n\\n    /**\\n     * Updates configuration.\\n     *\\n     *     NProgress.configure({\\n   *       minimum: 0.1\\n   *     });\\n     */\\n    NProgress.configure = function (options) {\\n        var key, value;\\n        for (key in options) {\\n            value = options[key];\\n            if (value !== undefined && options.hasOwnProperty(key)) Settings[key] = value;\\n        }\\n\\n        return this;\\n    };\\n\\n    /**\\n     * Last number.\\n     */\\n\\n    NProgress.status = null;\\n\\n    /**\\n     * Sets the progress bar status, where `n` is a number from `0.0` to `1.0`.\\n     *\\n     *     NProgress.set(0.4);\\n     *     NProgress.set(1.0);\\n     */\\n\\n    NProgress.set = function (n) {\\n        var started = NProgress.isStarted();\\n\\n        n = clamp(n, Settings.minimum, 1);\\n        NProgress.status = (n === 1 ? null : n);\\n\\n        var progress = NProgress.render(!started),\\n            bar = progress.querySelector(Settings.barSelector),\\n            speed = Settings.speed,\\n            ease = Settings.easing;\\n\\n        progress.offsetWidth;\\n        /* Repaint */\\n\\n        queue(function (next) {\\n            // Set positionUsing if it hasn't already been set\\n            if (Settings.positionUsing === '') Settings.positionUsing = NProgress.getPositioningCSS();\\n\\n            // Add transition\\n            css(bar, barPositionCSS(n, speed, ease));\\n\\n            if (n === 1) {\\n                // Fade out\\n                css(progress, {\\n                    transition: 'none',\\n                    opacity: 1\\n                });\\n                progress.offsetWidth;\\n                /* Repaint */\\n\\n                setTimeout(function () {\\n                    css(progress, {\\n                        transition: 'all ' + speed + 'ms linear',\\n                        opacity: 0\\n                    });\\n                    setTimeout(function () {\\n                        NProgress.remove();\\n                        next();\\n                    }, speed);\\n                }, speed);\\n            } else {\\n                setTimeout(next, speed);\\n            }\\n        });\\n\\n        return this;\\n    };\\n\\n    NProgress.isStarted = function () {\\n        return typeof NProgress.status === 'number';\\n    };\\n\\n    /**\\n     * Shows the progress bar.\\n     * This is the same as setting the status to 0%, except that it doesn't go backwards.\\n     *\\n     *     NProgress.start();\\n     *\\n     */\\n    NProgress.start = function () {\\n        if (!NProgress.status) NProgress.set(0);\\n\\n        var work = function () {\\n            setTimeout(function () {\\n                if (!NProgress.status) return;\\n                NProgress.trickle();\\n                work();\\n            }, Settings.trickleSpeed);\\n        };\\n\\n        if (Settings.trickle) work();\\n\\n        return this;\\n    };\\n\\n    /**\\n     * Hides the progress bar.\\n     * This is the *sort of* the same as setting the status to 100%, with the\\n     * difference being `done()` makes some placebo effect of some realistic motion.\\n     *\\n     *     NProgress.done();\\n     *\\n     * If `true` is passed, it will show the progress bar even if its hidden.\\n     *\\n     *     NProgress.done(true);\\n     */\\n\\n    NProgress.done = function (force) {\\n        if (!force && !NProgress.status) return this;\\n\\n        return NProgress.inc(0.3 + 0.5 * Math.random()).set(1);\\n    };\\n\\n    /**\\n     * Increments by a random amount.\\n     */\\n\\n    NProgress.inc = function (amount) {\\n        var n = NProgress.status;\\n\\n        if (!n) {\\n            return NProgress.start();\\n        } else {\\n            if (typeof amount !== 'number') {\\n                amount = (1 - n) * clamp(Math.random() * n, 0.1, 0.95);\\n            }\\n\\n            n = clamp(n + amount, 0, 0.994);\\n            return NProgress.set(n);\\n        }\\n    };\\n\\n    NProgress.trickle = function () {\\n        return NProgress.inc(Math.random() * Settings.trickleRate);\\n    };\\n\\n    /**\\n     * Waits for all supplied jQuery promises and\\n     * increases the progress as the promises resolve.\\n     *\\n     * @param $promise jQUery Promise\\n     */\\n    (function () {\\n        var initial = 0, current = 0;\\n\\n        NProgress.promise = function ($promise) {\\n            if (!$promise || $promise.state() === \\\"resolved\\\") {\\n                return this;\\n            }\\n\\n            if (current === 0) {\\n                NProgress.start();\\n            }\\n\\n            initial++;\\n            current++;\\n\\n            $promise.always(function () {\\n                current--;\\n                if (current === 0) {\\n                    initial = 0;\\n                    NProgress.done();\\n                } else {\\n                    NProgress.set((initial - current) / initial);\\n                }\\n            });\\n\\n            return this;\\n        };\\n\\n    })();\\n\\n    /**\\n     * (Internal) renders the progress bar markup based on the `template`\\n     * setting.\\n     */\\n\\n    NProgress.render = function (fromStart) {\\n        if (NProgress.isRendered()) return document.getElementById('nprogress');\\n\\n        addClass(document.documentElement, 'nprogress-busy');\\n\\n        var progress = document.createElement('div');\\n        progress.id = 'nprogress';\\n        progress.innerHTML = Settings.template;\\n\\n        var bar = progress.querySelector(Settings.barSelector),\\n            perc = fromStart ? '-100' : toBarPerc(NProgress.status || 0),\\n            parent = document.querySelector(Settings.parent),\\n            spinner;\\n\\n        css(bar, {\\n            transition: 'all 0 linear',\\n            transform: 'translate3d(' + perc + '%,0,0)'\\n        });\\n\\n        if (!Settings.showSpinner) {\\n            spinner = progress.querySelector(Settings.spinnerSelector);\\n            spinner && removeElement(spinner);\\n        }\\n\\n        if (parent != document.body) {\\n            addClass(parent, 'nprogress-custom-parent');\\n        }\\n\\n        parent.appendChild(progress);\\n        return progress;\\n    };\\n\\n    /**\\n     * Removes the element. Opposite of render().\\n     */\\n\\n    NProgress.remove = function () {\\n        removeClass(document.documentElement, 'nprogress-busy');\\n        removeClass(document.querySelector(Settings.parent), 'nprogress-custom-parent');\\n        var progress = document.getElementById('nprogress');\\n        progress && removeElement(progress);\\n    };\\n\\n    /**\\n     * Checks if the progress bar is rendered.\\n     */\\n\\n    NProgress.isRendered = function () {\\n        return !!document.getElementById('nprogress');\\n    };\\n\\n    /**\\n     * Determine which positioning CSS rule to use.\\n     */\\n\\n    NProgress.getPositioningCSS = function () {\\n        // Sniff on document.body.style\\n        var bodyStyle = document.body.style;\\n\\n        // Sniff prefixes\\n        var vendorPrefix = ('WebkitTransform' in bodyStyle) ? 'Webkit' :\\n            ('MozTransform' in bodyStyle) ? 'Moz' :\\n                ('msTransform' in bodyStyle) ? 'ms' :\\n                    ('OTransform' in bodyStyle) ? 'O' : '';\\n\\n        if (vendorPrefix + 'Perspective' in bodyStyle) {\\n            // Modern browsers with 3D support, e.g. Webkit, IE10\\n            return 'translate3d';\\n        } else if (vendorPrefix + 'Transform' in bodyStyle) {\\n            // Browsers without 3D support, e.g. IE9\\n            return 'translate';\\n        } else {\\n            // Browsers without translate() support, e.g. IE7-8\\n            return 'margin';\\n        }\\n    };\\n\\n    /**\\n     * Helpers\\n     */\\n\\n    function clamp(n, min, max) {\\n        if (n < min) return min;\\n        if (n > max) return max;\\n        return n;\\n    }\\n\\n    /**\\n     * (Internal) converts a percentage (`0..1`) to a bar translateX\\n     * percentage (`-100%..0%`).\\n     */\\n\\n    function toBarPerc(n) {\\n        return (-1 + n) * 100;\\n    }\\n\\n\\n    /**\\n     * (Internal) returns the correct CSS for changing the bar's\\n     * position given an n percentage, and speed and ease from Settings\\n     */\\n\\n    function barPositionCSS(n, speed, ease) {\\n        var barCSS;\\n\\n        if (Settings.positionUsing === 'translate3d') {\\n            barCSS = {transform: 'translate3d(' + toBarPerc(n) + '%,0,0)'};\\n        } else if (Settings.positionUsing === 'translate') {\\n            barCSS = {transform: 'translate(' + toBarPerc(n) + '%,0)'};\\n        } else {\\n            barCSS = {'margin-left': toBarPerc(n) + '%'};\\n        }\\n\\n        barCSS.transition = 'all ' + speed + 'ms ' + ease;\\n\\n        return barCSS;\\n    }\\n\\n    /**\\n     * (Internal) Queues a function to be executed.\\n     */\\n\\n    var queue = (function () {\\n        var pending = [];\\n\\n        function next() {\\n            var fn = pending.shift();\\n            if (fn) {\\n                fn(next);\\n            }\\n        }\\n\\n        return function (fn) {\\n            pending.push(fn);\\n            if (pending.length == 1) next();\\n        };\\n    })();\\n\\n    /**\\n     * (Internal) Applies css properties to an element, similar to the jQuery\\n     * css method.\\n     *\\n     * While this helper does assist with vendor prefixed property names, it\\n     * does not perform any manipulation of values prior to setting styles.\\n     */\\n\\n    var css = (function () {\\n        var cssPrefixes = ['Webkit', 'O', 'Moz', 'ms'],\\n            cssProps = {};\\n\\n        function camelCase(string) {\\n            return string.replace(/^-ms-/, 'ms-').replace(/-([\\\\da-z])/gi, function (match, letter) {\\n                return letter.toUpperCase();\\n            });\\n        }\\n\\n        function getVendorProp(name) {\\n            var style = document.body.style;\\n            if (name in style) return name;\\n\\n            var i = cssPrefixes.length,\\n                capName = name.charAt(0).toUpperCase() + name.slice(1),\\n                vendorName;\\n            while (i--) {\\n                vendorName = cssPrefixes[i] + capName;\\n                if (vendorName in style) return vendorName;\\n            }\\n\\n            return name;\\n        }\\n\\n        function getStyleProp(name) {\\n            name = camelCase(name);\\n            return cssProps[name] || (cssProps[name] = getVendorProp(name));\\n        }\\n\\n        function applyCss(element, prop, value) {\\n            prop = getStyleProp(prop);\\n            element.style[prop] = value;\\n        }\\n\\n        return function (element, properties) {\\n            var args = arguments,\\n                prop,\\n                value;\\n\\n            if (args.length == 2) {\\n                for (prop in properties) {\\n                    value = properties[prop];\\n                    if (value !== undefined && properties.hasOwnProperty(prop)) applyCss(element, prop, value);\\n                }\\n            } else {\\n                applyCss(element, args[1], args[2]);\\n            }\\n        }\\n    })();\\n\\n    /**\\n     * (Internal) Determines if an element or space separated list of class names contains a class name.\\n     */\\n\\n    function hasClass(element, name) {\\n        var list = typeof element == 'string' ? element : classList(element);\\n        return list.indexOf(' ' + name + ' ') >= 0;\\n    }\\n\\n    /**\\n     * (Internal) Adds a class to an element.\\n     */\\n\\n    function addClass(element, name) {\\n        var oldList = classList(element),\\n            newList = oldList + name;\\n\\n        if (hasClass(oldList, name)) return;\\n\\n        // Trim the opening space.\\n        element.className = newList.substring(1);\\n    }\\n\\n    /**\\n     * (Internal) Removes a class from an element.\\n     */\\n\\n    function removeClass(element, name) {\\n        var oldList = classList(element),\\n            newList;\\n\\n        if (!hasClass(element, name)) return;\\n\\n        // Replace the class name.\\n        newList = oldList.replace(' ' + name + ' ', ' ');\\n\\n        // Trim the opening and closing spaces.\\n        element.className = newList.substring(1, newList.length - 1);\\n    }\\n\\n    /**\\n     * (Internal) Gets a space separated list of the class names on the element.\\n     * The list is wrapped with a single space on each end to facilitate finding\\n     * matches within the list.\\n     */\\n\\n    function classList(element) {\\n        return (' ' + (element.className || '') + ' ').replace(/\\\\s+/gi, ' ');\\n    }\\n\\n    /**\\n     * (Internal) Removes an element from the DOM.\\n     */\\n\\n    function removeElement(element) {\\n        element && element.parentNode && element.parentNode.removeChild(element);\\n    }\\n\\n    return NProgress;\\n});\\n\\n\\n/*! Quill Editor v0.20.1\\n *  https://quilljs.com/\\n *  Copyright (c) 2014, Jason Chen\\n *  Copyright (c) 2013, salesforce.com\\n */\\n(function (f) {\\n    if (typeof exports === \\\"object\\\" && typeof module !== \\\"undefined\\\") {\\n        module.exports = f()\\n    } else if (typeof define === \\\"function\\\" && define.amd) {\\n        define([], f)\\n    } else {\\n        var g;\\n        if (typeof window !== \\\"undefined\\\") {\\n            g = window\\n        } else if (typeof global !== \\\"undefined\\\") {\\n            g = global\\n        } else if (typeof self !== \\\"undefined\\\") {\\n            g = self\\n        } else {\\n            g = this\\n        }\\n        g.Quill = f()\\n    }\\n})(function () {\\n    var define, module, exports;\\n    return (function e(t, n, r) {\\n        function s(o, u) {\\n            if (!n[o]) {\\n                if (!t[o]) {\\n                    var a = typeof require == \\\"function\\\" && require;\\n                    if (!u && a)return a(o, !0);\\n                    if (i)return i(o, !0);\\n                    var f = new Error(\\\"Cannot find module '\\\" + o + \\\"'\\\");\\n                    throw f.code = \\\"MODULE_NOT_FOUND\\\", f\\n                }\\n                var l = n[o] = {exports: {}};\\n                t[o][0].call(l.exports, function (e) {\\n                    var n = t[o][1][e];\\n                    return s(n ? n : e)\\n                }, l, l.exports, e, t, n, r)\\n            }\\n            return n[o].exports\\n        }\\n\\n        var i = typeof require == \\\"function\\\" && require;\\n        for (var o = 0; o < r.length; o++)s(r[o]);\\n        return s\\n    })({\\n        1: [function (_dereq_, module, exports) {\\n            (function (global) {\\n                /**\\n                 * @license\\n                 * lodash 3.9.3 (Custom Build) <https://lodash.com/>\\n                 * Build: `lodash modern include=\\\"difference,intersection,last,all,each,find,invoke,map,reduce,partition,bind,defer,partial,clone,extend,defaults,omit,values,isElement,isEqual,isFunction,isNumber,isObject,isString,uniqueId\\\" --development --output .build/lodash.js`\\n                 * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\\n                 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\\n                 * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\\n                 * Available under MIT license <https://lodash.com/license>\\n                 */\\n                ;\\n                (function () {\\n\\n                    /** Used as a safe reference for `undefined` in pre-ES5 environments. */\\n                    var undefined;\\n\\n                    /** Used as the semantic version number. */\\n                    var VERSION = '3.9.3';\\n\\n                    /** Used to compose bitmasks for wrapper metadata. */\\n                    var BIND_FLAG = 1,\\n                        BIND_KEY_FLAG = 2,\\n                        CURRY_BOUND_FLAG = 4,\\n                        CURRY_FLAG = 8,\\n                        CURRY_RIGHT_FLAG = 16,\\n                        PARTIAL_FLAG = 32,\\n                        PARTIAL_RIGHT_FLAG = 64,\\n                        ARY_FLAG = 128,\\n                        REARG_FLAG = 256;\\n\\n                    /** Used to detect when a function becomes hot. */\\n                    var HOT_COUNT = 150,\\n                        HOT_SPAN = 16;\\n\\n                    /** Used as the `TypeError` message for \\\"Functions\\\" methods. */\\n                    var FUNC_ERROR_TEXT = 'Expected a function';\\n\\n                    /** Used as the internal argument placeholder. */\\n                    var PLACEHOLDER = '__lodash_placeholder__';\\n\\n                    /** `Object#toString` result references. */\\n                    var argsTag = '[object Arguments]',\\n                        arrayTag = '[object Array]',\\n                        boolTag = '[object Boolean]',\\n                        dateTag = '[object Date]',\\n                        errorTag = '[object Error]',\\n                        funcTag = '[object Function]',\\n                        mapTag = '[object Map]',\\n                        numberTag = '[object Number]',\\n                        objectTag = '[object Object]',\\n                        regexpTag = '[object RegExp]',\\n                        setTag = '[object Set]',\\n                        stringTag = '[object String]',\\n                        weakMapTag = '[object WeakMap]';\\n\\n                    var arrayBufferTag = '[object ArrayBuffer]',\\n                        float32Tag = '[object Float32Array]',\\n                        float64Tag = '[object Float64Array]',\\n                        int8Tag = '[object Int8Array]',\\n                        int16Tag = '[object Int16Array]',\\n                        int32Tag = '[object Int32Array]',\\n                        uint8Tag = '[object Uint8Array]',\\n                        uint8ClampedTag = '[object Uint8ClampedArray]',\\n                        uint16Tag = '[object Uint16Array]',\\n                        uint32Tag = '[object Uint32Array]';\\n\\n                    /** Used to match property names within property paths. */\\n                    var reIsDeepProp = /\\\\.|\\\\[(?:[^[\\\\]]*|([\\\"'])(?:(?!\\\\1)[^\\\\n\\\\\\\\]|\\\\\\\\.)*?\\\\1)\\\\]/,\\n                        reIsPlainProp = /^\\\\w*$/,\\n                        rePropName = /[^.[\\\\]]+|\\\\[(?:(-?\\\\d+(?:\\\\.\\\\d+)?)|([\\\"'])((?:(?!\\\\2)[^\\\\n\\\\\\\\]|\\\\\\\\.)*?)\\\\2)\\\\]/g;\\n\\n                    /**\\n                     * Used to match `RegExp` [special characters](http://www.regular-expressions.info/characters.html#special).\\n                     * In addition to special characters the forward slash is escaped to allow for\\n                     * easier `eval` use and `Function` compilation.\\n                     */\\n                    var reRegExpChars = /[.*+?^${}()|[\\\\]\\\\/\\\\\\\\]/g,\\n                        reHasRegExpChars = RegExp(reRegExpChars.source);\\n\\n                    /** Used to match backslashes in property paths. */\\n                    var reEscapeChar = /\\\\\\\\(\\\\\\\\)?/g;\\n\\n                    /** Used to match `RegExp` flags from their coerced string values. */\\n                    var reFlags = /\\\\w*$/;\\n\\n                    /** Used to detect host constructors (Safari > 5). */\\n                    var reIsHostCtor = /^\\\\[object .+?Constructor\\\\]$/;\\n\\n                    /** Used to detect unsigned integer values. */\\n                    var reIsUint = /^\\\\d+$/;\\n\\n                    /** Used to identify `toStringTag` values of typed arrays. */\\n                    var typedArrayTags = {};\\n                    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\\n                        typedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\\n                            typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\\n                                typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\\n                                    typedArrayTags[uint32Tag] = true;\\n                    typedArrayTags[argsTag] = typedArrayTags[arrayTag] =\\n                        typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\\n                            typedArrayTags[dateTag] = typedArrayTags[errorTag] =\\n                                typedArrayTags[funcTag] = typedArrayTags[mapTag] =\\n                                    typedArrayTags[numberTag] = typedArrayTags[objectTag] =\\n                                        typedArrayTags[regexpTag] = typedArrayTags[setTag] =\\n                                            typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\\n\\n                    /** Used to identify `toStringTag` values supported by `_.clone`. */\\n                    var cloneableTags = {};\\n                    cloneableTags[argsTag] = cloneableTags[arrayTag] =\\n                        cloneableTags[arrayBufferTag] = cloneableTags[boolTag] =\\n                            cloneableTags[dateTag] = cloneableTags[float32Tag] =\\n                                cloneableTags[float64Tag] = cloneableTags[int8Tag] =\\n                                    cloneableTags[int16Tag] = cloneableTags[int32Tag] =\\n                                        cloneableTags[numberTag] = cloneableTags[objectTag] =\\n                                            cloneableTags[regexpTag] = cloneableTags[stringTag] =\\n                                                cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\\n                                                    cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\\n                    cloneableTags[errorTag] = cloneableTags[funcTag] =\\n                        cloneableTags[mapTag] = cloneableTags[setTag] =\\n                            cloneableTags[weakMapTag] = false;\\n\\n                    /** Used to determine if values are of the language type `Object`. */\\n                    var objectTypes = {\\n                        'function': true,\\n                        'object': true\\n                    };\\n\\n                    /** Detect free variable `exports`. */\\n                    var freeExports = objectTypes[typeof exports] && exports && !exports.nodeType && exports;\\n\\n                    /** Detect free variable `module`. */\\n                    var freeModule = objectTypes[typeof module] && module && !module.nodeType && module;\\n\\n                    /** Detect free variable `global` from Node.js. */\\n                    var freeGlobal = freeExports && freeModule && typeof global == 'object' && global && global.Object && global;\\n\\n                    /** Detect free variable `self`. */\\n                    var freeSelf = objectTypes[typeof self] && self && self.Object && self;\\n\\n                    /** Detect free variable `window`. */\\n                    var freeWindow = objectTypes[typeof window] && window && window.Object && window;\\n\\n                    /** Detect the popular CommonJS extension `module.exports`. */\\n                    var moduleExports = freeModule && freeModule.exports === freeExports && freeExports;\\n\\n                    /**\\n                     * Used as a reference to the global object.\\n                     *\\n                     * The `this` value is used if it's the global object to avoid Greasemonkey's\\n                     * restricted `window` object, otherwise the `window` object is used.\\n                     */\\n                    var root = freeGlobal || ((freeWindow !== (this && this.window)) && freeWindow) || freeSelf || this;\\n\\n                    /*--------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * The base implementation of `_.findIndex` and `_.findLastIndex` without\\n                     * support for callback shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to search.\\n                     * @param {Function} predicate The function invoked per iteration.\\n                     * @param {boolean} [fromRight] Specify iterating from right to left.\\n                     * @returns {number} Returns the index of the matched value, else `-1`.\\n                     */\\n                    function baseFindIndex(array, predicate, fromRight) {\\n                        var length = array.length,\\n                            index = fromRight ? length : -1;\\n\\n                        while ((fromRight ? index-- : ++index < length)) {\\n                            if (predicate(array[index], index, array)) {\\n                                return index;\\n                            }\\n                        }\\n                        return -1;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.indexOf` without support for binary searches.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to search.\\n                     * @param {*} value The value to search for.\\n                     * @param {number} fromIndex The index to search from.\\n                     * @returns {number} Returns the index of the matched value, else `-1`.\\n                     */\\n                    function baseIndexOf(array, value, fromIndex) {\\n                        if (value !== value) {\\n                            return indexOfNaN(array, fromIndex);\\n                        }\\n                        var index = fromIndex - 1,\\n                            length = array.length;\\n\\n                        while (++index < length) {\\n                            if (array[index] === value) {\\n                                return index;\\n                            }\\n                        }\\n                        return -1;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.isFunction` without support for environments\\n                     * with incorrect `typeof` results.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\\n                     */\\n                    function baseIsFunction(value) {\\n                        // Avoid a Chakra JIT bug in compatibility modes of IE 11.\\n                        // See https://github.com/jashkenas/underscore/issues/1621 for more details.\\n                        return typeof value == 'function' || false;\\n                    }\\n\\n                    /**\\n                     * Converts `value` to a string if it's not one. An empty string is returned\\n                     * for `null` or `undefined` values.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to process.\\n                     * @returns {string} Returns the string.\\n                     */\\n                    function baseToString(value) {\\n                        if (typeof value == 'string') {\\n                            return value;\\n                        }\\n                        return value == null ? '' : (value + '');\\n                    }\\n\\n                    /**\\n                     * Gets the index at which the first occurrence of `NaN` is found in `array`.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to search.\\n                     * @param {number} fromIndex The index to search from.\\n                     * @param {boolean} [fromRight] Specify iterating from right to left.\\n                     * @returns {number} Returns the index of the matched `NaN`, else `-1`.\\n                     */\\n                    function indexOfNaN(array, fromIndex, fromRight) {\\n                        var length = array.length,\\n                            index = fromIndex + (fromRight ? 0 : -1);\\n\\n                        while ((fromRight ? index-- : ++index < length)) {\\n                            var other = array[index];\\n                            if (other !== other) {\\n                                return index;\\n                            }\\n                        }\\n                        return -1;\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is object-like.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\\n                     */\\n                    function isObjectLike(value) {\\n                        return !!value && typeof value == 'object';\\n                    }\\n\\n                    /**\\n                     * Replaces all `placeholder` elements in `array` with an internal placeholder\\n                     * and returns an array of their indexes.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to modify.\\n                     * @param {*} placeholder The placeholder to replace.\\n                     * @returns {Array} Returns the new array of placeholder indexes.\\n                     */\\n                    function replaceHolders(array, placeholder) {\\n                        var index = -1,\\n                            length = array.length,\\n                            resIndex = -1,\\n                            result = [];\\n\\n                        while (++index < length) {\\n                            if (array[index] === placeholder) {\\n                                array[index] = PLACEHOLDER;\\n                                result[++resIndex] = index;\\n                            }\\n                        }\\n                        return result;\\n                    }\\n\\n                    /*--------------------------------------------------------------------------*/\\n\\n                    /** Used for native method references. */\\n                    var objectProto = Object.prototype;\\n\\n                    /** Used to detect DOM support. */\\n                    var document = (document = root.window) ? document.document : null;\\n\\n                    /** Used to resolve the decompiled source of functions. */\\n                    var fnToString = Function.prototype.toString;\\n\\n                    /** Used to check objects for own properties. */\\n                    var hasOwnProperty = objectProto.hasOwnProperty;\\n\\n                    /** Used to generate unique IDs. */\\n                    var idCounter = 0;\\n\\n                    /**\\n                     * Used to resolve the [`toStringTag`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.prototype.tostring)\\n                     * of values.\\n                     */\\n                    var objToString = objectProto.toString;\\n\\n                    /** Used to detect if a method is native. */\\n                    var reIsNative = RegExp('^' +\\n                        escapeRegExp(fnToString.call(hasOwnProperty))\\n                            .replace(/hasOwnProperty|(function).*?(?=\\\\\\\\\\\\()| for .+?(?=\\\\\\\\\\\\])/g, '$1.*?') + '$'\\n                    );\\n\\n                    /** Native method references. */\\n                    var ArrayBuffer = getNative(root, 'ArrayBuffer'),\\n                        bufferSlice = getNative(ArrayBuffer && new ArrayBuffer(0), 'slice'),\\n                        floor = Math.floor,\\n                        getPrototypeOf = getNative(Object, 'getPrototypeOf'),\\n                        Set = getNative(root, 'Set'),\\n                        Uint8Array = getNative(root, 'Uint8Array'),\\n                        WeakMap = getNative(root, 'WeakMap');\\n\\n                    /** Used to clone array buffers. */\\n                    var Float64Array = (function () {\\n                        // Safari 5 errors when using an array buffer to initialize a typed array\\n                        // where the array buffer's `byteLength` is not a multiple of the typed\\n                        // array's `BYTES_PER_ELEMENT`.\\n                        try {\\n                            var func = getNative(root, 'Float64Array'),\\n                                result = new func(new ArrayBuffer(10), 0, 1) && func;\\n                        } catch (e) {\\n                        }\\n                        return result || null;\\n                    }());\\n\\n                    /* Native method references for those with the same name as other `lodash` methods. */\\n                    var nativeCreate = getNative(Object, 'create'),\\n                        nativeIsArray = getNative(Array, 'isArray'),\\n                        nativeKeys = getNative(Object, 'keys'),\\n                        nativeMax = Math.max,\\n                        nativeMin = Math.min,\\n                        nativeNow = getNative(Date, 'now');\\n\\n                    /** Used as references for `-Infinity` and `Infinity`. */\\n                    var POSITIVE_INFINITY = Number.POSITIVE_INFINITY;\\n\\n                    /** Used as references for the maximum length and index of an array. */\\n                    var MAX_ARRAY_LENGTH = 4294967295,\\n                        MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1,\\n                        HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\\n\\n                    /** Used as the size, in bytes, of each `Float64Array` element. */\\n                    var FLOAT64_BYTES_PER_ELEMENT = Float64Array ? Float64Array.BYTES_PER_ELEMENT : 0;\\n\\n                    /**\\n                     * Used as the [maximum length](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.max_safe_integer)\\n                     * of an array-like value.\\n                     */\\n                    var MAX_SAFE_INTEGER = 9007199254740991;\\n\\n                    /** Used to store function metadata. */\\n                    var metaMap = WeakMap && new WeakMap;\\n\\n                    /** Used to lookup unminified function names. */\\n                    var realNames = {};\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Creates a `lodash` object which wraps `value` to enable implicit chaining.\\n                     * Methods that operate on and return arrays, collections, and functions can\\n                     * be chained together. Methods that return a boolean or single value will\\n                     * automatically end the chain returning the unwrapped value. Explicit chaining\\n                     * may be enabled using `_.chain`. The execution of chained methods is lazy,\\n                     * that is, execution is deferred until `_#value` is implicitly or explicitly\\n                     * called.\\n                     *\\n                     * Lazy evaluation allows several methods to support shortcut fusion. Shortcut\\n                     * fusion is an optimization that merges iteratees to avoid creating intermediate\\n                     * arrays and reduce the number of iteratee executions.\\n                     *\\n                     * Chaining is supported in custom builds as long as the `_#value` method is\\n                     * directly or indirectly included in the build.\\n                     *\\n                     * In addition to lodash methods, wrappers have `Array` and `String` methods.\\n                     *\\n                     * The wrapper `Array` methods are:\\n                     * `concat`, `join`, `pop`, `push`, `reverse`, `shift`, `slice`, `sort`,\\n                     * `splice`, and `unshift`\\n                     *\\n                     * The wrapper `String` methods are:\\n                     * `replace` and `split`\\n                     *\\n                     * The wrapper methods that support shortcut fusion are:\\n                     * `compact`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `filter`,\\n                     * `first`, `initial`, `last`, `map`, `pluck`, `reject`, `rest`, `reverse`,\\n                     * `slice`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `toArray`,\\n                     * and `where`\\n                     *\\n                     * The chainable wrapper methods are:\\n                     * `after`, `ary`, `assign`, `at`, `before`, `bind`, `bindAll`, `bindKey`,\\n                     * `callback`, `chain`, `chunk`, `commit`, `compact`, `concat`, `constant`,\\n                     * `countBy`, `create`, `curry`, `debounce`, `defaults`, `defer`, `delay`,\\n                     * `difference`, `drop`, `dropRight`, `dropRightWhile`, `dropWhile`, `fill`,\\n                     * `filter`, `flatten`, `flattenDeep`, `flow`, `flowRight`, `forEach`,\\n                     * `forEachRight`, `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `functions`,\\n                     * `groupBy`, `indexBy`, `initial`, `intersection`, `invert`, `invoke`, `keys`,\\n                     * `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\\n                     * `memoize`, `merge`, `method`, `methodOf`, `mixin`, `negate`, `omit`, `once`,\\n                     * `pairs`, `partial`, `partialRight`, `partition`, `pick`, `plant`, `pluck`,\\n                     * `property`, `propertyOf`, `pull`, `pullAt`, `push`, `range`, `rearg`,\\n                     * `reject`, `remove`, `rest`, `restParam`, `reverse`, `set`, `shuffle`,\\n                     * `slice`, `sort`, `sortBy`, `sortByAll`, `sortByOrder`, `splice`, `spread`,\\n                     * `take`, `takeRight`, `takeRightWhile`, `takeWhile`, `tap`, `throttle`,\\n                     * `thru`, `times`, `toArray`, `toPlainObject`, `transform`, `union`, `uniq`,\\n                     * `unshift`, `unzip`, `unzipWith`, `values`, `valuesIn`, `where`, `without`,\\n                     * `wrap`, `xor`, `zip`, `zipObject`, `zipWith`\\n                     *\\n                     * The wrapper methods that are **not** chainable by default are:\\n                     * `add`, `attempt`, `camelCase`, `capitalize`, `clone`, `cloneDeep`, `deburr`,\\n                     * `endsWith`, `escape`, `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`,\\n                     * `findLast`, `findLastIndex`, `findLastKey`, `findWhere`, `first`, `get`,\\n                     * `gt`, `gte`, `has`, `identity`, `includes`, `indexOf`, `inRange`, `isArguments`,\\n                     * `isArray`, `isBoolean`, `isDate`, `isElement`, `isEmpty`, `isEqual`, `isError`,\\n                     * `isFinite` `isFunction`, `isMatch`, `isNative`, `isNaN`, `isNull`, `isNumber`,\\n                     * `isObject`, `isPlainObject`, `isRegExp`, `isString`, `isUndefined`,\\n                     * `isTypedArray`, `join`, `kebabCase`, `last`, `lastIndexOf`, `lt`, `lte`,\\n                     * `max`, `min`, `noConflict`, `noop`, `now`, `pad`, `padLeft`, `padRight`,\\n                     * `parseInt`, `pop`, `random`, `reduce`, `reduceRight`, `repeat`, `result`,\\n                     * `runInContext`, `shift`, `size`, `snakeCase`, `some`, `sortedIndex`,\\n                     * `sortedLastIndex`, `startCase`, `startsWith`, `sum`, `template`, `trim`,\\n                     * `trimLeft`, `trimRight`, `trunc`, `unescape`, `uniqueId`, `value`, and `words`\\n                     *\\n                     * The wrapper method `sample` will return a wrapped value when `n` is provided,\\n                     * otherwise an unwrapped value is returned.\\n                     *\\n                     * @name _\\n                     * @constructor\\n                     * @category Chain\\n                     * @param {*} value The value to wrap in a `lodash` instance.\\n                     * @returns {Object} Returns the new `lodash` wrapper instance.\\n                     * @example\\n                     *\\n                     * var wrapped = _([1, 2, 3]);\\n                     *\\n                     * // returns an unwrapped value\\n                     * wrapped.reduce(function(total, n) {\\n   *   return total + n;\\n   * });\\n                     * // => 6\\n                     *\\n                     * // returns a wrapped value\\n                     * var squares = wrapped.map(function(n) {\\n   *   return n * n;\\n   * });\\n                     *\\n                     * _.isArray(squares);\\n                     * // => false\\n                     *\\n                     * _.isArray(squares.value());\\n                     * // => true\\n                     */\\n                    function lodash() {\\n                        // No operation performed.\\n                    }\\n\\n                    /**\\n                     * The function whose prototype all chaining wrappers inherit from.\\n                     *\\n                     * @private\\n                     */\\n                    function baseLodash() {\\n                        // No operation performed.\\n                    }\\n\\n                    /**\\n                     * An object environment feature flags.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @type Object\\n                     */\\n                    var support = lodash.support = {};\\n\\n                    (function (x) {\\n                        var Ctor = function () {\\n                                this.x = x;\\n                            },\\n                            object = {'0': x, 'length': x},\\n                            props = [];\\n\\n                        Ctor.prototype = {'valueOf': x, 'y': x};\\n                        for (var key in new Ctor) {\\n                            props.push(key);\\n                        }\\n\\n                        /**\\n                         * Detect if the DOM is supported.\\n                         *\\n                         * @memberOf _.support\\n                         * @type boolean\\n                         */\\n                        try {\\n                            support.dom = document.createDocumentFragment().nodeType === 11;\\n                        } catch (e) {\\n                            support.dom = false;\\n                        }\\n                    }(1, 0));\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to wrap.\\n                     */\\n                    function LazyWrapper(value) {\\n                        this.__wrapped__ = value;\\n                        this.__actions__ = null;\\n                        this.__dir__ = 1;\\n                        this.__dropCount__ = 0;\\n                        this.__filtered__ = false;\\n                        this.__iteratees__ = null;\\n                        this.__takeCount__ = POSITIVE_INFINITY;\\n                        this.__views__ = null;\\n                    }\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     *\\n                     * Creates a cache object to store unique values.\\n                     *\\n                     * @private\\n                     * @param {Array} [values] The values to cache.\\n                     */\\n                    function SetCache(values) {\\n                        var length = values ? values.length : 0;\\n\\n                        this.data = {'hash': nativeCreate(null), 'set': new Set};\\n                        while (length--) {\\n                            this.push(values[length]);\\n                        }\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is in `cache` mimicking the return signature of\\n                     * `_.indexOf` by returning `0` if the value is found, else `-1`.\\n                     *\\n                     * @private\\n                     * @param {Object} cache The cache to search.\\n                     * @param {*} value The value to search for.\\n                     * @returns {number} Returns `0` if `value` is found, else `-1`.\\n                     */\\n                    function cacheIndexOf(cache, value) {\\n                        var data = cache.data,\\n                            result = (typeof value == 'string' || isObject(value)) ? data.set.has(value) : data.hash[value];\\n\\n                        return result ? 0 : -1;\\n                    }\\n\\n                    /**\\n                     * Adds `value` to the cache.\\n                     *\\n                     * @private\\n                     * @name push\\n                     * @memberOf SetCache\\n                     * @param {*} value The value to cache.\\n                     */\\n                    function cachePush(value) {\\n                        var data = this.data;\\n                        if (typeof value == 'string' || isObject(value)) {\\n                            data.set.add(value);\\n                        } else {\\n                            data.hash[value] = true;\\n                        }\\n                    }\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Copies the values of `source` to `array`.\\n                     *\\n                     * @private\\n                     * @param {Array} source The array to copy values from.\\n                     * @param {Array} [array=[]] The array to copy values to.\\n                     * @returns {Array} Returns `array`.\\n                     */\\n                    function arrayCopy(source, array) {\\n                        var index = -1,\\n                            length = source.length;\\n\\n                        array || (array = Array(length));\\n                        while (++index < length) {\\n                            array[index] = source[index];\\n                        }\\n                        return array;\\n                    }\\n\\n                    /**\\n                     * A specialized version of `_.forEach` for arrays without support for callback\\n                     * shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to iterate over.\\n                     * @param {Function} iteratee The function invoked per iteration.\\n                     * @returns {Array} Returns `array`.\\n                     */\\n                    function arrayEach(array, iteratee) {\\n                        var index = -1,\\n                            length = array.length;\\n\\n                        while (++index < length) {\\n                            if (iteratee(array[index], index, array) === false) {\\n                                break;\\n                            }\\n                        }\\n                        return array;\\n                    }\\n\\n                    /**\\n                     * A specialized version of `_.every` for arrays without support for callback\\n                     * shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to iterate over.\\n                     * @param {Function} predicate The function invoked per iteration.\\n                     * @returns {boolean} Returns `true` if all elements pass the predicate check,\\n                     *  else `false`.\\n                     */\\n                    function arrayEvery(array, predicate) {\\n                        var index = -1,\\n                            length = array.length;\\n\\n                        while (++index < length) {\\n                            if (!predicate(array[index], index, array)) {\\n                                return false;\\n                            }\\n                        }\\n                        return true;\\n                    }\\n\\n                    /**\\n                     * A specialized version of `_.map` for arrays without support for callback\\n                     * shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to iterate over.\\n                     * @param {Function} iteratee The function invoked per iteration.\\n                     * @returns {Array} Returns the new mapped array.\\n                     */\\n                    function arrayMap(array, iteratee) {\\n                        var index = -1,\\n                            length = array.length,\\n                            result = Array(length);\\n\\n                        while (++index < length) {\\n                            result[index] = iteratee(array[index], index, array);\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * A specialized version of `_.reduce` for arrays without support for callback\\n                     * shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to iterate over.\\n                     * @param {Function} iteratee The function invoked per iteration.\\n                     * @param {*} [accumulator] The initial value.\\n                     * @param {boolean} [initFromArray] Specify using the first element of `array`\\n                     *  as the initial value.\\n                     * @returns {*} Returns the accumulated value.\\n                     */\\n                    function arrayReduce(array, iteratee, accumulator, initFromArray) {\\n                        var index = -1,\\n                            length = array.length;\\n\\n                        if (initFromArray && length) {\\n                            accumulator = array[++index];\\n                        }\\n                        while (++index < length) {\\n                            accumulator = iteratee(accumulator, array[index], index, array);\\n                        }\\n                        return accumulator;\\n                    }\\n\\n                    /**\\n                     * A specialized version of `_.some` for arrays without support for callback\\n                     * shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to iterate over.\\n                     * @param {Function} predicate The function invoked per iteration.\\n                     * @returns {boolean} Returns `true` if any element passes the predicate check,\\n                     *  else `false`.\\n                     */\\n                    function arraySome(array, predicate) {\\n                        var index = -1,\\n                            length = array.length;\\n\\n                        while (++index < length) {\\n                            if (predicate(array[index], index, array)) {\\n                                return true;\\n                            }\\n                        }\\n                        return false;\\n                    }\\n\\n                    /**\\n                     * Used by `_.defaults` to customize its `_.assign` use.\\n                     *\\n                     * @private\\n                     * @param {*} objectValue The destination object property value.\\n                     * @param {*} sourceValue The source object property value.\\n                     * @returns {*} Returns the value to assign to the destination object.\\n                     */\\n                    function assignDefaults(objectValue, sourceValue) {\\n                        return objectValue === undefined ? sourceValue : objectValue;\\n                    }\\n\\n                    /**\\n                     * A specialized version of `_.assign` for customizing assigned values without\\n                     * support for argument juggling, multiple sources, and `this` binding `customizer`\\n                     * functions.\\n                     *\\n                     * @private\\n                     * @param {Object} object The destination object.\\n                     * @param {Object} source The source object.\\n                     * @param {Function} customizer The function to customize assigned values.\\n                     * @returns {Object} Returns `object`.\\n                     */\\n                    function assignWith(object, source, customizer) {\\n                        var index = -1,\\n                            props = keys(source),\\n                            length = props.length;\\n\\n                        while (++index < length) {\\n                            var key = props[index],\\n                                value = object[key],\\n                                result = customizer(value, source[key], key, object, source);\\n\\n                            if ((result === result ? (result !== value) : (value === value)) ||\\n                                (value === undefined && !(key in object))) {\\n                                object[key] = result;\\n                            }\\n                        }\\n                        return object;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.assign` without support for argument juggling,\\n                     * multiple sources, and `customizer` functions.\\n                     *\\n                     * @private\\n                     * @param {Object} object The destination object.\\n                     * @param {Object} source The source object.\\n                     * @returns {Object} Returns `object`.\\n                     */\\n                    function baseAssign(object, source) {\\n                        return source == null\\n                            ? object\\n                            : baseCopy(source, keys(source), object);\\n                    }\\n\\n                    /**\\n                     * Copies properties of `source` to `object`.\\n                     *\\n                     * @private\\n                     * @param {Object} source The object to copy properties from.\\n                     * @param {Array} props The property names to copy.\\n                     * @param {Object} [object={}] The object to copy properties to.\\n                     * @returns {Object} Returns `object`.\\n                     */\\n                    function baseCopy(source, props, object) {\\n                        object || (object = {});\\n\\n                        var index = -1,\\n                            length = props.length;\\n\\n                        while (++index < length) {\\n                            var key = props[index];\\n                            object[key] = source[key];\\n                        }\\n                        return object;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.callback` which supports specifying the\\n                     * number of arguments to provide to `func`.\\n                     *\\n                     * @private\\n                     * @param {*} [func=_.identity] The value to convert to a callback.\\n                     * @param {*} [thisArg] The `this` binding of `func`.\\n                     * @param {number} [argCount] The number of arguments to provide to `func`.\\n                     * @returns {Function} Returns the callback.\\n                     */\\n                    function baseCallback(func, thisArg, argCount) {\\n                        var type = typeof func;\\n                        if (type == 'function') {\\n                            return thisArg === undefined\\n                                ? func\\n                                : bindCallback(func, thisArg, argCount);\\n                        }\\n                        if (func == null) {\\n                            return identity;\\n                        }\\n                        if (type == 'object') {\\n                            return baseMatches(func);\\n                        }\\n                        return thisArg === undefined\\n                            ? property(func)\\n                            : baseMatchesProperty(func, thisArg);\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.clone` without support for argument juggling\\n                     * and `this` binding `customizer` functions.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to clone.\\n                     * @param {boolean} [isDeep] Specify a deep clone.\\n                     * @param {Function} [customizer] The function to customize cloning values.\\n                     * @param {string} [key] The key of `value`.\\n                     * @param {Object} [object] The object `value` belongs to.\\n                     * @param {Array} [stackA=[]] Tracks traversed source objects.\\n                     * @param {Array} [stackB=[]] Associates clones with source counterparts.\\n                     * @returns {*} Returns the cloned value.\\n                     */\\n                    function baseClone(value, isDeep, customizer, key, object, stackA, stackB) {\\n                        var result;\\n                        if (customizer) {\\n                            result = object ? customizer(value, key, object) : customizer(value);\\n                        }\\n                        if (result !== undefined) {\\n                            return result;\\n                        }\\n                        if (!isObject(value)) {\\n                            return value;\\n                        }\\n                        var isArr = isArray(value);\\n                        if (isArr) {\\n                            result = initCloneArray(value);\\n                            if (!isDeep) {\\n                                return arrayCopy(value, result);\\n                            }\\n                        } else {\\n                            var tag = objToString.call(value),\\n                                isFunc = tag == funcTag;\\n\\n                            if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\\n                                result = initCloneObject(isFunc ? {} : value);\\n                                if (!isDeep) {\\n                                    return baseAssign(result, value);\\n                                }\\n                            } else {\\n                                return cloneableTags[tag]\\n                                    ? initCloneByTag(value, tag, isDeep)\\n                                    : (object ? value : {});\\n                            }\\n                        }\\n                        // Check for circular references and return corresponding clone.\\n                        stackA || (stackA = []);\\n                        stackB || (stackB = []);\\n\\n                        var length = stackA.length;\\n                        while (length--) {\\n                            if (stackA[length] == value) {\\n                                return stackB[length];\\n                            }\\n                        }\\n                        // Add the source value to the stack of traversed objects and associate it with its clone.\\n                        stackA.push(value);\\n                        stackB.push(result);\\n\\n                        // Recursively populate clone (susceptible to call stack limits).\\n                        (isArr ? arrayEach : baseForOwn)(value, function (subValue, key) {\\n                            result[key] = baseClone(subValue, isDeep, customizer, key, value, stackA, stackB);\\n                        });\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.create` without support for assigning\\n                     * properties to the created object.\\n                     *\\n                     * @private\\n                     * @param {Object} prototype The object to inherit from.\\n                     * @returns {Object} Returns the new object.\\n                     */\\n                    var baseCreate = (function () {\\n                        function object() {\\n                        }\\n\\n                        return function (prototype) {\\n                            if (isObject(prototype)) {\\n                                object.prototype = prototype;\\n                                var result = new object;\\n                                object.prototype = null;\\n                            }\\n                            return result || {};\\n                        };\\n                    }());\\n\\n                    /**\\n                     * The base implementation of `_.delay` and `_.defer` which accepts an index\\n                     * of where to slice the arguments to provide to `func`.\\n                     *\\n                     * @private\\n                     * @param {Function} func The function to delay.\\n                     * @param {number} wait The number of milliseconds to delay invocation.\\n                     * @param {Object} args The arguments provide to `func`.\\n                     * @returns {number} Returns the timer id.\\n                     */\\n                    function baseDelay(func, wait, args) {\\n                        if (typeof func != 'function') {\\n                            throw new TypeError(FUNC_ERROR_TEXT);\\n                        }\\n                        return setTimeout(function () {\\n                            func.apply(undefined, args);\\n                        }, wait);\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.difference` which accepts a single array\\n                     * of values to exclude.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to inspect.\\n                     * @param {Array} values The values to exclude.\\n                     * @returns {Array} Returns the new array of filtered values.\\n                     */\\n                    function baseDifference(array, values) {\\n                        var length = array ? array.length : 0,\\n                            result = [];\\n\\n                        if (!length) {\\n                            return result;\\n                        }\\n                        var index = -1,\\n                            indexOf = getIndexOf(),\\n                            isCommon = indexOf == baseIndexOf,\\n                            cache = (isCommon && values.length >= 200) ? createCache(values) : null,\\n                            valuesLength = values.length;\\n\\n                        if (cache) {\\n                            indexOf = cacheIndexOf;\\n                            isCommon = false;\\n                            values = cache;\\n                        }\\n                        outer:\\n                            while (++index < length) {\\n                                var value = array[index];\\n\\n                                if (isCommon && value === value) {\\n                                    var valuesIndex = valuesLength;\\n                                    while (valuesIndex--) {\\n                                        if (values[valuesIndex] === value) {\\n                                            continue outer;\\n                                        }\\n                                    }\\n                                    result.push(value);\\n                                }\\n                                else if (indexOf(values, value, 0) < 0) {\\n                                    result.push(value);\\n                                }\\n                            }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.forEach` without support for callback\\n                     * shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Array|Object|string} collection The collection to iterate over.\\n                     * @param {Function} iteratee The function invoked per iteration.\\n                     * @returns {Array|Object|string} Returns `collection`.\\n                     */\\n                    var baseEach = createBaseEach(baseForOwn);\\n\\n                    /**\\n                     * The base implementation of `_.every` without support for callback\\n                     * shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Array|Object|string} collection The collection to iterate over.\\n                     * @param {Function} predicate The function invoked per iteration.\\n                     * @returns {boolean} Returns `true` if all elements pass the predicate check,\\n                     *  else `false`\\n                     */\\n                    function baseEvery(collection, predicate) {\\n                        var result = true;\\n                        baseEach(collection, function (value, index, collection) {\\n                            result = !!predicate(value, index, collection);\\n                            return result;\\n                        });\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.find`, `_.findLast`, `_.findKey`, and `_.findLastKey`,\\n                     * without support for callback shorthands and `this` binding, which iterates\\n                     * over `collection` using the provided `eachFunc`.\\n                     *\\n                     * @private\\n                     * @param {Array|Object|string} collection The collection to search.\\n                     * @param {Function} predicate The function invoked per iteration.\\n                     * @param {Function} eachFunc The function to iterate over `collection`.\\n                     * @param {boolean} [retKey] Specify returning the key of the found element\\n                     *  instead of the element itself.\\n                     * @returns {*} Returns the found element or its key, else `undefined`.\\n                     */\\n                    function baseFind(collection, predicate, eachFunc, retKey) {\\n                        var result;\\n                        eachFunc(collection, function (value, key, collection) {\\n                            if (predicate(value, key, collection)) {\\n                                result = retKey ? key : value;\\n                                return false;\\n                            }\\n                        });\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.flatten` with added support for restricting\\n                     * flattening and specifying the start index.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to flatten.\\n                     * @param {boolean} [isDeep] Specify a deep flatten.\\n                     * @param {boolean} [isStrict] Restrict flattening to arrays-like objects.\\n                     * @returns {Array} Returns the new flattened array.\\n                     */\\n                    function baseFlatten(array, isDeep, isStrict) {\\n                        var index = -1,\\n                            length = array.length,\\n                            resIndex = -1,\\n                            result = [];\\n\\n                        while (++index < length) {\\n                            var value = array[index];\\n                            if (isObjectLike(value) && isArrayLike(value) &&\\n                                (isStrict || isArray(value) || isArguments(value))) {\\n                                if (isDeep) {\\n                                    // Recursively flatten arrays (susceptible to call stack limits).\\n                                    value = baseFlatten(value, isDeep, isStrict);\\n                                }\\n                                var valIndex = -1,\\n                                    valLength = value.length;\\n\\n                                while (++valIndex < valLength) {\\n                                    result[++resIndex] = value[valIndex];\\n                                }\\n                            } else if (!isStrict) {\\n                                result[++resIndex] = value;\\n                            }\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `baseForIn` and `baseForOwn` which iterates\\n                     * over `object` properties returned by `keysFunc` invoking `iteratee` for\\n                     * each property. Iteratee functions may exit iteration early by explicitly\\n                     * returning `false`.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to iterate over.\\n                     * @param {Function} iteratee The function invoked per iteration.\\n                     * @param {Function} keysFunc The function to get the keys of `object`.\\n                     * @returns {Object} Returns `object`.\\n                     */\\n                    var baseFor = createBaseFor();\\n\\n                    /**\\n                     * The base implementation of `_.forIn` without support for callback\\n                     * shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to iterate over.\\n                     * @param {Function} iteratee The function invoked per iteration.\\n                     * @returns {Object} Returns `object`.\\n                     */\\n                    function baseForIn(object, iteratee) {\\n                        return baseFor(object, iteratee, keysIn);\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.forOwn` without support for callback\\n                     * shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to iterate over.\\n                     * @param {Function} iteratee The function invoked per iteration.\\n                     * @returns {Object} Returns `object`.\\n                     */\\n                    function baseForOwn(object, iteratee) {\\n                        return baseFor(object, iteratee, keys);\\n                    }\\n\\n                    /**\\n                     * The base implementation of `get` without support for string paths\\n                     * and default values.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to query.\\n                     * @param {Array} path The path of the property to get.\\n                     * @param {string} [pathKey] The key representation of path.\\n                     * @returns {*} Returns the resolved value.\\n                     */\\n                    function baseGet(object, path, pathKey) {\\n                        if (object == null) {\\n                            return;\\n                        }\\n                        if (pathKey !== undefined && pathKey in toObject(object)) {\\n                            path = [pathKey];\\n                        }\\n                        var index = 0,\\n                            length = path.length;\\n\\n                        while (object != null && index < length) {\\n                            object = object[path[index++]];\\n                        }\\n                        return (index && index == length) ? object : undefined;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.isEqual` without support for `this` binding\\n                     * `customizer` functions.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to compare.\\n                     * @param {*} other The other value to compare.\\n                     * @param {Function} [customizer] The function to customize comparing values.\\n                     * @param {boolean} [isLoose] Specify performing partial comparisons.\\n                     * @param {Array} [stackA] Tracks traversed `value` objects.\\n                     * @param {Array} [stackB] Tracks traversed `other` objects.\\n                     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n                     */\\n                    function baseIsEqual(value, other, customizer, isLoose, stackA, stackB) {\\n                        if (value === other) {\\n                            return true;\\n                        }\\n                        if (value == null || other == null || (!isObject(value) && !isObjectLike(other))) {\\n                            return value !== value && other !== other;\\n                        }\\n                        return baseIsEqualDeep(value, other, baseIsEqual, customizer, isLoose, stackA, stackB);\\n                    }\\n\\n                    /**\\n                     * A specialized version of `baseIsEqual` for arrays and objects which performs\\n                     * deep comparisons and tracks traversed objects enabling objects with circular\\n                     * references to be compared.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to compare.\\n                     * @param {Object} other The other object to compare.\\n                     * @param {Function} equalFunc The function to determine equivalents of values.\\n                     * @param {Function} [customizer] The function to customize comparing objects.\\n                     * @param {boolean} [isLoose] Specify performing partial comparisons.\\n                     * @param {Array} [stackA=[]] Tracks traversed `value` objects.\\n                     * @param {Array} [stackB=[]] Tracks traversed `other` objects.\\n                     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n                     */\\n                    function baseIsEqualDeep(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\\n                        var objIsArr = isArray(object),\\n                            othIsArr = isArray(other),\\n                            objTag = arrayTag,\\n                            othTag = arrayTag;\\n\\n                        if (!objIsArr) {\\n                            objTag = objToString.call(object);\\n                            if (objTag == argsTag) {\\n                                objTag = objectTag;\\n                            } else if (objTag != objectTag) {\\n                                objIsArr = isTypedArray(object);\\n                            }\\n                        }\\n                        if (!othIsArr) {\\n                            othTag = objToString.call(other);\\n                            if (othTag == argsTag) {\\n                                othTag = objectTag;\\n                            } else if (othTag != objectTag) {\\n                                othIsArr = isTypedArray(other);\\n                            }\\n                        }\\n                        var objIsObj = objTag == objectTag,\\n                            othIsObj = othTag == objectTag,\\n                            isSameTag = objTag == othTag;\\n\\n                        if (isSameTag && !(objIsArr || objIsObj)) {\\n                            return equalByTag(object, other, objTag);\\n                        }\\n                        if (!isLoose) {\\n                            var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\\n                                othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\\n\\n                            if (objIsWrapped || othIsWrapped) {\\n                                return equalFunc(objIsWrapped ? object.value() : object, othIsWrapped ? other.value() : other, customizer, isLoose, stackA, stackB);\\n                            }\\n                        }\\n                        if (!isSameTag) {\\n                            return false;\\n                        }\\n                        // Assume cyclic values are equal.\\n                        // For more information on detecting circular references see https://es5.github.io/#JO.\\n                        stackA || (stackA = []);\\n                        stackB || (stackB = []);\\n\\n                        var length = stackA.length;\\n                        while (length--) {\\n                            if (stackA[length] == object) {\\n                                return stackB[length] == other;\\n                            }\\n                        }\\n                        // Add `object` and `other` to the stack of traversed objects.\\n                        stackA.push(object);\\n                        stackB.push(other);\\n\\n                        var result = (objIsArr ? equalArrays : equalObjects)(object, other, equalFunc, customizer, isLoose, stackA, stackB);\\n\\n                        stackA.pop();\\n                        stackB.pop();\\n\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.isMatch` without support for callback\\n                     * shorthands and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to inspect.\\n                     * @param {Array} matchData The propery names, values, and compare flags to match.\\n                     * @param {Function} [customizer] The function to customize comparing objects.\\n                     * @returns {boolean} Returns `true` if `object` is a match, else `false`.\\n                     */\\n                    function baseIsMatch(object, matchData, customizer) {\\n                        var index = matchData.length,\\n                            length = index,\\n                            noCustomizer = !customizer;\\n\\n                        if (object == null) {\\n                            return !length;\\n                        }\\n                        object = toObject(object);\\n                        while (index--) {\\n                            var data = matchData[index];\\n                            if ((noCustomizer && data[2])\\n                                    ? data[1] !== object[data[0]]\\n                                    : !(data[0] in object)\\n                            ) {\\n                                return false;\\n                            }\\n                        }\\n                        while (++index < length) {\\n                            data = matchData[index];\\n                            var key = data[0],\\n                                objValue = object[key],\\n                                srcValue = data[1];\\n\\n                            if (noCustomizer && data[2]) {\\n                                if (objValue === undefined && !(key in object)) {\\n                                    return false;\\n                                }\\n                            } else {\\n                                var result = customizer ? customizer(objValue, srcValue, key) : undefined;\\n                                if (!(result === undefined ? baseIsEqual(srcValue, objValue, customizer, true) : result)) {\\n                                    return false;\\n                                }\\n                            }\\n                        }\\n                        return true;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.map` without support for callback shorthands\\n                     * and `this` binding.\\n                     *\\n                     * @private\\n                     * @param {Array|Object|string} collection The collection to iterate over.\\n                     * @param {Function} iteratee The function invoked per iteration.\\n                     * @returns {Array} Returns the new mapped array.\\n                     */\\n                    function baseMap(collection, iteratee) {\\n                        var index = -1,\\n                            result = isArrayLike(collection) ? Array(collection.length) : [];\\n\\n                        baseEach(collection, function (value, key, collection) {\\n                            result[++index] = iteratee(value, key, collection);\\n                        });\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.matches` which does not clone `source`.\\n                     *\\n                     * @private\\n                     * @param {Object} source The object of property values to match.\\n                     * @returns {Function} Returns the new function.\\n                     */\\n                    function baseMatches(source) {\\n                        var matchData = getMatchData(source);\\n                        if (matchData.length == 1 && matchData[0][2]) {\\n                            var key = matchData[0][0],\\n                                value = matchData[0][1];\\n\\n                            return function (object) {\\n                                if (object == null) {\\n                                    return false;\\n                                }\\n                                return object[key] === value && (value !== undefined || (key in toObject(object)));\\n                            };\\n                        }\\n                        return function (object) {\\n                            return baseIsMatch(object, matchData);\\n                        };\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.matchesProperty` which does not clone `srcValue`.\\n                     *\\n                     * @private\\n                     * @param {string} path The path of the property to get.\\n                     * @param {*} srcValue The value to compare.\\n                     * @returns {Function} Returns the new function.\\n                     */\\n                    function baseMatchesProperty(path, srcValue) {\\n                        var isArr = isArray(path),\\n                            isCommon = isKey(path) && isStrictComparable(srcValue),\\n                            pathKey = (path + '');\\n\\n                        path = toPath(path);\\n                        return function (object) {\\n                            if (object == null) {\\n                                return false;\\n                            }\\n                            var key = pathKey;\\n                            object = toObject(object);\\n                            if ((isArr || !isCommon) && !(key in object)) {\\n                                object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\\n                                if (object == null) {\\n                                    return false;\\n                                }\\n                                key = last(path);\\n                                object = toObject(object);\\n                            }\\n                            return object[key] === srcValue\\n                                ? (srcValue !== undefined || (key in object))\\n                                : baseIsEqual(srcValue, object[key], undefined, true);\\n                        };\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.property` without support for deep paths.\\n                     *\\n                     * @private\\n                     * @param {string} key The key of the property to get.\\n                     * @returns {Function} Returns the new function.\\n                     */\\n                    function baseProperty(key) {\\n                        return function (object) {\\n                            return object == null ? undefined : object[key];\\n                        };\\n                    }\\n\\n                    /**\\n                     * A specialized version of `baseProperty` which supports deep paths.\\n                     *\\n                     * @private\\n                     * @param {Array|string} path The path of the property to get.\\n                     * @returns {Function} Returns the new function.\\n                     */\\n                    function basePropertyDeep(path) {\\n                        var pathKey = (path + '');\\n                        path = toPath(path);\\n                        return function (object) {\\n                            return baseGet(object, path, pathKey);\\n                        };\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.reduce` and `_.reduceRight` without support\\n                     * for callback shorthands and `this` binding, which iterates over `collection`\\n                     * using the provided `eachFunc`.\\n                     *\\n                     * @private\\n                     * @param {Array|Object|string} collection The collection to iterate over.\\n                     * @param {Function} iteratee The function invoked per iteration.\\n                     * @param {*} accumulator The initial value.\\n                     * @param {boolean} initFromCollection Specify using the first or last element\\n                     *  of `collection` as the initial value.\\n                     * @param {Function} eachFunc The function to iterate over `collection`.\\n                     * @returns {*} Returns the accumulated value.\\n                     */\\n                    function baseReduce(collection, iteratee, accumulator, initFromCollection, eachFunc) {\\n                        eachFunc(collection, function (value, index, collection) {\\n                            accumulator = initFromCollection\\n                                ? (initFromCollection = false, value)\\n                                : iteratee(accumulator, value, index, collection);\\n                        });\\n                        return accumulator;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `setData` without support for hot loop detection.\\n                     *\\n                     * @private\\n                     * @param {Function} func The function to associate metadata with.\\n                     * @param {*} data The metadata.\\n                     * @returns {Function} Returns `func`.\\n                     */\\n                    var baseSetData = !metaMap ? identity : function (func, data) {\\n                            metaMap.set(func, data);\\n                            return func;\\n                        };\\n\\n                    /**\\n                     * The base implementation of `_.slice` without an iteratee call guard.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to slice.\\n                     * @param {number} [start=0] The start position.\\n                     * @param {number} [end=array.length] The end position.\\n                     * @returns {Array} Returns the slice of `array`.\\n                     */\\n                    function baseSlice(array, start, end) {\\n                        var index = -1,\\n                            length = array.length;\\n\\n                        start = start == null ? 0 : (+start || 0);\\n                        if (start < 0) {\\n                            start = -start > length ? 0 : (length + start);\\n                        }\\n                        end = (end === undefined || end > length) ? length : (+end || 0);\\n                        if (end < 0) {\\n                            end += length;\\n                        }\\n                        length = start > end ? 0 : ((end - start) >>> 0);\\n                        start >>>= 0;\\n\\n                        var result = Array(length);\\n                        while (++index < length) {\\n                            result[index] = array[index + start];\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * The base implementation of `_.values` and `_.valuesIn` which creates an\\n                     * array of `object` property values corresponding to the property names\\n                     * of `props`.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to query.\\n                     * @param {Array} props The property names to get values for.\\n                     * @returns {Object} Returns the array of property values.\\n                     */\\n                    function baseValues(object, props) {\\n                        var index = -1,\\n                            length = props.length,\\n                            result = Array(length);\\n\\n                        while (++index < length) {\\n                            result[index] = object[props[index]];\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * Performs a binary search of `array` to determine the index at which `value`\\n                     * should be inserted into `array` in order to maintain its sort order.\\n                     *\\n                     * @private\\n                     * @param {Array} array The sorted array to inspect.\\n                     * @param {*} value The value to evaluate.\\n                     * @param {boolean} [retHighest] Specify returning the highest qualified index.\\n                     * @returns {number} Returns the index at which `value` should be inserted\\n                     *  into `array`.\\n                     */\\n                    function binaryIndex(array, value, retHighest) {\\n                        var low = 0,\\n                            high = array ? array.length : low;\\n\\n                        if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\\n                            while (low < high) {\\n                                var mid = (low + high) >>> 1,\\n                                    computed = array[mid];\\n\\n                                if ((retHighest ? (computed <= value) : (computed < value)) && computed !== null) {\\n                                    low = mid + 1;\\n                                } else {\\n                                    high = mid;\\n                                }\\n                            }\\n                            return high;\\n                        }\\n                        return binaryIndexBy(array, value, identity, retHighest);\\n                    }\\n\\n                    /**\\n                     * This function is like `binaryIndex` except that it invokes `iteratee` for\\n                     * `value` and each element of `array` to compute their sort ranking. The\\n                     * iteratee is invoked with one argument; (value).\\n                     *\\n                     * @private\\n                     * @param {Array} array The sorted array to inspect.\\n                     * @param {*} value The value to evaluate.\\n                     * @param {Function} iteratee The function invoked per iteration.\\n                     * @param {boolean} [retHighest] Specify returning the highest qualified index.\\n                     * @returns {number} Returns the index at which `value` should be inserted\\n                     *  into `array`.\\n                     */\\n                    function binaryIndexBy(array, value, iteratee, retHighest) {\\n                        value = iteratee(value);\\n\\n                        var low = 0,\\n                            high = array ? array.length : 0,\\n                            valIsNaN = value !== value,\\n                            valIsNull = value === null,\\n                            valIsUndef = value === undefined;\\n\\n                        while (low < high) {\\n                            var mid = floor((low + high) / 2),\\n                                computed = iteratee(array[mid]),\\n                                isDef = computed !== undefined,\\n                                isReflexive = computed === computed;\\n\\n                            if (valIsNaN) {\\n                                var setLow = isReflexive || retHighest;\\n                            } else if (valIsNull) {\\n                                setLow = isReflexive && isDef && (retHighest || computed != null);\\n                            } else if (valIsUndef) {\\n                                setLow = isReflexive && (retHighest || isDef);\\n                            } else if (computed == null) {\\n                                setLow = false;\\n                            } else {\\n                                setLow = retHighest ? (computed <= value) : (computed < value);\\n                            }\\n                            if (setLow) {\\n                                low = mid + 1;\\n                            } else {\\n                                high = mid;\\n                            }\\n                        }\\n                        return nativeMin(high, MAX_ARRAY_INDEX);\\n                    }\\n\\n                    /**\\n                     * A specialized version of `baseCallback` which only supports `this` binding\\n                     * and specifying the number of arguments to provide to `func`.\\n                     *\\n                     * @private\\n                     * @param {Function} func The function to bind.\\n                     * @param {*} thisArg The `this` binding of `func`.\\n                     * @param {number} [argCount] The number of arguments to provide to `func`.\\n                     * @returns {Function} Returns the callback.\\n                     */\\n                    function bindCallback(func, thisArg, argCount) {\\n                        if (typeof func != 'function') {\\n                            return identity;\\n                        }\\n                        if (thisArg === undefined) {\\n                            return func;\\n                        }\\n                        switch (argCount) {\\n                            case 1:\\n                                return function (value) {\\n                                    return func.call(thisArg, value);\\n                                };\\n                            case 3:\\n                                return function (value, index, collection) {\\n                                    return func.call(thisArg, value, index, collection);\\n                                };\\n                            case 4:\\n                                return function (accumulator, value, index, collection) {\\n                                    return func.call(thisArg, accumulator, value, index, collection);\\n                                };\\n                            case 5:\\n                                return function (value, other, key, object, source) {\\n                                    return func.call(thisArg, value, other, key, object, source);\\n                                };\\n                        }\\n                        return function () {\\n                            return func.apply(thisArg, arguments);\\n                        };\\n                    }\\n\\n                    /**\\n                     * Creates a clone of the given array buffer.\\n                     *\\n                     * @private\\n                     * @param {ArrayBuffer} buffer The array buffer to clone.\\n                     * @returns {ArrayBuffer} Returns the cloned array buffer.\\n                     */\\n                    function bufferClone(buffer) {\\n                        return bufferSlice.call(buffer, 0);\\n                    }\\n\\n                    if (!bufferSlice) {\\n                        // PhantomJS has `ArrayBuffer` and `Uint8Array` but not `Float64Array`.\\n                        bufferClone = !(ArrayBuffer && Uint8Array) ? constant(null) : function (buffer) {\\n                                var byteLength = buffer.byteLength,\\n                                    floatLength = Float64Array ? floor(byteLength / FLOAT64_BYTES_PER_ELEMENT) : 0,\\n                                    offset = floatLength * FLOAT64_BYTES_PER_ELEMENT,\\n                                    result = new ArrayBuffer(byteLength);\\n\\n                                if (floatLength) {\\n                                    var view = new Float64Array(result, 0, floatLength);\\n                                    view.set(new Float64Array(buffer, 0, floatLength));\\n                                }\\n                                if (byteLength != offset) {\\n                                    view = new Uint8Array(result, offset);\\n                                    view.set(new Uint8Array(buffer, offset));\\n                                }\\n                                return result;\\n                            };\\n                    }\\n\\n                    /**\\n                     * Creates an array that is the composition of partially applied arguments,\\n                     * placeholders, and provided arguments into a single array of arguments.\\n                     *\\n                     * @private\\n                     * @param {Array|Object} args The provided arguments.\\n                     * @param {Array} partials The arguments to prepend to those provided.\\n                     * @param {Array} holders The `partials` placeholder indexes.\\n                     * @returns {Array} Returns the new array of composed arguments.\\n                     */\\n                    function composeArgs(args, partials, holders) {\\n                        var holdersLength = holders.length,\\n                            argsIndex = -1,\\n                            argsLength = nativeMax(args.length - holdersLength, 0),\\n                            leftIndex = -1,\\n                            leftLength = partials.length,\\n                            result = Array(argsLength + leftLength);\\n\\n                        while (++leftIndex < leftLength) {\\n                            result[leftIndex] = partials[leftIndex];\\n                        }\\n                        while (++argsIndex < holdersLength) {\\n                            result[holders[argsIndex]] = args[argsIndex];\\n                        }\\n                        while (argsLength--) {\\n                            result[leftIndex++] = args[argsIndex++];\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * This function is like `composeArgs` except that the arguments composition\\n                     * is tailored for `_.partialRight`.\\n                     *\\n                     * @private\\n                     * @param {Array|Object} args The provided arguments.\\n                     * @param {Array} partials The arguments to append to those provided.\\n                     * @param {Array} holders The `partials` placeholder indexes.\\n                     * @returns {Array} Returns the new array of composed arguments.\\n                     */\\n                    function composeArgsRight(args, partials, holders) {\\n                        var holdersIndex = -1,\\n                            holdersLength = holders.length,\\n                            argsIndex = -1,\\n                            argsLength = nativeMax(args.length - holdersLength, 0),\\n                            rightIndex = -1,\\n                            rightLength = partials.length,\\n                            result = Array(argsLength + rightLength);\\n\\n                        while (++argsIndex < argsLength) {\\n                            result[argsIndex] = args[argsIndex];\\n                        }\\n                        var offset = argsIndex;\\n                        while (++rightIndex < rightLength) {\\n                            result[offset + rightIndex] = partials[rightIndex];\\n                        }\\n                        while (++holdersIndex < holdersLength) {\\n                            result[offset + holders[holdersIndex]] = args[argsIndex++];\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * Creates a function that aggregates a collection, creating an accumulator\\n                     * object composed from the results of running each element in the collection\\n                     * through an iteratee.\\n                     *\\n                     * **Note:** This function is used to create `_.countBy`, `_.groupBy`, `_.indexBy`,\\n                     * and `_.partition`.\\n                     *\\n                     * @private\\n                     * @param {Function} setter The function to set keys and values of the accumulator object.\\n                     * @param {Function} [initializer] The function to initialize the accumulator object.\\n                     * @returns {Function} Returns the new aggregator function.\\n                     */\\n                    function createAggregator(setter, initializer) {\\n                        return function (collection, iteratee, thisArg) {\\n                            var result = initializer ? initializer() : {};\\n                            iteratee = getCallback(iteratee, thisArg, 3);\\n\\n                            if (isArray(collection)) {\\n                                var index = -1,\\n                                    length = collection.length;\\n\\n                                while (++index < length) {\\n                                    var value = collection[index];\\n                                    setter(result, value, iteratee(value, index, collection), collection);\\n                                }\\n                            } else {\\n                                baseEach(collection, function (value, key, collection) {\\n                                    setter(result, value, iteratee(value, key, collection), collection);\\n                                });\\n                            }\\n                            return result;\\n                        };\\n                    }\\n\\n                    /**\\n                     * Creates a function that assigns properties of source object(s) to a given\\n                     * destination object.\\n                     *\\n                     * **Note:** This function is used to create `_.assign`, `_.defaults`, and `_.merge`.\\n                     *\\n                     * @private\\n                     * @param {Function} assigner The function to assign values.\\n                     * @returns {Function} Returns the new assigner function.\\n                     */\\n                    function createAssigner(assigner) {\\n                        return restParam(function (object, sources) {\\n                            var index = -1,\\n                                length = object == null ? 0 : sources.length,\\n                                customizer = length > 2 ? sources[length - 2] : undefined,\\n                                guard = length > 2 ? sources[2] : undefined,\\n                                thisArg = length > 1 ? sources[length - 1] : undefined;\\n\\n                            if (typeof customizer == 'function') {\\n                                customizer = bindCallback(customizer, thisArg, 5);\\n                                length -= 2;\\n                            } else {\\n                                customizer = typeof thisArg == 'function' ? thisArg : undefined;\\n                                length -= (customizer ? 1 : 0);\\n                            }\\n                            if (guard && isIterateeCall(sources[0], sources[1], guard)) {\\n                                customizer = length < 3 ? undefined : customizer;\\n                                length = 1;\\n                            }\\n                            while (++index < length) {\\n                                var source = sources[index];\\n                                if (source) {\\n                                    assigner(object, source, customizer);\\n                                }\\n                            }\\n                            return object;\\n                        });\\n                    }\\n\\n                    /**\\n                     * Creates a `baseEach` or `baseEachRight` function.\\n                     *\\n                     * @private\\n                     * @param {Function} eachFunc The function to iterate over a collection.\\n                     * @param {boolean} [fromRight] Specify iterating from right to left.\\n                     * @returns {Function} Returns the new base function.\\n                     */\\n                    function createBaseEach(eachFunc, fromRight) {\\n                        return function (collection, iteratee) {\\n                            var length = collection ? getLength(collection) : 0;\\n                            if (!isLength(length)) {\\n                                return eachFunc(collection, iteratee);\\n                            }\\n                            var index = fromRight ? length : -1,\\n                                iterable = toObject(collection);\\n\\n                            while ((fromRight ? index-- : ++index < length)) {\\n                                if (iteratee(iterable[index], index, iterable) === false) {\\n                                    break;\\n                                }\\n                            }\\n                            return collection;\\n                        };\\n                    }\\n\\n                    /**\\n                     * Creates a base function for `_.forIn` or `_.forInRight`.\\n                     *\\n                     * @private\\n                     * @param {boolean} [fromRight] Specify iterating from right to left.\\n                     * @returns {Function} Returns the new base function.\\n                     */\\n                    function createBaseFor(fromRight) {\\n                        return function (object, iteratee, keysFunc) {\\n                            var iterable = toObject(object),\\n                                props = keysFunc(object),\\n                                length = props.length,\\n                                index = fromRight ? length : -1;\\n\\n                            while ((fromRight ? index-- : ++index < length)) {\\n                                var key = props[index];\\n                                if (iteratee(iterable[key], key, iterable) === false) {\\n                                    break;\\n                                }\\n                            }\\n                            return object;\\n                        };\\n                    }\\n\\n                    /**\\n                     * Creates a function that wraps `func` and invokes it with the `this`\\n                     * binding of `thisArg`.\\n                     *\\n                     * @private\\n                     * @param {Function} func The function to bind.\\n                     * @param {*} [thisArg] The `this` binding of `func`.\\n                     * @returns {Function} Returns the new bound function.\\n                     */\\n                    function createBindWrapper(func, thisArg) {\\n                        var Ctor = createCtorWrapper(func);\\n\\n                        function wrapper() {\\n                            var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\\n                            return fn.apply(thisArg, arguments);\\n                        }\\n\\n                        return wrapper;\\n                    }\\n\\n                    /**\\n                     * Creates a `Set` cache object to optimize linear searches of large arrays.\\n                     *\\n                     * @private\\n                     * @param {Array} [values] The values to cache.\\n                     * @returns {null|Object} Returns the new cache object if `Set` is supported, else `null`.\\n                     */\\n                    var createCache = !(nativeCreate && Set) ? constant(null) : function (values) {\\n                            return new SetCache(values);\\n                        };\\n\\n                    /**\\n                     * Creates a function that produces an instance of `Ctor` regardless of\\n                     * whether it was invoked as part of a `new` expression or by `call` or `apply`.\\n                     *\\n                     * @private\\n                     * @param {Function} Ctor The constructor to wrap.\\n                     * @returns {Function} Returns the new wrapped function.\\n                     */\\n                    function createCtorWrapper(Ctor) {\\n                        return function () {\\n                            // Use a `switch` statement to work with class constructors.\\n                            // See https://people.mozilla.org/~jorendorff/es6-draft.html#sec-ecmascript-function-objects-call-thisargument-argumentslist\\n                            // for more details.\\n                            var args = arguments;\\n                            switch (args.length) {\\n                                case 0:\\n                                    return new Ctor;\\n                                case 1:\\n                                    return new Ctor(args[0]);\\n                                case 2:\\n                                    return new Ctor(args[0], args[1]);\\n                                case 3:\\n                                    return new Ctor(args[0], args[1], args[2]);\\n                                case 4:\\n                                    return new Ctor(args[0], args[1], args[2], args[3]);\\n                                case 5:\\n                                    return new Ctor(args[0], args[1], args[2], args[3], args[4]);\\n                            }\\n                            var thisBinding = baseCreate(Ctor.prototype),\\n                                result = Ctor.apply(thisBinding, args);\\n\\n                            // Mimic the constructor's `return` behavior.\\n                            // See https://es5.github.io/#x13.2.2 for more details.\\n                            return isObject(result) ? result : thisBinding;\\n                        };\\n                    }\\n\\n                    /**\\n                     * Creates a `_.find` or `_.findLast` function.\\n                     *\\n                     * @private\\n                     * @param {Function} eachFunc The function to iterate over a collection.\\n                     * @param {boolean} [fromRight] Specify iterating from right to left.\\n                     * @returns {Function} Returns the new find function.\\n                     */\\n                    function createFind(eachFunc, fromRight) {\\n                        return function (collection, predicate, thisArg) {\\n                            predicate = getCallback(predicate, thisArg, 3);\\n                            if (isArray(collection)) {\\n                                var index = baseFindIndex(collection, predicate, fromRight);\\n                                return index > -1 ? collection[index] : undefined;\\n                            }\\n                            return baseFind(collection, predicate, eachFunc);\\n                        };\\n                    }\\n\\n                    /**\\n                     * Creates a function for `_.forEach` or `_.forEachRight`.\\n                     *\\n                     * @private\\n                     * @param {Function} arrayFunc The function to iterate over an array.\\n                     * @param {Function} eachFunc The function to iterate over a collection.\\n                     * @returns {Function} Returns the new each function.\\n                     */\\n                    function createForEach(arrayFunc, eachFunc) {\\n                        return function (collection, iteratee, thisArg) {\\n                            return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\\n                                ? arrayFunc(collection, iteratee)\\n                                : eachFunc(collection, bindCallback(iteratee, thisArg, 3));\\n                        };\\n                    }\\n\\n                    /**\\n                     * Creates a `_.partial` or `_.partialRight` function.\\n                     *\\n                     * @private\\n                     * @param {boolean} flag The partial bit flag.\\n                     * @returns {Function} Returns the new partial function.\\n                     */\\n                    function createPartial(flag) {\\n                        var partialFunc = restParam(function (func, partials) {\\n                            var holders = replaceHolders(partials, partialFunc.placeholder);\\n                            return createWrapper(func, flag, null, partials, holders);\\n                        });\\n                        return partialFunc;\\n                    }\\n\\n                    /**\\n                     * Creates a function for `_.reduce` or `_.reduceRight`.\\n                     *\\n                     * @private\\n                     * @param {Function} arrayFunc The function to iterate over an array.\\n                     * @param {Function} eachFunc The function to iterate over a collection.\\n                     * @returns {Function} Returns the new each function.\\n                     */\\n                    function createReduce(arrayFunc, eachFunc) {\\n                        return function (collection, iteratee, accumulator, thisArg) {\\n                            var initFromArray = arguments.length < 3;\\n                            return (typeof iteratee == 'function' && thisArg === undefined && isArray(collection))\\n                                ? arrayFunc(collection, iteratee, accumulator, initFromArray)\\n                                : baseReduce(collection, getCallback(iteratee, thisArg, 4), accumulator, initFromArray, eachFunc);\\n                        };\\n                    }\\n\\n                    /**\\n                     * Creates a function that wraps `func` and invokes it with optional `this`\\n                     * binding of, partial application, and currying.\\n                     *\\n                     * @private\\n                     * @param {Function|string} func The function or method name to reference.\\n                     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\\n                     * @param {*} [thisArg] The `this` binding of `func`.\\n                     * @param {Array} [partials] The arguments to prepend to those provided to the new function.\\n                     * @param {Array} [holders] The `partials` placeholder indexes.\\n                     * @param {Array} [partialsRight] The arguments to append to those provided to the new function.\\n                     * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\\n                     * @param {Array} [argPos] The argument positions of the new function.\\n                     * @param {number} [ary] The arity cap of `func`.\\n                     * @param {number} [arity] The arity of `func`.\\n                     * @returns {Function} Returns the new wrapped function.\\n                     */\\n                    function createHybridWrapper(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\\n                        var isAry = bitmask & ARY_FLAG,\\n                            isBind = bitmask & BIND_FLAG,\\n                            isBindKey = bitmask & BIND_KEY_FLAG,\\n                            isCurry = bitmask & CURRY_FLAG,\\n                            isCurryBound = bitmask & CURRY_BOUND_FLAG,\\n                            isCurryRight = bitmask & CURRY_RIGHT_FLAG,\\n                            Ctor = isBindKey ? null : createCtorWrapper(func);\\n\\n                        function wrapper() {\\n                            // Avoid `arguments` object use disqualifying optimizations by\\n                            // converting it to an array before providing it to other functions.\\n                            var length = arguments.length,\\n                                index = length,\\n                                args = Array(length);\\n\\n                            while (index--) {\\n                                args[index] = arguments[index];\\n                            }\\n                            if (partials) {\\n                                args = composeArgs(args, partials, holders);\\n                            }\\n                            if (partialsRight) {\\n                                args = composeArgsRight(args, partialsRight, holdersRight);\\n                            }\\n                            if (isCurry || isCurryRight) {\\n                                var placeholder = wrapper.placeholder,\\n                                    argsHolders = replaceHolders(args, placeholder);\\n\\n                                length -= argsHolders.length;\\n                                if (length < arity) {\\n                                    var newArgPos = argPos ? arrayCopy(argPos) : null,\\n                                        newArity = nativeMax(arity - length, 0),\\n                                        newsHolders = isCurry ? argsHolders : null,\\n                                        newHoldersRight = isCurry ? null : argsHolders,\\n                                        newPartials = isCurry ? args : null,\\n                                        newPartialsRight = isCurry ? null : args;\\n\\n                                    bitmask |= (isCurry ? PARTIAL_FLAG : PARTIAL_RIGHT_FLAG);\\n                                    bitmask &= ~(isCurry ? PARTIAL_RIGHT_FLAG : PARTIAL_FLAG);\\n\\n                                    if (!isCurryBound) {\\n                                        bitmask &= ~(BIND_FLAG | BIND_KEY_FLAG);\\n                                    }\\n                                    var newData = [func, bitmask, thisArg, newPartials, newsHolders, newPartialsRight, newHoldersRight, newArgPos, ary, newArity],\\n                                        result = createHybridWrapper.apply(undefined, newData);\\n\\n                                    if (isLaziable(func)) {\\n                                        setData(result, newData);\\n                                    }\\n                                    result.placeholder = placeholder;\\n                                    return result;\\n                                }\\n                            }\\n                            var thisBinding = isBind ? thisArg : this,\\n                                fn = isBindKey ? thisBinding[func] : func;\\n\\n                            if (argPos) {\\n                                args = reorder(args, argPos);\\n                            }\\n                            if (isAry && ary < args.length) {\\n                                args.length = ary;\\n                            }\\n                            if (this && this !== root && this instanceof wrapper) {\\n                                fn = Ctor || createCtorWrapper(func);\\n                            }\\n                            return fn.apply(thisBinding, args);\\n                        }\\n\\n                        return wrapper;\\n                    }\\n\\n                    /**\\n                     * Creates a function that wraps `func` and invokes it with the optional `this`\\n                     * binding of `thisArg` and the `partials` prepended to those provided to\\n                     * the wrapper.\\n                     *\\n                     * @private\\n                     * @param {Function} func The function to partially apply arguments to.\\n                     * @param {number} bitmask The bitmask of flags. See `createWrapper` for more details.\\n                     * @param {*} thisArg The `this` binding of `func`.\\n                     * @param {Array} partials The arguments to prepend to those provided to the new function.\\n                     * @returns {Function} Returns the new bound function.\\n                     */\\n                    function createPartialWrapper(func, bitmask, thisArg, partials) {\\n                        var isBind = bitmask & BIND_FLAG,\\n                            Ctor = createCtorWrapper(func);\\n\\n                        function wrapper() {\\n                            // Avoid `arguments` object use disqualifying optimizations by\\n                            // converting it to an array before providing it `func`.\\n                            var argsIndex = -1,\\n                                argsLength = arguments.length,\\n                                leftIndex = -1,\\n                                leftLength = partials.length,\\n                                args = Array(argsLength + leftLength);\\n\\n                            while (++leftIndex < leftLength) {\\n                                args[leftIndex] = partials[leftIndex];\\n                            }\\n                            while (argsLength--) {\\n                                args[leftIndex++] = arguments[++argsIndex];\\n                            }\\n                            var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\\n                            return fn.apply(isBind ? thisArg : this, args);\\n                        }\\n\\n                        return wrapper;\\n                    }\\n\\n                    /**\\n                     * Creates a function that either curries or invokes `func` with optional\\n                     * `this` binding and partially applied arguments.\\n                     *\\n                     * @private\\n                     * @param {Function|string} func The function or method name to reference.\\n                     * @param {number} bitmask The bitmask of flags.\\n                     *  The bitmask may be composed of the following flags:\\n                     *     1 - `_.bind`\\n                     *     2 - `_.bindKey`\\n                     *     4 - `_.curry` or `_.curryRight` of a bound function\\n                     *     8 - `_.curry`\\n                     *    16 - `_.curryRight`\\n                     *    32 - `_.partial`\\n                     *    64 - `_.partialRight`\\n                     *   128 - `_.rearg`\\n                     *   256 - `_.ary`\\n                     * @param {*} [thisArg] The `this` binding of `func`.\\n                     * @param {Array} [partials] The arguments to be partially applied.\\n                     * @param {Array} [holders] The `partials` placeholder indexes.\\n                     * @param {Array} [argPos] The argument positions of the new function.\\n                     * @param {number} [ary] The arity cap of `func`.\\n                     * @param {number} [arity] The arity of `func`.\\n                     * @returns {Function} Returns the new wrapped function.\\n                     */\\n                    function createWrapper(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\\n                        var isBindKey = bitmask & BIND_KEY_FLAG;\\n                        if (!isBindKey && typeof func != 'function') {\\n                            throw new TypeError(FUNC_ERROR_TEXT);\\n                        }\\n                        var length = partials ? partials.length : 0;\\n                        if (!length) {\\n                            bitmask &= ~(PARTIAL_FLAG | PARTIAL_RIGHT_FLAG);\\n                            partials = holders = null;\\n                        }\\n                        length -= (holders ? holders.length : 0);\\n                        if (bitmask & PARTIAL_RIGHT_FLAG) {\\n                            var partialsRight = partials,\\n                                holdersRight = holders;\\n\\n                            partials = holders = null;\\n                        }\\n                        var data = isBindKey ? null : getData(func),\\n                            newData = [func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity];\\n\\n                        if (data) {\\n                            mergeData(newData, data);\\n                            bitmask = newData[1];\\n                            arity = newData[9];\\n                        }\\n                        newData[9] = arity == null\\n                            ? (isBindKey ? 0 : func.length)\\n                            : (nativeMax(arity - length, 0) || 0);\\n\\n                        if (bitmask == BIND_FLAG) {\\n                            var result = createBindWrapper(newData[0], newData[2]);\\n                        } else if ((bitmask == PARTIAL_FLAG || bitmask == (BIND_FLAG | PARTIAL_FLAG)) && !newData[4].length) {\\n                            result = createPartialWrapper.apply(undefined, newData);\\n                        } else {\\n                            result = createHybridWrapper.apply(undefined, newData);\\n                        }\\n                        var setter = data ? baseSetData : setData;\\n                        return setter(result, newData);\\n                    }\\n\\n                    /**\\n                     * A specialized version of `baseIsEqualDeep` for arrays with support for\\n                     * partial deep comparisons.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to compare.\\n                     * @param {Array} other The other array to compare.\\n                     * @param {Function} equalFunc The function to determine equivalents of values.\\n                     * @param {Function} [customizer] The function to customize comparing arrays.\\n                     * @param {boolean} [isLoose] Specify performing partial comparisons.\\n                     * @param {Array} [stackA] Tracks traversed `value` objects.\\n                     * @param {Array} [stackB] Tracks traversed `other` objects.\\n                     * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\\n                     */\\n                    function equalArrays(array, other, equalFunc, customizer, isLoose, stackA, stackB) {\\n                        var index = -1,\\n                            arrLength = array.length,\\n                            othLength = other.length;\\n\\n                        if (arrLength != othLength && !(isLoose && othLength > arrLength)) {\\n                            return false;\\n                        }\\n                        // Ignore non-index properties.\\n                        while (++index < arrLength) {\\n                            var arrValue = array[index],\\n                                othValue = other[index],\\n                                result = customizer ? customizer(isLoose ? othValue : arrValue, isLoose ? arrValue : othValue, index) : undefined;\\n\\n                            if (result !== undefined) {\\n                                if (result) {\\n                                    continue;\\n                                }\\n                                return false;\\n                            }\\n                            // Recursively compare arrays (susceptible to call stack limits).\\n                            if (isLoose) {\\n                                if (!arraySome(other, function (othValue) {\\n                                        return arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB);\\n                                    })) {\\n                                    return false;\\n                                }\\n                            } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, customizer, isLoose, stackA, stackB))) {\\n                                return false;\\n                            }\\n                        }\\n                        return true;\\n                    }\\n\\n                    /**\\n                     * A specialized version of `baseIsEqualDeep` for comparing objects of\\n                     * the same `toStringTag`.\\n                     *\\n                     * **Note:** This function only supports comparing values with tags of\\n                     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\\n                     *\\n                     * @private\\n                     * @param {Object} value The object to compare.\\n                     * @param {Object} other The other object to compare.\\n                     * @param {string} tag The `toStringTag` of the objects to compare.\\n                     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n                     */\\n                    function equalByTag(object, other, tag) {\\n                        switch (tag) {\\n                            case boolTag:\\n                            case dateTag:\\n                                // Coerce dates and booleans to numbers, dates to milliseconds and booleans\\n                                // to `1` or `0` treating invalid dates coerced to `NaN` as not equal.\\n                                return +object == +other;\\n\\n                            case errorTag:\\n                                return object.name == other.name && object.message == other.message;\\n\\n                            case numberTag:\\n                                // Treat `NaN` vs. `NaN` as equal.\\n                                return (object != +object)\\n                                    ? other != +other\\n                                    : object == +other;\\n\\n                            case regexpTag:\\n                            case stringTag:\\n                                // Coerce regexes to strings and treat strings primitives and string\\n                                // objects as equal. See https://es5.github.io/#x15.10.6.4 for more details.\\n                                return object == (other + '');\\n                        }\\n                        return false;\\n                    }\\n\\n                    /**\\n                     * A specialized version of `baseIsEqualDeep` for objects with support for\\n                     * partial deep comparisons.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to compare.\\n                     * @param {Object} other The other object to compare.\\n                     * @param {Function} equalFunc The function to determine equivalents of values.\\n                     * @param {Function} [customizer] The function to customize comparing values.\\n                     * @param {boolean} [isLoose] Specify performing partial comparisons.\\n                     * @param {Array} [stackA] Tracks traversed `value` objects.\\n                     * @param {Array} [stackB] Tracks traversed `other` objects.\\n                     * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\\n                     */\\n                    function equalObjects(object, other, equalFunc, customizer, isLoose, stackA, stackB) {\\n                        var objProps = keys(object),\\n                            objLength = objProps.length,\\n                            othProps = keys(other),\\n                            othLength = othProps.length;\\n\\n                        if (objLength != othLength && !isLoose) {\\n                            return false;\\n                        }\\n                        var index = objLength;\\n                        while (index--) {\\n                            var key = objProps[index];\\n                            if (!(isLoose ? key in other : hasOwnProperty.call(other, key))) {\\n                                return false;\\n                            }\\n                        }\\n                        var skipCtor = isLoose;\\n                        while (++index < objLength) {\\n                            key = objProps[index];\\n                            var objValue = object[key],\\n                                othValue = other[key],\\n                                result = customizer ? customizer(isLoose ? othValue : objValue, isLoose ? objValue : othValue, key) : undefined;\\n\\n                            // Recursively compare objects (susceptible to call stack limits).\\n                            if (!(result === undefined ? equalFunc(objValue, othValue, customizer, isLoose, stackA, stackB) : result)) {\\n                                return false;\\n                            }\\n                            skipCtor || (skipCtor = key == 'constructor');\\n                        }\\n                        if (!skipCtor) {\\n                            var objCtor = object.constructor,\\n                                othCtor = other.constructor;\\n\\n                            // Non `Object` object instances with different constructors are not equal.\\n                            if (objCtor != othCtor &&\\n                                ('constructor' in object && 'constructor' in other) && !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\\n                                typeof othCtor == 'function' && othCtor instanceof othCtor)) {\\n                                return false;\\n                            }\\n                        }\\n                        return true;\\n                    }\\n\\n                    /**\\n                     * Gets the appropriate \\\"callback\\\" function. If the `_.callback` method is\\n                     * customized this function returns the custom method, otherwise it returns\\n                     * the `baseCallback` function. If arguments are provided the chosen function\\n                     * is invoked with them and its result is returned.\\n                     *\\n                     * @private\\n                     * @returns {Function} Returns the chosen function or its result.\\n                     */\\n                    function getCallback(func, thisArg, argCount) {\\n                        var result = lodash.callback || callback;\\n                        result = result === callback ? baseCallback : result;\\n                        return argCount ? result(func, thisArg, argCount) : result;\\n                    }\\n\\n                    /**\\n                     * Gets metadata for `func`.\\n                     *\\n                     * @private\\n                     * @param {Function} func The function to query.\\n                     * @returns {*} Returns the metadata for `func`.\\n                     */\\n                    var getData = !metaMap ? noop : function (func) {\\n                            return metaMap.get(func);\\n                        };\\n\\n                    /**\\n                     * Gets the name of `func`.\\n                     *\\n                     * @private\\n                     * @param {Function} func The function to query.\\n                     * @returns {string} Returns the function name.\\n                     */\\n                    function getFuncName(func) {\\n                        var result = func.name,\\n                            array = realNames[result],\\n                            length = array ? array.length : 0;\\n\\n                        while (length--) {\\n                            var data = array[length],\\n                                otherFunc = data.func;\\n                            if (otherFunc == null || otherFunc == func) {\\n                                return data.name;\\n                            }\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * Gets the appropriate \\\"indexOf\\\" function. If the `_.indexOf` method is\\n                     * customized this function returns the custom method, otherwise it returns\\n                     * the `baseIndexOf` function. If arguments are provided the chosen function\\n                     * is invoked with them and its result is returned.\\n                     *\\n                     * @private\\n                     * @returns {Function|number} Returns the chosen function or its result.\\n                     */\\n                    function getIndexOf(collection, target, fromIndex) {\\n                        var result = lodash.indexOf || indexOf;\\n                        result = result === indexOf ? baseIndexOf : result;\\n                        return collection ? result(collection, target, fromIndex) : result;\\n                    }\\n\\n                    /**\\n                     * Gets the \\\"length\\\" property value of `object`.\\n                     *\\n                     * **Note:** This function is used to avoid a [JIT bug](https://bugs.webkit.org/show_bug.cgi?id=142792)\\n                     * that affects Safari on at least iOS 8.1-8.3 ARM64.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to query.\\n                     * @returns {*} Returns the \\\"length\\\" value.\\n                     */\\n                    var getLength = baseProperty('length');\\n\\n                    /**\\n                     * Gets the propery names, values, and compare flags of `object`.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to query.\\n                     * @returns {Array} Returns the match data of `object`.\\n                     */\\n                    function getMatchData(object) {\\n                        var result = pairs(object),\\n                            length = result.length;\\n\\n                        while (length--) {\\n                            result[length][2] = isStrictComparable(result[length][1]);\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * Gets the native function at `key` of `object`.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to query.\\n                     * @param {string} key The key of the method to get.\\n                     * @returns {*} Returns the function if it's native, else `undefined`.\\n                     */\\n                    function getNative(object, key) {\\n                        var value = object == null ? undefined : object[key];\\n                        return isNative(value) ? value : undefined;\\n                    }\\n\\n                    /**\\n                     * Initializes an array clone.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to clone.\\n                     * @returns {Array} Returns the initialized clone.\\n                     */\\n                    function initCloneArray(array) {\\n                        var length = array.length,\\n                            result = new array.constructor(length);\\n\\n                        // Add array properties assigned by `RegExp#exec`.\\n                        if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\\n                            result.index = array.index;\\n                            result.input = array.input;\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * Initializes an object clone.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to clone.\\n                     * @returns {Object} Returns the initialized clone.\\n                     */\\n                    function initCloneObject(object) {\\n                        var Ctor = object.constructor;\\n                        if (!(typeof Ctor == 'function' && Ctor instanceof Ctor)) {\\n                            Ctor = Object;\\n                        }\\n                        return new Ctor;\\n                    }\\n\\n                    /**\\n                     * Initializes an object clone based on its `toStringTag`.\\n                     *\\n                     * **Note:** This function only supports cloning values with tags of\\n                     * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to clone.\\n                     * @param {string} tag The `toStringTag` of the object to clone.\\n                     * @param {boolean} [isDeep] Specify a deep clone.\\n                     * @returns {Object} Returns the initialized clone.\\n                     */\\n                    function initCloneByTag(object, tag, isDeep) {\\n                        var Ctor = object.constructor;\\n                        switch (tag) {\\n                            case arrayBufferTag:\\n                                return bufferClone(object);\\n\\n                            case boolTag:\\n                            case dateTag:\\n                                return new Ctor(+object);\\n\\n                            case float32Tag:\\n                            case float64Tag:\\n                            case int8Tag:\\n                            case int16Tag:\\n                            case int32Tag:\\n                            case uint8Tag:\\n                            case uint8ClampedTag:\\n                            case uint16Tag:\\n                            case uint32Tag:\\n                                var buffer = object.buffer;\\n                                return new Ctor(isDeep ? bufferClone(buffer) : buffer, object.byteOffset, object.length);\\n\\n                            case numberTag:\\n                            case stringTag:\\n                                return new Ctor(object);\\n\\n                            case regexpTag:\\n                                var result = new Ctor(object.source, reFlags.exec(object));\\n                                result.lastIndex = object.lastIndex;\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * Invokes the method at `path` on `object`.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to query.\\n                     * @param {Array|string} path The path of the method to invoke.\\n                     * @param {Array} args The arguments to invoke the method with.\\n                     * @returns {*} Returns the result of the invoked method.\\n                     */\\n                    function invokePath(object, path, args) {\\n                        if (object != null && !isKey(path, object)) {\\n                            path = toPath(path);\\n                            object = path.length == 1 ? object : baseGet(object, baseSlice(path, 0, -1));\\n                            path = last(path);\\n                        }\\n                        var func = object == null ? object : object[path];\\n                        return func == null ? undefined : func.apply(object, args);\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is array-like.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\\n                     */\\n                    function isArrayLike(value) {\\n                        return value != null && isLength(getLength(value));\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is a valid array-like index.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to check.\\n                     * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\\n                     * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\\n                     */\\n                    function isIndex(value, length) {\\n                        value = (typeof value == 'number' || reIsUint.test(value)) ? +value : -1;\\n                        length = length == null ? MAX_SAFE_INTEGER : length;\\n                        return value > -1 && value % 1 == 0 && value < length;\\n                    }\\n\\n                    /**\\n                     * Checks if the provided arguments are from an iteratee call.\\n                     *\\n                     * @private\\n                     * @param {*} value The potential iteratee value argument.\\n                     * @param {*} index The potential iteratee index or key argument.\\n                     * @param {*} object The potential iteratee object argument.\\n                     * @returns {boolean} Returns `true` if the arguments are from an iteratee call, else `false`.\\n                     */\\n                    function isIterateeCall(value, index, object) {\\n                        if (!isObject(object)) {\\n                            return false;\\n                        }\\n                        var type = typeof index;\\n                        if (type == 'number'\\n                                ? (isArrayLike(object) && isIndex(index, object.length))\\n                                : (type == 'string' && index in object)) {\\n                            var other = object[index];\\n                            return value === value ? (value === other) : (other !== other);\\n                        }\\n                        return false;\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is a property name and not a property path.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to check.\\n                     * @param {Object} [object] The object to query keys on.\\n                     * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\\n                     */\\n                    function isKey(value, object) {\\n                        var type = typeof value;\\n                        if ((type == 'string' && reIsPlainProp.test(value)) || type == 'number') {\\n                            return true;\\n                        }\\n                        if (isArray(value)) {\\n                            return false;\\n                        }\\n                        var result = !reIsDeepProp.test(value);\\n                        return result || (object != null && value in toObject(object));\\n                    }\\n\\n                    /**\\n                     * Checks if `func` has a lazy counterpart.\\n                     *\\n                     * @private\\n                     * @param {Function} func The function to check.\\n                     * @returns {boolean} Returns `true` if `func` has a lazy counterpart, else `false`.\\n                     */\\n                    function isLaziable(func) {\\n                        var funcName = getFuncName(func);\\n                        if (!(funcName in LazyWrapper.prototype)) {\\n                            return false;\\n                        }\\n                        var other = lodash[funcName];\\n                        if (func === other) {\\n                            return true;\\n                        }\\n                        var data = getData(other);\\n                        return !!data && func === data[0];\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is a valid array-like length.\\n                     *\\n                     * **Note:** This function is based on [`ToLength`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-tolength).\\n                     *\\n                     * @private\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\\n                     */\\n                    function isLength(value) {\\n                        return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` if suitable for strict\\n                     *  equality comparisons, else `false`.\\n                     */\\n                    function isStrictComparable(value) {\\n                        return value === value && !isObject(value);\\n                    }\\n\\n                    /**\\n                     * Merges the function metadata of `source` into `data`.\\n                     *\\n                     * Merging metadata reduces the number of wrappers required to invoke a function.\\n                     * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\\n                     * may be applied regardless of execution order. Methods like `_.ary` and `_.rearg`\\n                     * augment function arguments, making the order in which they are executed important,\\n                     * preventing the merging of metadata. However, we make an exception for a safe\\n                     * common case where curried functions have `_.ary` and or `_.rearg` applied.\\n                     *\\n                     * @private\\n                     * @param {Array} data The destination metadata.\\n                     * @param {Array} source The source metadata.\\n                     * @returns {Array} Returns `data`.\\n                     */\\n                    function mergeData(data, source) {\\n                        var bitmask = data[1],\\n                            srcBitmask = source[1],\\n                            newBitmask = bitmask | srcBitmask,\\n                            isCommon = newBitmask < ARY_FLAG;\\n\\n                        var isCombo =\\n                            (srcBitmask == ARY_FLAG && bitmask == CURRY_FLAG) ||\\n                            (srcBitmask == ARY_FLAG && bitmask == REARG_FLAG && data[7].length <= source[8]) ||\\n                            (srcBitmask == (ARY_FLAG | REARG_FLAG) && bitmask == CURRY_FLAG);\\n\\n                        // Exit early if metadata can't be merged.\\n                        if (!(isCommon || isCombo)) {\\n                            return data;\\n                        }\\n                        // Use source `thisArg` if available.\\n                        if (srcBitmask & BIND_FLAG) {\\n                            data[2] = source[2];\\n                            // Set when currying a bound function.\\n                            newBitmask |= (bitmask & BIND_FLAG) ? 0 : CURRY_BOUND_FLAG;\\n                        }\\n                        // Compose partial arguments.\\n                        var value = source[3];\\n                        if (value) {\\n                            var partials = data[3];\\n                            data[3] = partials ? composeArgs(partials, value, source[4]) : arrayCopy(value);\\n                            data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : arrayCopy(source[4]);\\n                        }\\n                        // Compose partial right arguments.\\n                        value = source[5];\\n                        if (value) {\\n                            partials = data[5];\\n                            data[5] = partials ? composeArgsRight(partials, value, source[6]) : arrayCopy(value);\\n                            data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : arrayCopy(source[6]);\\n                        }\\n                        // Use source `argPos` if available.\\n                        value = source[7];\\n                        if (value) {\\n                            data[7] = arrayCopy(value);\\n                        }\\n                        // Use source `ary` if it's smaller.\\n                        if (srcBitmask & ARY_FLAG) {\\n                            data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\\n                        }\\n                        // Use source `arity` if one is not provided.\\n                        if (data[9] == null) {\\n                            data[9] = source[9];\\n                        }\\n                        // Use source `func` and merge bitmasks.\\n                        data[0] = source[0];\\n                        data[1] = newBitmask;\\n\\n                        return data;\\n                    }\\n\\n                    /**\\n                     * A specialized version of `_.pick` which picks `object` properties specified\\n                     * by `props`.\\n                     *\\n                     * @private\\n                     * @param {Object} object The source object.\\n                     * @param {string[]} props The property names to pick.\\n                     * @returns {Object} Returns the new object.\\n                     */\\n                    function pickByArray(object, props) {\\n                        object = toObject(object);\\n\\n                        var index = -1,\\n                            length = props.length,\\n                            result = {};\\n\\n                        while (++index < length) {\\n                            var key = props[index];\\n                            if (key in object) {\\n                                result[key] = object[key];\\n                            }\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * A specialized version of `_.pick` which picks `object` properties `predicate`\\n                     * returns truthy for.\\n                     *\\n                     * @private\\n                     * @param {Object} object The source object.\\n                     * @param {Function} predicate The function invoked per iteration.\\n                     * @returns {Object} Returns the new object.\\n                     */\\n                    function pickByCallback(object, predicate) {\\n                        var result = {};\\n                        baseForIn(object, function (value, key, object) {\\n                            if (predicate(value, key, object)) {\\n                                result[key] = value;\\n                            }\\n                        });\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * Reorder `array` according to the specified indexes where the element at\\n                     * the first index is assigned as the first element, the element at\\n                     * the second index is assigned as the second element, and so on.\\n                     *\\n                     * @private\\n                     * @param {Array} array The array to reorder.\\n                     * @param {Array} indexes The arranged array indexes.\\n                     * @returns {Array} Returns `array`.\\n                     */\\n                    function reorder(array, indexes) {\\n                        var arrLength = array.length,\\n                            length = nativeMin(indexes.length, arrLength),\\n                            oldArray = arrayCopy(array);\\n\\n                        while (length--) {\\n                            var index = indexes[length];\\n                            array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\\n                        }\\n                        return array;\\n                    }\\n\\n                    /**\\n                     * Sets metadata for `func`.\\n                     *\\n                     * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\\n                     * period of time, it will trip its breaker and transition to an identity function\\n                     * to avoid garbage collection pauses in V8. See [V8 issue 2070](https://code.google.com/p/v8/issues/detail?id=2070)\\n                     * for more details.\\n                     *\\n                     * @private\\n                     * @param {Function} func The function to associate metadata with.\\n                     * @param {*} data The metadata.\\n                     * @returns {Function} Returns `func`.\\n                     */\\n                    var setData = (function () {\\n                        var count = 0,\\n                            lastCalled = 0;\\n\\n                        return function (key, value) {\\n                            var stamp = now(),\\n                                remaining = HOT_SPAN - (stamp - lastCalled);\\n\\n                            lastCalled = stamp;\\n                            if (remaining > 0) {\\n                                if (++count >= HOT_COUNT) {\\n                                    return key;\\n                                }\\n                            } else {\\n                                count = 0;\\n                            }\\n                            return baseSetData(key, value);\\n                        };\\n                    }());\\n\\n                    /**\\n                     * A fallback implementation of `_.isPlainObject` which checks if `value`\\n                     * is an object created by the `Object` constructor or has a `[[Prototype]]`\\n                     * of `null`.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\\n                     */\\n                    function shimIsPlainObject(value) {\\n                        var Ctor,\\n                            support = lodash.support;\\n\\n                        // Exit early for non `Object` objects.\\n                        if (!(isObjectLike(value) && objToString.call(value) == objectTag) ||\\n                            (!hasOwnProperty.call(value, 'constructor') &&\\n                            (Ctor = value.constructor, typeof Ctor == 'function' && !(Ctor instanceof Ctor)))) {\\n                            return false;\\n                        }\\n                        // IE < 9 iterates inherited properties before own properties. If the first\\n                        // iterated property is an object's own property then there are no inherited\\n                        // enumerable properties.\\n                        var result;\\n                        // In most environments an object's own properties are iterated before\\n                        // its inherited properties. If the last iterated property is an object's\\n                        // own property then there are no inherited enumerable properties.\\n                        baseForIn(value, function (subValue, key) {\\n                            result = key;\\n                        });\\n                        return result === undefined || hasOwnProperty.call(value, result);\\n                    }\\n\\n                    /**\\n                     * A fallback implementation of `Object.keys` which creates an array of the\\n                     * own enumerable property names of `object`.\\n                     *\\n                     * @private\\n                     * @param {Object} object The object to query.\\n                     * @returns {Array} Returns the array of property names.\\n                     */\\n                    function shimKeys(object) {\\n                        var props = keysIn(object),\\n                            propsLength = props.length,\\n                            length = propsLength && object.length;\\n\\n                        var allowIndexes = !!length && isLength(length) &&\\n                            (isArray(object) || isArguments(object));\\n\\n                        var index = -1,\\n                            result = [];\\n\\n                        while (++index < propsLength) {\\n                            var key = props[index];\\n                            if ((allowIndexes && isIndex(key, length)) || hasOwnProperty.call(object, key)) {\\n                                result.push(key);\\n                            }\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * Converts `value` to an object if it's not one.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to process.\\n                     * @returns {Object} Returns the object.\\n                     */\\n                    function toObject(value) {\\n                        return isObject(value) ? value : Object(value);\\n                    }\\n\\n                    /**\\n                     * Converts `value` to property path array if it's not one.\\n                     *\\n                     * @private\\n                     * @param {*} value The value to process.\\n                     * @returns {Array} Returns the property path array.\\n                     */\\n                    function toPath(value) {\\n                        if (isArray(value)) {\\n                            return value;\\n                        }\\n                        var result = [];\\n                        baseToString(value).replace(rePropName, function (match, number, quote, string) {\\n                            result.push(quote ? string.replace(reEscapeChar, '$1') : (number || match));\\n                        });\\n                        return result;\\n                    }\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Creates an array of unique `array` values not included in the other\\n                     * provided arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\\n                     * for equality comparisons.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Array\\n                     * @param {Array} array The array to inspect.\\n                     * @param {...Array} [values] The arrays of values to exclude.\\n                     * @returns {Array} Returns the new array of filtered values.\\n                     * @example\\n                     *\\n                     * _.difference([1, 2, 3], [4, 2]);\\n                     * // => [1, 3]\\n                     */\\n                    var difference = restParam(function (array, values) {\\n                        return isArrayLike(array)\\n                            ? baseDifference(array, baseFlatten(values, false, true))\\n                            : [];\\n                    });\\n\\n                    /**\\n                     * Gets the index at which the first occurrence of `value` is found in `array`\\n                     * using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\\n                     * for equality comparisons. If `fromIndex` is negative, it is used as the offset\\n                     * from the end of `array`. If `array` is sorted providing `true` for `fromIndex`\\n                     * performs a faster binary search.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Array\\n                     * @param {Array} array The array to search.\\n                     * @param {*} value The value to search for.\\n                     * @param {boolean|number} [fromIndex=0] The index to search from or `true`\\n                     *  to perform a binary search on a sorted array.\\n                     * @returns {number} Returns the index of the matched value, else `-1`.\\n                     * @example\\n                     *\\n                     * _.indexOf([1, 2, 1, 2], 2);\\n                     * // => 1\\n                     *\\n                     * // using `fromIndex`\\n                     * _.indexOf([1, 2, 1, 2], 2, 2);\\n                     * // => 3\\n                     *\\n                     * // performing a binary search\\n                     * _.indexOf([1, 1, 2, 2], 2, true);\\n                     * // => 2\\n                     */\\n                    function indexOf(array, value, fromIndex) {\\n                        var length = array ? array.length : 0;\\n                        if (!length) {\\n                            return -1;\\n                        }\\n                        if (typeof fromIndex == 'number') {\\n                            fromIndex = fromIndex < 0 ? nativeMax(length + fromIndex, 0) : fromIndex;\\n                        } else if (fromIndex) {\\n                            var index = binaryIndex(array, value),\\n                                other = array[index];\\n\\n                            if (value === value ? (value === other) : (other !== other)) {\\n                                return index;\\n                            }\\n                            return -1;\\n                        }\\n                        return baseIndexOf(array, value, fromIndex || 0);\\n                    }\\n\\n                    /**\\n                     * Creates an array of unique values that are included in all of the provided\\n                     * arrays using [`SameValueZero`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-samevaluezero)\\n                     * for equality comparisons.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Array\\n                     * @param {...Array} [arrays] The arrays to inspect.\\n                     * @returns {Array} Returns the new array of shared values.\\n                     * @example\\n                     * _.intersection([1, 2], [4, 2], [2, 1]);\\n                     * // => [2]\\n                     */\\n                    var intersection = restParam(function (arrays) {\\n                        var othLength = arrays.length,\\n                            othIndex = othLength,\\n                            caches = Array(length),\\n                            indexOf = getIndexOf(),\\n                            isCommon = indexOf == baseIndexOf,\\n                            result = [];\\n\\n                        while (othIndex--) {\\n                            var value = arrays[othIndex] = isArrayLike(value = arrays[othIndex]) ? value : [];\\n                            caches[othIndex] = (isCommon && value.length >= 120) ? createCache(othIndex && value) : null;\\n                        }\\n                        var array = arrays[0],\\n                            index = -1,\\n                            length = array ? array.length : 0,\\n                            seen = caches[0];\\n\\n                        outer:\\n                            while (++index < length) {\\n                                value = array[index];\\n                                if ((seen ? cacheIndexOf(seen, value) : indexOf(result, value, 0)) < 0) {\\n                                    var othIndex = othLength;\\n                                    while (--othIndex) {\\n                                        var cache = caches[othIndex];\\n                                        if ((cache ? cacheIndexOf(cache, value) : indexOf(arrays[othIndex], value, 0)) < 0) {\\n                                            continue outer;\\n                                        }\\n                                    }\\n                                    if (seen) {\\n                                        seen.push(value);\\n                                    }\\n                                    result.push(value);\\n                                }\\n                            }\\n                        return result;\\n                    });\\n\\n                    /**\\n                     * Gets the last element of `array`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Array\\n                     * @param {Array} array The array to query.\\n                     * @returns {*} Returns the last element of `array`.\\n                     * @example\\n                     *\\n                     * _.last([1, 2, 3]);\\n                     * // => 3\\n                     */\\n                    function last(array) {\\n                        var length = array ? array.length : 0;\\n                        return length ? array[length - 1] : undefined;\\n                    }\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Checks if `predicate` returns truthy for **all** elements of `collection`.\\n                     * The predicate is bound to `thisArg` and invoked with three arguments:\\n                     * (value, index|key, collection).\\n                     *\\n                     * If a property name is provided for `predicate` the created `_.property`\\n                     * style callback returns the property value of the given element.\\n                     *\\n                     * If a value is also provided for `thisArg` the created `_.matchesProperty`\\n                     * style callback returns `true` for elements that have a matching property\\n                     * value, else `false`.\\n                     *\\n                     * If an object is provided for `predicate` the created `_.matches` style\\n                     * callback returns `true` for elements that have the properties of the given\\n                     * object, else `false`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @alias all\\n                     * @category Collection\\n                     * @param {Array|Object|string} collection The collection to iterate over.\\n                     * @param {Function|Object|string} [predicate=_.identity] The function invoked\\n                     *  per iteration.\\n                     * @param {*} [thisArg] The `this` binding of `predicate`.\\n                     * @returns {boolean} Returns `true` if all elements pass the predicate check,\\n                     *  else `false`.\\n                     * @example\\n                     *\\n                     * _.every([true, 1, null, 'yes'], Boolean);\\n                     * // => false\\n                     *\\n                     * var users = [\\n                     *   { 'user': 'barney', 'active': false },\\n                     *   { 'user': 'fred',   'active': false }\\n                     * ];\\n                     *\\n                     * // using the `_.matches` callback shorthand\\n                     * _.every(users, { 'user': 'barney', 'active': false });\\n                     * // => false\\n                     *\\n                     * // using the `_.matchesProperty` callback shorthand\\n                     * _.every(users, 'active', false);\\n                     * // => true\\n                     *\\n                     * // using the `_.property` callback shorthand\\n                     * _.every(users, 'active');\\n                     * // => false\\n                     */\\n                    function every(collection, predicate, thisArg) {\\n                        var func = isArray(collection) ? arrayEvery : baseEvery;\\n                        if (thisArg && isIterateeCall(collection, predicate, thisArg)) {\\n                            predicate = null;\\n                        }\\n                        if (typeof predicate != 'function' || thisArg !== undefined) {\\n                            predicate = getCallback(predicate, thisArg, 3);\\n                        }\\n                        return func(collection, predicate);\\n                    }\\n\\n                    /**\\n                     * Iterates over elements of `collection`, returning the first element\\n                     * `predicate` returns truthy for. The predicate is bound to `thisArg` and\\n                     * invoked with three arguments: (value, index|key, collection).\\n                     *\\n                     * If a property name is provided for `predicate` the created `_.property`\\n                     * style callback returns the property value of the given element.\\n                     *\\n                     * If a value is also provided for `thisArg` the created `_.matchesProperty`\\n                     * style callback returns `true` for elements that have a matching property\\n                     * value, else `false`.\\n                     *\\n                     * If an object is provided for `predicate` the created `_.matches` style\\n                     * callback returns `true` for elements that have the properties of the given\\n                     * object, else `false`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @alias detect\\n                     * @category Collection\\n                     * @param {Array|Object|string} collection The collection to search.\\n                     * @param {Function|Object|string} [predicate=_.identity] The function invoked\\n                     *  per iteration.\\n                     * @param {*} [thisArg] The `this` binding of `predicate`.\\n                     * @returns {*} Returns the matched element, else `undefined`.\\n                     * @example\\n                     *\\n                     * var users = [\\n                     *   { 'user': 'barney',  'age': 36, 'active': true },\\n                     *   { 'user': 'fred',    'age': 40, 'active': false },\\n                     *   { 'user': 'pebbles', 'age': 1,  'active': true }\\n                     * ];\\n                     *\\n                     * _.result(_.find(users, function(chr) {\\n   *   return chr.age < 40;\\n   * }), 'user');\\n                     * // => 'barney'\\n                     *\\n                     * // using the `_.matches` callback shorthand\\n                     * _.result(_.find(users, { 'age': 1, 'active': true }), 'user');\\n                     * // => 'pebbles'\\n                     *\\n                     * // using the `_.matchesProperty` callback shorthand\\n                     * _.result(_.find(users, 'active', false), 'user');\\n                     * // => 'fred'\\n                     *\\n                     * // using the `_.property` callback shorthand\\n                     * _.result(_.find(users, 'active'), 'user');\\n                     * // => 'barney'\\n                     */\\n                    var find = createFind(baseEach);\\n\\n                    /**\\n                     * Iterates over elements of `collection` invoking `iteratee` for each element.\\n                     * The `iteratee` is bound to `thisArg` and invoked with three arguments:\\n                     * (value, index|key, collection). Iteratee functions may exit iteration early\\n                     * by explicitly returning `false`.\\n                     *\\n                     * **Note:** As with other \\\"Collections\\\" methods, objects with a \\\"length\\\" property\\n                     * are iterated like arrays. To avoid this behavior `_.forIn` or `_.forOwn`\\n                     * may be used for object iteration.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @alias each\\n                     * @category Collection\\n                     * @param {Array|Object|string} collection The collection to iterate over.\\n                     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\\n                     * @param {*} [thisArg] The `this` binding of `iteratee`.\\n                     * @returns {Array|Object|string} Returns `collection`.\\n                     * @example\\n                     *\\n                     * _([1, 2]).forEach(function(n) {\\n   *   console.log(n);\\n   * }).value();\\n                     * // => logs each value from left to right and returns the array\\n                     *\\n                     * _.forEach({ 'a': 1, 'b': 2 }, function(n, key) {\\n   *   console.log(n, key);\\n   * });\\n                     * // => logs each value-key pair and returns the object (iteration order is not guaranteed)\\n                     */\\n                    var forEach = createForEach(arrayEach, baseEach);\\n\\n                    /**\\n                     * Invokes the method at `path` of each element in `collection`, returning\\n                     * an array of the results of each invoked method. Any additional arguments\\n                     * are provided to each invoked method. If `methodName` is a function it is\\n                     * invoked for, and `this` bound to, each element in `collection`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Collection\\n                     * @param {Array|Object|string} collection The collection to iterate over.\\n                     * @param {Array|Function|string} path The path of the method to invoke or\\n                     *  the function invoked per iteration.\\n                     * @param {...*} [args] The arguments to invoke the method with.\\n                     * @returns {Array} Returns the array of results.\\n                     * @example\\n                     *\\n                     * _.invoke([[5, 1, 7], [3, 2, 1]], 'sort');\\n                     * // => [[1, 5, 7], [1, 2, 3]]\\n                     *\\n                     * _.invoke([123, 456], String.prototype.split, '');\\n                     * // => [['1', '2', '3'], ['4', '5', '6']]\\n                     */\\n                    var invoke = restParam(function (collection, path, args) {\\n                        var index = -1,\\n                            isFunc = typeof path == 'function',\\n                            isProp = isKey(path),\\n                            result = isArrayLike(collection) ? Array(collection.length) : [];\\n\\n                        baseEach(collection, function (value) {\\n                            var func = isFunc ? path : ((isProp && value != null) ? value[path] : null);\\n                            result[++index] = func ? func.apply(value, args) : invokePath(value, path, args);\\n                        });\\n                        return result;\\n                    });\\n\\n                    /**\\n                     * Creates an array of values by running each element in `collection` through\\n                     * `iteratee`. The `iteratee` is bound to `thisArg` and invoked with three\\n                     * arguments: (value, index|key, collection).\\n                     *\\n                     * If a property name is provided for `iteratee` the created `_.property`\\n                     * style callback returns the property value of the given element.\\n                     *\\n                     * If a value is also provided for `thisArg` the created `_.matchesProperty`\\n                     * style callback returns `true` for elements that have a matching property\\n                     * value, else `false`.\\n                     *\\n                     * If an object is provided for `iteratee` the created `_.matches` style\\n                     * callback returns `true` for elements that have the properties of the given\\n                     * object, else `false`.\\n                     *\\n                     * Many lodash methods are guarded to work as iteratees for methods like\\n                     * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\\n                     *\\n                     * The guarded methods are:\\n                     * `ary`, `callback`, `chunk`, `clone`, `create`, `curry`, `curryRight`,\\n                     * `drop`, `dropRight`, `every`, `fill`, `flatten`, `invert`, `max`, `min`,\\n                     * `parseInt`, `slice`, `sortBy`, `take`, `takeRight`, `template`, `trim`,\\n                     * `trimLeft`, `trimRight`, `trunc`, `random`, `range`, `sample`, `some`,\\n                     * `sum`, `uniq`, and `words`\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @alias collect\\n                     * @category Collection\\n                     * @param {Array|Object|string} collection The collection to iterate over.\\n                     * @param {Function|Object|string} [iteratee=_.identity] The function invoked\\n                     *  per iteration.\\n                     * @param {*} [thisArg] The `this` binding of `iteratee`.\\n                     * @returns {Array} Returns the new mapped array.\\n                     * @example\\n                     *\\n                     * function timesThree(n) {\\n   *   return n * 3;\\n   * }\\n                     *\\n                     * _.map([1, 2], timesThree);\\n                     * // => [3, 6]\\n                     *\\n                     * _.map({ 'a': 1, 'b': 2 }, timesThree);\\n                     * // => [3, 6] (iteration order is not guaranteed)\\n                     *\\n                     * var users = [\\n                     *   { 'user': 'barney' },\\n                     *   { 'user': 'fred' }\\n                     * ];\\n                     *\\n                     * // using the `_.property` callback shorthand\\n                     * _.map(users, 'user');\\n                     * // => ['barney', 'fred']\\n                     */\\n                    function map(collection, iteratee, thisArg) {\\n                        var func = isArray(collection) ? arrayMap : baseMap;\\n                        iteratee = getCallback(iteratee, thisArg, 3);\\n                        return func(collection, iteratee);\\n                    }\\n\\n                    /**\\n                     * Creates an array of elements split into two groups, the first of which\\n                     * contains elements `predicate` returns truthy for, while the second of which\\n                     * contains elements `predicate` returns falsey for. The predicate is bound\\n                     * to `thisArg` and invoked with three arguments: (value, index|key, collection).\\n                     *\\n                     * If a property name is provided for `predicate` the created `_.property`\\n                     * style callback returns the property value of the given element.\\n                     *\\n                     * If a value is also provided for `thisArg` the created `_.matchesProperty`\\n                     * style callback returns `true` for elements that have a matching property\\n                     * value, else `false`.\\n                     *\\n                     * If an object is provided for `predicate` the created `_.matches` style\\n                     * callback returns `true` for elements that have the properties of the given\\n                     * object, else `false`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Collection\\n                     * @param {Array|Object|string} collection The collection to iterate over.\\n                     * @param {Function|Object|string} [predicate=_.identity] The function invoked\\n                     *  per iteration.\\n                     * @param {*} [thisArg] The `this` binding of `predicate`.\\n                     * @returns {Array} Returns the array of grouped elements.\\n                     * @example\\n                     *\\n                     * _.partition([1, 2, 3], function(n) {\\n   *   return n % 2;\\n   * });\\n                     * // => [[1, 3], [2]]\\n                     *\\n                     * _.partition([1.2, 2.3, 3.4], function(n) {\\n   *   return this.floor(n) % 2;\\n   * }, Math);\\n                     * // => [[1.2, 3.4], [2.3]]\\n                     *\\n                     * var users = [\\n                     *   { 'user': 'barney',  'age': 36, 'active': false },\\n                     *   { 'user': 'fred',    'age': 40, 'active': true },\\n                     *   { 'user': 'pebbles', 'age': 1,  'active': false }\\n                     * ];\\n                     *\\n                     * var mapper = function(array) {\\n   *   return _.pluck(array, 'user');\\n   * };\\n                     *\\n                     * // using the `_.matches` callback shorthand\\n                     * _.map(_.partition(users, { 'age': 1, 'active': false }), mapper);\\n                     * // => [['pebbles'], ['barney', 'fred']]\\n                     *\\n                     * // using the `_.matchesProperty` callback shorthand\\n                     * _.map(_.partition(users, 'active', false), mapper);\\n                     * // => [['barney', 'pebbles'], ['fred']]\\n                     *\\n                     * // using the `_.property` callback shorthand\\n                     * _.map(_.partition(users, 'active'), mapper);\\n                     * // => [['fred'], ['barney', 'pebbles']]\\n                     */\\n                    var partition = createAggregator(function (result, value, key) {\\n                        result[key ? 0 : 1].push(value);\\n                    }, function () {\\n                        return [[], []];\\n                    });\\n\\n                    /**\\n                     * Reduces `collection` to a value which is the accumulated result of running\\n                     * each element in `collection` through `iteratee`, where each successive\\n                     * invocation is supplied the return value of the previous. If `accumulator`\\n                     * is not provided the first element of `collection` is used as the initial\\n                     * value. The `iteratee` is bound to `thisArg` and invoked with four arguments:\\n                     * (accumulator, value, index|key, collection).\\n                     *\\n                     * Many lodash methods are guarded to work as iteratees for methods like\\n                     * `_.reduce`, `_.reduceRight`, and `_.transform`.\\n                     *\\n                     * The guarded methods are:\\n                     * `assign`, `defaults`, `includes`, `merge`, `sortByAll`, and `sortByOrder`\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @alias foldl, inject\\n                     * @category Collection\\n                     * @param {Array|Object|string} collection The collection to iterate over.\\n                     * @param {Function} [iteratee=_.identity] The function invoked per iteration.\\n                     * @param {*} [accumulator] The initial value.\\n                     * @param {*} [thisArg] The `this` binding of `iteratee`.\\n                     * @returns {*} Returns the accumulated value.\\n                     * @example\\n                     *\\n                     * _.reduce([1, 2], function(total, n) {\\n   *   return total + n;\\n   * });\\n                     * // => 3\\n                     *\\n                     * _.reduce({ 'a': 1, 'b': 2 }, function(result, n, key) {\\n   *   result[key] = n * 3;\\n   *   return result;\\n   * }, {});\\n                     * // => { 'a': 3, 'b': 6 } (iteration order is not guaranteed)\\n                     */\\n                    var reduce = createReduce(arrayReduce, baseEach);\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Gets the number of milliseconds that have elapsed since the Unix epoch\\n                     * (1 January 1970 00:00:00 UTC).\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Date\\n                     * @example\\n                     *\\n                     * _.defer(function(stamp) {\\n   *   console.log(_.now() - stamp);\\n   * }, _.now());\\n                     * // => logs the number of milliseconds it took for the deferred function to be invoked\\n                     */\\n                    var now = nativeNow || function () {\\n                            return new Date().getTime();\\n                        };\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Creates a function that invokes `func` with the `this` binding of `thisArg`\\n                     * and prepends any additional `_.bind` arguments to those provided to the\\n                     * bound function.\\n                     *\\n                     * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\\n                     * may be used as a placeholder for partially applied arguments.\\n                     *\\n                     * **Note:** Unlike native `Function#bind` this method does not set the \\\"length\\\"\\n                     * property of bound functions.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Function\\n                     * @param {Function} func The function to bind.\\n                     * @param {*} thisArg The `this` binding of `func`.\\n                     * @param {...*} [partials] The arguments to be partially applied.\\n                     * @returns {Function} Returns the new bound function.\\n                     * @example\\n                     *\\n                     * var greet = function(greeting, punctuation) {\\n   *   return greeting + ' ' + this.user + punctuation;\\n   * };\\n                     *\\n                     * var object = { 'user': 'fred' };\\n                     *\\n                     * var bound = _.bind(greet, object, 'hi');\\n                     * bound('!');\\n                     * // => 'hi fred!'\\n                     *\\n                     * // using placeholders\\n                     * var bound = _.bind(greet, object, _, '!');\\n                     * bound('hi');\\n                     * // => 'hi fred!'\\n                     */\\n                    var bind = restParam(function (func, thisArg, partials) {\\n                        var bitmask = BIND_FLAG;\\n                        if (partials.length) {\\n                            var holders = replaceHolders(partials, bind.placeholder);\\n                            bitmask |= PARTIAL_FLAG;\\n                        }\\n                        return createWrapper(func, bitmask, thisArg, partials, holders);\\n                    });\\n\\n                    /**\\n                     * Defers invoking the `func` until the current call stack has cleared. Any\\n                     * additional arguments are provided to `func` when it is invoked.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Function\\n                     * @param {Function} func The function to defer.\\n                     * @param {...*} [args] The arguments to invoke the function with.\\n                     * @returns {number} Returns the timer id.\\n                     * @example\\n                     *\\n                     * _.defer(function(text) {\\n   *   console.log(text);\\n   * }, 'deferred');\\n                     * // logs 'deferred' after one or more milliseconds\\n                     */\\n                    var defer = restParam(function (func, args) {\\n                        return baseDelay(func, 1, args);\\n                    });\\n\\n                    /**\\n                     * Creates a function that invokes `func` with `partial` arguments prepended\\n                     * to those provided to the new function. This method is like `_.bind` except\\n                     * it does **not** alter the `this` binding.\\n                     *\\n                     * The `_.partial.placeholder` value, which defaults to `_` in monolithic\\n                     * builds, may be used as a placeholder for partially applied arguments.\\n                     *\\n                     * **Note:** This method does not set the \\\"length\\\" property of partially\\n                     * applied functions.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Function\\n                     * @param {Function} func The function to partially apply arguments to.\\n                     * @param {...*} [partials] The arguments to be partially applied.\\n                     * @returns {Function} Returns the new partially applied function.\\n                     * @example\\n                     *\\n                     * var greet = function(greeting, name) {\\n   *   return greeting + ' ' + name;\\n   * };\\n                     *\\n                     * var sayHelloTo = _.partial(greet, 'hello');\\n                     * sayHelloTo('fred');\\n                     * // => 'hello fred'\\n                     *\\n                     * // using placeholders\\n                     * var greetFred = _.partial(greet, _, 'fred');\\n                     * greetFred('hi');\\n                     * // => 'hi fred'\\n                     */\\n                    var partial = createPartial(PARTIAL_FLAG);\\n\\n                    /**\\n                     * Creates a function that invokes `func` with the `this` binding of the\\n                     * created function and arguments from `start` and beyond provided as an array.\\n                     *\\n                     * **Note:** This method is based on the [rest parameter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions/rest_parameters).\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Function\\n                     * @param {Function} func The function to apply a rest parameter to.\\n                     * @param {number} [start=func.length-1] The start position of the rest parameter.\\n                     * @returns {Function} Returns the new function.\\n                     * @example\\n                     *\\n                     * var say = _.restParam(function(what, names) {\\n   *   return what + ' ' + _.initial(names).join(', ') +\\n   *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\\n   * });\\n                     *\\n                     * say('hello', 'fred', 'barney', 'pebbles');\\n                     * // => 'hello fred, barney, & pebbles'\\n                     */\\n                    function restParam(func, start) {\\n                        if (typeof func != 'function') {\\n                            throw new TypeError(FUNC_ERROR_TEXT);\\n                        }\\n                        start = nativeMax(start === undefined ? (func.length - 1) : (+start || 0), 0);\\n                        return function () {\\n                            var args = arguments,\\n                                index = -1,\\n                                length = nativeMax(args.length - start, 0),\\n                                rest = Array(length);\\n\\n                            while (++index < length) {\\n                                rest[index] = args[start + index];\\n                            }\\n                            switch (start) {\\n                                case 0:\\n                                    return func.call(this, rest);\\n                                case 1:\\n                                    return func.call(this, args[0], rest);\\n                                case 2:\\n                                    return func.call(this, args[0], args[1], rest);\\n                            }\\n                            var otherArgs = Array(start + 1);\\n                            index = -1;\\n                            while (++index < start) {\\n                                otherArgs[index] = args[index];\\n                            }\\n                            otherArgs[start] = rest;\\n                            return func.apply(this, otherArgs);\\n                        };\\n                    }\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Creates a clone of `value`. If `isDeep` is `true` nested objects are cloned,\\n                     * otherwise they are assigned by reference. If `customizer` is provided it is\\n                     * invoked to produce the cloned values. If `customizer` returns `undefined`\\n                     * cloning is handled by the method instead. The `customizer` is bound to\\n                     * `thisArg` and invoked with two argument; (value [, index|key, object]).\\n                     *\\n                     * **Note:** This method is loosely based on the\\n                     * [structured clone algorithm](http://www.w3.org/TR/html5/infrastructure.html#internal-structured-cloning-algorithm).\\n                     * The enumerable properties of `arguments` objects and objects created by\\n                     * constructors other than `Object` are cloned to plain `Object` objects. An\\n                     * empty object is returned for uncloneable values such as functions, DOM nodes,\\n                     * Maps, Sets, and WeakMaps.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to clone.\\n                     * @param {boolean} [isDeep] Specify a deep clone.\\n                     * @param {Function} [customizer] The function to customize cloning values.\\n                     * @param {*} [thisArg] The `this` binding of `customizer`.\\n                     * @returns {*} Returns the cloned value.\\n                     * @example\\n                     *\\n                     * var users = [\\n                     *   { 'user': 'barney' },\\n                     *   { 'user': 'fred' }\\n                     * ];\\n                     *\\n                     * var shallow = _.clone(users);\\n                     * shallow[0] === users[0];\\n                     * // => true\\n                     *\\n                     * var deep = _.clone(users, true);\\n                     * deep[0] === users[0];\\n                     * // => false\\n                     *\\n                     * // using a customizer callback\\n                     * var el = _.clone(document.body, function(value) {\\n   *   if (_.isElement(value)) {\\n   *     return value.cloneNode(false);\\n   *   }\\n   * });\\n                     *\\n                     * el === document.body\\n                     * // => false\\n                     * el.nodeName\\n                     * // => BODY\\n                     * el.childNodes.length;\\n                     * // => 0\\n                     */\\n                    function clone(value, isDeep, customizer, thisArg) {\\n                        if (isDeep && typeof isDeep != 'boolean' && isIterateeCall(value, isDeep, customizer)) {\\n                            isDeep = false;\\n                        }\\n                        else if (typeof isDeep == 'function') {\\n                            thisArg = customizer;\\n                            customizer = isDeep;\\n                            isDeep = false;\\n                        }\\n                        return typeof customizer == 'function'\\n                            ? baseClone(value, isDeep, bindCallback(customizer, thisArg, 1))\\n                            : baseClone(value, isDeep);\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is classified as an `arguments` object.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\\n                     * @example\\n                     *\\n                     * _.isArguments(function() { return arguments; }());\\n                     * // => true\\n                     *\\n                     * _.isArguments([1, 2, 3]);\\n                     * // => false\\n                     */\\n                    function isArguments(value) {\\n                        return isObjectLike(value) && isArrayLike(value) && objToString.call(value) == argsTag;\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is classified as an `Array` object.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\\n                     * @example\\n                     *\\n                     * _.isArray([1, 2, 3]);\\n                     * // => true\\n                     *\\n                     * _.isArray(function() { return arguments; }());\\n                     * // => false\\n                     */\\n                    var isArray = nativeIsArray || function (value) {\\n                            return isObjectLike(value) && isLength(value.length) && objToString.call(value) == arrayTag;\\n                        };\\n\\n                    /**\\n                     * Checks if `value` is a DOM element.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\\n                     * @example\\n                     *\\n                     * _.isElement(document.body);\\n                     * // => true\\n                     *\\n                     * _.isElement('<body>');\\n                     * // => false\\n                     */\\n                    function isElement(value) {\\n                        return !!value && value.nodeType === 1 && isObjectLike(value) &&\\n                            (objToString.call(value).indexOf('Element') > -1);\\n                    }\\n\\n                    // Fallback for environments without DOM support.\\n                    if (!support.dom) {\\n                        isElement = function (value) {\\n                            return !!value && value.nodeType === 1 && isObjectLike(value) && !isPlainObject(value);\\n                        };\\n                    }\\n\\n                    /**\\n                     * Performs a deep comparison between two values to determine if they are\\n                     * equivalent. If `customizer` is provided it is invoked to compare values.\\n                     * If `customizer` returns `undefined` comparisons are handled by the method\\n                     * instead. The `customizer` is bound to `thisArg` and invoked with three\\n                     * arguments: (value, other [, index|key]).\\n                     *\\n                     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\\n                     * numbers, `Object` objects, regexes, and strings. Objects are compared by\\n                     * their own, not inherited, enumerable properties. Functions and DOM nodes\\n                     * are **not** supported. Provide a customizer function to extend support\\n                     * for comparing other values.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @alias eq\\n                     * @category Lang\\n                     * @param {*} value The value to compare.\\n                     * @param {*} other The other value to compare.\\n                     * @param {Function} [customizer] The function to customize value comparisons.\\n                     * @param {*} [thisArg] The `this` binding of `customizer`.\\n                     * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\\n                     * @example\\n                     *\\n                     * var object = { 'user': 'fred' };\\n                     * var other = { 'user': 'fred' };\\n                     *\\n                     * object == other;\\n                     * // => false\\n                     *\\n                     * _.isEqual(object, other);\\n                     * // => true\\n                     *\\n                     * // using a customizer callback\\n                     * var array = ['hello', 'goodbye'];\\n                     * var other = ['hi', 'goodbye'];\\n                     *\\n                     * _.isEqual(array, other, function(value, other) {\\n   *   if (_.every([value, other], RegExp.prototype.test, /^h(?:i|ello)$/)) {\\n   *     return true;\\n   *   }\\n   * });\\n                     * // => true\\n                     */\\n                    function isEqual(value, other, customizer, thisArg) {\\n                        customizer = typeof customizer == 'function' ? bindCallback(customizer, thisArg, 3) : undefined;\\n                        var result = customizer ? customizer(value, other) : undefined;\\n                        return result === undefined ? baseIsEqual(value, other, customizer) : !!result;\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is classified as a `Function` object.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\\n                     * @example\\n                     *\\n                     * _.isFunction(_);\\n                     * // => true\\n                     *\\n                     * _.isFunction(/abc/);\\n                     * // => false\\n                     */\\n                    var isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function (value) {\\n                            // The use of `Object#toString` avoids issues with the `typeof` operator\\n                            // in older versions of Chrome and Safari which return 'function' for regexes\\n                            // and Safari 8 equivalents which return 'object' for typed array constructors.\\n                            return objToString.call(value) == funcTag;\\n                        };\\n\\n                    /**\\n                     * Checks if `value` is the [language type](https://es5.github.io/#x8) of `Object`.\\n                     * (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is an object, else `false`.\\n                     * @example\\n                     *\\n                     * _.isObject({});\\n                     * // => true\\n                     *\\n                     * _.isObject([1, 2, 3]);\\n                     * // => true\\n                     *\\n                     * _.isObject(1);\\n                     * // => false\\n                     */\\n                    function isObject(value) {\\n                        // Avoid a V8 JIT bug in Chrome 19-20.\\n                        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\\n                        var type = typeof value;\\n                        return !!value && (type == 'object' || type == 'function');\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is a native function.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is a native function, else `false`.\\n                     * @example\\n                     *\\n                     * _.isNative(Array.prototype.push);\\n                     * // => true\\n                     *\\n                     * _.isNative(_);\\n                     * // => false\\n                     */\\n                    function isNative(value) {\\n                        if (value == null) {\\n                            return false;\\n                        }\\n                        if (objToString.call(value) == funcTag) {\\n                            return reIsNative.test(fnToString.call(value));\\n                        }\\n                        return isObjectLike(value) && reIsHostCtor.test(value);\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is classified as a `Number` primitive or object.\\n                     *\\n                     * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\\n                     * as numbers, use the `_.isFinite` method.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\\n                     * @example\\n                     *\\n                     * _.isNumber(8.4);\\n                     * // => true\\n                     *\\n                     * _.isNumber(NaN);\\n                     * // => true\\n                     *\\n                     * _.isNumber('8.4');\\n                     * // => false\\n                     */\\n                    function isNumber(value) {\\n                        return typeof value == 'number' || (isObjectLike(value) && objToString.call(value) == numberTag);\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is a plain object, that is, an object created by the\\n                     * `Object` constructor or one with a `[[Prototype]]` of `null`.\\n                     *\\n                     * **Note:** This method assumes objects created by the `Object` constructor\\n                     * have no inherited enumerable properties.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\\n                     * @example\\n                     *\\n                     * function Foo() {\\n   *   this.a = 1;\\n   * }\\n                     *\\n                     * _.isPlainObject(new Foo);\\n                     * // => false\\n                     *\\n                     * _.isPlainObject([1, 2, 3]);\\n                     * // => false\\n                     *\\n                     * _.isPlainObject({ 'x': 0, 'y': 0 });\\n                     * // => true\\n                     *\\n                     * _.isPlainObject(Object.create(null));\\n                     * // => true\\n                     */\\n                    var isPlainObject = !getPrototypeOf ? shimIsPlainObject : function (value) {\\n                            if (!(value && objToString.call(value) == objectTag)) {\\n                                return false;\\n                            }\\n                            var valueOf = getNative(value, 'valueOf'),\\n                                objProto = valueOf && (objProto = getPrototypeOf(valueOf)) && getPrototypeOf(objProto);\\n\\n                            return objProto\\n                                ? (value == objProto || getPrototypeOf(value) == objProto)\\n                                : shimIsPlainObject(value);\\n                        };\\n\\n                    /**\\n                     * Checks if `value` is classified as a `String` primitive or object.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\\n                     * @example\\n                     *\\n                     * _.isString('abc');\\n                     * // => true\\n                     *\\n                     * _.isString(1);\\n                     * // => false\\n                     */\\n                    function isString(value) {\\n                        return typeof value == 'string' || (isObjectLike(value) && objToString.call(value) == stringTag);\\n                    }\\n\\n                    /**\\n                     * Checks if `value` is classified as a typed array.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Lang\\n                     * @param {*} value The value to check.\\n                     * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\\n                     * @example\\n                     *\\n                     * _.isTypedArray(new Uint8Array);\\n                     * // => true\\n                     *\\n                     * _.isTypedArray([]);\\n                     * // => false\\n                     */\\n                    function isTypedArray(value) {\\n                        return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[objToString.call(value)];\\n                    }\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Assigns own enumerable properties of source object(s) to the destination\\n                     * object. Subsequent sources overwrite property assignments of previous sources.\\n                     * If `customizer` is provided it is invoked to produce the assigned values.\\n                     * The `customizer` is bound to `thisArg` and invoked with five arguments:\\n                     * (objectValue, sourceValue, key, object, source).\\n                     *\\n                     * **Note:** This method mutates `object` and is based on\\n                     * [`Object.assign`](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign).\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @alias extend\\n                     * @category Object\\n                     * @param {Object} object The destination object.\\n                     * @param {...Object} [sources] The source objects.\\n                     * @param {Function} [customizer] The function to customize assigned values.\\n                     * @param {*} [thisArg] The `this` binding of `customizer`.\\n                     * @returns {Object} Returns `object`.\\n                     * @example\\n                     *\\n                     * _.assign({ 'user': 'barney' }, { 'age': 40 }, { 'user': 'fred' });\\n                     * // => { 'user': 'fred', 'age': 40 }\\n                     *\\n                     * // using a customizer callback\\n                     * var defaults = _.partialRight(_.assign, function(value, other) {\\n   *   return _.isUndefined(value) ? other : value;\\n   * });\\n                     *\\n                     * defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\\n                     * // => { 'user': 'barney', 'age': 36 }\\n                     */\\n                    var assign = createAssigner(function (object, source, customizer) {\\n                        return customizer\\n                            ? assignWith(object, source, customizer)\\n                            : baseAssign(object, source);\\n                    });\\n\\n                    /**\\n                     * Assigns own enumerable properties of source object(s) to the destination\\n                     * object for all destination properties that resolve to `undefined`. Once a\\n                     * property is set, additional values of the same property are ignored.\\n                     *\\n                     * **Note:** This method mutates `object`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Object\\n                     * @param {Object} object The destination object.\\n                     * @param {...Object} [sources] The source objects.\\n                     * @returns {Object} Returns `object`.\\n                     * @example\\n                     *\\n                     * _.defaults({ 'user': 'barney' }, { 'age': 36 }, { 'user': 'fred' });\\n                     * // => { 'user': 'barney', 'age': 36 }\\n                     */\\n                    var defaults = restParam(function (args) {\\n                        var object = args[0];\\n                        if (object == null) {\\n                            return object;\\n                        }\\n                        args.push(assignDefaults);\\n                        return assign.apply(undefined, args);\\n                    });\\n\\n                    /**\\n                     * Creates an array of the own enumerable property names of `object`.\\n                     *\\n                     * **Note:** Non-object values are coerced to objects. See the\\n                     * [ES spec](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.keys)\\n                     * for more details.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Object\\n                     * @param {Object} object The object to query.\\n                     * @returns {Array} Returns the array of property names.\\n                     * @example\\n                     *\\n                     * function Foo() {\\n   *   this.a = 1;\\n   *   this.b = 2;\\n   * }\\n                     *\\n                     * Foo.prototype.c = 3;\\n                     *\\n                     * _.keys(new Foo);\\n                     * // => ['a', 'b'] (iteration order is not guaranteed)\\n                     *\\n                     * _.keys('hi');\\n                     * // => ['0', '1']\\n                     */\\n                    var keys = !nativeKeys ? shimKeys : function (object) {\\n                            var Ctor = object == null ? null : object.constructor;\\n                            if ((typeof Ctor == 'function' && Ctor.prototype === object) ||\\n                                (typeof object != 'function' && isArrayLike(object))) {\\n                                return shimKeys(object);\\n                            }\\n                            return isObject(object) ? nativeKeys(object) : [];\\n                        };\\n\\n                    /**\\n                     * Creates an array of the own and inherited enumerable property names of `object`.\\n                     *\\n                     * **Note:** Non-object values are coerced to objects.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Object\\n                     * @param {Object} object The object to query.\\n                     * @returns {Array} Returns the array of property names.\\n                     * @example\\n                     *\\n                     * function Foo() {\\n   *   this.a = 1;\\n   *   this.b = 2;\\n   * }\\n                     *\\n                     * Foo.prototype.c = 3;\\n                     *\\n                     * _.keysIn(new Foo);\\n                     * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\\n                     */\\n                    function keysIn(object) {\\n                        if (object == null) {\\n                            return [];\\n                        }\\n                        if (!isObject(object)) {\\n                            object = Object(object);\\n                        }\\n                        var length = object.length;\\n                        length = (length && isLength(length) &&\\n                            (isArray(object) || isArguments(object)) && length) || 0;\\n\\n                        var Ctor = object.constructor,\\n                            index = -1,\\n                            isProto = typeof Ctor == 'function' && Ctor.prototype === object,\\n                            result = Array(length),\\n                            skipIndexes = length > 0;\\n\\n                        while (++index < length) {\\n                            result[index] = (index + '');\\n                        }\\n                        for (var key in object) {\\n                            if (!(skipIndexes && isIndex(key, length)) && !(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\\n                                result.push(key);\\n                            }\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * The opposite of `_.pick`; this method creates an object composed of the\\n                     * own and inherited enumerable properties of `object` that are not omitted.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Object\\n                     * @param {Object} object The source object.\\n                     * @param {Function|...(string|string[])} [predicate] The function invoked per\\n                     *  iteration or property names to omit, specified as individual property\\n                     *  names or arrays of property names.\\n                     * @param {*} [thisArg] The `this` binding of `predicate`.\\n                     * @returns {Object} Returns the new object.\\n                     * @example\\n                     *\\n                     * var object = { 'user': 'fred', 'age': 40 };\\n                     *\\n                     * _.omit(object, 'age');\\n                     * // => { 'user': 'fred' }\\n                     *\\n                     * _.omit(object, _.isNumber);\\n                     * // => { 'user': 'fred' }\\n                     */\\n                    var omit = restParam(function (object, props) {\\n                        if (object == null) {\\n                            return {};\\n                        }\\n                        if (typeof props[0] != 'function') {\\n                            var props = arrayMap(baseFlatten(props), String);\\n                            return pickByArray(object, baseDifference(keysIn(object), props));\\n                        }\\n                        var predicate = bindCallback(props[0], props[1], 3);\\n                        return pickByCallback(object, function (value, key, object) {\\n                            return !predicate(value, key, object);\\n                        });\\n                    });\\n\\n                    /**\\n                     * Creates a two dimensional array of the key-value pairs for `object`,\\n                     * e.g. `[[key1, value1], [key2, value2]]`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Object\\n                     * @param {Object} object The object to query.\\n                     * @returns {Array} Returns the new array of key-value pairs.\\n                     * @example\\n                     *\\n                     * _.pairs({ 'barney': 36, 'fred': 40 });\\n                     * // => [['barney', 36], ['fred', 40]] (iteration order is not guaranteed)\\n                     */\\n                    function pairs(object) {\\n                        object = toObject(object);\\n\\n                        var index = -1,\\n                            props = keys(object),\\n                            length = props.length,\\n                            result = Array(length);\\n\\n                        while (++index < length) {\\n                            var key = props[index];\\n                            result[index] = [key, object[key]];\\n                        }\\n                        return result;\\n                    }\\n\\n                    /**\\n                     * Creates an array of the own enumerable property values of `object`.\\n                     *\\n                     * **Note:** Non-object values are coerced to objects.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Object\\n                     * @param {Object} object The object to query.\\n                     * @returns {Array} Returns the array of property values.\\n                     * @example\\n                     *\\n                     * function Foo() {\\n   *   this.a = 1;\\n   *   this.b = 2;\\n   * }\\n                     *\\n                     * Foo.prototype.c = 3;\\n                     *\\n                     * _.values(new Foo);\\n                     * // => [1, 2] (iteration order is not guaranteed)\\n                     *\\n                     * _.values('hi');\\n                     * // => ['h', 'i']\\n                     */\\n                    function values(object) {\\n                        return baseValues(object, keys(object));\\n                    }\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Escapes the `RegExp` special characters \\\"\\\\\\\", \\\"/\\\", \\\"^\\\", \\\"$\\\", \\\".\\\", \\\"|\\\", \\\"?\\\",\\n                     * \\\"*\\\", \\\"+\\\", \\\"(\\\", \\\")\\\", \\\"[\\\", \\\"]\\\", \\\"{\\\" and \\\"}\\\" in `string`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category String\\n                     * @param {string} [string=''] The string to escape.\\n                     * @returns {string} Returns the escaped string.\\n                     * @example\\n                     *\\n                     * _.escapeRegExp('[lodash](https://lodash.com/)');\\n                     * // => '\\\\[lodash\\\\]\\\\(https:\\\\/\\\\/lodash\\\\.com\\\\/\\\\)'\\n                     */\\n                    function escapeRegExp(string) {\\n                        string = baseToString(string);\\n                        return (string && reHasRegExpChars.test(string))\\n                            ? string.replace(reRegExpChars, '\\\\\\\\$&')\\n                            : string;\\n                    }\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * Creates a function that invokes `func` with the `this` binding of `thisArg`\\n                     * and arguments of the created function. If `func` is a property name the\\n                     * created callback returns the property value for a given element. If `func`\\n                     * is an object the created callback returns `true` for elements that contain\\n                     * the equivalent object properties, otherwise it returns `false`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @alias iteratee\\n                     * @category Utility\\n                     * @param {*} [func=_.identity] The value to convert to a callback.\\n                     * @param {*} [thisArg] The `this` binding of `func`.\\n                     * @param- {Object} [guard] Enables use as a callback for functions like `_.map`.\\n                     * @returns {Function} Returns the callback.\\n                     * @example\\n                     *\\n                     * var users = [\\n                     *   { 'user': 'barney', 'age': 36 },\\n                     *   { 'user': 'fred',   'age': 40 }\\n                     * ];\\n                     *\\n                     * // wrap to create custom callback shorthands\\n                     * _.callback = _.wrap(_.callback, function(callback, func, thisArg) {\\n   *   var match = /^(.+?)__([gl]t)(.+)$/.exec(func);\\n   *   if (!match) {\\n   *     return callback(func, thisArg);\\n   *   }\\n   *   return function(object) {\\n   *     return match[2] == 'gt'\\n   *       ? object[match[1]] > match[3]\\n   *       : object[match[1]] < match[3];\\n   *   };\\n   * });\\n                     *\\n                     * _.filter(users, 'age__gt36');\\n                     * // => [{ 'user': 'fred', 'age': 40 }]\\n                     */\\n                    function callback(func, thisArg, guard) {\\n                        if (guard && isIterateeCall(func, thisArg, guard)) {\\n                            thisArg = null;\\n                        }\\n                        return isObjectLike(func)\\n                            ? matches(func)\\n                            : baseCallback(func, thisArg);\\n                    }\\n\\n                    /**\\n                     * Creates a function that returns `value`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Utility\\n                     * @param {*} value The value to return from the new function.\\n                     * @returns {Function} Returns the new function.\\n                     * @example\\n                     *\\n                     * var object = { 'user': 'fred' };\\n                     * var getter = _.constant(object);\\n                     *\\n                     * getter() === object;\\n                     * // => true\\n                     */\\n                    function constant(value) {\\n                        return function () {\\n                            return value;\\n                        };\\n                    }\\n\\n                    /**\\n                     * This method returns the first argument provided to it.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Utility\\n                     * @param {*} value Any value.\\n                     * @returns {*} Returns `value`.\\n                     * @example\\n                     *\\n                     * var object = { 'user': 'fred' };\\n                     *\\n                     * _.identity(object) === object;\\n                     * // => true\\n                     */\\n                    function identity(value) {\\n                        return value;\\n                    }\\n\\n                    /**\\n                     * Creates a function that performs a deep comparison between a given object\\n                     * and `source`, returning `true` if the given object has equivalent property\\n                     * values, else `false`.\\n                     *\\n                     * **Note:** This method supports comparing arrays, booleans, `Date` objects,\\n                     * numbers, `Object` objects, regexes, and strings. Objects are compared by\\n                     * their own, not inherited, enumerable properties. For comparing a single\\n                     * own or inherited property value see `_.matchesProperty`.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Utility\\n                     * @param {Object} source The object of property values to match.\\n                     * @returns {Function} Returns the new function.\\n                     * @example\\n                     *\\n                     * var users = [\\n                     *   { 'user': 'barney', 'age': 36, 'active': true },\\n                     *   { 'user': 'fred',   'age': 40, 'active': false }\\n                     * ];\\n                     *\\n                     * _.filter(users, _.matches({ 'age': 40, 'active': false }));\\n                     * // => [{ 'user': 'fred', 'age': 40, 'active': false }]\\n                     */\\n                    function matches(source) {\\n                        return baseMatches(baseClone(source, true));\\n                    }\\n\\n                    /**\\n                     * A no-operation function that returns `undefined` regardless of the\\n                     * arguments it receives.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Utility\\n                     * @example\\n                     *\\n                     * var object = { 'user': 'fred' };\\n                     *\\n                     * _.noop(object) === undefined;\\n                     * // => true\\n                     */\\n                    function noop() {\\n                        // No operation performed.\\n                    }\\n\\n                    /**\\n                     * Creates a function that returns the property value at `path` on a\\n                     * given object.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Utility\\n                     * @param {Array|string} path The path of the property to get.\\n                     * @returns {Function} Returns the new function.\\n                     * @example\\n                     *\\n                     * var objects = [\\n                     *   { 'a': { 'b': { 'c': 2 } } },\\n                     *   { 'a': { 'b': { 'c': 1 } } }\\n                     * ];\\n                     *\\n                     * _.map(objects, _.property('a.b.c'));\\n                     * // => [2, 1]\\n                     *\\n                     * _.pluck(_.sortBy(objects, _.property(['a', 'b', 'c'])), 'a.b.c');\\n                     * // => [1, 2]\\n                     */\\n                    function property(path) {\\n                        return isKey(path) ? baseProperty(path) : basePropertyDeep(path);\\n                    }\\n\\n                    /**\\n                     * Generates a unique ID. If `prefix` is provided the ID is appended to it.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @category Utility\\n                     * @param {string} [prefix] The value to prefix the ID with.\\n                     * @returns {string} Returns the unique ID.\\n                     * @example\\n                     *\\n                     * _.uniqueId('contact_');\\n                     * // => 'contact_104'\\n                     *\\n                     * _.uniqueId();\\n                     * // => '105'\\n                     */\\n                    function uniqueId(prefix) {\\n                        var id = ++idCounter;\\n                        return baseToString(prefix) + id;\\n                    }\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    LazyWrapper.prototype = baseCreate(baseLodash.prototype);\\n                    LazyWrapper.prototype.constructor = LazyWrapper;\\n\\n                    // Add functions to the `Set` cache.\\n                    SetCache.prototype.push = cachePush;\\n\\n                    // Add functions that return wrapped values when chaining.\\n                    lodash.assign = assign;\\n                    lodash.bind = bind;\\n                    lodash.callback = callback;\\n                    lodash.constant = constant;\\n                    lodash.defaults = defaults;\\n                    lodash.defer = defer;\\n                    lodash.difference = difference;\\n                    lodash.forEach = forEach;\\n                    lodash.intersection = intersection;\\n                    lodash.invoke = invoke;\\n                    lodash.keys = keys;\\n                    lodash.keysIn = keysIn;\\n                    lodash.map = map;\\n                    lodash.matches = matches;\\n                    lodash.omit = omit;\\n                    lodash.pairs = pairs;\\n                    lodash.partial = partial;\\n                    lodash.partition = partition;\\n                    lodash.property = property;\\n                    lodash.restParam = restParam;\\n                    lodash.values = values;\\n\\n                    // Add aliases.\\n                    lodash.collect = map;\\n                    lodash.each = forEach;\\n                    lodash.extend = assign;\\n                    lodash.iteratee = callback;\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    // Add functions that return unwrapped values when chaining.\\n                    lodash.clone = clone;\\n                    lodash.escapeRegExp = escapeRegExp;\\n                    lodash.every = every;\\n                    lodash.find = find;\\n                    lodash.identity = identity;\\n                    lodash.indexOf = indexOf;\\n                    lodash.isArguments = isArguments;\\n                    lodash.isArray = isArray;\\n                    lodash.isElement = isElement;\\n                    lodash.isEqual = isEqual;\\n                    lodash.isFunction = isFunction;\\n                    lodash.isNative = isNative;\\n                    lodash.isNumber = isNumber;\\n                    lodash.isObject = isObject;\\n                    lodash.isPlainObject = isPlainObject;\\n                    lodash.isString = isString;\\n                    lodash.isTypedArray = isTypedArray;\\n                    lodash.last = last;\\n                    lodash.noop = noop;\\n                    lodash.now = now;\\n                    lodash.reduce = reduce;\\n                    lodash.uniqueId = uniqueId;\\n\\n                    // Add aliases.\\n                    lodash.all = every;\\n                    lodash.eq = isEqual;\\n                    lodash.detect = find;\\n                    lodash.foldl = reduce;\\n                    lodash.inject = reduce;\\n\\n                    /*------------------------------------------------------------------------*/\\n\\n                    /**\\n                     * The semantic version number.\\n                     *\\n                     * @static\\n                     * @memberOf _\\n                     * @type string\\n                     */\\n                    lodash.VERSION = VERSION;\\n\\n                    // Assign default placeholders.\\n                    arrayEach(['bind', 'partial'], function (methodName) {\\n                        lodash[methodName].placeholder = lodash;\\n                    });\\n\\n                    /*--------------------------------------------------------------------------*/\\n\\n                    // Some AMD build optimizers like r.js check for condition patterns like the following:\\n                    if (typeof define == 'function' && typeof define.amd == 'object' && define.amd) {\\n                        // Expose lodash to the global object when an AMD loader is present to avoid\\n                        // errors in cases where lodash is loaded by a script tag and not intended\\n                        // as an AMD module. See http://requirejs.org/docs/errors.html#mismatch for\\n                        // more details.\\n                        root._ = lodash;\\n\\n                        // Define as an anonymous module so, through path mapping, it can be\\n                        // referenced as the \\\"underscore\\\" module.\\n                        define(function () {\\n                            return lodash;\\n                        });\\n                    }\\n                    // Check for `exports` after `define` in case a build optimizer adds an `exports` object.\\n                    else if (freeExports && freeModule) {\\n                        // Export for Node.js or RingoJS.\\n                        if (moduleExports) {\\n                            (freeModule.exports = lodash)._ = lodash;\\n                        }\\n                        // Export for Rhino with CommonJS support.\\n                        else {\\n                            freeExports._ = lodash;\\n                        }\\n                    }\\n                    else {\\n                        // Export for a browser or Rhino.\\n                        root._ = lodash;\\n                    }\\n                }.call(this));\\n\\n            }).call(this, typeof global !== \\\"undefined\\\" ? global : typeof self !== \\\"undefined\\\" ? self : typeof window !== \\\"undefined\\\" ? window : {})\\n        }, {}],\\n        2: [function (_dereq_, module, exports) {\\n            /*!\\n             * EventEmitter2\\n             * https://github.com/hij1nx/EventEmitter2\\n             *\\n             * Copyright (c) 2013 hij1nx\\n             * Licensed under the MIT license.\\n             */\\n            ;\\n            !function (undefined) {\\n\\n                var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\\n                        return Object.prototype.toString.call(obj) === \\\"[object Array]\\\";\\n                    };\\n                var defaultMaxListeners = 10;\\n\\n                function init() {\\n                    this._events = {};\\n                    if (this._conf) {\\n                        configure.call(this, this._conf);\\n                    }\\n                }\\n\\n                function configure(conf) {\\n                    if (conf) {\\n\\n                        this._conf = conf;\\n\\n                        conf.delimiter && (this.delimiter = conf.delimiter);\\n                        conf.maxListeners && (this._events.maxListeners = conf.maxListeners);\\n                        conf.wildcard && (this.wildcard = conf.wildcard);\\n                        conf.newListener && (this.newListener = conf.newListener);\\n\\n                        if (this.wildcard) {\\n                            this.listenerTree = {};\\n                        }\\n                    }\\n                }\\n\\n                function EventEmitter(conf) {\\n                    this._events = {};\\n                    this.newListener = false;\\n                    configure.call(this, conf);\\n                }\\n\\n                //\\n                // Attention, function return type now is array, always !\\n                // It has zero elements if no any matches found and one or more\\n                // elements (leafs) if there are matches\\n                //\\n                function searchListenerTree(handlers, type, tree, i) {\\n                    if (!tree) {\\n                        return [];\\n                    }\\n                    var listeners = [], leaf, len, branch, xTree, xxTree, isolatedBranch, endReached,\\n                        typeLength = type.length, currentType = type[i], nextType = type[i + 1];\\n                    if (i === typeLength && tree._listeners) {\\n                        //\\n                        // If at the end of the event(s) list and the tree has listeners\\n                        // invoke those listeners.\\n                        //\\n                        if (typeof tree._listeners === 'function') {\\n                            handlers && handlers.push(tree._listeners);\\n                            return [tree];\\n                        } else {\\n                            for (leaf = 0, len = tree._listeners.length; leaf < len; leaf++) {\\n                                handlers && handlers.push(tree._listeners[leaf]);\\n                            }\\n                            return [tree];\\n                        }\\n                    }\\n\\n                    if ((currentType === '*' || currentType === '**') || tree[currentType]) {\\n                        //\\n                        // If the event emitted is '*' at this part\\n                        // or there is a concrete match at this patch\\n                        //\\n                        if (currentType === '*') {\\n                            for (branch in tree) {\\n                                if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\\n                                    listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 1));\\n                                }\\n                            }\\n                            return listeners;\\n                        } else if (currentType === '**') {\\n                            endReached = (i + 1 === typeLength || (i + 2 === typeLength && nextType === '*'));\\n                            if (endReached && tree._listeners) {\\n                                // The next element has a _listeners, add it to the handlers.\\n                                listeners = listeners.concat(searchListenerTree(handlers, type, tree, typeLength));\\n                            }\\n\\n                            for (branch in tree) {\\n                                if (branch !== '_listeners' && tree.hasOwnProperty(branch)) {\\n                                    if (branch === '*' || branch === '**') {\\n                                        if (tree[branch]._listeners && !endReached) {\\n                                            listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], typeLength));\\n                                        }\\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\\n                                    } else if (branch === nextType) {\\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i + 2));\\n                                    } else {\\n                                        // No match on this one, shift into the tree but not in the type array.\\n                                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[branch], i));\\n                                    }\\n                                }\\n                            }\\n                            return listeners;\\n                        }\\n\\n                        listeners = listeners.concat(searchListenerTree(handlers, type, tree[currentType], i + 1));\\n                    }\\n\\n                    xTree = tree['*'];\\n                    if (xTree) {\\n                        //\\n                        // If the listener tree will allow any match for this part,\\n                        // then recursively explore all branches of the tree\\n                        //\\n                        searchListenerTree(handlers, type, xTree, i + 1);\\n                    }\\n\\n                    xxTree = tree['**'];\\n                    if (xxTree) {\\n                        if (i < typeLength) {\\n                            if (xxTree._listeners) {\\n                                // If we have a listener on a '**', it will catch all, so add its handler.\\n                                searchListenerTree(handlers, type, xxTree, typeLength);\\n                            }\\n\\n                            // Build arrays of matching next branches and others.\\n                            for (branch in xxTree) {\\n                                if (branch !== '_listeners' && xxTree.hasOwnProperty(branch)) {\\n                                    if (branch === nextType) {\\n                                        // We know the next element will match, so jump twice.\\n                                        searchListenerTree(handlers, type, xxTree[branch], i + 2);\\n                                    } else if (branch === currentType) {\\n                                        // Current node matches, move into the tree.\\n                                        searchListenerTree(handlers, type, xxTree[branch], i + 1);\\n                                    } else {\\n                                        isolatedBranch = {};\\n                                        isolatedBranch[branch] = xxTree[branch];\\n                                        searchListenerTree(handlers, type, {'**': isolatedBranch}, i + 1);\\n                                    }\\n                                }\\n                            }\\n                        } else if (xxTree._listeners) {\\n                            // We have reached the end and still on a '**'\\n                            searchListenerTree(handlers, type, xxTree, typeLength);\\n                        } else if (xxTree['*'] && xxTree['*']._listeners) {\\n                            searchListenerTree(handlers, type, xxTree['*'], typeLength);\\n                        }\\n                    }\\n\\n                    return listeners;\\n                }\\n\\n                function growListenerTree(type, listener) {\\n\\n                    type = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\\n\\n                    //\\n                    // Looks for two consecutive '**', if so, don't add the event at all.\\n                    //\\n                    for (var i = 0, len = type.length; i + 1 < len; i++) {\\n                        if (type[i] === '**' && type[i + 1] === '**') {\\n                            return;\\n                        }\\n                    }\\n\\n                    var tree = this.listenerTree;\\n                    var name = type.shift();\\n\\n                    while (name) {\\n\\n                        if (!tree[name]) {\\n                            tree[name] = {};\\n                        }\\n\\n                        tree = tree[name];\\n\\n                        if (type.length === 0) {\\n\\n                            if (!tree._listeners) {\\n                                tree._listeners = listener;\\n                            }\\n                            else if (typeof tree._listeners === 'function') {\\n                                tree._listeners = [tree._listeners, listener];\\n                            }\\n                            else if (isArray(tree._listeners)) {\\n\\n                                tree._listeners.push(listener);\\n\\n                                if (!tree._listeners.warned) {\\n\\n                                    var m = defaultMaxListeners;\\n\\n                                    if (typeof this._events.maxListeners !== 'undefined') {\\n                                        m = this._events.maxListeners;\\n                                    }\\n\\n                                    if (m > 0 && tree._listeners.length > m) {\\n\\n                                        tree._listeners.warned = true;\\n                                        console.error('(node) warning: possible EventEmitter memory ' +\\n                                            'leak detected. %d listeners added. ' +\\n                                            'Use emitter.setMaxListeners() to increase limit.',\\n                                            tree._listeners.length);\\n                                        console.trace();\\n                                    }\\n                                }\\n                            }\\n                            return true;\\n                        }\\n                        name = type.shift();\\n                    }\\n                    return true;\\n                }\\n\\n                // By default EventEmitters will print a warning if more than\\n                // 10 listeners are added to it. This is a useful default which\\n                // helps finding memory leaks.\\n                //\\n                // Obviously not all Emitters should be limited to 10. This function allows\\n                // that to be increased. Set to zero for unlimited.\\n\\n                EventEmitter.prototype.delimiter = '.';\\n\\n                EventEmitter.prototype.setMaxListeners = function (n) {\\n                    this._events || init.call(this);\\n                    this._events.maxListeners = n;\\n                    if (!this._conf) this._conf = {};\\n                    this._conf.maxListeners = n;\\n                };\\n\\n                EventEmitter.prototype.event = '';\\n\\n                EventEmitter.prototype.once = function (event, fn) {\\n                    this.many(event, 1, fn);\\n                    return this;\\n                };\\n\\n                EventEmitter.prototype.many = function (event, ttl, fn) {\\n                    var self = this;\\n\\n                    if (typeof fn !== 'function') {\\n                        throw new Error('many only accepts instances of Function');\\n                    }\\n\\n                    function listener() {\\n                        if (--ttl === 0) {\\n                            self.off(event, listener);\\n                        }\\n                        fn.apply(this, arguments);\\n                    }\\n\\n                    listener._origin = fn;\\n\\n                    this.on(event, listener);\\n\\n                    return self;\\n                };\\n\\n                EventEmitter.prototype.emit = function () {\\n\\n                    this._events || init.call(this);\\n\\n                    var type = arguments[0];\\n\\n                    if (type === 'newListener' && !this.newListener) {\\n                        if (!this._events.newListener) {\\n                            return false;\\n                        }\\n                    }\\n\\n                    // Loop through the *_all* functions and invoke them.\\n                    if (this._all) {\\n                        var l = arguments.length;\\n                        var args = new Array(l - 1);\\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\\n                        for (i = 0, l = this._all.length; i < l; i++) {\\n                            this.event = type;\\n                            this._all[i].apply(this, args);\\n                        }\\n                    }\\n\\n                    // If there is no 'error' event listener then throw.\\n                    if (type === 'error') {\\n\\n                        if (!this._all && !this._events.error && !(this.wildcard && this.listenerTree.error)) {\\n\\n                            if (arguments[1] instanceof Error) {\\n                                throw arguments[1]; // Unhandled 'error' event\\n                            } else {\\n                                throw new Error(\\\"Uncaught, unspecified 'error' event.\\\");\\n                            }\\n                            return false;\\n                        }\\n                    }\\n\\n                    var handler;\\n\\n                    if (this.wildcard) {\\n                        handler = [];\\n                        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\\n                        searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\\n                    }\\n                    else {\\n                        handler = this._events[type];\\n                    }\\n\\n                    if (typeof handler === 'function') {\\n                        this.event = type;\\n                        if (arguments.length === 1) {\\n                            handler.call(this);\\n                        }\\n                        else if (arguments.length > 1)\\n                            switch (arguments.length) {\\n                                case 2:\\n                                    handler.call(this, arguments[1]);\\n                                    break;\\n                                case 3:\\n                                    handler.call(this, arguments[1], arguments[2]);\\n                                    break;\\n                                // slower\\n                                default:\\n                                    var l = arguments.length;\\n                                    var args = new Array(l - 1);\\n                                    for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\\n                                    handler.apply(this, args);\\n                            }\\n                        return true;\\n                    }\\n                    else if (handler) {\\n                        var l = arguments.length;\\n                        var args = new Array(l - 1);\\n                        for (var i = 1; i < l; i++) args[i - 1] = arguments[i];\\n\\n                        var listeners = handler.slice();\\n                        for (var i = 0, l = listeners.length; i < l; i++) {\\n                            this.event = type;\\n                            listeners[i].apply(this, args);\\n                        }\\n                        return (listeners.length > 0) || !!this._all;\\n                    }\\n                    else {\\n                        return !!this._all;\\n                    }\\n\\n                };\\n\\n                EventEmitter.prototype.on = function (type, listener) {\\n\\n                    if (typeof type === 'function') {\\n                        this.onAny(type);\\n                        return this;\\n                    }\\n\\n                    if (typeof listener !== 'function') {\\n                        throw new Error('on only accepts instances of Function');\\n                    }\\n                    this._events || init.call(this);\\n\\n                    // To avoid recursion in the case that type == \\\"newListeners\\\"! Before\\n                    // adding it to the listeners, first emit \\\"newListeners\\\".\\n                    this.emit('newListener', type, listener);\\n\\n                    if (this.wildcard) {\\n                        growListenerTree.call(this, type, listener);\\n                        return this;\\n                    }\\n\\n                    if (!this._events[type]) {\\n                        // Optimize the case of one listener. Don't need the extra array object.\\n                        this._events[type] = listener;\\n                    }\\n                    else if (typeof this._events[type] === 'function') {\\n                        // Adding the second element, need to change to array.\\n                        this._events[type] = [this._events[type], listener];\\n                    }\\n                    else if (isArray(this._events[type])) {\\n                        // If we've already got an array, just append.\\n                        this._events[type].push(listener);\\n\\n                        // Check for listener leak\\n                        if (!this._events[type].warned) {\\n\\n                            var m = defaultMaxListeners;\\n\\n                            if (typeof this._events.maxListeners !== 'undefined') {\\n                                m = this._events.maxListeners;\\n                            }\\n\\n                            if (m > 0 && this._events[type].length > m) {\\n\\n                                this._events[type].warned = true;\\n                                console.error('(node) warning: possible EventEmitter memory ' +\\n                                    'leak detected. %d listeners added. ' +\\n                                    'Use emitter.setMaxListeners() to increase limit.',\\n                                    this._events[type].length);\\n                                console.trace();\\n                            }\\n                        }\\n                    }\\n                    return this;\\n                };\\n\\n                EventEmitter.prototype.onAny = function (fn) {\\n\\n                    if (typeof fn !== 'function') {\\n                        throw new Error('onAny only accepts instances of Function');\\n                    }\\n\\n                    if (!this._all) {\\n                        this._all = [];\\n                    }\\n\\n                    // Add the function to the event listener collection.\\n                    this._all.push(fn);\\n                    return this;\\n                };\\n\\n                EventEmitter.prototype.addListener = EventEmitter.prototype.on;\\n\\n                EventEmitter.prototype.off = function (type, listener) {\\n                    if (typeof listener !== 'function') {\\n                        throw new Error('removeListener only takes instances of Function');\\n                    }\\n\\n                    var handlers, leafs = [];\\n\\n                    if (this.wildcard) {\\n                        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\\n                        leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\\n                    }\\n                    else {\\n                        // does not use listeners(), so no side effect of creating _events[type]\\n                        if (!this._events[type]) return this;\\n                        handlers = this._events[type];\\n                        leafs.push({_listeners: handlers});\\n                    }\\n\\n                    for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\\n                        var leaf = leafs[iLeaf];\\n                        handlers = leaf._listeners;\\n                        if (isArray(handlers)) {\\n\\n                            var position = -1;\\n\\n                            for (var i = 0, length = handlers.length; i < length; i++) {\\n                                if (handlers[i] === listener ||\\n                                    (handlers[i].listener && handlers[i].listener === listener) ||\\n                                    (handlers[i]._origin && handlers[i]._origin === listener)) {\\n                                    position = i;\\n                                    break;\\n                                }\\n                            }\\n\\n                            if (position < 0) {\\n                                continue;\\n                            }\\n\\n                            if (this.wildcard) {\\n                                leaf._listeners.splice(position, 1);\\n                            }\\n                            else {\\n                                this._events[type].splice(position, 1);\\n                            }\\n\\n                            if (handlers.length === 0) {\\n                                if (this.wildcard) {\\n                                    delete leaf._listeners;\\n                                }\\n                                else {\\n                                    delete this._events[type];\\n                                }\\n                            }\\n                            return this;\\n                        }\\n                        else if (handlers === listener ||\\n                            (handlers.listener && handlers.listener === listener) ||\\n                            (handlers._origin && handlers._origin === listener)) {\\n                            if (this.wildcard) {\\n                                delete leaf._listeners;\\n                            }\\n                            else {\\n                                delete this._events[type];\\n                            }\\n                        }\\n                    }\\n\\n                    return this;\\n                };\\n\\n                EventEmitter.prototype.offAny = function (fn) {\\n                    var i = 0, l = 0, fns;\\n                    if (fn && this._all && this._all.length > 0) {\\n                        fns = this._all;\\n                        for (i = 0, l = fns.length; i < l; i++) {\\n                            if (fn === fns[i]) {\\n                                fns.splice(i, 1);\\n                                return this;\\n                            }\\n                        }\\n                    } else {\\n                        this._all = [];\\n                    }\\n                    return this;\\n                };\\n\\n                EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\\n\\n                EventEmitter.prototype.removeAllListeners = function (type) {\\n                    if (arguments.length === 0) {\\n                        !this._events || init.call(this);\\n                        return this;\\n                    }\\n\\n                    if (this.wildcard) {\\n                        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\\n                        var leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\\n\\n                        for (var iLeaf = 0; iLeaf < leafs.length; iLeaf++) {\\n                            var leaf = leafs[iLeaf];\\n                            leaf._listeners = null;\\n                        }\\n                    }\\n                    else {\\n                        if (!this._events[type]) return this;\\n                        this._events[type] = null;\\n                    }\\n                    return this;\\n                };\\n\\n                EventEmitter.prototype.listeners = function (type) {\\n                    if (this.wildcard) {\\n                        var handlers = [];\\n                        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\\n                        searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\\n                        return handlers;\\n                    }\\n\\n                    this._events || init.call(this);\\n\\n                    if (!this._events[type]) this._events[type] = [];\\n                    if (!isArray(this._events[type])) {\\n                        this._events[type] = [this._events[type]];\\n                    }\\n                    return this._events[type];\\n                };\\n\\n                EventEmitter.prototype.listenersAny = function () {\\n\\n                    if (this._all) {\\n                        return this._all;\\n                    }\\n                    else {\\n                        return [];\\n                    }\\n\\n                };\\n\\n                if (typeof define === 'function' && define.amd) {\\n                    // AMD. Register as an anonymous module.\\n                    define(function () {\\n                        return EventEmitter;\\n                    });\\n                } else if (typeof exports === 'object') {\\n                    // CommonJS\\n                    exports.EventEmitter2 = EventEmitter;\\n                }\\n                else {\\n                    // Browser global.\\n                    window.EventEmitter2 = EventEmitter;\\n                }\\n            }();\\n\\n        }, {}],\\n        3: [function (_dereq_, module, exports) {\\n            var diff = _dereq_('fast-diff');\\n            var is = _dereq_('./is');\\n            var op = _dereq_('./op');\\n\\n\\n            var NULL_CHARACTER = String.fromCharCode(0);  // Placeholder char for embed in diff()\\n\\n\\n            var Delta = function (ops) {\\n                // Assume we are given a well formed ops\\n                if (is.array(ops)) {\\n                    this.ops = ops;\\n                } else if (is.object(ops) && is.array(ops.ops)) {\\n                    this.ops = ops.ops;\\n                } else {\\n                    this.ops = [];\\n                }\\n            };\\n\\n\\n            Delta.prototype.insert = function (text, attributes) {\\n                var newOp = {};\\n                if (text.length === 0) return this;\\n                newOp.insert = text;\\n                if (is.object(attributes) && Object.keys(attributes).length > 0) newOp.attributes = attributes;\\n                return this.push(newOp);\\n            };\\n\\n            Delta.prototype['delete'] = function (length) {\\n                if (length <= 0) return this;\\n                return this.push({'delete': length});\\n            };\\n\\n            Delta.prototype.retain = function (length, attributes) {\\n                if (length <= 0) return this;\\n                var newOp = {retain: length};\\n                if (is.object(attributes) && Object.keys(attributes).length > 0) newOp.attributes = attributes;\\n                return this.push(newOp);\\n            };\\n\\n            Delta.prototype.push = function (newOp) {\\n                var index = this.ops.length;\\n                var lastOp = this.ops[index - 1];\\n                newOp = op.clone(newOp);\\n                if (is.object(lastOp)) {\\n                    if (is.number(newOp['delete']) && is.number(lastOp['delete'])) {\\n                        this.ops[index - 1] = {'delete': lastOp['delete'] + newOp['delete']};\\n                        return this;\\n                    }\\n                    // Since it does not matter if we insert before or after deleting at the same index,\\n                    // always prefer to insert first\\n                    if (is.number(lastOp['delete']) && newOp.insert != null) {\\n                        index -= 1;\\n                        lastOp = this.ops[index - 1];\\n                        if (!is.object(lastOp)) {\\n                            this.ops.unshift(newOp);\\n                            return this;\\n                        }\\n                    }\\n                    if (is.equal(newOp.attributes, lastOp.attributes)) {\\n                        if (is.string(newOp.insert) && is.string(lastOp.insert)) {\\n                            this.ops[index - 1] = {insert: lastOp.insert + newOp.insert};\\n                            if (is.object(newOp.attributes)) this.ops[index - 1].attributes = newOp.attributes\\n                            return this;\\n                        } else if (is.number(newOp.retain) && is.number(lastOp.retain)) {\\n                            this.ops[index - 1] = {retain: lastOp.retain + newOp.retain};\\n                            if (is.object(newOp.attributes)) this.ops[index - 1].attributes = newOp.attributes\\n                            return this;\\n                        }\\n                    }\\n                }\\n                if (index === this.ops.length) {\\n                    this.ops.push(newOp);\\n                } else {\\n                    this.ops.splice(index, 0, newOp);\\n                }\\n                return this;\\n            };\\n\\n            Delta.prototype.chop = function () {\\n                var lastOp = this.ops[this.ops.length - 1];\\n                if (lastOp && lastOp.retain && !lastOp.attributes) {\\n                    this.ops.pop();\\n                }\\n                return this;\\n            };\\n\\n            Delta.prototype.length = function () {\\n                return this.ops.reduce(function (length, elem) {\\n                    return length + op.length(elem);\\n                }, 0);\\n            };\\n\\n            Delta.prototype.slice = function (start, end) {\\n                start = start || 0;\\n                if (!is.number(end)) end = Infinity;\\n                var delta = new Delta();\\n                var iter = op.iterator(this.ops);\\n                var index = 0;\\n                while (index < end && iter.hasNext()) {\\n                    var nextOp;\\n                    if (index < start) {\\n                        nextOp = iter.next(start - index);\\n                    } else {\\n                        nextOp = iter.next(end - index);\\n                        delta.push(nextOp);\\n                    }\\n                    index += op.length(nextOp);\\n                }\\n                return delta;\\n            };\\n\\n\\n            Delta.prototype.compose = function (other) {\\n                var thisIter = op.iterator(this.ops);\\n                var otherIter = op.iterator(other.ops);\\n                var delta = new Delta();\\n                while (thisIter.hasNext() || otherIter.hasNext()) {\\n                    if (otherIter.peekType() === 'insert') {\\n                        delta.push(otherIter.next());\\n                    } else if (thisIter.peekType() === 'delete') {\\n                        delta.push(thisIter.next());\\n                    } else {\\n                        var length = Math.min(thisIter.peekLength(), otherIter.peekLength());\\n                        var thisOp = thisIter.next(length);\\n                        var otherOp = otherIter.next(length);\\n                        if (is.number(otherOp.retain)) {\\n                            var newOp = {};\\n                            if (is.number(thisOp.retain)) {\\n                                newOp.retain = length;\\n                            } else {\\n                                newOp.insert = thisOp.insert;\\n                            }\\n                            // Preserve null when composing with a retain, otherwise remove it for inserts\\n                            var attributes = op.attributes.compose(thisOp.attributes, otherOp.attributes, is.number(thisOp.retain));\\n                            if (attributes) newOp.attributes = attributes;\\n                            delta.push(newOp);\\n                            // Other op should be delete, we could be an insert or retain\\n                            // Insert + delete cancels out\\n                        } else if (is.number(otherOp['delete']) && is.number(thisOp.retain)) {\\n                            delta.push(otherOp);\\n                        }\\n                    }\\n                }\\n                return delta.chop();\\n            };\\n\\n            Delta.prototype.concat = function (other) {\\n                var delta = this.slice();\\n                if (other.ops.length > 0) {\\n                    delta.push(other.ops[0]);\\n                    delta.ops = delta.ops.concat(other.ops.slice(1));\\n                }\\n                return delta;\\n            };\\n\\n            Delta.prototype.diff = function (other) {\\n                var delta = new Delta();\\n                if (this.ops === other.ops) {\\n                    return delta;\\n                }\\n                var strings = [this.ops, other.ops].map(function (ops) {\\n                    return ops.map(function (op) {\\n                        if (op.insert != null) {\\n                            return is.string(op.insert) ? op.insert : NULL_CHARACTER;\\n                        }\\n                        var prep = (ops === other.ops) ? 'on' : 'with';\\n                        throw new Error('diff() called ' + prep + ' non-document');\\n                    }).join('');\\n                });\\n                var diffResult = diff(strings[0], strings[1]);\\n                var thisIter = op.iterator(this.ops);\\n                var otherIter = op.iterator(other.ops);\\n                diffResult.forEach(function (component) {\\n                    var length = component[1].length;\\n                    while (length > 0) {\\n                        var opLength = 0;\\n                        switch (component[0]) {\\n                            case diff.INSERT:\\n                                opLength = Math.min(otherIter.peekLength(), length);\\n                                delta.push(otherIter.next(opLength));\\n                                break;\\n                            case diff.DELETE:\\n                                opLength = Math.min(length, thisIter.peekLength());\\n                                thisIter.next(opLength);\\n                                delta['delete'](opLength);\\n                                break;\\n                            case diff.EQUAL:\\n                                opLength = Math.min(thisIter.peekLength(), otherIter.peekLength(), length);\\n                                var thisOp = thisIter.next(opLength);\\n                                var otherOp = otherIter.next(opLength);\\n                                if (is.equal(thisOp.insert, otherOp.insert)) {\\n                                    delta.retain(opLength, op.attributes.diff(thisOp.attributes, otherOp.attributes));\\n                                } else {\\n                                    delta.push(otherOp)['delete'](opLength);\\n                                }\\n                                break;\\n                        }\\n                        length -= opLength;\\n                    }\\n                });\\n                return delta.chop();\\n            };\\n\\n            Delta.prototype.transform = function (other, priority) {\\n                priority = !!priority;\\n                if (is.number(other)) {\\n                    return this.transformPosition(other, priority);\\n                }\\n                var thisIter = op.iterator(this.ops);\\n                var otherIter = op.iterator(other.ops);\\n                var delta = new Delta();\\n                while (thisIter.hasNext() || otherIter.hasNext()) {\\n                    if (thisIter.peekType() === 'insert' && (priority || otherIter.peekType() !== 'insert')) {\\n                        delta.retain(op.length(thisIter.next()));\\n                    } else if (otherIter.peekType() === 'insert') {\\n                        delta.push(otherIter.next());\\n                    } else {\\n                        var length = Math.min(thisIter.peekLength(), otherIter.peekLength());\\n                        var thisOp = thisIter.next(length);\\n                        var otherOp = otherIter.next(length);\\n                        if (thisOp['delete']) {\\n                            // Our delete either makes their delete redundant or removes their retain\\n                            continue;\\n                        } else if (otherOp['delete']) {\\n                            delta.push(otherOp);\\n                        } else {\\n                            // We retain either their retain or insert\\n                            delta.retain(length, op.attributes.transform(thisOp.attributes, otherOp.attributes, priority));\\n                        }\\n                    }\\n                }\\n                return delta.chop();\\n            };\\n\\n            Delta.prototype.transformPosition = function (index, priority) {\\n                priority = !!priority;\\n                var thisIter = op.iterator(this.ops);\\n                var offset = 0;\\n                while (thisIter.hasNext() && offset <= index) {\\n                    var length = thisIter.peekLength();\\n                    var nextType = thisIter.peekType();\\n                    thisIter.next();\\n                    if (nextType === 'delete') {\\n                        index -= Math.min(length, index - offset);\\n                        continue;\\n                    } else if (nextType === 'insert' && (offset < index || !priority)) {\\n                        index += length;\\n                    }\\n                    offset += length;\\n                }\\n                return index;\\n            };\\n\\n\\n            module.exports = Delta;\\n\\n        }, {\\\"./is\\\": 4, \\\"./op\\\": 5, \\\"fast-diff\\\": 6}],\\n        4: [function (_dereq_, module, exports) {\\n            module.exports = {\\n                equal: function (a, b) {\\n                    if (a === b) return true;\\n                    if (a == null && b == null) return true;\\n                    if (a == null || b == null) return false;\\n                    if (!this.object(a) || !this.object(b)) return false;\\n                    if (Object.keys(a).length != Object.keys(b).length) return false;\\n                    for (var key in a) {\\n                        // Only compare one level deep\\n                        if (a[key] !== b[key]) return false;\\n                    }\\n                    return true;\\n                },\\n\\n                array: function (value) {\\n                    return Array.isArray(value);\\n                },\\n\\n                number: function (value) {\\n                    if (typeof value === 'number') return true;\\n                    if (typeof value === 'object' && Object.prototype.toString.call(value) === '[object Number]') return true;\\n                    return false;\\n                },\\n\\n                object: function (value) {\\n                    if (!value) return false;\\n                    return (typeof value === 'function' || typeof value === 'object');\\n                },\\n\\n                string: function (value) {\\n                    if (typeof value === 'string') return true;\\n                    if (typeof value === 'object' && Object.prototype.toString.call(value) === '[object String]') return true;\\n                    return false;\\n                }\\n            };\\n\\n        }, {}],\\n        5: [function (_dereq_, module, exports) {\\n            var is = _dereq_('./is');\\n\\n\\n            var lib = {\\n                attributes: {\\n                    clone: function (attributes, keepNull) {\\n                        if (!is.object(attributes)) return {};\\n                        return Object.keys(attributes).reduce(function (memo, key) {\\n                            if (attributes[key] !== undefined && (attributes[key] !== null || keepNull)) {\\n                                memo[key] = attributes[key];\\n                            }\\n                            return memo;\\n                        }, {});\\n                    },\\n\\n                    compose: function (a, b, keepNull) {\\n                        if (!is.object(a)) a = {};\\n                        if (!is.object(b)) b = {};\\n                        var attributes = this.clone(b, keepNull);\\n                        for (var key in a) {\\n                            if (a[key] !== undefined && b[key] === undefined) {\\n                                attributes[key] = a[key];\\n                            }\\n                        }\\n                        return Object.keys(attributes).length > 0 ? attributes : undefined;\\n                    },\\n\\n                    diff: function (a, b) {\\n                        if (!is.object(a)) a = {};\\n                        if (!is.object(b)) b = {};\\n                        var attributes = Object.keys(a).concat(Object.keys(b)).reduce(function (attributes, key) {\\n                            if (a[key] !== b[key]) {\\n                                attributes[key] = b[key] === undefined ? null : b[key];\\n                            }\\n                            return attributes;\\n                        }, {});\\n                        return Object.keys(attributes).length > 0 ? attributes : undefined;\\n                    },\\n\\n                    transform: function (a, b, priority) {\\n                        if (!is.object(a)) return b;\\n                        if (!is.object(b)) return undefined;\\n                        if (!priority) return b;  // b simply overwrites us without priority\\n                        var attributes = Object.keys(b).reduce(function (attributes, key) {\\n                            if (a[key] === undefined) attributes[key] = b[key];  // null is a valid value\\n                            return attributes;\\n                        }, {});\\n                        return Object.keys(attributes).length > 0 ? attributes : undefined;\\n                    }\\n                },\\n\\n                clone: function (op) {\\n                    var newOp = this.attributes.clone(op);\\n                    if (is.object(newOp.attributes)) {\\n                        newOp.attributes = this.attributes.clone(newOp.attributes, true);\\n                    }\\n                    return newOp;\\n                },\\n\\n                iterator: function (ops) {\\n                    return new Iterator(ops);\\n                },\\n\\n                length: function (op) {\\n                    if (is.number(op['delete'])) {\\n                        return op['delete'];\\n                    } else if (is.number(op.retain)) {\\n                        return op.retain;\\n                    } else {\\n                        return is.string(op.insert) ? op.insert.length : 1;\\n                    }\\n                }\\n            };\\n\\n\\n            function Iterator(ops) {\\n                this.ops = ops;\\n                this.index = 0;\\n                this.offset = 0;\\n            };\\n\\n            Iterator.prototype.hasNext = function () {\\n                return this.peekLength() < Infinity;\\n            };\\n\\n            Iterator.prototype.next = function (length) {\\n                if (!length) length = Infinity;\\n                var nextOp = this.ops[this.index];\\n                if (nextOp) {\\n                    var offset = this.offset;\\n                    var opLength = lib.length(nextOp)\\n                    if (length >= opLength - offset) {\\n                        length = opLength - offset;\\n                        this.index += 1;\\n                        this.offset = 0;\\n                    } else {\\n                        this.offset += length;\\n                    }\\n                    if (is.number(nextOp['delete'])) {\\n                        return {'delete': length};\\n                    } else {\\n                        var retOp = {};\\n                        if (nextOp.attributes) {\\n                            retOp.attributes = nextOp.attributes;\\n                        }\\n                        if (is.number(nextOp.retain)) {\\n                            retOp.retain = length;\\n                        } else if (is.string(nextOp.insert)) {\\n                            retOp.insert = nextOp.insert.substr(offset, length);\\n                        } else {\\n                            // offset should === 0, length should === 1\\n                            retOp.insert = nextOp.insert;\\n                        }\\n                        return retOp;\\n                    }\\n                } else {\\n                    return {retain: Infinity};\\n                }\\n            };\\n\\n            Iterator.prototype.peekLength = function () {\\n                if (this.ops[this.index]) {\\n                    // Should never return 0 if our index is being managed correctly\\n                    return lib.length(this.ops[this.index]) - this.offset;\\n                } else {\\n                    return Infinity;\\n                }\\n            };\\n\\n            Iterator.prototype.peekType = function () {\\n                if (this.ops[this.index]) {\\n                    if (is.number(this.ops[this.index]['delete'])) {\\n                        return 'delete';\\n                    } else if (is.number(this.ops[this.index].retain)) {\\n                        return 'retain';\\n                    } else {\\n                        return 'insert';\\n                    }\\n                }\\n                return 'retain';\\n            };\\n\\n\\n            module.exports = lib;\\n\\n        }, {\\\"./is\\\": 4}],\\n        6: [function (_dereq_, module, exports) {\\n            /**\\n             * This library modifies the diff-patch-match library by Neil Fraser\\n             * by removing the patch and match functionality and certain advanced\\n             * options in the diff function. The original license is as follows:\\n             *\\n             * ===\\n             *\\n             * Diff Match and Patch\\n             *\\n             * Copyright 2006 Google Inc.\\n             * http://code.google.com/p/google-diff-match-patch/\\n             *\\n             * Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n             * you may not use this file except in compliance with the License.\\n             * You may obtain a copy of the License at\\n             *\\n             *   http://www.apache.org/licenses/LICENSE-2.0\\n             *\\n             * Unless required by applicable law or agreed to in writing, software\\n             * distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n             * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n             * See the License for the specific language governing permissions and\\n             * limitations under the License.\\n             */\\n\\n\\n            /**\\n             * The data structure representing a diff is an array of tuples:\\n             * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\\n             * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\\n             */\\n            var DIFF_DELETE = -1;\\n            var DIFF_INSERT = 1;\\n            var DIFF_EQUAL = 0;\\n\\n\\n            /**\\n             * Find the differences between two texts.  Simplifies the problem by stripping\\n             * any common prefix or suffix off the texts before diffing.\\n             * @param {string} text1 Old string to be diffed.\\n             * @param {string} text2 New string to be diffed.\\n             * @return {Array} Array of diff tuples.\\n             */\\n            function diff_main(text1, text2) {\\n                // Check for equality (speedup).\\n                if (text1 == text2) {\\n                    if (text1) {\\n                        return [[DIFF_EQUAL, text1]];\\n                    }\\n                    return [];\\n                }\\n\\n                // Trim off common prefix (speedup).\\n                var commonlength = diff_commonPrefix(text1, text2);\\n                var commonprefix = text1.substring(0, commonlength);\\n                text1 = text1.substring(commonlength);\\n                text2 = text2.substring(commonlength);\\n\\n                // Trim off common suffix (speedup).\\n                commonlength = diff_commonSuffix(text1, text2);\\n                var commonsuffix = text1.substring(text1.length - commonlength);\\n                text1 = text1.substring(0, text1.length - commonlength);\\n                text2 = text2.substring(0, text2.length - commonlength);\\n\\n                // Compute the diff on the middle block.\\n                var diffs = diff_compute_(text1, text2);\\n\\n                // Restore the prefix and suffix.\\n                if (commonprefix) {\\n                    diffs.unshift([DIFF_EQUAL, commonprefix]);\\n                }\\n                if (commonsuffix) {\\n                    diffs.push([DIFF_EQUAL, commonsuffix]);\\n                }\\n                diff_cleanupMerge(diffs);\\n                return diffs;\\n            };\\n\\n\\n            /**\\n             * Find the differences between two texts.  Assumes that the texts do not\\n             * have any common prefix or suffix.\\n             * @param {string} text1 Old string to be diffed.\\n             * @param {string} text2 New string to be diffed.\\n             * @return {Array} Array of diff tuples.\\n             */\\n            function diff_compute_(text1, text2) {\\n                var diffs;\\n\\n                if (!text1) {\\n                    // Just add some text (speedup).\\n                    return [[DIFF_INSERT, text2]];\\n                }\\n\\n                if (!text2) {\\n                    // Just delete some text (speedup).\\n                    return [[DIFF_DELETE, text1]];\\n                }\\n\\n                var longtext = text1.length > text2.length ? text1 : text2;\\n                var shorttext = text1.length > text2.length ? text2 : text1;\\n                var i = longtext.indexOf(shorttext);\\n                if (i != -1) {\\n                    // Shorter text is inside the longer text (speedup).\\n                    diffs = [[DIFF_INSERT, longtext.substring(0, i)],\\n                        [DIFF_EQUAL, shorttext],\\n                        [DIFF_INSERT, longtext.substring(i + shorttext.length)]];\\n                    // Swap insertions for deletions if diff is reversed.\\n                    if (text1.length > text2.length) {\\n                        diffs[0][0] = diffs[2][0] = DIFF_DELETE;\\n                    }\\n                    return diffs;\\n                }\\n\\n                if (shorttext.length == 1) {\\n                    // Single character string.\\n                    // After the previous speedup, the character can't be an equality.\\n                    return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\\n                }\\n\\n                // Check to see if the problem can be split in two.\\n                var hm = diff_halfMatch_(text1, text2);\\n                if (hm) {\\n                    // A half-match was found, sort out the return data.\\n                    var text1_a = hm[0];\\n                    var text1_b = hm[1];\\n                    var text2_a = hm[2];\\n                    var text2_b = hm[3];\\n                    var mid_common = hm[4];\\n                    // Send both pairs off for separate processing.\\n                    var diffs_a = diff_main(text1_a, text2_a);\\n                    var diffs_b = diff_main(text1_b, text2_b);\\n                    // Merge the results.\\n                    return diffs_a.concat([[DIFF_EQUAL, mid_common]], diffs_b);\\n                }\\n\\n                return diff_bisect_(text1, text2);\\n            };\\n\\n\\n            /**\\n             * Find the 'middle snake' of a diff, split the problem in two\\n             * and return the recursively constructed diff.\\n             * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\\n             * @param {string} text1 Old string to be diffed.\\n             * @param {string} text2 New string to be diffed.\\n             * @return {Array} Array of diff tuples.\\n             * @private\\n             */\\n            function diff_bisect_(text1, text2) {\\n                // Cache the text lengths to prevent multiple calls.\\n                var text1_length = text1.length;\\n                var text2_length = text2.length;\\n                var max_d = Math.ceil((text1_length + text2_length) / 2);\\n                var v_offset = max_d;\\n                var v_length = 2 * max_d;\\n                var v1 = new Array(v_length);\\n                var v2 = new Array(v_length);\\n                // Setting all elements to -1 is faster in Chrome & Firefox than mixing\\n                // integers and undefined.\\n                for (var x = 0; x < v_length; x++) {\\n                    v1[x] = -1;\\n                    v2[x] = -1;\\n                }\\n                v1[v_offset + 1] = 0;\\n                v2[v_offset + 1] = 0;\\n                var delta = text1_length - text2_length;\\n                // If the total number of characters is odd, then the front path will collide\\n                // with the reverse path.\\n                var front = (delta % 2 != 0);\\n                // Offsets for start and end of k loop.\\n                // Prevents mapping of space beyond the grid.\\n                var k1start = 0;\\n                var k1end = 0;\\n                var k2start = 0;\\n                var k2end = 0;\\n                for (var d = 0; d < max_d; d++) {\\n                    // Walk the front path one step.\\n                    for (var k1 = -d + k1start; k1 <= d - k1end; k1 += 2) {\\n                        var k1_offset = v_offset + k1;\\n                        var x1;\\n                        if (k1 == -d || (k1 != d && v1[k1_offset - 1] < v1[k1_offset + 1])) {\\n                            x1 = v1[k1_offset + 1];\\n                        } else {\\n                            x1 = v1[k1_offset - 1] + 1;\\n                        }\\n                        var y1 = x1 - k1;\\n                        while (x1 < text1_length && y1 < text2_length &&\\n                        text1.charAt(x1) == text2.charAt(y1)) {\\n                            x1++;\\n                            y1++;\\n                        }\\n                        v1[k1_offset] = x1;\\n                        if (x1 > text1_length) {\\n                            // Ran off the right of the graph.\\n                            k1end += 2;\\n                        } else if (y1 > text2_length) {\\n                            // Ran off the bottom of the graph.\\n                            k1start += 2;\\n                        } else if (front) {\\n                            var k2_offset = v_offset + delta - k1;\\n                            if (k2_offset >= 0 && k2_offset < v_length && v2[k2_offset] != -1) {\\n                                // Mirror x2 onto top-left coordinate system.\\n                                var x2 = text1_length - v2[k2_offset];\\n                                if (x1 >= x2) {\\n                                    // Overlap detected.\\n                                    return diff_bisectSplit_(text1, text2, x1, y1);\\n                                }\\n                            }\\n                        }\\n                    }\\n\\n                    // Walk the reverse path one step.\\n                    for (var k2 = -d + k2start; k2 <= d - k2end; k2 += 2) {\\n                        var k2_offset = v_offset + k2;\\n                        var x2;\\n                        if (k2 == -d || (k2 != d && v2[k2_offset - 1] < v2[k2_offset + 1])) {\\n                            x2 = v2[k2_offset + 1];\\n                        } else {\\n                            x2 = v2[k2_offset - 1] + 1;\\n                        }\\n                        var y2 = x2 - k2;\\n                        while (x2 < text1_length && y2 < text2_length &&\\n                        text1.charAt(text1_length - x2 - 1) ==\\n                        text2.charAt(text2_length - y2 - 1)) {\\n                            x2++;\\n                            y2++;\\n                        }\\n                        v2[k2_offset] = x2;\\n                        if (x2 > text1_length) {\\n                            // Ran off the left of the graph.\\n                            k2end += 2;\\n                        } else if (y2 > text2_length) {\\n                            // Ran off the top of the graph.\\n                            k2start += 2;\\n                        } else if (!front) {\\n                            var k1_offset = v_offset + delta - k2;\\n                            if (k1_offset >= 0 && k1_offset < v_length && v1[k1_offset] != -1) {\\n                                var x1 = v1[k1_offset];\\n                                var y1 = v_offset + x1 - k1_offset;\\n                                // Mirror x2 onto top-left coordinate system.\\n                                x2 = text1_length - x2;\\n                                if (x1 >= x2) {\\n                                    // Overlap detected.\\n                                    return diff_bisectSplit_(text1, text2, x1, y1);\\n                                }\\n                            }\\n                        }\\n                    }\\n                }\\n                // Diff took too long and hit the deadline or\\n                // number of diffs equals number of characters, no commonality at all.\\n                return [[DIFF_DELETE, text1], [DIFF_INSERT, text2]];\\n            };\\n\\n\\n            /**\\n             * Given the location of the 'middle snake', split the diff in two parts\\n             * and recurse.\\n             * @param {string} text1 Old string to be diffed.\\n             * @param {string} text2 New string to be diffed.\\n             * @param {number} x Index of split point in text1.\\n             * @param {number} y Index of split point in text2.\\n             * @return {Array} Array of diff tuples.\\n             */\\n            function diff_bisectSplit_(text1, text2, x, y) {\\n                var text1a = text1.substring(0, x);\\n                var text2a = text2.substring(0, y);\\n                var text1b = text1.substring(x);\\n                var text2b = text2.substring(y);\\n\\n                // Compute both diffs serially.\\n                var diffs = diff_main(text1a, text2a);\\n                var diffsb = diff_main(text1b, text2b);\\n\\n                return diffs.concat(diffsb);\\n            };\\n\\n\\n            /**\\n             * Determine the common prefix of two strings.\\n             * @param {string} text1 First string.\\n             * @param {string} text2 Second string.\\n             * @return {number} The number of characters common to the start of each\\n             *     string.\\n             */\\n            function diff_commonPrefix(text1, text2) {\\n                // Quick check for common null cases.\\n                if (!text1 || !text2 || text1.charAt(0) != text2.charAt(0)) {\\n                    return 0;\\n                }\\n                // Binary search.\\n                // Performance analysis: http://neil.fraser.name/news/2007/10/09/\\n                var pointermin = 0;\\n                var pointermax = Math.min(text1.length, text2.length);\\n                var pointermid = pointermax;\\n                var pointerstart = 0;\\n                while (pointermin < pointermid) {\\n                    if (text1.substring(pointerstart, pointermid) ==\\n                        text2.substring(pointerstart, pointermid)) {\\n                        pointermin = pointermid;\\n                        pointerstart = pointermin;\\n                    } else {\\n                        pointermax = pointermid;\\n                    }\\n                    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\\n                }\\n                return pointermid;\\n            };\\n\\n\\n            /**\\n             * Determine the common suffix of two strings.\\n             * @param {string} text1 First string.\\n             * @param {string} text2 Second string.\\n             * @return {number} The number of characters common to the end of each string.\\n             */\\n            function diff_commonSuffix(text1, text2) {\\n                // Quick check for common null cases.\\n                if (!text1 || !text2 ||\\n                    text1.charAt(text1.length - 1) != text2.charAt(text2.length - 1)) {\\n                    return 0;\\n                }\\n                // Binary search.\\n                // Performance analysis: http://neil.fraser.name/news/2007/10/09/\\n                var pointermin = 0;\\n                var pointermax = Math.min(text1.length, text2.length);\\n                var pointermid = pointermax;\\n                var pointerend = 0;\\n                while (pointermin < pointermid) {\\n                    if (text1.substring(text1.length - pointermid, text1.length - pointerend) ==\\n                        text2.substring(text2.length - pointermid, text2.length - pointerend)) {\\n                        pointermin = pointermid;\\n                        pointerend = pointermin;\\n                    } else {\\n                        pointermax = pointermid;\\n                    }\\n                    pointermid = Math.floor((pointermax - pointermin) / 2 + pointermin);\\n                }\\n                return pointermid;\\n            };\\n\\n\\n            /**\\n             * Do the two texts share a substring which is at least half the length of the\\n             * longer text?\\n             * This speedup can produce non-minimal diffs.\\n             * @param {string} text1 First string.\\n             * @param {string} text2 Second string.\\n             * @return {Array.<string>} Five element Array, containing the prefix of\\n             *     text1, the suffix of text1, the prefix of text2, the suffix of\\n             *     text2 and the common middle.  Or null if there was no match.\\n             */\\n            function diff_halfMatch_(text1, text2) {\\n                var longtext = text1.length > text2.length ? text1 : text2;\\n                var shorttext = text1.length > text2.length ? text2 : text1;\\n                if (longtext.length < 4 || shorttext.length * 2 < longtext.length) {\\n                    return null;  // Pointless.\\n                }\\n\\n                /**\\n                 * Does a substring of shorttext exist within longtext such that the substring\\n                 * is at least half the length of longtext?\\n                 * Closure, but does not reference any external variables.\\n                 * @param {string} longtext Longer string.\\n                 * @param {string} shorttext Shorter string.\\n                 * @param {number} i Start index of quarter length substring within longtext.\\n                 * @return {Array.<string>} Five element Array, containing the prefix of\\n                 *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\\n                 *     of shorttext and the common middle.  Or null if there was no match.\\n                 * @private\\n                 */\\n                function diff_halfMatchI_(longtext, shorttext, i) {\\n                    // Start with a 1/4 length substring at position i as a seed.\\n                    var seed = longtext.substring(i, i + Math.floor(longtext.length / 4));\\n                    var j = -1;\\n                    var best_common = '';\\n                    var best_longtext_a, best_longtext_b, best_shorttext_a, best_shorttext_b;\\n                    while ((j = shorttext.indexOf(seed, j + 1)) != -1) {\\n                        var prefixLength = diff_commonPrefix(longtext.substring(i),\\n                            shorttext.substring(j));\\n                        var suffixLength = diff_commonSuffix(longtext.substring(0, i),\\n                            shorttext.substring(0, j));\\n                        if (best_common.length < suffixLength + prefixLength) {\\n                            best_common = shorttext.substring(j - suffixLength, j) +\\n                                shorttext.substring(j, j + prefixLength);\\n                            best_longtext_a = longtext.substring(0, i - suffixLength);\\n                            best_longtext_b = longtext.substring(i + prefixLength);\\n                            best_shorttext_a = shorttext.substring(0, j - suffixLength);\\n                            best_shorttext_b = shorttext.substring(j + prefixLength);\\n                        }\\n                    }\\n                    if (best_common.length * 2 >= longtext.length) {\\n                        return [best_longtext_a, best_longtext_b,\\n                            best_shorttext_a, best_shorttext_b, best_common];\\n                    } else {\\n                        return null;\\n                    }\\n                }\\n\\n                // First check if the second quarter is the seed for a half-match.\\n                var hm1 = diff_halfMatchI_(longtext, shorttext,\\n                    Math.ceil(longtext.length / 4));\\n                // Check again based on the third quarter.\\n                var hm2 = diff_halfMatchI_(longtext, shorttext,\\n                    Math.ceil(longtext.length / 2));\\n                var hm;\\n                if (!hm1 && !hm2) {\\n                    return null;\\n                } else if (!hm2) {\\n                    hm = hm1;\\n                } else if (!hm1) {\\n                    hm = hm2;\\n                } else {\\n                    // Both matched.  Select the longest.\\n                    hm = hm1[4].length > hm2[4].length ? hm1 : hm2;\\n                }\\n\\n                // A half-match was found, sort out the return data.\\n                var text1_a, text1_b, text2_a, text2_b;\\n                if (text1.length > text2.length) {\\n                    text1_a = hm[0];\\n                    text1_b = hm[1];\\n                    text2_a = hm[2];\\n                    text2_b = hm[3];\\n                } else {\\n                    text2_a = hm[0];\\n                    text2_b = hm[1];\\n                    text1_a = hm[2];\\n                    text1_b = hm[3];\\n                }\\n                var mid_common = hm[4];\\n                return [text1_a, text1_b, text2_a, text2_b, mid_common];\\n            };\\n\\n\\n            /**\\n             * Reorder and merge like edit sections.  Merge equalities.\\n             * Any edit section can move as long as it doesn't cross an equality.\\n             * @param {Array} diffs Array of diff tuples.\\n             */\\n            function diff_cleanupMerge(diffs) {\\n                diffs.push([DIFF_EQUAL, '']);  // Add a dummy entry at the end.\\n                var pointer = 0;\\n                var count_delete = 0;\\n                var count_insert = 0;\\n                var text_delete = '';\\n                var text_insert = '';\\n                var commonlength;\\n                while (pointer < diffs.length) {\\n                    switch (diffs[pointer][0]) {\\n                        case DIFF_INSERT:\\n                            count_insert++;\\n                            text_insert += diffs[pointer][1];\\n                            pointer++;\\n                            break;\\n                        case DIFF_DELETE:\\n                            count_delete++;\\n                            text_delete += diffs[pointer][1];\\n                            pointer++;\\n                            break;\\n                        case DIFF_EQUAL:\\n                            // Upon reaching an equality, check for prior redundancies.\\n                            if (count_delete + count_insert > 1) {\\n                                if (count_delete !== 0 && count_insert !== 0) {\\n                                    // Factor out any common prefixies.\\n                                    commonlength = diff_commonPrefix(text_insert, text_delete);\\n                                    if (commonlength !== 0) {\\n                                        if ((pointer - count_delete - count_insert) > 0 &&\\n                                            diffs[pointer - count_delete - count_insert - 1][0] ==\\n                                            DIFF_EQUAL) {\\n                                            diffs[pointer - count_delete - count_insert - 1][1] +=\\n                                                text_insert.substring(0, commonlength);\\n                                        } else {\\n                                            diffs.splice(0, 0, [DIFF_EQUAL,\\n                                                text_insert.substring(0, commonlength)]);\\n                                            pointer++;\\n                                        }\\n                                        text_insert = text_insert.substring(commonlength);\\n                                        text_delete = text_delete.substring(commonlength);\\n                                    }\\n                                    // Factor out any common suffixies.\\n                                    commonlength = diff_commonSuffix(text_insert, text_delete);\\n                                    if (commonlength !== 0) {\\n                                        diffs[pointer][1] = text_insert.substring(text_insert.length -\\n                                                commonlength) + diffs[pointer][1];\\n                                        text_insert = text_insert.substring(0, text_insert.length -\\n                                            commonlength);\\n                                        text_delete = text_delete.substring(0, text_delete.length -\\n                                            commonlength);\\n                                    }\\n                                }\\n                                // Delete the offending records and add the merged ones.\\n                                if (count_delete === 0) {\\n                                    diffs.splice(pointer - count_insert,\\n                                        count_delete + count_insert, [DIFF_INSERT, text_insert]);\\n                                } else if (count_insert === 0) {\\n                                    diffs.splice(pointer - count_delete,\\n                                        count_delete + count_insert, [DIFF_DELETE, text_delete]);\\n                                } else {\\n                                    diffs.splice(pointer - count_delete - count_insert,\\n                                        count_delete + count_insert, [DIFF_DELETE, text_delete],\\n                                        [DIFF_INSERT, text_insert]);\\n                                }\\n                                pointer = pointer - count_delete - count_insert +\\n                                    (count_delete ? 1 : 0) + (count_insert ? 1 : 0) + 1;\\n                            } else if (pointer !== 0 && diffs[pointer - 1][0] == DIFF_EQUAL) {\\n                                // Merge this equality with the previous one.\\n                                diffs[pointer - 1][1] += diffs[pointer][1];\\n                                diffs.splice(pointer, 1);\\n                            } else {\\n                                pointer++;\\n                            }\\n                            count_insert = 0;\\n                            count_delete = 0;\\n                            text_delete = '';\\n                            text_insert = '';\\n                            break;\\n                    }\\n                }\\n                if (diffs[diffs.length - 1][1] === '') {\\n                    diffs.pop();  // Remove the dummy entry at the end.\\n                }\\n\\n                // Second pass: look for single edits surrounded on both sides by equalities\\n                // which can be shifted sideways to eliminate an equality.\\n                // e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\\n                var changes = false;\\n                pointer = 1;\\n                // Intentionally ignore the first and last element (don't need checking).\\n                while (pointer < diffs.length - 1) {\\n                    if (diffs[pointer - 1][0] == DIFF_EQUAL &&\\n                        diffs[pointer + 1][0] == DIFF_EQUAL) {\\n                        // This is a single edit surrounded by equalities.\\n                        if (diffs[pointer][1].substring(diffs[pointer][1].length -\\n                                diffs[pointer - 1][1].length) == diffs[pointer - 1][1]) {\\n                            // Shift the edit over the previous equality.\\n                            diffs[pointer][1] = diffs[pointer - 1][1] +\\n                                diffs[pointer][1].substring(0, diffs[pointer][1].length -\\n                                    diffs[pointer - 1][1].length);\\n                            diffs[pointer + 1][1] = diffs[pointer - 1][1] + diffs[pointer + 1][1];\\n                            diffs.splice(pointer - 1, 1);\\n                            changes = true;\\n                        } else if (diffs[pointer][1].substring(0, diffs[pointer + 1][1].length) ==\\n                            diffs[pointer + 1][1]) {\\n                            // Shift the edit over the next equality.\\n                            diffs[pointer - 1][1] += diffs[pointer + 1][1];\\n                            diffs[pointer][1] =\\n                                diffs[pointer][1].substring(diffs[pointer + 1][1].length) +\\n                                diffs[pointer + 1][1];\\n                            diffs.splice(pointer + 1, 1);\\n                            changes = true;\\n                        }\\n                    }\\n                    pointer++;\\n                }\\n                // If shifts were made, the diff needs reordering and another shift sweep.\\n                if (changes) {\\n                    diff_cleanupMerge(diffs);\\n                }\\n            };\\n\\n\\n            var diff = diff_main;\\n            diff.INSERT = DIFF_INSERT;\\n            diff.DELETE = DIFF_DELETE;\\n            diff.EQUAL = DIFF_EQUAL;\\n\\n\\n            module.exports = diff;\\n\\n        }, {}],\\n        7: [function (_dereq_, module, exports) {\\n            module.exports = {\\\"version\\\": \\\"0.20.1\\\"}\\n        }, {}],\\n        8: [function (_dereq_, module, exports) {\\n            var Delta, Document, Format, Line, LinkedList, Normalizer, _, dom;\\n\\n            _ = _dereq_('lodash');\\n\\n            Delta = _dereq_('rich-text/lib/delta');\\n\\n            dom = _dereq_('../lib/dom');\\n\\n            Format = _dereq_('./format');\\n\\n            Line = _dereq_('./line');\\n\\n            LinkedList = _dereq_('../lib/linked-list');\\n\\n            Normalizer = _dereq_('./normalizer');\\n\\n            Document = (function () {\\n                function Document(root, options) {\\n                    this.root = root;\\n                    if (options == null) {\\n                        options = {};\\n                    }\\n                    this.normalizer = new Normalizer();\\n                    this.formats = {};\\n                    _.each(options.formats, _.bind(this.addFormat, this));\\n                    this.setHTML(this.root.innerHTML);\\n                }\\n\\n                Document.prototype.addFormat = function (name, config) {\\n                    if (!_.isObject(config)) {\\n                        config = Format.FORMATS[name];\\n                    }\\n                    if (this.formats[name] != null) {\\n                        console.warn('Overwriting format', name, this.formats[name]);\\n                    }\\n                    this.formats[name] = new Format(config);\\n                    return this.normalizer.addFormat(config);\\n                };\\n\\n                Document.prototype.appendLine = function (lineNode) {\\n                    return this.insertLineBefore(lineNode, null);\\n                };\\n\\n                Document.prototype.findLeafAt = function (index, inclusive) {\\n                    var line, offset, ref;\\n                    ref = this.findLineAt(index), line = ref[0], offset = ref[1];\\n                    if (line != null) {\\n                        return line.findLeafAt(offset, inclusive);\\n                    } else {\\n                        return [void 0, offset];\\n                    }\\n                };\\n\\n                Document.prototype.findLine = function (node) {\\n                    var line;\\n                    while ((node != null) && (dom.BLOCK_TAGS[node.tagName] == null)) {\\n                        node = node.parentNode;\\n                    }\\n                    line = node != null ? dom(node).data(Line.DATA_KEY) : void 0;\\n                    if ((line != null ? line.node : void 0) === node) {\\n                        return line;\\n                    } else {\\n                        return void 0;\\n                    }\\n                };\\n\\n                Document.prototype.findLineAt = function (index) {\\n                    var curLine, length;\\n                    if (!(this.lines.length > 0)) {\\n                        return [void 0, index];\\n                    }\\n                    length = this.toDelta().length();\\n                    if (index === length) {\\n                        return [this.lines.last, this.lines.last.length];\\n                    }\\n                    if (index > length) {\\n                        return [void 0, index - length];\\n                    }\\n                    curLine = this.lines.first;\\n                    while (curLine != null) {\\n                        if (index < curLine.length) {\\n                            return [curLine, index];\\n                        }\\n                        index -= curLine.length;\\n                        curLine = curLine.next;\\n                    }\\n                    return [void 0, index];\\n                };\\n\\n                Document.prototype.getHTML = function () {\\n                    return this.root.innerHTML.replace(/\\\\>\\\\s+\\\\</g, '>&nbsp;<');\\n                };\\n\\n                Document.prototype.insertLineBefore = function (newLineNode, refLine) {\\n                    var line;\\n                    line = new Line(this, newLineNode);\\n                    if (refLine != null) {\\n                        if (!dom(newLineNode.parentNode).isElement()) {\\n                            this.root.insertBefore(newLineNode, refLine.node);\\n                        }\\n                        this.lines.insertAfter(refLine.prev, line);\\n                    } else {\\n                        if (!dom(newLineNode.parentNode).isElement()) {\\n                            this.root.appendChild(newLineNode);\\n                        }\\n                        this.lines.append(line);\\n                    }\\n                    return line;\\n                };\\n\\n                Document.prototype.mergeLines = function (line, lineToMerge) {\\n                    if (lineToMerge.length > 1) {\\n                        if (line.length === 1) {\\n                            dom(line.leaves.last.node).remove();\\n                        }\\n                        _.each(dom(lineToMerge.node).childNodes(), function (child) {\\n                            if (child.tagName !== dom.DEFAULT_BREAK_TAG) {\\n                                return line.node.appendChild(child);\\n                            }\\n                        });\\n                    }\\n                    this.removeLine(lineToMerge);\\n                    return line.rebuild();\\n                };\\n\\n                Document.prototype.optimizeLines = function () {\\n                    return _.each(this.lines.toArray(), function (line, i) {\\n                        line.optimize();\\n                        return true;\\n                    });\\n                };\\n\\n                Document.prototype.rebuild = function () {\\n                    var lineNode, lines, results;\\n                    lines = this.lines.toArray();\\n                    lineNode = this.root.firstChild;\\n                    if ((lineNode != null) && (dom.LIST_TAGS[lineNode.tagName] != null)) {\\n                        lineNode = lineNode.firstChild;\\n                    }\\n                    _.each(lines, (function (_this) {\\n                        return function (line, index) {\\n                            var newLine, ref;\\n                            while (line.node !== lineNode) {\\n                                if (line.node.parentNode === _this.root || ((ref = line.node.parentNode) != null ? ref.parentNode : void 0) === _this.root) {\\n                                    lineNode = _this.normalizer.normalizeLine(lineNode);\\n                                    newLine = _this.insertLineBefore(lineNode, line);\\n                                    lineNode = dom(lineNode).nextLineNode(_this.root);\\n                                } else {\\n                                    return _this.removeLine(line);\\n                                }\\n                            }\\n                            if (line.outerHTML !== lineNode.outerHTML) {\\n                                line.node = _this.normalizer.normalizeLine(line.node);\\n                                line.rebuild();\\n                            }\\n                            return lineNode = dom(lineNode).nextLineNode(_this.root);\\n                        };\\n                    })(this));\\n                    results = [];\\n                    while (lineNode != null) {\\n                        lineNode = this.normalizer.normalizeLine(lineNode);\\n                        this.appendLine(lineNode);\\n                        results.push(lineNode = dom(lineNode).nextLineNode(this.root));\\n                    }\\n                    return results;\\n                };\\n\\n                Document.prototype.removeLine = function (line) {\\n                    if (line.node.parentNode != null) {\\n                        if (dom.LIST_TAGS[line.node.parentNode.tagName] && line.node.parentNode.childNodes.length === 1) {\\n                            dom(line.node.parentNode).remove();\\n                        } else {\\n                            dom(line.node).remove();\\n                        }\\n                    }\\n                    return this.lines.remove(line);\\n                };\\n\\n                Document.prototype.setHTML = function (html) {\\n                    html = Normalizer.stripComments(html);\\n                    html = Normalizer.stripWhitespace(html);\\n                    this.root.innerHTML = html;\\n                    this.lines = new LinkedList();\\n                    return this.rebuild();\\n                };\\n\\n                Document.prototype.splitLine = function (line, offset) {\\n                    var lineNode1, lineNode2, newLine, ref;\\n                    offset = Math.min(offset, line.length - 1);\\n                    ref = dom(line.node).split(offset, true), lineNode1 = ref[0], lineNode2 = ref[1];\\n                    line.node = lineNode1;\\n                    line.rebuild();\\n                    newLine = this.insertLineBefore(lineNode2, line.next);\\n                    newLine.formats = _.clone(line.formats);\\n                    newLine.resetContent();\\n                    return newLine;\\n                };\\n\\n                Document.prototype.toDelta = function () {\\n                    var delta, lines;\\n                    lines = this.lines.toArray();\\n                    delta = new Delta();\\n                    _.each(lines, function (line) {\\n                        return _.each(line.delta.ops, function (op) {\\n                            return delta.push(op);\\n                        });\\n                    });\\n                    return delta;\\n                };\\n\\n                return Document;\\n\\n            })();\\n\\n            module.exports = Document;\\n\\n\\n        }, {\\n            \\\"../lib/dom\\\": 17,\\n            \\\"../lib/linked-list\\\": 18,\\n            \\\"./format\\\": 10,\\n            \\\"./line\\\": 12,\\n            \\\"./normalizer\\\": 13,\\n            \\\"lodash\\\": 1,\\n            \\\"rich-text/lib/delta\\\": 3\\n        }],\\n        9: [function (_dereq_, module, exports) {\\n            var Delta, Document, Editor, Line, Selection, _, dom;\\n\\n            _ = _dereq_('lodash');\\n\\n            Delta = _dereq_('rich-text/lib/delta');\\n\\n            dom = _dereq_('../lib/dom');\\n\\n            Document = _dereq_('./document');\\n\\n            Line = _dereq_('./line');\\n\\n            Selection = _dereq_('./selection');\\n\\n            Editor = (function () {\\n                Editor.sources = {\\n                    API: 'api',\\n                    SILENT: 'silent',\\n                    USER: 'user'\\n                };\\n\\n                function Editor(root, quill, options) {\\n                    this.root = root;\\n                    this.quill = quill;\\n                    this.options = options != null ? options : {};\\n                    this.root.setAttribute('id', this.options.id);\\n                    this.doc = new Document(this.root, this.options);\\n                    this.delta = this.doc.toDelta();\\n                    this.length = this.delta.length();\\n                    this.selection = new Selection(this.doc, this.quill);\\n                    this.timer = setInterval(_.bind(this.checkUpdate, this), this.options.pollInterval);\\n                    this.savedRange = null;\\n                    this.quill.on(\\\"selection-change\\\", (function (_this) {\\n                        return function (range) {\\n                            return _this.savedRange = range;\\n                        };\\n                    })(this));\\n                    if (!this.options.readOnly) {\\n                        this.enable();\\n                    }\\n                }\\n\\n                Editor.prototype.destroy = function () {\\n                    return clearInterval(this.timer);\\n                };\\n\\n                Editor.prototype.disable = function () {\\n                    return this.enable(false);\\n                };\\n\\n                Editor.prototype.enable = function (enabled) {\\n                    if (enabled == null) {\\n                        enabled = true;\\n                    }\\n                    return this.root.setAttribute('contenteditable', enabled);\\n                };\\n\\n                Editor.prototype.applyDelta = function (delta, source) {\\n                    var localDelta;\\n                    localDelta = this._update();\\n                    if (localDelta) {\\n                        delta = localDelta.transform(delta, true);\\n                        localDelta = delta.transform(localDelta, false);\\n                    }\\n                    if (delta.ops.length > 0) {\\n                        delta = this._trackDelta((function (_this) {\\n                            return function () {\\n                                var index;\\n                                index = 0;\\n                                _.each(delta.ops, function (op) {\\n                                    if (_.isString(op.insert)) {\\n                                        _this._insertAt(index, op.insert, op.attributes);\\n                                        return index += op.insert.length;\\n                                    } else if (_.isNumber(op.insert)) {\\n                                        _this._insertEmbed(index, op.attributes);\\n                                        return index += 1;\\n                                    } else if (_.isNumber(op[\\\"delete\\\"])) {\\n                                        return _this._deleteAt(index, op[\\\"delete\\\"]);\\n                                    } else if (_.isNumber(op.retain)) {\\n                                        _.each(op.attributes, function (value, name) {\\n                                            return _this._formatAt(index, op.retain, name, value);\\n                                        });\\n                                        return index += op.retain;\\n                                    }\\n                                });\\n                                return _this.selection.shiftAfter(0, 0, _.bind(_this.doc.optimizeLines, _this.doc));\\n                            };\\n                        })(this));\\n                        this.delta = this.doc.toDelta();\\n                        this.length = this.delta.length();\\n                        this.innerHTML = this.root.innerHTML;\\n                        if (delta && source !== Editor.sources.SILENT) {\\n                            this.quill.emit(this.quill.constructor.events.TEXT_CHANGE, delta, source);\\n                        }\\n                    }\\n                    if (localDelta && localDelta.ops.length > 0 && source !== Editor.sources.SILENT) {\\n                        return this.quill.emit(this.quill.constructor.events.TEXT_CHANGE, localDelta, Editor.sources.USER);\\n                    }\\n                };\\n\\n                Editor.prototype.checkUpdate = function (source) {\\n                    var delta;\\n                    if (source == null) {\\n                        source = 'user';\\n                    }\\n                    if (this.root.parentNode == null) {\\n                        return clearInterval(this.timer);\\n                    }\\n                    delta = this._update();\\n                    if (delta) {\\n                        this.delta = this.delta.compose(delta);\\n                        this.length = this.delta.length();\\n                        this.quill.emit(this.quill.constructor.events.TEXT_CHANGE, delta, source);\\n                    }\\n                    if (delta) {\\n                        source = Editor.sources.SILENT;\\n                    }\\n                    return this.selection.update(source);\\n                };\\n\\n                Editor.prototype.focus = function () {\\n                    if (this.selection.range != null) {\\n                        return this.selection.setRange(this.selection.range);\\n                    } else {\\n                        return this.root.focus();\\n                    }\\n                };\\n\\n                Editor.prototype.getBounds = function (index) {\\n                    var bounds, containerBounds, leaf, offset, range, ref, side;\\n                    this.checkUpdate();\\n                    ref = this.doc.findLeafAt(index, true), leaf = ref[0], offset = ref[1];\\n                    if (leaf == null) {\\n                        return null;\\n                    }\\n                    containerBounds = this.root.parentNode.getBoundingClientRect();\\n                    side = 'left';\\n                    if (leaf.length === 0) {\\n                        bounds = leaf.node.parentNode.getBoundingClientRect();\\n                    } else if (dom.VOID_TAGS[leaf.node.tagName]) {\\n                        bounds = leaf.node.getBoundingClientRect();\\n                        if (offset === 1) {\\n                            side = 'right';\\n                        }\\n                    } else {\\n                        range = document.createRange();\\n                        if (offset < leaf.length) {\\n                            range.setStart(leaf.node, offset);\\n                            range.setEnd(leaf.node, offset + 1);\\n                        } else {\\n                            range.setStart(leaf.node, offset - 1);\\n                            range.setEnd(leaf.node, offset);\\n                            side = 'right';\\n                        }\\n                        bounds = range.getBoundingClientRect();\\n                    }\\n                    return {\\n                        height: bounds.height,\\n                        left: bounds[side] - containerBounds.left,\\n                        top: bounds.top - containerBounds.top\\n                    };\\n                };\\n\\n                Editor.prototype._deleteAt = function (index, length) {\\n                    if (length <= 0) {\\n                        return;\\n                    }\\n                    return this.selection.shiftAfter(index, -1 * length, (function (_this) {\\n                        return function () {\\n                            var curLine, deleteLength, firstLine, mergeFirstLine, nextLine, offset, ref;\\n                            ref = _this.doc.findLineAt(index), firstLine = ref[0], offset = ref[1];\\n                            curLine = firstLine;\\n                            mergeFirstLine = firstLine.length - offset <= length && offset > 0;\\n                            while ((curLine != null) && length > 0) {\\n                                nextLine = curLine.next;\\n                                deleteLength = Math.min(curLine.length - offset, length);\\n                                if (offset === 0 && length >= curLine.length) {\\n                                    _this.doc.removeLine(curLine);\\n                                } else {\\n                                    curLine.deleteText(offset, deleteLength);\\n                                }\\n                                length -= deleteLength;\\n                                curLine = nextLine;\\n                                offset = 0;\\n                            }\\n                            if (mergeFirstLine && firstLine.next) {\\n                                return _this.doc.mergeLines(firstLine, firstLine.next);\\n                            }\\n                        };\\n                    })(this));\\n                };\\n\\n                Editor.prototype._formatAt = function (index, length, name, value) {\\n                    return this.selection.shiftAfter(index, 0, (function (_this) {\\n                        return function () {\\n                            var formatLength, line, offset, ref, results;\\n                            ref = _this.doc.findLineAt(index), line = ref[0], offset = ref[1];\\n                            results = [];\\n                            while ((line != null) && length > 0) {\\n                                formatLength = Math.min(length, line.length - offset - 1);\\n                                line.formatText(offset, formatLength, name, value);\\n                                length -= formatLength;\\n                                if (length > 0) {\\n                                    line.format(name, value);\\n                                }\\n                                length -= 1;\\n                                offset = 0;\\n                                results.push(line = line.next);\\n                            }\\n                            return results;\\n                        };\\n                    })(this));\\n                };\\n\\n                Editor.prototype._insertEmbed = function (index, attributes) {\\n                    return this.selection.shiftAfter(index, 1, (function (_this) {\\n                        return function () {\\n                            var line, offset, ref;\\n                            ref = _this.doc.findLineAt(index), line = ref[0], offset = ref[1];\\n                            return line.insertEmbed(offset, attributes);\\n                        };\\n                    })(this));\\n                };\\n\\n                Editor.prototype._insertAt = function (index, text, formatting) {\\n                    if (formatting == null) {\\n                        formatting = {};\\n                    }\\n                    return this.selection.shiftAfter(index, text.length, (function (_this) {\\n                        return function () {\\n                            var line, lineTexts, offset, ref;\\n                            text = text.replace(/\\\\r\\\\n?/g, '\\\\n');\\n                            lineTexts = text.split('\\\\n');\\n                            ref = _this.doc.findLineAt(index), line = ref[0], offset = ref[1];\\n                            return _.each(lineTexts, function (lineText, i) {\\n                                var nextLine;\\n                                if ((line == null) || line.length <= offset) {\\n                                    if (i < lineTexts.length - 1 || lineText.length > 0) {\\n                                        line = _this.doc.appendLine(document.createElement(dom.DEFAULT_BLOCK_TAG));\\n                                        offset = 0;\\n                                        line.insertText(offset, lineText, formatting);\\n                                        line.format(formatting);\\n                                        nextLine = null;\\n                                    }\\n                                } else {\\n                                    line.insertText(offset, lineText, formatting);\\n                                    if (i < lineTexts.length - 1) {\\n                                        nextLine = _this.doc.splitLine(line, offset + lineText.length);\\n                                        _.each(_.defaults({}, formatting, line.formats), function (value, format) {\\n                                            return line.format(format, formatting[format]);\\n                                        });\\n                                        offset = 0;\\n                                    }\\n                                }\\n                                return line = nextLine;\\n                            });\\n                        };\\n                    })(this));\\n                };\\n\\n                Editor.prototype._trackDelta = function (fn) {\\n                    var ignored, newDelta, newIndex, newLeftDelta, newRightDelta, oldIndex, oldLeftDelta, oldRightDelta, ref, ref1;\\n                    oldIndex = (ref = this.savedRange) != null ? ref.start : void 0;\\n                    fn();\\n                    newDelta = this.doc.toDelta();\\n                    this.savedRange = this.selection.getRange();\\n                    newIndex = (ref1 = this.savedRange) != null ? ref1.start : void 0;\\n                    try {\\n                        if ((oldIndex != null) && (newIndex != null) && oldIndex <= this.delta.length() && newIndex <= newDelta.length()) {\\n                            oldRightDelta = this.delta.slice(oldIndex);\\n                            newRightDelta = newDelta.slice(newIndex);\\n                            if (_.isEqual(oldRightDelta.ops, newRightDelta.ops)) {\\n                                oldLeftDelta = this.delta.slice(0, oldIndex);\\n                                newLeftDelta = newDelta.slice(0, newIndex);\\n                                return oldLeftDelta.diff(newLeftDelta);\\n                            }\\n                        }\\n                    } catch (_error) {\\n                        ignored = _error;\\n                    }\\n                    return this.delta.diff(newDelta);\\n                };\\n\\n                Editor.prototype._update = function () {\\n                    var delta;\\n                    if (this.innerHTML === this.root.innerHTML) {\\n                        return false;\\n                    }\\n                    delta = this._trackDelta((function (_this) {\\n                        return function () {\\n                            _this.selection.preserve(_.bind(_this.doc.rebuild, _this.doc));\\n                            return _this.selection.shiftAfter(0, 0, _.bind(_this.doc.optimizeLines, _this.doc));\\n                        };\\n                    })(this));\\n                    this.innerHTML = this.root.innerHTML;\\n                    if (delta.ops.length > 0) {\\n                        return delta;\\n                    } else {\\n                        return false;\\n                    }\\n                };\\n\\n                return Editor;\\n\\n            })();\\n\\n            module.exports = Editor;\\n\\n\\n        }, {\\\"../lib/dom\\\": 17, \\\"./document\\\": 8, \\\"./line\\\": 12, \\\"./selection\\\": 14, \\\"lodash\\\": 1, \\\"rich-text/lib/delta\\\": 3}],\\n        10: [function (_dereq_, module, exports) {\\n            var Format, _, dom;\\n\\n            _ = _dereq_('lodash');\\n\\n            dom = _dereq_('../lib/dom');\\n\\n            Format = (function () {\\n                Format.types = {\\n                    LINE: 'line',\\n                    EMBED: 'embed'\\n                };\\n\\n                Format.FORMATS = {\\n                    bold: {\\n                        tag: 'B',\\n                        prepare: 'bold'\\n                    },\\n                    italic: {\\n                        tag: 'I',\\n                        prepare: 'italic'\\n                    },\\n                    underline: {\\n                        tag: 'U',\\n                        prepare: 'underline'\\n                    },\\n                    strike: {\\n                        tag: 'S',\\n                        prepare: 'strikeThrough'\\n                    },\\n                    color: {\\n                        style: 'color',\\n                        \\\"default\\\": 'rgb(0, 0, 0)',\\n                        prepare: 'foreColor'\\n                    },\\n                    background: {\\n                        style: 'backgroundColor',\\n                        \\\"default\\\": 'rgb(255, 255, 255)',\\n                        prepare: 'backColor'\\n                    },\\n                    font: {\\n                        style: 'fontFamily',\\n                        \\\"default\\\": \\\"'Helvetica', 'Arial', sans-serif\\\",\\n                        prepare: 'fontName'\\n                    },\\n                    size: {\\n                        style: 'fontSize',\\n                        \\\"default\\\": '13px',\\n                        prepare: function (value) {\\n                            return document.execCommand('fontSize', false, dom.convertFontSize(value));\\n                        }\\n                    },\\n                    link: {\\n                        tag: 'A',\\n                        add: function (node, value) {\\n                            node.setAttribute('href', value);\\n                            return node;\\n                        },\\n                        remove: function (node) {\\n                            node.removeAttribute('href');\\n                            return node;\\n                        },\\n                        value: function (node) {\\n                            return node.getAttribute('href');\\n                        }\\n                    },\\n                    image: {\\n                        type: Format.types.EMBED,\\n                        tag: 'IMG',\\n                        attribute: 'src'\\n                    },\\n                    align: {\\n                        type: Format.types.LINE,\\n                        style: 'textAlign',\\n                        \\\"default\\\": 'left'\\n                    },\\n                    bullet: {\\n                        type: Format.types.LINE,\\n                        exclude: 'list',\\n                        parentTag: 'UL',\\n                        tag: 'LI'\\n                    },\\n                    list: {\\n                        type: Format.types.LINE,\\n                        exclude: 'bullet',\\n                        parentTag: 'OL',\\n                        tag: 'LI'\\n                    }\\n                };\\n\\n                function Format(config) {\\n                    this.config = config;\\n                }\\n\\n                Format.prototype.add = function (node, value) {\\n                    var formatNode, inline, parentNode, ref, ref1;\\n                    if (!value) {\\n                        return this.remove(node);\\n                    }\\n                    if (this.value(node) === value) {\\n                        return node;\\n                    }\\n                    if (_.isString(this.config.parentTag)) {\\n                        parentNode = node.parentNode;\\n                        if (parentNode.tagName !== this.config.parentTag) {\\n                            parentNode = document.createElement(this.config.parentTag);\\n                            dom(node).wrap(parentNode);\\n                        }\\n                        if (node.parentNode.tagName === ((ref = node.parentNode.previousSibling) != null ? ref.tagName : void 0)) {\\n                            dom(node.parentNode.previousSibling).merge(node.parentNode);\\n                        }\\n                        if (node.parentNode.tagName === ((ref1 = node.parentNode.nextSibling) != null ? ref1.tagName : void 0)) {\\n                            dom(node.parentNode).merge(node.parentNode.nextSibling);\\n                        }\\n                    }\\n                    if (_.isString(this.config.tag) && node.tagName !== this.config.tag) {\\n                        formatNode = document.createElement(this.config.tag);\\n                        if (dom.VOID_TAGS[formatNode.tagName] != null) {\\n                            if (node.parentNode != null) {\\n                                dom(node).replace(formatNode);\\n                            }\\n                            node = formatNode;\\n                        } else if (this.isType(Format.types.LINE)) {\\n                            node = dom(node).switchTag(this.config.tag).get();\\n                        } else {\\n                            dom(node).wrap(formatNode);\\n                            node = formatNode;\\n                        }\\n                    }\\n                    if (_.isString(this.config.style) || _.isString(this.config.attribute) || _.isString(this.config[\\\"class\\\"])) {\\n                        if (_.isString(this.config[\\\"class\\\"])) {\\n                            node = this.remove(node);\\n                        }\\n                        if (dom(node).isTextNode()) {\\n                            inline = document.createElement(dom.DEFAULT_INLINE_TAG);\\n                            dom(node).wrap(inline);\\n                            node = inline;\\n                        }\\n                        if (_.isString(this.config.style)) {\\n                            if (value !== this.config[\\\"default\\\"]) {\\n                                node.style[this.config.style] = value;\\n                            }\\n                        }\\n                        if (_.isString(this.config.attribute)) {\\n                            node.setAttribute(this.config.attribute, value);\\n                        }\\n                        if (_.isString(this.config[\\\"class\\\"])) {\\n                            dom(node).addClass(this.config[\\\"class\\\"] + value);\\n                        }\\n                    }\\n                    if (_.isFunction(this.config.add)) {\\n                        node = this.config.add(node, value);\\n                    }\\n                    return node;\\n                };\\n\\n                Format.prototype.isType = function (type) {\\n                    return type === this.config.type;\\n                };\\n\\n                Format.prototype.match = function (node) {\\n                    var c, i, len, ref, ref1;\\n                    if (!dom(node).isElement()) {\\n                        return false;\\n                    }\\n                    if (_.isString(this.config.parentTag) && ((ref = node.parentNode) != null ? ref.tagName : void 0) !== this.config.parentTag) {\\n                        return false;\\n                    }\\n                    if (_.isString(this.config.tag) && node.tagName !== this.config.tag) {\\n                        return false;\\n                    }\\n                    if (_.isString(this.config.style) && (!node.style[this.config.style] || node.style[this.config.style] === this.config[\\\"default\\\"])) {\\n                        return false;\\n                    }\\n                    if (_.isString(this.config.attribute) && !node.hasAttribute(this.config.attribute)) {\\n                        return false;\\n                    }\\n                    if (_.isString(this.config[\\\"class\\\"])) {\\n                        ref1 = dom(node).classes();\\n                        for (i = 0, len = ref1.length; i < len; i++) {\\n                            c = ref1[i];\\n                            if (c.indexOf(this.config[\\\"class\\\"]) === 0) {\\n                                return true;\\n                            }\\n                        }\\n                        return false;\\n                    }\\n                    return true;\\n                };\\n\\n                Format.prototype.prepare = function (value) {\\n                    if (_.isString(this.config.prepare)) {\\n                        return document.execCommand(this.config.prepare, false, value);\\n                    } else if (_.isFunction(this.config.prepare)) {\\n                        return this.config.prepare(value);\\n                    }\\n                };\\n\\n                Format.prototype.remove = function (node) {\\n                    var c, i, len, ref;\\n                    if (!this.match(node)) {\\n                        return node;\\n                    }\\n                    if (_.isString(this.config.style)) {\\n                        node.style[this.config.style] = '';\\n                        if (!node.getAttribute('style')) {\\n                            node.removeAttribute('style');\\n                        }\\n                    }\\n                    if (_.isString(this.config.attribute)) {\\n                        node.removeAttribute(this.config.attribute);\\n                    }\\n                    if (_.isString(this.config[\\\"class\\\"])) {\\n                        ref = dom(node).classes();\\n                        for (i = 0, len = ref.length; i < len; i++) {\\n                            c = ref[i];\\n                            if (c.indexOf(this.config[\\\"class\\\"]) === 0) {\\n                                dom(node).removeClass(c);\\n                            }\\n                        }\\n                    }\\n                    if (_.isString(this.config.tag)) {\\n                        if (this.isType(Format.types.LINE)) {\\n                            if (_.isString(this.config.parentTag)) {\\n                                if (node.previousSibling != null) {\\n                                    dom(node).splitBefore(node.parentNode.parentNode);\\n                                }\\n                                if (node.nextSibling != null) {\\n                                    dom(node.nextSibling).splitBefore(node.parentNode.parentNode);\\n                                }\\n                            }\\n                            node = dom(node).switchTag(dom.DEFAULT_BLOCK_TAG).get();\\n                        } else if (this.isType(Format.types.EMBED)) {\\n                            dom(node).remove();\\n                            return void 0;\\n                        } else {\\n                            node = dom(node).switchTag(dom.DEFAULT_INLINE_TAG).get();\\n                        }\\n                    }\\n                    if (_.isString(this.config.parentTag)) {\\n                        dom(node.parentNode).unwrap();\\n                    }\\n                    if (_.isFunction(this.config.remove)) {\\n                        node = this.config.remove(node);\\n                    }\\n                    if (node.tagName === dom.DEFAULT_INLINE_TAG && !node.hasAttributes()) {\\n                        node = dom(node).unwrap();\\n                    }\\n                    return node;\\n                };\\n\\n                Format.prototype.value = function (node) {\\n                    var c, i, len, ref;\\n                    if (!this.match(node)) {\\n                        return void 0;\\n                    }\\n                    if (this.config.value) {\\n                        return this.config.value(node);\\n                    }\\n                    if (_.isString(this.config.attribute)) {\\n                        return node.getAttribute(this.config.attribute) || void 0;\\n                    } else if (_.isString(this.config.style)) {\\n                        return node.style[this.config.style] || void 0;\\n                    } else if (_.isString(this.config[\\\"class\\\"])) {\\n                        ref = dom(node).classes();\\n                        for (i = 0, len = ref.length; i < len; i++) {\\n                            c = ref[i];\\n                            if (c.indexOf(this.config[\\\"class\\\"]) === 0) {\\n                                return c.slice(this.config[\\\"class\\\"].length);\\n                            }\\n                        }\\n                    } else if (_.isString(this.config.tag)) {\\n                        return true;\\n                    }\\n                    return void 0;\\n                };\\n\\n                return Format;\\n\\n            })();\\n\\n            module.exports = Format;\\n\\n\\n        }, {\\\"../lib/dom\\\": 17, \\\"lodash\\\": 1}],\\n        11: [function (_dereq_, module, exports) {\\n            var Format, Leaf, LinkedList, _, dom,\\n                extend = function (child, parent) {\\n                    for (var key in parent) {\\n                        if (hasProp.call(parent, key)) child[key] = parent[key];\\n                    }\\n                    function ctor() {\\n                        this.constructor = child;\\n                    }\\n\\n                    ctor.prototype = parent.prototype;\\n                    child.prototype = new ctor();\\n                    child.__super__ = parent.prototype;\\n                    return child;\\n                },\\n                hasProp = {}.hasOwnProperty;\\n\\n            _ = _dereq_('lodash');\\n\\n            dom = _dereq_('../lib/dom');\\n\\n            Format = _dereq_('./format');\\n\\n            LinkedList = _dereq_('../lib/linked-list');\\n\\n            Leaf = (function (superClass) {\\n                extend(Leaf, superClass);\\n\\n                Leaf.DATA_KEY = 'leaf';\\n\\n                Leaf.isLeafNode = function (node) {\\n                    return dom(node).isTextNode() || (node.firstChild == null);\\n                };\\n\\n                function Leaf(node1, formats) {\\n                    this.node = node1;\\n                    this.formats = _.clone(formats);\\n                    this.text = dom(this.node).text();\\n                    this.length = this.text.length;\\n                    dom(this.node).data(Leaf.DATA_KEY, this);\\n                }\\n\\n                Leaf.prototype.deleteText = function (offset, length) {\\n                    var textNode;\\n                    if (!(length > 0)) {\\n                        return;\\n                    }\\n                    this.text = this.text.slice(0, offset) + this.text.slice(offset + length);\\n                    this.length = this.text.length;\\n                    if (dom.EMBED_TAGS[this.node.tagName] != null) {\\n                        textNode = document.createTextNode(this.text);\\n                        dom(textNode).data(Leaf.DATA_KEY, this);\\n                        return this.node = dom(this.node).replace(textNode).get();\\n                    } else {\\n                        return dom(this.node).text(this.text);\\n                    }\\n                };\\n\\n                Leaf.prototype.insertText = function (offset, text) {\\n                    var textNode;\\n                    this.text = this.text.slice(0, offset) + text + this.text.slice(offset);\\n                    if (dom(this.node).isTextNode()) {\\n                        dom(this.node).text(this.text);\\n                    } else {\\n                        textNode = document.createTextNode(text);\\n                        dom(textNode).data(Leaf.DATA_KEY, this);\\n                        if (this.node.tagName === dom.DEFAULT_BREAK_TAG) {\\n                            this.node = dom(this.node).replace(textNode).get();\\n                        } else {\\n                            this.node.appendChild(textNode);\\n                            this.node = textNode;\\n                        }\\n                    }\\n                    return this.length = this.text.length;\\n                };\\n\\n                return Leaf;\\n\\n            })(LinkedList.Node);\\n\\n            module.exports = Leaf;\\n\\n\\n        }, {\\\"../lib/dom\\\": 17, \\\"../lib/linked-list\\\": 18, \\\"./format\\\": 10, \\\"lodash\\\": 1}],\\n        12: [function (_dereq_, module, exports) {\\n            var Delta, Format, Leaf, Line, LinkedList, Normalizer, _, dom,\\n                extend = function (child, parent) {\\n                    for (var key in parent) {\\n                        if (hasProp.call(parent, key)) child[key] = parent[key];\\n                    }\\n                    function ctor() {\\n                        this.constructor = child;\\n                    }\\n\\n                    ctor.prototype = parent.prototype;\\n                    child.prototype = new ctor();\\n                    child.__super__ = parent.prototype;\\n                    return child;\\n                },\\n                hasProp = {}.hasOwnProperty;\\n\\n            _ = _dereq_('lodash');\\n\\n            Delta = _dereq_('rich-text/lib/delta');\\n\\n            dom = _dereq_('../lib/dom');\\n\\n            Format = _dereq_('./format');\\n\\n            Leaf = _dereq_('./leaf');\\n\\n            Line = _dereq_('./line');\\n\\n            LinkedList = _dereq_('../lib/linked-list');\\n\\n            Normalizer = _dereq_('./normalizer');\\n\\n            Line = (function (superClass) {\\n                extend(Line, superClass);\\n\\n                Line.DATA_KEY = 'line';\\n\\n                function Line(doc, node1) {\\n                    this.doc = doc;\\n                    this.node = node1;\\n                    this.formats = {};\\n                    this.rebuild();\\n                    Line.__super__.constructor.call(this, this.node);\\n                }\\n\\n                Line.prototype.buildLeaves = function (node, formats) {\\n                    return _.each(dom(node).childNodes(), (function (_this) {\\n                        return function (node) {\\n                            var nodeFormats;\\n                            node = _this.doc.normalizer.normalizeNode(node);\\n                            nodeFormats = _.clone(formats);\\n                            _.each(_this.doc.formats, function (format, name) {\\n                                if (!format.isType(Format.types.LINE) && format.match(node)) {\\n                                    return nodeFormats[name] = format.value(node);\\n                                }\\n                            });\\n                            if (Leaf.isLeafNode(node)) {\\n                                return _this.leaves.append(new Leaf(node, nodeFormats));\\n                            } else {\\n                                return _this.buildLeaves(node, nodeFormats);\\n                            }\\n                        };\\n                    })(this));\\n                };\\n\\n                Line.prototype.deleteText = function (offset, length) {\\n                    var deleteLength, leaf, ref;\\n                    if (!(length > 0)) {\\n                        return;\\n                    }\\n                    ref = this.findLeafAt(offset), leaf = ref[0], offset = ref[1];\\n                    while ((leaf != null) && length > 0) {\\n                        deleteLength = Math.min(length, leaf.length - offset);\\n                        leaf.deleteText(offset, deleteLength);\\n                        length -= deleteLength;\\n                        leaf = leaf.next;\\n                        offset = 0;\\n                    }\\n                    return this.rebuild();\\n                };\\n\\n                Line.prototype.findLeaf = function (leafNode) {\\n                    if (leafNode != null) {\\n                        return dom(leafNode).data(Leaf.DATA_KEY);\\n                    } else {\\n                        return void 0;\\n                    }\\n                };\\n\\n                Line.prototype.findLeafAt = function (offset, inclusive) {\\n                    var leaf;\\n                    if (inclusive == null) {\\n                        inclusive = false;\\n                    }\\n                    if (offset >= this.length - 1) {\\n                        return [this.leaves.last, this.leaves.last.length];\\n                    }\\n                    leaf = this.leaves.first;\\n                    while (leaf != null) {\\n                        if (offset < leaf.length || (offset === leaf.length && inclusive)) {\\n                            return [leaf, offset];\\n                        }\\n                        offset -= leaf.length;\\n                        leaf = leaf.next;\\n                    }\\n                    return [this.leaves.last, offset - this.leaves.last.length];\\n                };\\n\\n                Line.prototype.format = function (name, value) {\\n                    var formats;\\n                    if (_.isObject(name)) {\\n                        formats = name;\\n                    } else {\\n                        formats = {};\\n                        formats[name] = value;\\n                    }\\n                    _.each(formats, (function (_this) {\\n                        return function (value, name) {\\n                            var excludeFormat, format;\\n                            format = _this.doc.formats[name];\\n                            if (format == null) {\\n                                return;\\n                            }\\n                            if (format.isType(Format.types.LINE)) {\\n                                if (format.config.exclude && _this.formats[format.config.exclude]) {\\n                                    excludeFormat = _this.doc.formats[format.config.exclude];\\n                                    if (excludeFormat != null) {\\n                                        _this.node = excludeFormat.remove(_this.node);\\n                                        delete _this.formats[format.config.exclude];\\n                                    }\\n                                }\\n                                _this.node = format.add(_this.node, value);\\n                            }\\n                            if (value) {\\n                                return _this.formats[name] = value;\\n                            } else {\\n                                return delete _this.formats[name];\\n                            }\\n                        };\\n                    })(this));\\n                    return this.resetContent();\\n                };\\n\\n                Line.prototype.formatText = function (offset, length, name, value) {\\n                    var format, leaf, leafOffset, leftNode, nextLeaf, ref, ref1, ref2, rightNode, targetNode;\\n                    ref = this.findLeafAt(offset), leaf = ref[0], leafOffset = ref[1];\\n                    format = this.doc.formats[name];\\n                    if (!((format != null) && format.config.type !== Format.types.LINE)) {\\n                        return;\\n                    }\\n                    while ((leaf != null) && length > 0) {\\n                        nextLeaf = leaf.next;\\n                        if ((value && leaf.formats[name] !== value) || (!value && (leaf.formats[name] != null))) {\\n                            targetNode = leaf.node;\\n                            if (leaf.formats[name] != null) {\\n                                dom(targetNode).splitBefore(this.node);\\n                                while (!format.match(targetNode)) {\\n                                    targetNode = targetNode.parentNode;\\n                                }\\n                                dom(targetNode).split(leaf.length);\\n                            }\\n                            if (leafOffset > 0) {\\n                                ref1 = dom(targetNode).split(leafOffset), leftNode = ref1[0], targetNode = ref1[1];\\n                            }\\n                            if (leaf.length > leafOffset + length) {\\n                                ref2 = dom(targetNode).split(length), targetNode = ref2[0], rightNode = ref2[1];\\n                            }\\n                            format.add(targetNode, value);\\n                        }\\n                        length -= leaf.length - leafOffset;\\n                        leafOffset = 0;\\n                        leaf = nextLeaf;\\n                    }\\n                    return this.rebuild();\\n                };\\n\\n                Line.prototype._insert = function (offset, node, formats) {\\n                    var leaf, leafOffset, nextNode, prevNode, ref, ref1;\\n                    ref = this.findLeafAt(offset), leaf = ref[0], leafOffset = ref[1];\\n                    node = _.reduce(formats, (function (_this) {\\n                        return function (node, value, name) {\\n                            var format;\\n                            format = _this.doc.formats[name];\\n                            if ((format != null) && !format.isType(Format.types.LINE)) {\\n                                node = format.add(node, value);\\n                            }\\n                            return node;\\n                        };\\n                    })(this), node);\\n                    ref1 = dom(leaf.node).split(leafOffset), prevNode = ref1[0], nextNode = ref1[1];\\n                    if (nextNode) {\\n                        nextNode = dom(nextNode).splitBefore(this.node).get();\\n                    }\\n                    this.node.insertBefore(node, nextNode);\\n                    return this.rebuild();\\n                };\\n\\n                Line.prototype.insertEmbed = function (offset, attributes) {\\n                    var formatName, leaf, leafOffset, nextNode, node, prevNode, ref, ref1;\\n                    ref = this.findLeafAt(offset), leaf = ref[0], leafOffset = ref[1];\\n                    ref1 = dom(leaf.node).split(leafOffset), prevNode = ref1[0], nextNode = ref1[1];\\n                    formatName = _.find(Object.keys(attributes), (function (_this) {\\n                        return function (name) {\\n                            return _this.doc.formats[name].isType(Format.types.EMBED);\\n                        };\\n                    })(this));\\n                    node = this.doc.formats[formatName].add({}, attributes[formatName]);\\n                    attributes = _.clone(attributes);\\n                    delete attributes[formatName];\\n                    return this._insert(offset, node, attributes);\\n                };\\n\\n                Line.prototype.insertText = function (offset, text, formats) {\\n                    var leaf, leafOffset, ref;\\n                    if (formats == null) {\\n                        formats = {};\\n                    }\\n                    if (!(text.length > 0)) {\\n                        return;\\n                    }\\n                    ref = this.findLeafAt(offset), leaf = ref[0], leafOffset = ref[1];\\n                    if (_.isEqual(leaf.formats, formats)) {\\n                        leaf.insertText(leafOffset, text);\\n                        return this.resetContent();\\n                    } else {\\n                        return this._insert(offset, document.createTextNode(text), formats);\\n                    }\\n                };\\n\\n                Line.prototype.optimize = function () {\\n                    Normalizer.optimizeLine(this.node);\\n                    return this.rebuild();\\n                };\\n\\n                Line.prototype.rebuild = function (force) {\\n                    if (force == null) {\\n                        force = false;\\n                    }\\n                    if (!force && (this.outerHTML != null) && this.outerHTML === this.node.outerHTML) {\\n                        if (_.all(this.leaves.toArray(), (function (_this) {\\n                                return function (leaf) {\\n                                    return dom(leaf.node).isAncestor(_this.node);\\n                                };\\n                            })(this))) {\\n                            return false;\\n                        }\\n                    }\\n                    this.node = this.doc.normalizer.normalizeNode(this.node);\\n                    if (dom(this.node).length() === 0 && !this.node.querySelector(dom.DEFAULT_BREAK_TAG)) {\\n                        this.node.appendChild(document.createElement(dom.DEFAULT_BREAK_TAG));\\n                    }\\n                    this.leaves = new LinkedList();\\n                    this.formats = _.reduce(this.doc.formats, (function (_this) {\\n                        return function (formats, format, name) {\\n                            if (format.isType(Format.types.LINE)) {\\n                                if (format.match(_this.node)) {\\n                                    formats[name] = format.value(_this.node);\\n                                } else {\\n                                    delete formats[name];\\n                                }\\n                            }\\n                            return formats;\\n                        };\\n                    })(this), this.formats);\\n                    this.buildLeaves(this.node, {});\\n                    this.resetContent();\\n                    return true;\\n                };\\n\\n                Line.prototype.resetContent = function () {\\n                    dom(this.node).data(Line.DATA_KEY, this);\\n                    this.outerHTML = this.node.outerHTML;\\n                    this.length = 1;\\n                    this.delta = new Delta();\\n                    _.each(this.leaves.toArray(), (function (_this) {\\n                        return function (leaf) {\\n                            _this.length += leaf.length;\\n                            if (dom.EMBED_TAGS[leaf.node.tagName] != null) {\\n                                return _this.delta.insert(1, leaf.formats);\\n                            } else {\\n                                return _this.delta.insert(leaf.text, leaf.formats);\\n                            }\\n                        };\\n                    })(this));\\n                    return this.delta.insert('\\\\n', this.formats);\\n                };\\n\\n                return Line;\\n\\n            })(LinkedList.Node);\\n\\n            module.exports = Line;\\n\\n\\n        }, {\\n            \\\"../lib/dom\\\": 17,\\n            \\\"../lib/linked-list\\\": 18,\\n            \\\"./format\\\": 10,\\n            \\\"./leaf\\\": 11,\\n            \\\"./line\\\": 12,\\n            \\\"./normalizer\\\": 13,\\n            \\\"lodash\\\": 1,\\n            \\\"rich-text/lib/delta\\\": 3\\n        }],\\n        13: [function (_dereq_, module, exports) {\\n            var Normalizer, _, camelize, dom;\\n\\n            _ = _dereq_('lodash');\\n\\n            dom = _dereq_('../lib/dom');\\n\\n            camelize = function (str) {\\n                str = str.replace(/(?:^|[-_])(\\\\w)/g, function (i, c) {\\n                    if (c) {\\n                        return c.toUpperCase();\\n                    } else {\\n                        return '';\\n                    }\\n                });\\n                return str.charAt(0).toLowerCase() + str.slice(1);\\n            };\\n\\n            Normalizer = (function () {\\n                Normalizer.ALIASES = {\\n                    'STRONG': 'B',\\n                    'EM': 'I',\\n                    'DEL': 'S',\\n                    'STRIKE': 'S'\\n                };\\n\\n                Normalizer.ATTRIBUTES = {\\n                    'color': 'color',\\n                    'face': 'fontFamily',\\n                    'size': 'fontSize'\\n                };\\n\\n                function Normalizer() {\\n                    this.whitelist = {\\n                        styles: {},\\n                        tags: {}\\n                    };\\n                    this.whitelist.tags[dom.DEFAULT_BREAK_TAG] = true;\\n                    this.whitelist.tags[dom.DEFAULT_BLOCK_TAG] = true;\\n                    this.whitelist.tags[dom.DEFAULT_INLINE_TAG] = true;\\n                }\\n\\n                Normalizer.prototype.addFormat = function (config) {\\n                    if (config.tag != null) {\\n                        this.whitelist.tags[config.tag] = true;\\n                    }\\n                    if (config.parentTag != null) {\\n                        this.whitelist.tags[config.parentTag] = true;\\n                    }\\n                    if (config.style != null) {\\n                        return this.whitelist.styles[config.style] = true;\\n                    }\\n                };\\n\\n                Normalizer.prototype.normalizeLine = function (lineNode) {\\n                    lineNode = Normalizer.wrapInline(lineNode);\\n                    lineNode = Normalizer.handleBreaks(lineNode);\\n                    if (lineNode.tagName === 'LI') {\\n                        Normalizer.flattenList(lineNode);\\n                    }\\n                    lineNode = Normalizer.pullBlocks(lineNode);\\n                    lineNode = this.normalizeNode(lineNode);\\n                    Normalizer.unwrapText(lineNode);\\n                    if ((lineNode != null) && (dom.LIST_TAGS[lineNode.tagName] != null)) {\\n                        lineNode = lineNode.firstChild;\\n                    }\\n                    return lineNode;\\n                };\\n\\n                Normalizer.prototype.normalizeNode = function (node) {\\n                    if (dom(node).isTextNode()) {\\n                        return node;\\n                    }\\n                    _.each(Normalizer.ATTRIBUTES, function (style, attribute) {\\n                        var value;\\n                        if (node.hasAttribute(attribute)) {\\n                            value = node.getAttribute(attribute);\\n                            if (attribute === 'size') {\\n                                value = dom.convertFontSize(value);\\n                            }\\n                            node.style[style] = value;\\n                            return node.removeAttribute(attribute);\\n                        }\\n                    });\\n                    if (node.style.fontWeight === 'bold' || node.style.fontWeight > 500) {\\n                        node.style.fontWeight = '';\\n                        dom(node).wrap(document.createElement('b'));\\n                        node = node.parentNode;\\n                    }\\n                    this.whitelistStyles(node);\\n                    return this.whitelistTags(node);\\n                };\\n\\n                Normalizer.prototype.whitelistStyles = function (node) {\\n                    var original, styles;\\n                    original = dom(node).styles();\\n                    styles = _.omit(original, (function (_this) {\\n                        return function (value, key) {\\n                            return _this.whitelist.styles[camelize(key)] == null;\\n                        };\\n                    })(this));\\n                    if (Object.keys(styles).length < Object.keys(original).length) {\\n                        if (Object.keys(styles).length > 0) {\\n                            return dom(node).styles(styles, true);\\n                        } else {\\n                            return node.removeAttribute('style');\\n                        }\\n                    }\\n                };\\n\\n                Normalizer.prototype.whitelistTags = function (node) {\\n                    if (!dom(node).isElement()) {\\n                        return node;\\n                    }\\n                    if (Normalizer.ALIASES[node.tagName] != null) {\\n                        node = dom(node).switchTag(Normalizer.ALIASES[node.tagName]).get();\\n                    } else if (this.whitelist.tags[node.tagName] == null) {\\n                        if (dom.BLOCK_TAGS[node.tagName] != null) {\\n                            node = dom(node).switchTag(dom.DEFAULT_BLOCK_TAG).get();\\n                        } else if (!node.hasAttributes() && (node.firstChild != null)) {\\n                            node = dom(node).unwrap();\\n                        } else {\\n                            node = dom(node).switchTag(dom.DEFAULT_INLINE_TAG).get();\\n                        }\\n                    }\\n                    return node;\\n                };\\n\\n                Normalizer.flattenList = function (listNode) {\\n                    var innerItems, innerLists, ref;\\n                    ref = listNode.nextSibling;\\n                    innerItems = _.map(listNode.querySelectorAll('li'));\\n                    innerItems.forEach(function (item) {\\n                        listNode.parentNode.insertBefore(item, ref);\\n                        return ref = item.nextSibling;\\n                    });\\n                    innerLists = _.map(listNode.querySelectorAll(Object.keys(dom.LIST_TAGS).join(',')));\\n                    return innerLists.forEach(function (list) {\\n                        return dom(list).remove();\\n                    });\\n                };\\n\\n                Normalizer.handleBreaks = function (lineNode) {\\n                    var breaks;\\n                    breaks = _.map(lineNode.querySelectorAll(dom.DEFAULT_BREAK_TAG));\\n                    _.each(breaks, (function (_this) {\\n                        return function (br) {\\n                            if ((br.nextSibling != null) && (!dom.isIE(10) || (br.previousSibling != null))) {\\n                                return dom(br.nextSibling).splitBefore(lineNode.parentNode);\\n                            }\\n                        };\\n                    })(this));\\n                    return lineNode;\\n                };\\n\\n                Normalizer.optimizeLine = function (lineNode) {\\n                    var lineNodeLength, node, nodes, results;\\n                    lineNode.normalize();\\n                    lineNodeLength = dom(lineNode).length();\\n                    nodes = dom(lineNode).descendants();\\n                    results = [];\\n                    while (nodes.length > 0) {\\n                        node = nodes.pop();\\n                        if ((node != null ? node.parentNode : void 0) == null) {\\n                            continue;\\n                        }\\n                        if (dom.EMBED_TAGS[node.tagName] != null) {\\n                            continue;\\n                        }\\n                        if (node.tagName === dom.DEFAULT_BREAK_TAG) {\\n                            if (lineNodeLength !== 0) {\\n                                results.push(dom(node).remove());\\n                            } else {\\n                                results.push(void 0);\\n                            }\\n                        } else if (dom(node).length() === 0) {\\n                            nodes.push(node.nextSibling);\\n                            results.push(dom(node).unwrap());\\n                        } else if ((node.previousSibling != null) && node.tagName === node.previousSibling.tagName) {\\n                            if (_.isEqual(dom(node).attributes(), dom(node.previousSibling).attributes())) {\\n                                nodes.push(node.firstChild);\\n                                results.push(dom(node.previousSibling).merge(node));\\n                            } else {\\n                                results.push(void 0);\\n                            }\\n                        } else {\\n                            results.push(void 0);\\n                        }\\n                    }\\n                    return results;\\n                };\\n\\n                Normalizer.pullBlocks = function (lineNode) {\\n                    var curNode;\\n                    curNode = lineNode.firstChild;\\n                    while (curNode != null) {\\n                        if ((dom.BLOCK_TAGS[curNode.tagName] != null) && curNode.tagName !== 'LI') {\\n                            dom(curNode).isolate(lineNode.parentNode);\\n                            if ((dom.LIST_TAGS[curNode.tagName] == null) || !curNode.firstChild) {\\n                                dom(curNode).unwrap();\\n                                Normalizer.pullBlocks(lineNode);\\n                            } else {\\n                                dom(curNode.parentNode).unwrap();\\n                                if (lineNode.parentNode == null) {\\n                                    lineNode = curNode;\\n                                }\\n                            }\\n                            break;\\n                        }\\n                        curNode = curNode.nextSibling;\\n                    }\\n                    return lineNode;\\n                };\\n\\n                Normalizer.stripComments = function (html) {\\n                    return html.replace(/<!--[\\\\s\\\\S]*?-->/g, '');\\n                };\\n\\n                Normalizer.stripWhitespace = function (html) {\\n                    html = html.trim();\\n                    html = html.replace(/(\\\\r?\\\\n|\\\\r)+/g, ' ');\\n                    html = html.replace(/\\\\>\\\\s+\\\\</g, '><');\\n                    return html;\\n                };\\n\\n                Normalizer.wrapInline = function (lineNode) {\\n                    var blockNode, nextNode;\\n                    if (dom.BLOCK_TAGS[lineNode.tagName] != null) {\\n                        return lineNode;\\n                    }\\n                    blockNode = document.createElement(dom.DEFAULT_BLOCK_TAG);\\n                    lineNode.parentNode.insertBefore(blockNode, lineNode);\\n                    while ((lineNode != null) && (dom.BLOCK_TAGS[lineNode.tagName] == null)) {\\n                        nextNode = lineNode.nextSibling;\\n                        blockNode.appendChild(lineNode);\\n                        lineNode = nextNode;\\n                    }\\n                    return blockNode;\\n                };\\n\\n                Normalizer.unwrapText = function (lineNode) {\\n                    var spans;\\n                    spans = _.map(lineNode.querySelectorAll(dom.DEFAULT_INLINE_TAG));\\n                    return _.each(spans, function (span) {\\n                        if (!span.hasAttributes()) {\\n                            return dom(span).unwrap();\\n                        }\\n                    });\\n                };\\n\\n                return Normalizer;\\n\\n            })();\\n\\n            module.exports = Normalizer;\\n\\n\\n        }, {\\\"../lib/dom\\\": 17, \\\"lodash\\\": 1}],\\n        14: [function (_dereq_, module, exports) {\\n            var Leaf, Normalizer, Range, Selection, _, dom;\\n\\n            _ = _dereq_('lodash');\\n\\n            dom = _dereq_('../lib/dom');\\n\\n            Leaf = _dereq_('./leaf');\\n\\n            Normalizer = _dereq_('./normalizer');\\n\\n            Range = _dereq_('../lib/range');\\n\\n            Selection = (function () {\\n                function Selection(doc, emitter) {\\n                    this.doc = doc;\\n                    this.emitter = emitter;\\n                    this.focus = false;\\n                    this.range = new Range(0, 0);\\n                    this.nullDelay = false;\\n                    this.update('silent');\\n                }\\n\\n                Selection.prototype.checkFocus = function () {\\n                    return document.activeElement === this.doc.root;\\n                };\\n\\n                Selection.prototype.getRange = function (ignoreFocus) {\\n                    var end, nativeRange, start;\\n                    if (ignoreFocus == null) {\\n                        ignoreFocus = false;\\n                    }\\n                    if (this.checkFocus()) {\\n                        nativeRange = this._getNativeRange();\\n                        if (nativeRange == null) {\\n                            return null;\\n                        }\\n                        start = this._positionToIndex(nativeRange.startContainer, nativeRange.startOffset);\\n                        if (nativeRange.startContainer === nativeRange.endContainer && nativeRange.startOffset === nativeRange.endOffset) {\\n                            end = start;\\n                        } else {\\n                            end = this._positionToIndex(nativeRange.endContainer, nativeRange.endOffset);\\n                        }\\n                        return new Range(Math.min(start, end), Math.max(start, end));\\n                    } else if (ignoreFocus) {\\n                        return this.range;\\n                    } else {\\n                        return null;\\n                    }\\n                };\\n\\n                Selection.prototype.preserve = function (fn) {\\n                    var endNode, endOffset, nativeRange, ref, ref1, ref2, ref3, startNode, startOffset;\\n                    nativeRange = this._getNativeRange();\\n                    if ((nativeRange != null) && this.checkFocus()) {\\n                        ref = this._encodePosition(nativeRange.startContainer, nativeRange.startOffset), startNode = ref[0], startOffset = ref[1];\\n                        ref1 = this._encodePosition(nativeRange.endContainer, nativeRange.endOffset), endNode = ref1[0], endOffset = ref1[1];\\n                        fn();\\n                        ref2 = this._decodePosition(startNode, startOffset), startNode = ref2[0], startOffset = ref2[1];\\n                        ref3 = this._decodePosition(endNode, endOffset), endNode = ref3[0], endOffset = ref3[1];\\n                        return this._setNativeRange(startNode, startOffset, endNode, endOffset);\\n                    } else {\\n                        return fn();\\n                    }\\n                };\\n\\n                Selection.prototype.scrollIntoView = function () {\\n                    var containerBounds, containerHeight, editor, endBounds, line, offset, ref, ref1, startBounds;\\n                    if (!this.range) {\\n                        return;\\n                    }\\n                    editor = this.emitter.editor;\\n                    startBounds = editor.getBounds(this.range.start);\\n                    endBounds = this.range.isCollapsed() ? startBounds : editor.getBounds(this.range.end);\\n                    containerBounds = editor.root.parentNode.getBoundingClientRect();\\n                    containerHeight = containerBounds.bottom - containerBounds.top;\\n                    if (containerHeight < endBounds.top + endBounds.height) {\\n                        ref = editor.doc.findLineAt(this.range.end), line = ref[0], offset = ref[1];\\n                        return line.node.scrollIntoView(false);\\n                    } else if (startBounds.top < 0) {\\n                        ref1 = editor.doc.findLineAt(this.range.start), line = ref1[0], offset = ref1[1];\\n                        return line.node.scrollIntoView();\\n                    }\\n                };\\n\\n                Selection.prototype.setRange = function (range, source) {\\n                    var endNode, endOffset, ref, ref1, ref2, startNode, startOffset;\\n                    if (range != null) {\\n                        ref = this._indexToPosition(range.start), startNode = ref[0], startOffset = ref[1];\\n                        if (range.isCollapsed()) {\\n                            ref1 = [startNode, startOffset], endNode = ref1[0], endOffset = ref1[1];\\n                        } else {\\n                            ref2 = this._indexToPosition(range.end), endNode = ref2[0], endOffset = ref2[1];\\n                        }\\n                        this._setNativeRange(startNode, startOffset, endNode, endOffset);\\n                    } else {\\n                        this._setNativeRange(null);\\n                    }\\n                    return this.update(source);\\n                };\\n\\n                Selection.prototype.shiftAfter = function (index, length, fn) {\\n                    var range;\\n                    range = this.getRange();\\n                    fn();\\n                    if (range != null) {\\n                        range.shift(index, length);\\n                        return this.setRange(range, 'silent');\\n                    }\\n                };\\n\\n                Selection.prototype.update = function (source) {\\n                    var emit, focus, range, toEmit;\\n                    focus = this.checkFocus();\\n                    range = this.getRange(true);\\n                    emit = source !== 'silent' && (!Range.compare(range, this.range) || focus !== this.focus);\\n                    toEmit = focus ? range : null;\\n                    if (toEmit === null && source === 'user' && !this.nullDelay) {\\n                        return this.nullDelay = true;\\n                    } else {\\n                        this.nullDelay = false;\\n                        this.range = range;\\n                        this.focus = focus;\\n                        if (emit) {\\n                            return this.emitter.emit(this.emitter.constructor.events.SELECTION_CHANGE, toEmit, source);\\n                        }\\n                    }\\n                };\\n\\n                Selection.prototype._decodePosition = function (node, offset) {\\n                    var childIndex;\\n                    if (dom(node).isElement()) {\\n                        childIndex = dom(node.parentNode).childNodes().indexOf(node);\\n                        offset += childIndex;\\n                        node = node.parentNode;\\n                    }\\n                    return [node, offset];\\n                };\\n\\n                Selection.prototype._encodePosition = function (node, offset) {\\n                    var text;\\n                    while (true) {\\n                        if (dom(node).isTextNode() || node.tagName === dom.DEFAULT_BREAK_TAG || (dom.EMBED_TAGS[node.tagName] != null)) {\\n                            return [node, offset];\\n                        } else if (offset < node.childNodes.length) {\\n                            node = node.childNodes[offset];\\n                            offset = 0;\\n                        } else if (node.childNodes.length === 0) {\\n                            if (this.doc.normalizer.whitelist.tags[node.tagName] == null) {\\n                                text = document.createTextNode('');\\n                                node.appendChild(text);\\n                                node = text;\\n                            }\\n                            return [node, 0];\\n                        } else {\\n                            node = node.lastChild;\\n                            if (dom(node).isElement()) {\\n                                if (node.tagName === dom.DEFAULT_BREAK_TAG || (dom.EMBED_TAGS[node.tagName] != null)) {\\n                                    return [node, 1];\\n                                } else {\\n                                    offset = node.childNodes.length;\\n                                }\\n                            } else {\\n                                return [node, dom(node).length()];\\n                            }\\n                        }\\n                    }\\n                };\\n\\n                Selection.prototype._getNativeRange = function () {\\n                    var range, selection;\\n                    selection = document.getSelection();\\n                    if ((selection != null ? selection.rangeCount : void 0) > 0) {\\n                        range = selection.getRangeAt(0);\\n                        if (dom(range.startContainer).isAncestor(this.doc.root, true)) {\\n                            if (range.startContainer === range.endContainer || dom(range.endContainer).isAncestor(this.doc.root, true)) {\\n                                return range;\\n                            }\\n                        }\\n                    }\\n                    return null;\\n                };\\n\\n                Selection.prototype._indexToPosition = function (index) {\\n                    var leaf, offset, ref;\\n                    if (this.doc.lines.length === 0) {\\n                        return [this.doc.root, 0];\\n                    }\\n                    ref = this.doc.findLeafAt(index, true), leaf = ref[0], offset = ref[1];\\n                    return this._decodePosition(leaf.node, offset);\\n                };\\n\\n                Selection.prototype._positionToIndex = function (node, offset) {\\n                    var leaf, leafNode, leafOffset, line, lineOffset, ref;\\n                    if (dom.isIE(10) && node.tagName === 'BR' && offset === 1) {\\n                        offset = 0;\\n                    }\\n                    ref = this._encodePosition(node, offset), leafNode = ref[0], offset = ref[1];\\n                    line = this.doc.findLine(leafNode);\\n                    if (line == null) {\\n                        return 0;\\n                    }\\n                    leaf = line.findLeaf(leafNode);\\n                    lineOffset = 0;\\n                    while (line.prev != null) {\\n                        line = line.prev;\\n                        lineOffset += line.length;\\n                    }\\n                    if (leaf == null) {\\n                        return lineOffset;\\n                    }\\n                    leafOffset = 0;\\n                    while (leaf.prev != null) {\\n                        leaf = leaf.prev;\\n                        leafOffset += leaf.length;\\n                    }\\n                    return lineOffset + leafOffset + offset;\\n                };\\n\\n                Selection.prototype._setNativeRange = function (startNode, startOffset, endNode, endOffset) {\\n                    var nativeRange, selection;\\n                    selection = document.getSelection();\\n                    if (!selection) {\\n                        return;\\n                    }\\n                    if (startNode != null) {\\n                        if (!this.checkFocus()) {\\n                            this.doc.root.focus();\\n                        }\\n                        nativeRange = this._getNativeRange();\\n                        if ((nativeRange == null) || startNode !== nativeRange.startContainer || startOffset !== nativeRange.startOffset || endNode !== nativeRange.endContainer || endOffset !== nativeRange.endOffset) {\\n                            selection.removeAllRanges();\\n                            nativeRange = document.createRange();\\n                            nativeRange.setStart(startNode, startOffset);\\n                            nativeRange.setEnd(endNode, endOffset);\\n                            return selection.addRange(nativeRange);\\n                        }\\n                    } else {\\n                        selection.removeAllRanges();\\n                        this.doc.root.blur();\\n                        if (dom.isIE(11) && !dom.isIE(9)) {\\n                            return document.body.focus();\\n                        }\\n                    }\\n                };\\n\\n                return Selection;\\n\\n            })();\\n\\n            module.exports = Selection;\\n\\n\\n        }, {\\\"../lib/dom\\\": 17, \\\"../lib/range\\\": 20, \\\"./leaf\\\": 11, \\\"./normalizer\\\": 13, \\\"lodash\\\": 1}],\\n        15: [function (_dereq_, module, exports) {\\n            _dereq_('./modules/authorship');\\n\\n            _dereq_('./modules/image-tooltip');\\n\\n            _dereq_('./modules/keyboard');\\n\\n            _dereq_('./modules/link-tooltip');\\n\\n            _dereq_('./modules/multi-cursor');\\n\\n            _dereq_('./modules/paste-manager');\\n\\n            _dereq_('./modules/toolbar');\\n\\n            _dereq_('./modules/tooltip');\\n\\n            _dereq_('./modules/undo-manager');\\n\\n            module.exports = _dereq_('./quill');\\n\\n\\n        }, {\\n            \\\"./modules/authorship\\\": 21,\\n            \\\"./modules/image-tooltip\\\": 22,\\n            \\\"./modules/keyboard\\\": 23,\\n            \\\"./modules/link-tooltip\\\": 24,\\n            \\\"./modules/multi-cursor\\\": 25,\\n            \\\"./modules/paste-manager\\\": 26,\\n            \\\"./modules/toolbar\\\": 27,\\n            \\\"./modules/tooltip\\\": 28,\\n            \\\"./modules/undo-manager\\\": 29,\\n            \\\"./quill\\\": 30\\n        }],\\n        16: [function (_dereq_, module, exports) {\\n            var ColorPicker, Picker, dom,\\n                extend = function (child, parent) {\\n                    for (var key in parent) {\\n                        if (hasProp.call(parent, key)) child[key] = parent[key];\\n                    }\\n                    function ctor() {\\n                        this.constructor = child;\\n                    }\\n\\n                    ctor.prototype = parent.prototype;\\n                    child.prototype = new ctor();\\n                    child.__super__ = parent.prototype;\\n                    return child;\\n                },\\n                hasProp = {}.hasOwnProperty;\\n\\n            dom = _dereq_('./dom');\\n\\n            Picker = _dereq_('./picker');\\n\\n            ColorPicker = (function (superClass) {\\n                extend(ColorPicker, superClass);\\n\\n                function ColorPicker() {\\n                    ColorPicker.__super__.constructor.apply(this, arguments);\\n                    dom(this.container).addClass('ql-color-picker');\\n                }\\n\\n                ColorPicker.prototype.buildItem = function (picker, option, index) {\\n                    var item;\\n                    item = ColorPicker.__super__.buildItem.call(this, picker, option, index);\\n                    item.style.backgroundColor = option.value;\\n                    return item;\\n                };\\n\\n                return ColorPicker;\\n\\n            })(Picker);\\n\\n            module.exports = ColorPicker;\\n\\n\\n        }, {\\\"./dom\\\": 17, \\\"./picker\\\": 19}],\\n        17: [function (_dereq_, module, exports) {\\n            var SelectWrapper, Wrapper, _, dom, lastKeyEvent,\\n                bind = function (fn, me) {\\n                    return function () {\\n                        return fn.apply(me, arguments);\\n                    };\\n                },\\n                extend = function (child, parent) {\\n                    for (var key in parent) {\\n                        if (hasProp.call(parent, key)) child[key] = parent[key];\\n                    }\\n                    function ctor() {\\n                        this.constructor = child;\\n                    }\\n\\n                    ctor.prototype = parent.prototype;\\n                    child.prototype = new ctor();\\n                    child.__super__ = parent.prototype;\\n                    return child;\\n                },\\n                hasProp = {}.hasOwnProperty;\\n\\n            _ = _dereq_('lodash');\\n\\n            lastKeyEvent = null;\\n\\n            Wrapper = (function () {\\n                function Wrapper(node1) {\\n                    this.node = node1;\\n                    this.trigger = bind(this.trigger, this);\\n                }\\n\\n                Wrapper.prototype.addClass = function (cssClass) {\\n                    if (this.hasClass(cssClass)) {\\n                        return;\\n                    }\\n                    if (this.node.classList != null) {\\n                        this.node.classList.add(cssClass);\\n                    } else if (this.node.className != null) {\\n                        this.node.className = (this.node.className + ' ' + cssClass).trim();\\n                    }\\n                    return this;\\n                };\\n\\n                Wrapper.prototype.attributes = function (attributes) {\\n                    var attr, i, j, len, ref, value;\\n                    if (attributes) {\\n                        _.each(attributes, (function (_this) {\\n                            return function (value, name) {\\n                                return _this.node.setAttribute(name, value);\\n                            };\\n                        })(this));\\n                        return this;\\n                    } else {\\n                        if (this.node.attributes == null) {\\n                            return {};\\n                        }\\n                        attributes = {};\\n                        ref = this.node.attributes;\\n                        for (i = j = 0, len = ref.length; j < len; i = ++j) {\\n                            value = ref[i];\\n                            attr = this.node.attributes[i];\\n                            attributes[attr.name] = attr.value;\\n                        }\\n                        return attributes;\\n                    }\\n                };\\n\\n                Wrapper.prototype.child = function (offset) {\\n                    var child, length;\\n                    child = this.node.firstChild;\\n                    length = dom(child).length();\\n                    while (child != null) {\\n                        if (offset < length) {\\n                            break;\\n                        }\\n                        offset -= length;\\n                        child = child.nextSibling;\\n                        length = dom(child).length();\\n                    }\\n                    if (child == null) {\\n                        child = this.node.lastChild;\\n                        offset = dom(child).length();\\n                    }\\n                    return [child, offset];\\n                };\\n\\n                Wrapper.prototype.childNodes = function () {\\n                    return _.map(this.node.childNodes);\\n                };\\n\\n                Wrapper.prototype.classes = function () {\\n                    return this.node.className.split(/\\\\s+/);\\n                };\\n\\n                Wrapper.prototype.data = function (key, value) {\\n                    var ref;\\n                    if (value != null) {\\n                        if (this.node['ql-data'] == null) {\\n                            this.node['ql-data'] = {};\\n                        }\\n                        this.node['ql-data'][key] = value;\\n                        return this;\\n                    } else {\\n                        return (ref = this.node['ql-data']) != null ? ref[key] : void 0;\\n                    }\\n                };\\n\\n                Wrapper.prototype.descendants = function () {\\n                    return _.map(this.node.getElementsByTagName('*'));\\n                };\\n\\n                Wrapper.prototype.get = function () {\\n                    return this.node;\\n                };\\n\\n                Wrapper.prototype.hasClass = function (cssClass) {\\n                    if (this.node.classList != null) {\\n                        return this.node.classList.contains(cssClass);\\n                    } else if (this.node.className != null) {\\n                        return this.classes().indexOf(cssClass) > -1;\\n                    }\\n                    return false;\\n                };\\n\\n                Wrapper.prototype.isAncestor = function (ancestor, inclusive) {\\n                    var node;\\n                    if (inclusive == null) {\\n                        inclusive = false;\\n                    }\\n                    if (ancestor === this.node) {\\n                        return inclusive;\\n                    }\\n                    node = this.node;\\n                    while (node) {\\n                        if (node === ancestor) {\\n                            return true;\\n                        }\\n                        node = node.parentNode;\\n                    }\\n                    return false;\\n                };\\n\\n                Wrapper.prototype.isElement = function () {\\n                    var ref;\\n                    return ((ref = this.node) != null ? ref.nodeType : void 0) === dom.ELEMENT_NODE;\\n                };\\n\\n                Wrapper.prototype.isTextNode = function () {\\n                    var ref;\\n                    return ((ref = this.node) != null ? ref.nodeType : void 0) === dom.TEXT_NODE;\\n                };\\n\\n                Wrapper.prototype.isolate = function (root) {\\n                    if (this.node.nextSibling != null) {\\n                        dom(this.node.nextSibling).splitBefore(root);\\n                    }\\n                    this.splitBefore(root);\\n                    return this;\\n                };\\n\\n                Wrapper.prototype.length = function () {\\n                    var length;\\n                    if (this.node == null) {\\n                        return 0;\\n                    }\\n                    length = this.text().length;\\n                    if (this.isElement()) {\\n                        length += this.node.querySelectorAll(Object.keys(dom.EMBED_TAGS).join(',')).length;\\n                    }\\n                    return length;\\n                };\\n\\n                Wrapper.prototype.merge = function (node) {\\n                    var $node;\\n                    $node = dom(node);\\n                    if (this.isElement()) {\\n                        $node.moveChildren(this.node);\\n                        this.normalize();\\n                    } else {\\n                        this.text(this.text() + $node.text());\\n                    }\\n                    $node.remove();\\n                    return this;\\n                };\\n\\n                Wrapper.prototype.moveChildren = function (newParent) {\\n                    _.each(this.childNodes(), function (child) {\\n                        return newParent.appendChild(child);\\n                    });\\n                    return this;\\n                };\\n\\n                Wrapper.prototype.nextLineNode = function (root) {\\n                    var nextNode;\\n                    nextNode = this.node.nextSibling;\\n                    if ((nextNode == null) && this.node.parentNode !== root) {\\n                        nextNode = this.node.parentNode.nextSibling;\\n                    }\\n                    if ((nextNode != null) && (dom.LIST_TAGS[nextNode.tagName] != null)) {\\n                        nextNode = nextNode.firstChild;\\n                    }\\n                    return nextNode;\\n                };\\n\\n                Wrapper.prototype.normalize = function () {\\n                    var $node, curNode, followingNode, nextNode;\\n                    curNode = this.node.firstChild;\\n                    while (curNode != null) {\\n                        nextNode = curNode.nextSibling;\\n                        $node = dom(curNode);\\n                        if ((nextNode != null) && dom(nextNode).isTextNode()) {\\n                            if ($node.text().length === 0) {\\n                                $node.remove();\\n                            } else if ($node.isTextNode()) {\\n                                followingNode = nextNode.nextSibling;\\n                                $node.merge(nextNode);\\n                                nextNode = followingNode;\\n                            }\\n                        }\\n                        curNode = nextNode;\\n                    }\\n                    return this;\\n                };\\n\\n                Wrapper.prototype.on = function (eventName, listener) {\\n                    this.node.addEventListener(eventName, (function (_this) {\\n                        return function (event) {\\n                            var arg, propagate;\\n                            arg = lastKeyEvent && (eventName === 'keydown' || eventName === 'keyup') ? lastKeyEvent : event;\\n                            propagate = listener.call(_this.node, arg);\\n                            if (!propagate) {\\n                                event.preventDefault();\\n                                event.stopPropagation();\\n                            }\\n                            return propagate;\\n                        };\\n                    })(this));\\n                    return this;\\n                };\\n\\n                Wrapper.prototype.remove = function () {\\n                    var ref;\\n                    if ((ref = this.node.parentNode) != null) {\\n                        ref.removeChild(this.node);\\n                    }\\n                    this.node = null;\\n                    return null;\\n                };\\n\\n                Wrapper.prototype.removeClass = function (cssClass) {\\n                    var classArray;\\n                    if (!this.hasClass(cssClass)) {\\n                        return;\\n                    }\\n                    if (this.node.classList != null) {\\n                        this.node.classList.remove(cssClass);\\n                    } else if (this.node.className != null) {\\n                        classArray = this.classes();\\n                        classArray.splice(classArray.indexOf(cssClass), 1);\\n                        this.node.className = classArray.join(' ');\\n                    }\\n                    if (!this.node.getAttribute('class')) {\\n                        this.node.removeAttribute('class');\\n                    }\\n                    return this;\\n                };\\n\\n                Wrapper.prototype.replace = function (newNode) {\\n                    this.node.parentNode.replaceChild(newNode, this.node);\\n                    this.node = newNode;\\n                    return this;\\n                };\\n\\n                Wrapper.prototype.splitBefore = function (root, force) {\\n                    var nextNode, parentClone, parentNode, refNode;\\n                    if (force == null) {\\n                        force = false;\\n                    }\\n                    if (this.node === root || this.node.parentNode === root) {\\n                        return this;\\n                    }\\n                    if ((this.node.previousSibling != null) || force) {\\n                        parentNode = this.node.parentNode;\\n                        parentClone = parentNode.cloneNode(false);\\n                        parentNode.parentNode.insertBefore(parentClone, parentNode.nextSibling);\\n                        refNode = this.node;\\n                        while (refNode != null) {\\n                            nextNode = refNode.nextSibling;\\n                            parentClone.appendChild(refNode);\\n                            refNode = nextNode;\\n                        }\\n                        return dom(parentClone).splitBefore(root);\\n                    } else {\\n                        return dom(this.node.parentNode).splitBefore(root);\\n                    }\\n                };\\n\\n                Wrapper.prototype.split = function (offset, force) {\\n                    var after, child, childLeft, childRight, left, nextRight, nodeLength, ref, ref1, right;\\n                    if (force == null) {\\n                        force = false;\\n                    }\\n                    nodeLength = this.length();\\n                    offset = Math.max(0, offset);\\n                    offset = Math.min(offset, nodeLength);\\n                    if (!(force || offset !== 0)) {\\n                        return [this.node.previousSibling, this.node, false];\\n                    }\\n                    if (!(force || offset !== nodeLength)) {\\n                        return [this.node, this.node.nextSibling, false];\\n                    }\\n                    if (this.node.nodeType === dom.TEXT_NODE) {\\n                        after = this.node.splitText(offset);\\n                        return [this.node, after, true];\\n                    } else {\\n                        left = this.node;\\n                        right = this.node.cloneNode(false);\\n                        this.node.parentNode.insertBefore(right, left.nextSibling);\\n                        ref = this.child(offset), child = ref[0], offset = ref[1];\\n                        ref1 = dom(child).split(offset), childLeft = ref1[0], childRight = ref1[1];\\n                        while (childRight !== null) {\\n                            nextRight = childRight.nextSibling;\\n                            right.appendChild(childRight);\\n                            childRight = nextRight;\\n                        }\\n                        return [left, right, true];\\n                    }\\n                };\\n\\n                Wrapper.prototype.styles = function (styles, overwrite) {\\n                    var obj, styleString;\\n                    if (overwrite == null) {\\n                        overwrite = false;\\n                    }\\n                    if (styles) {\\n                        if (!overwrite) {\\n                            styles = _.defaults(styles, this.styles());\\n                        }\\n                        styleString = _.map(styles, function (style, name) {\\n                                return name + \\\": \\\" + style;\\n                            }).join('; ') + ';';\\n                        this.node.setAttribute('style', styleString);\\n                        return this;\\n                    } else {\\n                        styleString = this.node.getAttribute('style') || '';\\n                        obj = _.reduce(styleString.split(';'), function (styles, str) {\\n                            var name, ref, value;\\n                            ref = str.split(':'), name = ref[0], value = ref[1];\\n                            if (name && value) {\\n                                name = name.trim();\\n                                value = value.trim();\\n                                styles[name.toLowerCase()] = value;\\n                            }\\n                            return styles;\\n                        }, {});\\n                        return obj;\\n                    }\\n                };\\n\\n                Wrapper.prototype.switchTag = function (newTag) {\\n                    var attributes, newNode;\\n                    newTag = newTag.toUpperCase();\\n                    if (this.node.tagName === newTag) {\\n                        return this;\\n                    }\\n                    newNode = document.createElement(newTag);\\n                    attributes = this.attributes();\\n                    if (dom.VOID_TAGS[newTag] == null) {\\n                        this.moveChildren(newNode);\\n                    }\\n                    this.replace(newNode);\\n                    this.node = newNode;\\n                    return this.attributes(attributes);\\n                };\\n\\n                Wrapper.prototype.text = function (text) {\\n                    if (text != null) {\\n                        switch (this.node.nodeType) {\\n                            case dom.ELEMENT_NODE:\\n                                this.node.textContent = text;\\n                                break;\\n                            case dom.TEXT_NODE:\\n                                this.node.data = text;\\n                        }\\n                        return this;\\n                    } else {\\n                        switch (this.node.nodeType) {\\n                            case dom.ELEMENT_NODE:\\n                                if (this.node.tagName === dom.DEFAULT_BREAK_TAG) {\\n                                    return \\\"\\\";\\n                                }\\n                                if (dom.EMBED_TAGS[this.node.tagName] != null) {\\n                                    return dom.EMBED_TEXT;\\n                                }\\n                                if (this.node.textContent != null) {\\n                                    return this.node.textContent;\\n                                }\\n                                return \\\"\\\";\\n                            case dom.TEXT_NODE:\\n                                return this.node.data || \\\"\\\";\\n                            default:\\n                                return \\\"\\\";\\n                        }\\n                    }\\n                };\\n\\n                Wrapper.prototype.textNodes = function () {\\n                    var textNode, textNodes, walker;\\n                    walker = document.createTreeWalker(this.node, NodeFilter.SHOW_TEXT, null, false);\\n                    textNodes = [];\\n                    while (textNode = walker.nextNode()) {\\n                        textNodes.push(textNode);\\n                    }\\n                    return textNodes;\\n                };\\n\\n                Wrapper.prototype.toggleClass = function (className, state) {\\n                    if (state == null) {\\n                        state = !this.hasClass(className);\\n                    }\\n                    if (state) {\\n                        this.addClass(className);\\n                    } else {\\n                        this.removeClass(className);\\n                    }\\n                    return this;\\n                };\\n\\n                Wrapper.prototype.trigger = function (eventName, options) {\\n                    var event, initFn, modifiers;\\n                    if (options == null) {\\n                        options = {};\\n                    }\\n                    if (['keypress', 'keydown', 'keyup'].indexOf(eventName) < 0) {\\n                        event = document.createEvent('Event');\\n                        event.initEvent(eventName, options.bubbles, options.cancelable);\\n                    } else {\\n                        event = document.createEvent('KeyboardEvent');\\n                        lastKeyEvent = _.clone(options);\\n                        if (_.isNumber(options.key)) {\\n                            lastKeyEvent.which = options.key;\\n                        } else if (_.isString(options.key)) {\\n                            lastKeyEvent.which = options.key.toUpperCase().charCodeAt(0);\\n                        } else {\\n                            lastKeyEvent.which = 0;\\n                        }\\n                        if (dom.isIE(10)) {\\n                            modifiers = [];\\n                            if (options.altKey) {\\n                                modifiers.push('Alt');\\n                            }\\n                            if (options.ctrlKey) {\\n                                modifiers.push('Control');\\n                            }\\n                            if (options.metaKey) {\\n                                modifiers.push('Meta');\\n                            }\\n                            if (options.shiftKey) {\\n                                modifiers.push('Shift');\\n                            }\\n                            event.initKeyboardEvent(eventName, options.bubbles, options.cancelable, window, 0, 0, modifiers.join(' '), null, null);\\n                        } else {\\n                            initFn = _.isFunction(event.initKeyboardEvent) ? 'initKeyboardEvent' : 'initKeyEvent';\\n                            event[initFn](eventName, options.bubbles, options.cancelable, window, options.ctrlKey, options.altKey, options.shiftKey, options.metaKey, 0, 0);\\n                        }\\n                    }\\n                    this.node.dispatchEvent(event);\\n                    lastKeyEvent = null;\\n                    return this;\\n                };\\n\\n                Wrapper.prototype.unwrap = function () {\\n                    var next, ret;\\n                    ret = this.node.firstChild;\\n                    next = this.node.nextSibling;\\n                    _.each(this.childNodes(), (function (_this) {\\n                        return function (child) {\\n                            return _this.node.parentNode.insertBefore(child, next);\\n                        };\\n                    })(this));\\n                    this.remove();\\n                    return ret;\\n                };\\n\\n                Wrapper.prototype.wrap = function (wrapper) {\\n                    var parent;\\n                    if (this.node.parentNode != null) {\\n                        this.node.parentNode.insertBefore(wrapper, this.node);\\n                    }\\n                    parent = wrapper;\\n                    while (parent.firstChild != null) {\\n                        parent = wrapper.firstChild;\\n                    }\\n                    parent.appendChild(this.node);\\n                    return this;\\n                };\\n\\n                return Wrapper;\\n\\n            })();\\n\\n            SelectWrapper = (function (superClass) {\\n                extend(SelectWrapper, superClass);\\n\\n                function SelectWrapper() {\\n                    return SelectWrapper.__super__.constructor.apply(this, arguments);\\n                }\\n\\n                SelectWrapper.prototype[\\\"default\\\"] = function () {\\n                    return this.node.querySelector('option[selected]');\\n                };\\n\\n                SelectWrapper.prototype.option = function (option, trigger) {\\n                    var child, i, j, len, ref, value;\\n                    if (trigger == null) {\\n                        trigger = true;\\n                    }\\n                    value = _.isElement(option) ? option.value : option;\\n                    if (value) {\\n                        value = value.replace(/[^\\\\w]+/g, '');\\n                        ref = this.node.children;\\n                        for (i = j = 0, len = ref.length; j < len; i = ++j) {\\n                            child = ref[i];\\n                            if (child.value.replace(/[^\\\\w]+/g, '') === value) {\\n                                this.node.selectedIndex = i;\\n                                break;\\n                            }\\n                        }\\n                    } else {\\n                        this.node.selectedIndex = -1;\\n                    }\\n                    if (trigger) {\\n                        this.trigger('change');\\n                    }\\n                    return this;\\n                };\\n\\n                SelectWrapper.prototype.reset = function (trigger) {\\n                    var option;\\n                    if (trigger == null) {\\n                        trigger = true;\\n                    }\\n                    option = this[\\\"default\\\"]();\\n                    if (option != null) {\\n                        option.selected = true;\\n                    } else {\\n                        this.node.selectedIndex = 0;\\n                    }\\n                    if (trigger) {\\n                        this.trigger('change');\\n                    }\\n                    return this;\\n                };\\n\\n                SelectWrapper.prototype.value = function () {\\n                    if (this.node.selectedIndex > -1) {\\n                        return this.node.options[this.node.selectedIndex].value;\\n                    } else {\\n                        return '';\\n                    }\\n                };\\n\\n                return SelectWrapper;\\n\\n            })(Wrapper);\\n\\n            dom = function (node) {\\n                if ((node != null ? node.tagName : void 0) === 'SELECT') {\\n                    return new SelectWrapper(node);\\n                } else {\\n                    return new Wrapper(node);\\n                }\\n            };\\n\\n            dom = _.extend(dom, {\\n                ELEMENT_NODE: 1,\\n                NOBREAK_SPACE: \\\"&nbsp;\\\",\\n                TEXT_NODE: 3,\\n                ZERO_WIDTH_NOBREAK_SPACE: \\\"\\\\uFEFF\\\",\\n                DEFAULT_BLOCK_TAG: 'DIV',\\n                DEFAULT_BREAK_TAG: 'BR',\\n                DEFAULT_INLINE_TAG: 'SPAN',\\n                EMBED_TEXT: '!',\\n                FONT_SIZES: {\\n                    '10px': 1,\\n                    '13px': 2,\\n                    '16px': 3,\\n                    '18px': 4,\\n                    '24px': 5,\\n                    '32px': 6,\\n                    '48px': 7\\n                },\\n                KEYS: {\\n                    BACKSPACE: 8,\\n                    TAB: 9,\\n                    ENTER: 13,\\n                    ESCAPE: 27,\\n                    LEFT: 37,\\n                    UP: 38,\\n                    RIGHT: 39,\\n                    DOWN: 40,\\n                    DELETE: 46\\n                },\\n                BLOCK_TAGS: {\\n                    'ADDRESS': 'ADDRESS',\\n                    'ARTICLE': 'ARTICLE',\\n                    'ASIDE': 'ASIDE',\\n                    'AUDIO': 'AUDIO',\\n                    'BLOCKQUOTE': 'BLOCKQUOTE',\\n                    'CANVAS': 'CANVAS',\\n                    'DD': 'DD',\\n                    'DIV': 'DIV',\\n                    'DL': 'DL',\\n                    'FIGCAPTION': 'FIGCAPTION',\\n                    'FIGURE': 'FIGURE',\\n                    'FOOTER': 'FOOTER',\\n                    'FORM': 'FORM',\\n                    'H1': 'H1',\\n                    'H2': 'H2',\\n                    'H3': 'H3',\\n                    'H4': 'H4',\\n                    'H5': 'H5',\\n                    'H6': 'H6',\\n                    'HEADER': 'HEADER',\\n                    'HGROUP': 'HGROUP',\\n                    'LI': 'LI',\\n                    'OL': 'OL',\\n                    'OUTPUT': 'OUTPUT',\\n                    'P': 'P',\\n                    'PRE': 'PRE',\\n                    'SECTION': 'SECTION',\\n                    'TABLE': 'TABLE',\\n                    'TBODY': 'TBODY',\\n                    'TD': 'TD',\\n                    'TFOOT': 'TFOOT',\\n                    'TH': 'TH',\\n                    'THEAD': 'THEAD',\\n                    'TR': 'TR',\\n                    'UL': 'UL',\\n                    'VIDEO': 'VIDEO'\\n                },\\n                EMBED_TAGS: {\\n                    'IMG': 'IMG'\\n                },\\n                LINE_TAGS: {\\n                    'DIV': 'DIV',\\n                    'LI': 'LI'\\n                },\\n                LIST_TAGS: {\\n                    'OL': 'OL',\\n                    'UL': 'UL'\\n                },\\n                VOID_TAGS: {\\n                    'AREA': 'AREA',\\n                    'BASE': 'BASE',\\n                    'BR': 'BR',\\n                    'COL': 'COL',\\n                    'COMMAND': 'COMMAND',\\n                    'EMBED': 'EMBED',\\n                    'HR': 'HR',\\n                    'IMG': 'IMG',\\n                    'INPUT': 'INPUT',\\n                    'KEYGEN': 'KEYGEN',\\n                    'LINK': 'LINK',\\n                    'META': 'META',\\n                    'PARAM': 'PARAM',\\n                    'SOURCE': 'SOURCE',\\n                    'TRACK': 'TRACK',\\n                    'WBR': 'WBR'\\n                },\\n                convertFontSize: function (size) {\\n                    var i, s, sources, targets;\\n                    if (_.isString(size) && size.indexOf('px') > -1) {\\n                        sources = Object.keys(dom.FONT_SIZES);\\n                        targets = _.values(dom.FONT_SIZES);\\n                    } else {\\n                        targets = Object.keys(dom.FONT_SIZES);\\n                        sources = _.values(dom.FONT_SIZES);\\n                    }\\n                    for (i in sources) {\\n                        s = sources[i];\\n                        if (parseInt(size) <= parseInt(s)) {\\n                            return targets[i];\\n                        }\\n                    }\\n                    return _.last(targets);\\n                },\\n                isIE: function (maxVersion) {\\n                    var version;\\n                    version = document.documentMode;\\n                    return version && maxVersion >= version;\\n                },\\n                isIOS: function () {\\n                    return /iPhone|iPad/i.test(navigator.userAgent);\\n                },\\n                isMac: function () {\\n                    return /Mac/i.test(navigator.platform);\\n                }\\n            });\\n\\n            module.exports = dom;\\n\\n\\n        }, {\\\"lodash\\\": 1}],\\n        18: [function (_dereq_, module, exports) {\\n            var LinkedList, Node;\\n\\n            Node = (function () {\\n                function Node(data) {\\n                    this.data = data;\\n                    this.prev = this.next = null;\\n                }\\n\\n                return Node;\\n\\n            })();\\n\\n            LinkedList = (function () {\\n                LinkedList.Node = Node;\\n\\n                function LinkedList() {\\n                    this.length = 0;\\n                    this.first = this.last = null;\\n                }\\n\\n                LinkedList.prototype.append = function (node) {\\n                    if (this.first != null) {\\n                        node.next = null;\\n                        this.last.next = node;\\n                    } else {\\n                        this.first = node;\\n                    }\\n                    node.prev = this.last;\\n                    this.last = node;\\n                    return this.length += 1;\\n                };\\n\\n                LinkedList.prototype.insertAfter = function (refNode, newNode) {\\n                    newNode.prev = refNode;\\n                    if (refNode != null) {\\n                        newNode.next = refNode.next;\\n                        if (refNode.next != null) {\\n                            refNode.next.prev = newNode;\\n                        }\\n                        refNode.next = newNode;\\n                        if (refNode === this.last) {\\n                            this.last = newNode;\\n                        }\\n                    } else {\\n                        newNode.next = this.first;\\n                        this.first.prev = newNode;\\n                        this.first = newNode;\\n                    }\\n                    return this.length += 1;\\n                };\\n\\n                LinkedList.prototype.remove = function (node) {\\n                    if (this.length > 1) {\\n                        if (node.prev != null) {\\n                            node.prev.next = node.next;\\n                        }\\n                        if (node.next != null) {\\n                            node.next.prev = node.prev;\\n                        }\\n                        if (node === this.first) {\\n                            this.first = node.next;\\n                        }\\n                        if (node === this.last) {\\n                            this.last = node.prev;\\n                        }\\n                    } else {\\n                        this.first = this.last = null;\\n                    }\\n                    node.prev = node.next = null;\\n                    return this.length -= 1;\\n                };\\n\\n                LinkedList.prototype.toArray = function () {\\n                    var arr, cur;\\n                    arr = [];\\n                    cur = this.first;\\n                    while (cur != null) {\\n                        arr.push(cur);\\n                        cur = cur.next;\\n                    }\\n                    return arr;\\n                };\\n\\n                return LinkedList;\\n\\n            })();\\n\\n            module.exports = LinkedList;\\n\\n\\n        }, {}],\\n        19: [function (_dereq_, module, exports) {\\n            var Picker, _, dom;\\n\\n            _ = _dereq_('lodash');\\n\\n            dom = _dereq_('./dom');\\n\\n            Picker = (function () {\\n                Picker.TEMPLATE = '<span class=\\\"ql-picker-label\\\"></span><span class=\\\"ql-picker-options\\\"></span>';\\n\\n                function Picker(select) {\\n                    this.select = select;\\n                    this.container = document.createElement('span');\\n                    this.buildPicker();\\n                    dom(this.container).addClass('ql-picker');\\n                    this.select.style.display = 'none';\\n                    this.select.parentNode.insertBefore(this.container, this.select);\\n                    dom(document).on('click', (function (_this) {\\n                        return function () {\\n                            _this.close();\\n                            return true;\\n                        };\\n                    })(this));\\n                    dom(this.label).on('click', (function (_this) {\\n                        return function () {\\n                            _.defer(function () {\\n                                return dom(_this.container).toggleClass('ql-expanded');\\n                            });\\n                            return false;\\n                        };\\n                    })(this));\\n                    dom(this.select).on('change', (function (_this) {\\n                        return function () {\\n                            var item, option;\\n                            if (_this.select.selectedIndex > -1) {\\n                                item = _this.container.querySelectorAll('.ql-picker-item')[_this.select.selectedIndex];\\n                                option = _this.select.options[_this.select.selectedIndex];\\n                            }\\n                            _this.selectItem(item, false);\\n                            return dom(_this.label).toggleClass('ql-active', option !== dom(_this.select)[\\\"default\\\"]());\\n                        };\\n                    })(this));\\n                }\\n\\n                Picker.prototype.buildItem = function (picker, option, index) {\\n                    var item;\\n                    item = document.createElement('span');\\n                    item.setAttribute('data-value', option.getAttribute('value'));\\n                    dom(item).addClass('ql-picker-item').text(dom(option).text()).on('click', (function (_this) {\\n                        return function () {\\n                            _this.selectItem(item, true);\\n                            return _this.close();\\n                        };\\n                    })(this));\\n                    if (this.select.selectedIndex === index) {\\n                        this.selectItem(item, false);\\n                    }\\n                    return item;\\n                };\\n\\n                Picker.prototype.buildPicker = function () {\\n                    var picker;\\n                    _.each(dom(this.select).attributes(), (function (_this) {\\n                        return function (value, name) {\\n                            return _this.container.setAttribute(name, value);\\n                        };\\n                    })(this));\\n                    this.container.innerHTML = Picker.TEMPLATE;\\n                    this.label = this.container.querySelector('.ql-picker-label');\\n                    picker = this.container.querySelector('.ql-picker-options');\\n                    return _.each(this.select.options, (function (_this) {\\n                        return function (option, i) {\\n                            var item;\\n                            item = _this.buildItem(picker, option, i);\\n                            return picker.appendChild(item);\\n                        };\\n                    })(this));\\n                };\\n\\n                Picker.prototype.close = function () {\\n                    return dom(this.container).removeClass('ql-expanded');\\n                };\\n\\n                Picker.prototype.selectItem = function (item, trigger) {\\n                    var selected, value;\\n                    selected = this.container.querySelector('.ql-selected');\\n                    if (selected != null) {\\n                        dom(selected).removeClass('ql-selected');\\n                    }\\n                    if (item != null) {\\n                        value = item.getAttribute('data-value');\\n                        dom(item).addClass('ql-selected');\\n                        dom(this.label).text(dom(item).text());\\n                        dom(this.select).option(value, trigger);\\n                        return this.label.setAttribute('data-value', value);\\n                    } else {\\n                        this.label.innerHTML = '&nbsp;';\\n                        return this.label.removeAttribute('data-value');\\n                    }\\n                };\\n\\n                return Picker;\\n\\n            })();\\n\\n            module.exports = Picker;\\n\\n\\n        }, {\\\"./dom\\\": 17, \\\"lodash\\\": 1}],\\n        20: [function (_dereq_, module, exports) {\\n            var Range, _;\\n\\n            _ = _dereq_('lodash');\\n\\n            Range = (function () {\\n                Range.compare = function (r1, r2) {\\n                    if (r1 === r2) {\\n                        return true;\\n                    }\\n                    if (!((r1 != null) && (r2 != null))) {\\n                        return false;\\n                    }\\n                    return r1.equals(r2);\\n                };\\n\\n                function Range(start, end) {\\n                    this.start = start;\\n                    this.end = end;\\n                }\\n\\n                Range.prototype.equals = function (range) {\\n                    if (range == null) {\\n                        return false;\\n                    }\\n                    return this.start === range.start && this.end === range.end;\\n                };\\n\\n                Range.prototype.shift = function (index, length) {\\n                    var ref;\\n                    return ref = _.map([this.start, this.end], function (pos) {\\n                        if (index > pos) {\\n                            return pos;\\n                        }\\n                        if (length >= 0) {\\n                            return pos + length;\\n                        } else {\\n                            return Math.max(index, pos + length);\\n                        }\\n                    }), this.start = ref[0], this.end = ref[1], ref;\\n                };\\n\\n                Range.prototype.isCollapsed = function () {\\n                    return this.start === this.end;\\n                };\\n\\n                return Range;\\n\\n            })();\\n\\n            module.exports = Range;\\n\\n\\n        }, {\\\"lodash\\\": 1}],\\n        21: [function (_dereq_, module, exports) {\\n            var Authorship, Delta, Quill, _, dom;\\n\\n            Quill = _dereq_('../quill');\\n\\n            _ = Quill.require('lodash');\\n\\n            dom = Quill.require('dom');\\n\\n            Delta = Quill.require('delta');\\n\\n            Authorship = (function () {\\n                Authorship.DEFAULTS = {\\n                    authorId: null,\\n                    color: 'transparent',\\n                    enabled: false\\n                };\\n\\n                function Authorship(quill, options) {\\n                    this.quill = quill;\\n                    this.options = options;\\n                    if (this.options.button != null) {\\n                        this.attachButton(this.options.button);\\n                    }\\n                    if (this.options.enabled) {\\n                        this.enable();\\n                    }\\n                    this.quill.addFormat('author', {\\n                        \\\"class\\\": 'author-'\\n                    });\\n                    if (this.options.authorId == null) {\\n                        return;\\n                    }\\n                    this.quill.on(this.quill.constructor.events.PRE_EVENT, (function (_this) {\\n                        return function (eventName, delta, origin) {\\n                            var authorDelta, authorFormat;\\n                            if (eventName === _this.quill.constructor.events.TEXT_CHANGE && origin === 'user') {\\n                                authorDelta = new Delta();\\n                                authorFormat = {\\n                                    author: _this.options.authorId\\n                                };\\n                                _.each(delta.ops, function (op) {\\n                                    if (op[\\\"delete\\\"] != null) {\\n                                        return;\\n                                    }\\n                                    if ((op.insert != null) || ((op.retain != null) && (op.attributes != null))) {\\n                                        op.attributes || (op.attributes = {});\\n                                        op.attributes.author = _this.options.authorId;\\n                                        return authorDelta.retain(op.retain || op.insert.length || 1, authorFormat);\\n                                    } else {\\n                                        return authorDelta.retain(op.retain);\\n                                    }\\n                                });\\n                                return _this.quill.updateContents(authorDelta, Quill.sources.SILENT);\\n                            }\\n                        };\\n                    })(this));\\n                    this.addAuthor(this.options.authorId, this.options.color);\\n                }\\n\\n                Authorship.prototype.addAuthor = function (id, color) {\\n                    var styles;\\n                    styles = {};\\n                    styles[\\\".authorship .author-\\\" + id] = {\\n                        \\\"background-color\\\": \\\"\\\" + color\\n                    };\\n                    return this.quill.theme.addStyles(styles);\\n                };\\n\\n                Authorship.prototype.attachButton = function (button) {\\n                    var $button;\\n                    $button = dom(button);\\n                    return $button.on('click', (function (_this) {\\n                        return function () {\\n                            $button.toggleClass('ql-on');\\n                            return _this.enable($dom.hasClass('ql-on'));\\n                        };\\n                    })(this));\\n                };\\n\\n                Authorship.prototype.enable = function (enabled) {\\n                    if (enabled == null) {\\n                        enabled = true;\\n                    }\\n                    return dom(this.quill.root).toggleClass('authorship', enabled);\\n                };\\n\\n                Authorship.prototype.disable = function () {\\n                    return this.enable(false);\\n                };\\n\\n                return Authorship;\\n\\n            })();\\n\\n            Quill.registerModule('authorship', Authorship);\\n\\n            module.exports = Authorship;\\n\\n\\n        }, {\\\"../quill\\\": 30}],\\n        22: [function (_dereq_, module, exports) {\\n            var Delta, ImageTooltip, Quill, Range, Tooltip, _, dom,\\n                extend = function (child, parent) {\\n                    for (var key in parent) {\\n                        if (hasProp.call(parent, key)) child[key] = parent[key];\\n                    }\\n                    function ctor() {\\n                        this.constructor = child;\\n                    }\\n\\n                    ctor.prototype = parent.prototype;\\n                    child.prototype = new ctor();\\n                    child.__super__ = parent.prototype;\\n                    return child;\\n                },\\n                hasProp = {}.hasOwnProperty;\\n\\n            Quill = _dereq_('../quill');\\n\\n            Tooltip = _dereq_('./tooltip');\\n\\n            _ = Quill.require('lodash');\\n\\n            dom = Quill.require('dom');\\n\\n            Delta = Quill.require('delta');\\n\\n            Range = Quill.require('range');\\n\\n            ImageTooltip = (function (superClass) {\\n                extend(ImageTooltip, superClass);\\n\\n                ImageTooltip.DEFAULTS = {\\n                    template: '<input class=\\\"input\\\" type=\\\"textbox\\\"> <div class=\\\"preview\\\"> <span>Preview</span> </div> <a href=\\\"javascript:;\\\" class=\\\"cancel\\\">Cancel</a> <a href=\\\"javascript:;\\\" class=\\\"insert\\\">Insert</a>'\\n                };\\n\\n                function ImageTooltip(quill, options) {\\n                    this.quill = quill;\\n                    this.options = options;\\n                    this.options = _.defaults(this.options, Tooltip.DEFAULTS);\\n                    ImageTooltip.__super__.constructor.call(this, this.quill, this.options);\\n                    this.preview = this.container.querySelector('.preview');\\n                    this.textbox = this.container.querySelector('.input');\\n                    dom(this.container).addClass('ql-image-tooltip');\\n                    this.initListeners();\\n                }\\n\\n                ImageTooltip.prototype.initListeners = function () {\\n                    dom(this.quill.root).on('focus', _.bind(this.hide, this));\\n                    dom(this.container.querySelector('.insert')).on('click', _.bind(this.insertImage, this));\\n                    dom(this.container.querySelector('.cancel')).on('click', _.bind(this.hide, this));\\n                    dom(this.textbox).on('input', _.bind(this._preview, this));\\n                    this.initTextbox(this.textbox, this.insertImage, this.hide);\\n                    return this.quill.onModuleLoad('toolbar', (function (_this) {\\n                        return function (toolbar) {\\n                            _this.toolbar = toolbar;\\n                            return toolbar.initFormat('image', _.bind(_this._onToolbar, _this));\\n                        };\\n                    })(this));\\n                };\\n\\n                ImageTooltip.prototype.insertImage = function () {\\n                    var index, url;\\n                    url = this._normalizeURL(this.textbox.value);\\n                    if (this.range == null) {\\n                        this.range = new Range(0, 0);\\n                    }\\n                    if (this.range) {\\n                        this.preview.innerHTML = '<span>Preview</span>';\\n                        this.textbox.value = '';\\n                        index = this.range.end;\\n                        this.quill.insertEmbed(index, 'image', url, 'user');\\n                        this.quill.setSelection(index + 1, index + 1);\\n                    }\\n                    return this.hide();\\n                };\\n\\n                ImageTooltip.prototype._onToolbar = function (range, value) {\\n                    if (value) {\\n                        if (!this.textbox.value) {\\n                            this.textbox.value = 'http://';\\n                        }\\n                        this.show();\\n                        this.textbox.focus();\\n                        return _.defer((function (_this) {\\n                            return function () {\\n                                return _this.textbox.setSelectionRange(_this.textbox.value.length, _this.textbox.value.length);\\n                            };\\n                        })(this));\\n                    } else {\\n                        this.quill.deleteText(range, 'user');\\n                        return this.toolbar.setActive('image', false);\\n                    }\\n                };\\n\\n                ImageTooltip.prototype._preview = function () {\\n                    var img;\\n                    if (!this._matchImageURL(this.textbox.value)) {\\n                        return;\\n                    }\\n                    if (this.preview.firstChild.tagName === 'IMG') {\\n                        return this.preview.firstChild.setAttribute('src', this.textbox.value);\\n                    } else {\\n                        img = document.createElement('img');\\n                        img.setAttribute('src', this.textbox.value);\\n                        return this.preview.replaceChild(img, this.preview.firstChild);\\n                    }\\n                };\\n\\n                ImageTooltip.prototype._matchImageURL = function (url) {\\n                    return /^https?:\\\\/\\\\/.+\\\\.(jpe?g|gif|png)$/.test(url);\\n                };\\n\\n                ImageTooltip.prototype._normalizeURL = function (url) {\\n                    if (!/^https?:\\\\/\\\\//.test(url)) {\\n                        url = 'http://' + url;\\n                    }\\n                    return url;\\n                };\\n\\n                return ImageTooltip;\\n\\n            })(Tooltip);\\n\\n            Quill.registerModule('image-tooltip', ImageTooltip);\\n\\n            module.exports = ImageTooltip;\\n\\n\\n        }, {\\\"../quill\\\": 30, \\\"./tooltip\\\": 28}],\\n        23: [function (_dereq_, module, exports) {\\n            var Delta, Keyboard, Quill, _, dom;\\n\\n            Quill = _dereq_('../quill');\\n\\n            _ = Quill.require('lodash');\\n\\n            dom = Quill.require('dom');\\n\\n            Delta = Quill.require('delta');\\n\\n            Keyboard = (function () {\\n                Keyboard.hotkeys = {\\n                    BOLD: {\\n                        key: 'B',\\n                        metaKey: true\\n                    },\\n                    INDENT: {\\n                        key: dom.KEYS.TAB\\n                    },\\n                    ITALIC: {\\n                        key: 'I',\\n                        metaKey: true\\n                    },\\n                    OUTDENT: {\\n                        key: dom.KEYS.TAB,\\n                        shiftKey: true\\n                    },\\n                    UNDERLINE: {\\n                        key: 'U',\\n                        metaKey: true\\n                    }\\n                };\\n\\n                function Keyboard(quill, options) {\\n                    this.quill = quill;\\n                    this.hotkeys = {};\\n                    this._initListeners();\\n                    this._initHotkeys();\\n                    this.quill.onModuleLoad('toolbar', (function (_this) {\\n                        return function (toolbar) {\\n                            return _this.toolbar = toolbar;\\n                        };\\n                    })(this));\\n                }\\n\\n                Keyboard.prototype.addHotkey = function (hotkeys, callback) {\\n                    if (!Array.isArray(hotkeys)) {\\n                        hotkeys = [hotkeys];\\n                    }\\n                    return _.each(hotkeys, (function (_this) {\\n                        return function (hotkey) {\\n                            var base, which;\\n                            hotkey = _.isObject(hotkey) ? _.clone(hotkey) : {\\n                                    key: hotkey\\n                                };\\n                            hotkey.callback = callback;\\n                            which = _.isNumber(hotkey.key) ? hotkey.key : hotkey.key.toUpperCase().charCodeAt(0);\\n                            if ((base = _this.hotkeys)[which] == null) {\\n                                base[which] = [];\\n                            }\\n                            return _this.hotkeys[which].push(hotkey);\\n                        };\\n                    })(this));\\n                };\\n\\n                Keyboard.prototype.removeHotkeys = function (hotkey, callback) {\\n                    var base, kept, ref, removed, which;\\n                    hotkey = _.isString(hotkey) ? hotkey.toUpperCase() : hotkey;\\n                    hotkey = Keyboard.hotkeys[hotkey] ? Keyboard.hotkeys[hotkey] : hotkey;\\n                    hotkey = _.isObject(hotkey) ? hotkey : {\\n                            key: hotkey\\n                        };\\n                    which = _.isNumber(hotkey.key) ? hotkey.key : hotkey.key.charCodeAt(0);\\n                    if ((base = this.hotkeys)[which] == null) {\\n                        base[which] = [];\\n                    }\\n                    ref = _.partition(this.hotkeys[which], function (handler) {\\n                        return _.isEqual(hotkey, _.omit(handler, 'callback')) && (!callback || callback === handler.callback);\\n                    }), removed = ref[0], kept = ref[1];\\n                    this.hotkeys[which] = kept;\\n                    return _.map(removed, 'callback');\\n                };\\n\\n                Keyboard.prototype.toggleFormat = function (range, format) {\\n                    var delta, value;\\n                    if (range.isCollapsed()) {\\n                        delta = this.quill.getContents(Math.max(0, range.start - 1), range.end);\\n                    } else {\\n                        delta = this.quill.getContents(range);\\n                    }\\n                    value = delta.ops.length === 0 || !_.all(delta.ops, function (op) {\\n                            var ref;\\n                            return (ref = op.attributes) != null ? ref[format] : void 0;\\n                        });\\n                    if (range.isCollapsed()) {\\n                        this.quill.prepareFormat(format, value, Quill.sources.USER);\\n                    } else {\\n                        this.quill.formatText(range, format, value, Quill.sources.USER);\\n                    }\\n                    if (this.toolbar != null) {\\n                        return this.toolbar.setActive(format, value);\\n                    }\\n                };\\n\\n                Keyboard.prototype._initEnter = function () {\\n                    var keys;\\n                    keys = [\\n                        {\\n                            key: dom.KEYS.ENTER\\n                        }, {\\n                            key: dom.KEYS.ENTER,\\n                            shiftKey: true\\n                        }\\n                    ];\\n                    return this.addHotkey(keys, (function (_this) {\\n                        return function (range, hotkey) {\\n                            var delta, leaf, line, offset, ref, ref1;\\n                            if (range == null) {\\n                                return true;\\n                            }\\n                            ref = _this.quill.editor.doc.findLineAt(range.start), line = ref[0], offset = ref[1];\\n                            ref1 = line.findLeafAt(offset), leaf = ref1[0], offset = ref1[1];\\n                            delta = new Delta().retain(range.start).insert('\\\\n', line.formats)[\\\"delete\\\"](range.end - range.start);\\n                            _this.quill.updateContents(delta, Quill.sources.USER);\\n                            _.each(leaf.formats, function (value, format) {\\n                                _this.quill.prepareFormat(format, value);\\n                                if (_this.toolbar != null) {\\n                                    _this.toolbar.setActive(format, value);\\n                                }\\n                            });\\n                            _this.quill.editor.selection.scrollIntoView();\\n                            return false;\\n                        };\\n                    })(this));\\n                };\\n\\n                Keyboard.prototype._initDeletes = function () {\\n                    return this.addHotkey([dom.KEYS.DELETE, dom.KEYS.BACKSPACE], (function (_this) {\\n                        return function (range, hotkey) {\\n                            var format, line, offset, ref;\\n                            if ((range != null) && _this.quill.getLength() > 0) {\\n                                if (range.start !== range.end) {\\n                                    _this.quill.deleteText(range.start, range.end, Quill.sources.USER);\\n                                } else {\\n                                    if (hotkey.key === dom.KEYS.BACKSPACE) {\\n                                        ref = _this.quill.editor.doc.findLineAt(range.start), line = ref[0], offset = ref[1];\\n                                        if (offset === 0 && (line.formats.bullet || line.formats.list)) {\\n                                            format = line.formats.bullet ? 'bullet' : 'list';\\n                                            _this.quill.formatLine(range.start, range.start, format, false, Quill.sources.USER);\\n                                        } else if (range.start > 0) {\\n                                            _this.quill.deleteText(range.start - 1, range.start, Quill.sources.USER);\\n                                        }\\n                                    } else if (range.start < _this.quill.getLength() - 1) {\\n                                        _this.quill.deleteText(range.start, range.start + 1, Quill.sources.USER);\\n                                    }\\n                                }\\n                            }\\n                            _this.quill.editor.selection.scrollIntoView();\\n                            return false;\\n                        };\\n                    })(this));\\n                };\\n\\n                Keyboard.prototype._initHotkeys = function () {\\n                    this.addHotkey(Keyboard.hotkeys.INDENT, (function (_this) {\\n                        return function (range) {\\n                            _this._onTab(range, false);\\n                            return false;\\n                        };\\n                    })(this));\\n                    this.addHotkey(Keyboard.hotkeys.OUTDENT, (function (_this) {\\n                        return function (range) {\\n                            return false;\\n                        };\\n                    })(this));\\n                    _.each(['bold', 'italic', 'underline'], (function (_this) {\\n                        return function (format) {\\n                            return _this.addHotkey(Keyboard.hotkeys[format.toUpperCase()], function (range) {\\n                                if (_this.quill.editor.doc.formats[format]) {\\n                                    _this.toggleFormat(range, format);\\n                                }\\n                                return false;\\n                            });\\n                        };\\n                    })(this));\\n                    this._initDeletes();\\n                    return this._initEnter();\\n                };\\n\\n                Keyboard.prototype._initListeners = function () {\\n                    return dom(this.quill.root).on('keydown', (function (_this) {\\n                        return function (event) {\\n                            var prevent;\\n                            prevent = false;\\n                            _.each(_this.hotkeys[event.which], function (hotkey) {\\n                                var metaKey;\\n                                metaKey = dom.isMac() ? event.metaKey : event.metaKey || event.ctrlKey;\\n                                if (!!hotkey.metaKey !== !!metaKey) {\\n                                    return;\\n                                }\\n                                if (!!hotkey.shiftKey !== !!event.shiftKey) {\\n                                    return;\\n                                }\\n                                if (!!hotkey.altKey !== !!event.altKey) {\\n                                    return;\\n                                }\\n                                prevent = hotkey.callback(_this.quill.getSelection(), hotkey, event) === false || prevent;\\n                                return true;\\n                            });\\n                            return !prevent;\\n                        };\\n                    })(this));\\n                };\\n\\n                Keyboard.prototype._onTab = function (range, shift) {\\n                    var delta;\\n                    if (shift == null) {\\n                        shift = false;\\n                    }\\n                    delta = new Delta().retain(range.start).insert(\\\"\\\\t\\\")[\\\"delete\\\"](range.end - range.start).retain(this.quill.getLength() - range.end);\\n                    this.quill.updateContents(delta, Quill.sources.USER);\\n                    return this.quill.setSelection(range.start + 1, range.start + 1);\\n                };\\n\\n                return Keyboard;\\n\\n            })();\\n\\n            Quill.registerModule('keyboard', Keyboard);\\n\\n            module.exports = Keyboard;\\n\\n\\n        }, {\\\"../quill\\\": 30}],\\n        24: [function (_dereq_, module, exports) {\\n            var LinkTooltip, Quill, Tooltip, _, dom,\\n                extend = function (child, parent) {\\n                    for (var key in parent) {\\n                        if (hasProp.call(parent, key)) child[key] = parent[key];\\n                    }\\n                    function ctor() {\\n                        this.constructor = child;\\n                    }\\n\\n                    ctor.prototype = parent.prototype;\\n                    child.prototype = new ctor();\\n                    child.__super__ = parent.prototype;\\n                    return child;\\n                },\\n                hasProp = {}.hasOwnProperty;\\n\\n            Quill = _dereq_('../quill');\\n\\n            Tooltip = _dereq_('./tooltip');\\n\\n            _ = Quill.require('lodash');\\n\\n            dom = Quill.require('dom');\\n\\n            LinkTooltip = (function (superClass) {\\n                extend(LinkTooltip, superClass);\\n\\n                LinkTooltip.DEFAULTS = {\\n                    maxLength: 50,\\n                    template: '<span class=\\\"title\\\">Visit URL:&nbsp;</span> <a href=\\\"#\\\" class=\\\"url\\\" target=\\\"_blank\\\" href=\\\"about:blank\\\"></a> <input class=\\\"input\\\" type=\\\"text\\\"> <span>&nbsp;&#45;&nbsp;</span> <a href=\\\"javascript:;\\\" class=\\\"change\\\">Change</a> <a href=\\\"javascript:;\\\" class=\\\"remove\\\">Remove</a> <a href=\\\"javascript:;\\\" class=\\\"done\\\">Done</a>'\\n                };\\n\\n                LinkTooltip.hotkeys = {\\n                    LINK: {\\n                        key: 'K',\\n                        metaKey: true\\n                    }\\n                };\\n\\n                function LinkTooltip(quill, options) {\\n                    this.quill = quill;\\n                    this.options = options;\\n                    this.options = _.defaults(this.options, Tooltip.DEFAULTS);\\n                    LinkTooltip.__super__.constructor.call(this, this.quill, this.options);\\n                    dom(this.container).addClass('ql-link-tooltip');\\n                    this.textbox = this.container.querySelector('.input');\\n                    this.link = this.container.querySelector('.url');\\n                    this.initListeners();\\n                }\\n\\n                LinkTooltip.prototype.initListeners = function () {\\n                    this.quill.on(this.quill.constructor.events.SELECTION_CHANGE, (function (_this) {\\n                        return function (range) {\\n                            var anchor;\\n                            if (!((range != null) && range.isCollapsed())) {\\n                                return;\\n                            }\\n                            anchor = _this._findAnchor(range);\\n                            if (anchor) {\\n                                _this.setMode(anchor.href, false);\\n                                return _this.show(anchor);\\n                            } else if (_this.container.style.left !== Tooltip.HIDE_MARGIN) {\\n                                _this.range = null;\\n                                return _this.hide();\\n                            }\\n                        };\\n                    })(this));\\n                    dom(this.container.querySelector('.done')).on('click', _.bind(this.saveLink, this));\\n                    dom(this.container.querySelector('.remove')).on('click', (function (_this) {\\n                        return function () {\\n                            return _this.removeLink(_this.range);\\n                        };\\n                    })(this));\\n                    dom(this.container.querySelector('.change')).on('click', (function (_this) {\\n                        return function () {\\n                            return _this.setMode(_this.link.href, true);\\n                        };\\n                    })(this));\\n                    this.initTextbox(this.textbox, this.saveLink, this.hide);\\n                    this.quill.onModuleLoad('toolbar', (function (_this) {\\n                        return function (toolbar) {\\n                            _this.toolbar = toolbar;\\n                            return toolbar.initFormat('link', _.bind(_this._onToolbar, _this));\\n                        };\\n                    })(this));\\n                    return this.quill.onModuleLoad('keyboard', (function (_this) {\\n                        return function (keyboard) {\\n                            return keyboard.addHotkey(LinkTooltip.hotkeys.LINK, _.bind(_this._onKeyboard, _this));\\n                        };\\n                    })(this));\\n                };\\n\\n                LinkTooltip.prototype.saveLink = function () {\\n                    var anchor, end, url;\\n                    url = this._normalizeURL(this.textbox.value);\\n                    if (this.range != null) {\\n                        end = this.range.end;\\n                        if (this.range.isCollapsed()) {\\n                            anchor = this._findAnchor(this.range);\\n                            if (anchor != null) {\\n                                anchor.href = url;\\n                            }\\n                        } else {\\n                            this.quill.formatText(this.range, 'link', url, 'user');\\n                        }\\n                        this.quill.setSelection(end, end);\\n                    }\\n                    return this.setMode(url, false);\\n                };\\n\\n                LinkTooltip.prototype.removeLink = function (range) {\\n                    if (range.isCollapsed()) {\\n                        range = this._expandRange(range);\\n                    }\\n                    this.hide();\\n                    this.quill.formatText(range, 'link', false, 'user');\\n                    if (this.toolbar != null) {\\n                        return this.toolbar.setActive('link', false);\\n                    }\\n                };\\n\\n                LinkTooltip.prototype.setMode = function (url, edit) {\\n                    var text;\\n                    if (edit == null) {\\n                        edit = false;\\n                    }\\n                    if (edit) {\\n                        this.textbox.value = url;\\n                        _.defer((function (_this) {\\n                            return function () {\\n                                _this.textbox.focus();\\n                                return _this.textbox.setSelectionRange(0, url.length);\\n                            };\\n                        })(this));\\n                    } else {\\n                        this.link.href = url;\\n                        url = this.link.href;\\n                        text = url.length > this.options.maxLength ? url.slice(0, this.options.maxLength) + '...' : url;\\n                        dom(this.link).text(text);\\n                    }\\n                    return dom(this.container).toggleClass('editing', edit);\\n                };\\n\\n                LinkTooltip.prototype._findAnchor = function (range) {\\n                    var leaf, node, offset, ref;\\n                    ref = this.quill.editor.doc.findLeafAt(range.start, true), leaf = ref[0], offset = ref[1];\\n                    if (leaf != null) {\\n                        node = leaf.node;\\n                    }\\n                    while ((node != null) && node !== this.quill.root) {\\n                        if (node.tagName === 'A') {\\n                            return node;\\n                        }\\n                        node = node.parentNode;\\n                    }\\n                    return null;\\n                };\\n\\n                LinkTooltip.prototype._expandRange = function (range) {\\n                    var end, leaf, offset, ref, start;\\n                    ref = this.quill.editor.doc.findLeafAt(range.start, true), leaf = ref[0], offset = ref[1];\\n                    start = range.start - offset;\\n                    end = start + leaf.length;\\n                    return {\\n                        start: start,\\n                        end: end\\n                    };\\n                };\\n\\n                LinkTooltip.prototype._onToolbar = function (range, value) {\\n                    return this._toggle(range, value);\\n                };\\n\\n                LinkTooltip.prototype._onKeyboard = function () {\\n                    var range;\\n                    range = this.quill.getSelection();\\n                    return this._toggle(range, !this._findAnchor(range));\\n                };\\n\\n                LinkTooltip.prototype._toggle = function (range, value) {\\n                    var nativeRange;\\n                    if (!range) {\\n                        return;\\n                    }\\n                    if (!value) {\\n                        return this.removeLink(range);\\n                    } else if (!range.isCollapsed()) {\\n                        this.setMode(this._suggestURL(range), true);\\n                        nativeRange = this.quill.editor.selection._getNativeRange();\\n                        return this.show(nativeRange);\\n                    }\\n                };\\n\\n                LinkTooltip.prototype._normalizeURL = function (url) {\\n                    if (!/^(https?:\\\\/\\\\/|mailto:)/.test(url)) {\\n                        url = 'http://' + url;\\n                    }\\n                    return url;\\n                };\\n\\n                LinkTooltip.prototype._suggestURL = function (range) {\\n                    var text;\\n                    text = this.quill.getText(range);\\n                    return this._normalizeURL(text);\\n                };\\n\\n                return LinkTooltip;\\n\\n            })(Tooltip);\\n\\n            Quill.registerModule('link-tooltip', LinkTooltip);\\n\\n            module.exports = LinkTooltip;\\n\\n\\n        }, {\\\"../quill\\\": 30, \\\"./tooltip\\\": 28}],\\n        25: [function (_dereq_, module, exports) {\\n            var EventEmitter2, MultiCursor, Quill, _, dom,\\n                extend = function (child, parent) {\\n                    for (var key in parent) {\\n                        if (hasProp.call(parent, key)) child[key] = parent[key];\\n                    }\\n                    function ctor() {\\n                        this.constructor = child;\\n                    }\\n\\n                    ctor.prototype = parent.prototype;\\n                    child.prototype = new ctor();\\n                    child.__super__ = parent.prototype;\\n                    return child;\\n                },\\n                hasProp = {}.hasOwnProperty;\\n\\n            Quill = _dereq_('../quill');\\n\\n            EventEmitter2 = _dereq_('eventemitter2').EventEmitter2;\\n\\n            _ = Quill.require('lodash');\\n\\n            dom = Quill.require('dom');\\n\\n            MultiCursor = (function (superClass) {\\n                extend(MultiCursor, superClass);\\n\\n                MultiCursor.DEFAULTS = {\\n                    template: '<span class=\\\"cursor-flag\\\"> <span class=\\\"cursor-name\\\"></span> </span> <span class=\\\"cursor-caret\\\"></span>',\\n                    timeout: 2500\\n                };\\n\\n                MultiCursor.events = {\\n                    CURSOR_ADDED: 'cursor-addded',\\n                    CURSOR_MOVED: 'cursor-moved',\\n                    CURSOR_REMOVED: 'cursor-removed'\\n                };\\n\\n                function MultiCursor(quill, options) {\\n                    this.quill = quill;\\n                    this.options = options;\\n                    this.cursors = {};\\n                    this.container = this.quill.addContainer('ql-multi-cursor', true);\\n                    this.quill.on(this.quill.constructor.events.TEXT_CHANGE, _.bind(this._applyDelta, this));\\n                }\\n\\n                MultiCursor.prototype.clearCursors = function () {\\n                    _.each(Object.keys(this.cursors), _.bind(this.removeCursor, this));\\n                    return this.cursors = {};\\n                };\\n\\n                MultiCursor.prototype.moveCursor = function (userId, index) {\\n                    var cursor;\\n                    cursor = this.cursors[userId];\\n                    if (cursor == null) {\\n                        return;\\n                    }\\n                    cursor.index = index;\\n                    dom(cursor.elem).removeClass('hidden');\\n                    clearTimeout(cursor.timer);\\n                    cursor.timer = setTimeout((function (_this) {\\n                        return function () {\\n                            dom(cursor.elem).addClass('hidden');\\n                            return cursor.timer = null;\\n                        };\\n                    })(this), this.options.timeout);\\n                    this._updateCursor(cursor);\\n                    return cursor;\\n                };\\n\\n                MultiCursor.prototype.removeCursor = function (userId) {\\n                    var cursor;\\n                    cursor = this.cursors[userId];\\n                    this.emit(MultiCursor.events.CURSOR_REMOVED, cursor);\\n                    if (cursor != null) {\\n                        cursor.elem.parentNode.removeChild(cursor.elem);\\n                    }\\n                    return delete this.cursors[userId];\\n                };\\n\\n                MultiCursor.prototype.setCursor = function (userId, index, name, color) {\\n                    var cursor;\\n                    if (this.cursors[userId] == null) {\\n                        this.cursors[userId] = cursor = {\\n                            userId: userId,\\n                            index: index,\\n                            color: color,\\n                            elem: this._buildCursor(name, color)\\n                        };\\n                        this.emit(MultiCursor.events.CURSOR_ADDED, cursor);\\n                    }\\n                    _.defer((function (_this) {\\n                        return function () {\\n                            return _this.moveCursor(userId, index);\\n                        };\\n                    })(this));\\n                    return this.cursors[userId];\\n                };\\n\\n                MultiCursor.prototype.shiftCursors = function (index, length, authorId) {\\n                    if (authorId == null) {\\n                        authorId = null;\\n                    }\\n                    return _.each(this.cursors, (function (_this) {\\n                        return function (cursor, id) {\\n                            var shift;\\n                            if (!cursor) {\\n                                return;\\n                            }\\n                            shift = Math.max(length, index - cursor.index);\\n                            if (cursor.userId === authorId) {\\n                                return _this.moveCursor(authorId, cursor.index + shift);\\n                            } else if (cursor.index > index) {\\n                                return cursor.index += shift;\\n                            }\\n                        };\\n                    })(this));\\n                };\\n\\n                MultiCursor.prototype.update = function () {\\n                    return _.each(this.cursors, (function (_this) {\\n                        return function (cursor, id) {\\n                            if (cursor == null) {\\n                                return;\\n                            }\\n                            _this._updateCursor(cursor);\\n                            return true;\\n                        };\\n                    })(this));\\n                };\\n\\n                MultiCursor.prototype._applyDelta = function (delta) {\\n                    var index;\\n                    index = 0;\\n                    _.each(delta.ops, (function (_this) {\\n                        return function (op) {\\n                            var length, ref;\\n                            length = 0;\\n                            if (op.insert != null) {\\n                                length = op.insert.length || 1;\\n                                _this.shiftCursors(index, length, (ref = op.attributes) != null ? ref['author'] : void 0);\\n                            } else if (op[\\\"delete\\\"] != null) {\\n                                _this.shiftCursors(index, -1 * op[\\\"delete\\\"], null);\\n                            } else if (op.retain != null) {\\n                                _this.shiftCursors(index, 0, null);\\n                                length = op.retain;\\n                            }\\n                            return index += length;\\n                        };\\n                    })(this));\\n                    return this.update();\\n                };\\n\\n                MultiCursor.prototype._buildCursor = function (name, color) {\\n                    var cursor, cursorCaret, cursorFlag, cursorName;\\n                    cursor = document.createElement('span');\\n                    dom(cursor).addClass('cursor');\\n                    cursor.innerHTML = this.options.template;\\n                    cursorFlag = cursor.querySelector('.cursor-flag');\\n                    cursorName = cursor.querySelector('.cursor-name');\\n                    dom(cursorName).text(name);\\n                    cursorCaret = cursor.querySelector('.cursor-caret');\\n                    cursorCaret.style.backgroundColor = cursorName.style.backgroundColor = color;\\n                    this.container.appendChild(cursor);\\n                    return cursor;\\n                };\\n\\n                MultiCursor.prototype._updateCursor = function (cursor) {\\n                    var bounds, flag;\\n                    bounds = this.quill.getBounds(cursor.index);\\n                    if (bounds == null) {\\n                        return this.removeCursor(cursor.userId);\\n                    }\\n                    cursor.elem.style.top = (bounds.top + this.quill.container.scrollTop) + 'px';\\n                    cursor.elem.style.left = bounds.left + 'px';\\n                    cursor.elem.style.height = bounds.height + 'px';\\n                    flag = cursor.elem.querySelector('.cursor-flag');\\n                    dom(cursor.elem).toggleClass('top', parseInt(cursor.elem.style.top) <= flag.offsetHeight).toggleClass('left', parseInt(cursor.elem.style.left) <= flag.offsetWidth).toggleClass('right', this.quill.root.offsetWidth - parseInt(cursor.elem.style.left) <= flag.offsetWidth);\\n                    return this.emit(MultiCursor.events.CURSOR_MOVED, cursor);\\n                };\\n\\n                return MultiCursor;\\n\\n            })(EventEmitter2);\\n\\n            Quill.registerModule('multi-cursor', MultiCursor);\\n\\n            module.exports = MultiCursor;\\n\\n\\n        }, {\\\"../quill\\\": 30, \\\"eventemitter2\\\": 2}],\\n        26: [function (_dereq_, module, exports) {\\n            var Delta, Document, PasteManager, Quill, _, dom,\\n                bind = function (fn, me) {\\n                    return function () {\\n                        return fn.apply(me, arguments);\\n                    };\\n                };\\n\\n            Quill = _dereq_('../quill');\\n\\n            Document = _dereq_('../core/document');\\n\\n            _ = Quill.require('lodash');\\n\\n            dom = Quill.require('dom');\\n\\n            Delta = Quill.require('delta');\\n\\n            PasteManager = (function () {\\n                PasteManager.DEFAULTS = {\\n                    onConvert: null\\n                };\\n\\n                function PasteManager(quill, options) {\\n                    var base;\\n                    this.quill = quill;\\n                    this._onConvert = bind(this._onConvert, this);\\n                    this.container = this.quill.addContainer('ql-paste-manager');\\n                    this.container.setAttribute('contenteditable', true);\\n                    this.container.setAttribute('tabindex', '-1');\\n                    dom(this.quill.root).on('paste', _.bind(this._paste, this));\\n                    this.options = _.defaults(options, PasteManager.DEFAULTS);\\n                    if ((base = this.options).onConvert == null) {\\n                        base.onConvert = this._onConvert;\\n                    }\\n                }\\n\\n                PasteManager.prototype._onConvert = function (container) {\\n                    var delta, doc, lengthAdded;\\n                    doc = new Document(container, this.quill.options);\\n                    delta = doc.toDelta();\\n                    lengthAdded = delta.length();\\n                    if (lengthAdded === 0) {\\n                        return delta;\\n                    }\\n                    return delta.compose(new Delta().retain(lengthAdded - 1)[\\\"delete\\\"](1));\\n                };\\n\\n                PasteManager.prototype._paste = function () {\\n                    var oldDocLength, range;\\n                    oldDocLength = this.quill.getLength();\\n                    range = this.quill.getSelection();\\n                    if (range == null) {\\n                        return;\\n                    }\\n                    this.container.focus();\\n                    return _.defer((function (_this) {\\n                        return function () {\\n                            var delta, lengthAdded;\\n                            delta = _this.options.onConvert(_this.container);\\n                            lengthAdded = delta.length();\\n                            if (lengthAdded > 0) {\\n                                if (range.start > 0) {\\n                                    delta.ops.unshift({\\n                                        retain: range.start\\n                                    });\\n                                }\\n                                delta[\\\"delete\\\"](range.end - range.start);\\n                                _this.quill.updateContents(delta, 'user');\\n                            }\\n                            _this.quill.setSelection(range.start + lengthAdded, range.start + lengthAdded);\\n                            _this.quill.editor.selection.scrollIntoView();\\n                            return _this.container.innerHTML = \\\"\\\";\\n                        };\\n                    })(this));\\n                };\\n\\n                return PasteManager;\\n\\n            })();\\n\\n            Quill.registerModule('paste-manager', PasteManager);\\n\\n            module.exports = PasteManager;\\n\\n\\n        }, {\\\"../core/document\\\": 8, \\\"../quill\\\": 30}],\\n        27: [function (_dereq_, module, exports) {\\n            var Quill, Toolbar, _, dom;\\n\\n            Quill = _dereq_('../quill');\\n\\n            _ = Quill.require('lodash');\\n\\n            dom = Quill.require('dom');\\n\\n            Toolbar = (function () {\\n                Toolbar.DEFAULTS = {\\n                    container: null\\n                };\\n\\n                Toolbar.formats = {\\n                    LINE: {\\n                        'align': 'align',\\n                        'bullet': 'bullet',\\n                        'list': 'list'\\n                    },\\n                    SELECT: {\\n                        'align': 'align',\\n                        'background': 'background',\\n                        'color': 'color',\\n                        'font': 'font',\\n                        'size': 'size'\\n                    },\\n                    TOGGLE: {\\n                        'bold': 'bold',\\n                        'bullet': 'bullet',\\n                        'image': 'image',\\n                        'italic': 'italic',\\n                        'link': 'link',\\n                        'list': 'list',\\n                        'strike': 'strike',\\n                        'underline': 'underline'\\n                    },\\n                    TOOLTIP: {\\n                        'image': 'image',\\n                        'link': 'link'\\n                    }\\n                };\\n\\n                function Toolbar(quill, options) {\\n                    this.quill = quill;\\n                    this.options = options;\\n                    if (_.isString(this.options) || _.isElement(this.options)) {\\n                        this.options = {\\n                            container: this.options\\n                        };\\n                    }\\n                    if (this.options.container == null) {\\n                        throw new Error('container required for toolbar', this.options);\\n                    }\\n                    this.container = _.isString(this.options.container) ? document.querySelector(this.options.container) : this.options.container;\\n                    this.inputs = {};\\n                    this.preventUpdate = false;\\n                    this.triggering = false;\\n                    _.each(this.quill.options.formats, (function (_this) {\\n                        return function (name) {\\n                            if (Toolbar.formats.TOOLTIP[name] != null) {\\n                                return;\\n                            }\\n                            return _this.initFormat(name, _.bind(_this._applyFormat, _this, name));\\n                        };\\n                    })(this));\\n                    this.quill.on(Quill.events.FORMAT_INIT, (function (_this) {\\n                        return function (name) {\\n                            if (Toolbar.formats.TOOLTIP[name] != null) {\\n                                return;\\n                            }\\n                            return _this.initFormat(name, _.bind(_this._applyFormat, _this, name));\\n                        };\\n                    })(this));\\n                    this.quill.on(Quill.events.SELECTION_CHANGE, (function (_this) {\\n                        return function (range) {\\n                            if (range != null) {\\n                                return _this.updateActive(range);\\n                            }\\n                        };\\n                    })(this));\\n                    this.quill.on(Quill.events.TEXT_CHANGE, (function (_this) {\\n                        return function () {\\n                            return _this.updateActive();\\n                        };\\n                    })(this));\\n                    this.quill.onModuleLoad('keyboard', (function (_this) {\\n                        return function (keyboard) {\\n                            return keyboard.addHotkey([dom.KEYS.BACKSPACE, dom.KEYS.DELETE], function () {\\n                                return _.defer(_.bind(_this.updateActive, _this));\\n                            });\\n                        };\\n                    })(this));\\n                    dom(this.container).addClass('ql-toolbar');\\n                    if (dom.isIOS()) {\\n                        dom(this.container).addClass('ios');\\n                    }\\n                }\\n\\n                Toolbar.prototype.initFormat = function (format, callback) {\\n                    var eventName, input, selector;\\n                    selector = \\\".ql-\\\" + format;\\n                    if (Toolbar.formats.SELECT[format] != null) {\\n                        selector = \\\"select\\\" + selector;\\n                        eventName = 'change';\\n                    } else {\\n                        eventName = 'click';\\n                    }\\n                    input = this.container.querySelector(selector);\\n                    if (input == null) {\\n                        return;\\n                    }\\n                    this.inputs[format] = input;\\n                    return dom(input).on(eventName, (function (_this) {\\n                        return function () {\\n                            var range, value;\\n                            value = eventName === 'change' ? dom(input).value() : !dom(input).hasClass('ql-active');\\n                            _this.preventUpdate = true;\\n                            _this.quill.focus();\\n                            range = _this.quill.getSelection();\\n                            if (range != null) {\\n                                callback(range, value);\\n                            }\\n                            if (dom.isIE(11)) {\\n                                _this.quill.editor.selection.scrollIntoView();\\n                            }\\n                            _this.preventUpdate = false;\\n                            return false;\\n                        };\\n                    })(this));\\n                };\\n\\n                Toolbar.prototype.setActive = function (format, value) {\\n                    var $input, input, ref, selectValue;\\n                    if (format === 'image') {\\n                        value = false;\\n                    }\\n                    input = this.inputs[format];\\n                    if (input == null) {\\n                        return;\\n                    }\\n                    $input = dom(input);\\n                    if (input.tagName === 'SELECT') {\\n                        this.triggering = true;\\n                        selectValue = $input.value(input);\\n                        if (value == null) {\\n                            value = (ref = $input[\\\"default\\\"]()) != null ? ref.value : void 0;\\n                        }\\n                        if (Array.isArray(value)) {\\n                            value = '';\\n                        }\\n                        if (value !== selectValue) {\\n                            if (value != null) {\\n                                $input.option(value);\\n                            } else {\\n                                $input.reset();\\n                            }\\n                        }\\n                        return this.triggering = false;\\n                    } else {\\n                        return $input.toggleClass('ql-active', value || false);\\n                    }\\n                };\\n\\n                Toolbar.prototype.updateActive = function (range, formats) {\\n                    var activeFormats;\\n                    if (formats == null) {\\n                        formats = null;\\n                    }\\n                    range || (range = this.quill.getSelection());\\n                    if (!((range != null) && !this.preventUpdate)) {\\n                        return;\\n                    }\\n                    activeFormats = this._getActive(range);\\n                    return _.each(this.inputs, (function (_this) {\\n                        return function (input, format) {\\n                            if (!Array.isArray(formats) || formats.indexOf(format) > -1) {\\n                                _this.setActive(format, activeFormats[format]);\\n                            }\\n                            return true;\\n                        };\\n                    })(this));\\n                };\\n\\n                Toolbar.prototype._applyFormat = function (format, range, value) {\\n                    if (this.triggering) {\\n                        return;\\n                    }\\n                    if (range.isCollapsed()) {\\n                        this.quill.prepareFormat(format, value, 'user');\\n                    } else if (Toolbar.formats.LINE[format] != null) {\\n                        this.quill.formatLine(range, format, value, 'user');\\n                    } else {\\n                        this.quill.formatText(range, format, value, 'user');\\n                    }\\n                    return _.defer((function (_this) {\\n                        return function () {\\n                            _this.updateActive(range, ['bullet', 'list']);\\n                            return _this.setActive(format, value);\\n                        };\\n                    })(this));\\n                };\\n\\n                Toolbar.prototype._getActive = function (range) {\\n                    var leafFormats, lineFormats;\\n                    leafFormats = this._getLeafActive(range);\\n                    lineFormats = this._getLineActive(range);\\n                    return _.defaults({}, leafFormats, lineFormats);\\n                };\\n\\n                Toolbar.prototype._getLeafActive = function (range) {\\n                    var contents, formatsArr, line, offset, ref;\\n                    if (range.isCollapsed()) {\\n                        ref = this.quill.editor.doc.findLineAt(range.start), line = ref[0], offset = ref[1];\\n                        if (offset === 0) {\\n                            contents = this.quill.getContents(range.start, range.end + 1);\\n                        } else {\\n                            contents = this.quill.getContents(range.start - 1, range.end);\\n                        }\\n                    } else {\\n                        contents = this.quill.getContents(range);\\n                    }\\n                    formatsArr = _.map(contents.ops, 'attributes');\\n                    return this._intersectFormats(formatsArr);\\n                };\\n\\n                Toolbar.prototype._getLineActive = function (range) {\\n                    var firstLine, formatsArr, lastLine, offset, ref, ref1;\\n                    formatsArr = [];\\n                    ref = this.quill.editor.doc.findLineAt(range.start), firstLine = ref[0], offset = ref[1];\\n                    ref1 = this.quill.editor.doc.findLineAt(range.end), lastLine = ref1[0], offset = ref1[1];\\n                    if ((lastLine != null) && lastLine === firstLine) {\\n                        lastLine = lastLine.next;\\n                    }\\n                    while ((firstLine != null) && firstLine !== lastLine) {\\n                        formatsArr.push(_.clone(firstLine.formats));\\n                        firstLine = firstLine.next;\\n                    }\\n                    return this._intersectFormats(formatsArr);\\n                };\\n\\n                Toolbar.prototype._intersectFormats = function (formatsArr) {\\n                    return _.reduce(formatsArr.slice(1), function (activeFormats, formats) {\\n                        var activeKeys, added, formatKeys, intersection, missing;\\n                        if (formats == null) {\\n                            formats = {};\\n                        }\\n                        activeKeys = Object.keys(activeFormats);\\n                        formatKeys = formats != null ? Object.keys(formats) : {};\\n                        intersection = _.intersection(activeKeys, formatKeys);\\n                        missing = _.difference(activeKeys, formatKeys);\\n                        added = _.difference(formatKeys, activeKeys);\\n                        _.each(intersection, function (name) {\\n                            if (Toolbar.formats.SELECT[name] != null) {\\n                                if (Array.isArray(activeFormats[name])) {\\n                                    if (activeFormats[name].indexOf(formats[name]) < 0) {\\n                                        return activeFormats[name].push(formats[name]);\\n                                    }\\n                                } else if (activeFormats[name] !== formats[name]) {\\n                                    return activeFormats[name] = [activeFormats[name], formats[name]];\\n                                }\\n                            }\\n                        });\\n                        _.each(missing, function (name) {\\n                            if (Toolbar.formats.TOGGLE[name] != null) {\\n                                return delete activeFormats[name];\\n                            } else if ((Toolbar.formats.SELECT[name] != null) && !Array.isArray(activeFormats[name])) {\\n                                return activeFormats[name] = [activeFormats[name]];\\n                            }\\n                        });\\n                        _.each(added, function (name) {\\n                            if (Toolbar.formats.SELECT[name] != null) {\\n                                return activeFormats[name] = [formats[name]];\\n                            }\\n                        });\\n                        return activeFormats;\\n                    }, formatsArr[0] || {});\\n                };\\n\\n                return Toolbar;\\n\\n            })();\\n\\n            Quill.registerModule('toolbar', Toolbar);\\n\\n            module.exports = Toolbar;\\n\\n\\n        }, {\\\"../quill\\\": 30}],\\n        28: [function (_dereq_, module, exports) {\\n            var Quill, Tooltip, _, dom;\\n\\n            Quill = _dereq_('../quill');\\n\\n            _ = Quill.require('lodash');\\n\\n            dom = Quill.require('dom');\\n\\n            Tooltip = (function () {\\n                Tooltip.DEFAULTS = {\\n                    offset: 10,\\n                    template: ''\\n                };\\n\\n                Tooltip.HIDE_MARGIN = '-10000px';\\n\\n                function Tooltip(quill, options) {\\n                    this.quill = quill;\\n                    this.options = options;\\n                    this.container = this.quill.addContainer('ql-tooltip');\\n                    this.container.innerHTML = this.options.template;\\n                    this.hide();\\n                    this.quill.on(this.quill.constructor.events.TEXT_CHANGE, (function (_this) {\\n                        return function (delta, source) {\\n                            if (_this.container.style.left !== Tooltip.HIDE_MARGIN) {\\n                                _this.range = null;\\n                                return _this.hide();\\n                            }\\n                        };\\n                    })(this));\\n                }\\n\\n                Tooltip.prototype.initTextbox = function (textbox, enterCallback, escapeCallback) {\\n                    return dom(textbox).on('keydown', (function (_this) {\\n                        return function (event) {\\n                            switch (event.which) {\\n                                case dom.KEYS.ENTER:\\n                                    event.preventDefault();\\n                                    return enterCallback.call(_this);\\n                                case dom.KEYS.ESCAPE:\\n                                    event.preventDefault();\\n                                    return escapeCallback.call(_this);\\n                                default:\\n                                    return true;\\n                            }\\n                        };\\n                    })(this));\\n                };\\n\\n                Tooltip.prototype.hide = function () {\\n                    this.container.style.left = Tooltip.HIDE_MARGIN;\\n                    if (this.range) {\\n                        this.quill.setSelection(this.range);\\n                    }\\n                    return this.range = null;\\n                };\\n\\n                Tooltip.prototype.position = function (reference) {\\n                    var left, offsetBottom, offsetLeft, offsetTop, parentBounds, referenceBounds, top;\\n                    if (reference != null) {\\n                        referenceBounds = reference.getBoundingClientRect();\\n                        parentBounds = this.quill.container.getBoundingClientRect();\\n                        offsetLeft = referenceBounds.left - parentBounds.left;\\n                        offsetTop = referenceBounds.top - parentBounds.top;\\n                        offsetBottom = referenceBounds.bottom - parentBounds.bottom;\\n                        left = offsetLeft + referenceBounds.width / 2 - this.container.offsetWidth / 2;\\n                        top = offsetTop + referenceBounds.height + this.options.offset;\\n                        if (top + this.container.offsetHeight > this.quill.container.offsetHeight) {\\n                            top = offsetTop - this.container.offsetHeight - this.options.offset;\\n                        }\\n                        left = Math.max(0, Math.min(left, this.quill.container.offsetWidth - this.container.offsetWidth));\\n                        top = Math.max(0, Math.min(top, this.quill.container.offsetHeight - this.container.offsetHeight));\\n                    } else {\\n                        left = this.quill.container.offsetWidth / 2 - this.container.offsetWidth / 2;\\n                        top = this.quill.container.offsetHeight / 2 - this.container.offsetHeight / 2;\\n                    }\\n                    top += this.quill.container.scrollTop;\\n                    return [left, top];\\n                };\\n\\n                Tooltip.prototype.show = function (reference) {\\n                    var left, ref, top;\\n                    this.range = this.quill.getSelection();\\n                    ref = this.position(reference), left = ref[0], top = ref[1];\\n                    this.container.style.left = left + \\\"px\\\";\\n                    this.container.style.top = top + \\\"px\\\";\\n                    return this.container.focus();\\n                };\\n\\n                return Tooltip;\\n\\n            })();\\n\\n            Quill.registerModule('tooltip', Tooltip);\\n\\n            module.exports = Tooltip;\\n\\n\\n        }, {\\\"../quill\\\": 30}],\\n        29: [function (_dereq_, module, exports) {\\n            var Delta, Quill, UndoManager, _;\\n\\n            Quill = _dereq_('../quill');\\n\\n            _ = Quill.require('lodash');\\n\\n            Delta = Quill.require('delta');\\n\\n            UndoManager = (function () {\\n                UndoManager.DEFAULTS = {\\n                    delay: 1000,\\n                    maxStack: 100,\\n                    userOnly: false\\n                };\\n\\n                UndoManager.hotkeys = {\\n                    UNDO: {\\n                        key: 'Z',\\n                        metaKey: true\\n                    },\\n                    REDO: {\\n                        key: 'Z',\\n                        metaKey: true,\\n                        shiftKey: true\\n                    }\\n                };\\n\\n                function UndoManager(quill, options) {\\n                    this.quill = quill;\\n                    this.options = options != null ? options : {};\\n                    this.lastRecorded = 0;\\n                    this.ignoreChange = false;\\n                    this.clear();\\n                    this.initListeners();\\n                }\\n\\n                UndoManager.prototype.initListeners = function () {\\n                    this.quill.onModuleLoad('keyboard', (function (_this) {\\n                        return function (keyboard) {\\n                            var redoKey;\\n                            keyboard.addHotkey(UndoManager.hotkeys.UNDO, function () {\\n                                _this.quill.editor.checkUpdate();\\n                                _this.undo();\\n                                return false;\\n                            });\\n                            redoKey = [UndoManager.hotkeys.REDO];\\n                            if (navigator.platform.indexOf('Win') > -1) {\\n                                redoKey.push({\\n                                    key: 'Y',\\n                                    metaKey: true\\n                                });\\n                            }\\n                            return keyboard.addHotkey(redoKey, function () {\\n                                _this.quill.editor.checkUpdate();\\n                                _this.redo();\\n                                return false;\\n                            });\\n                        };\\n                    })(this));\\n                    return this.quill.on(this.quill.constructor.events.TEXT_CHANGE, (function (_this) {\\n                        return function (delta, source) {\\n                            if (_this.ignoreChange) {\\n                                return;\\n                            }\\n                            if (!_this.options.userOnly || source === Quill.sources.USER) {\\n                                _this.record(delta, _this.oldDelta);\\n                            } else {\\n                                _this._transform(delta);\\n                            }\\n                            return _this.oldDelta = _this.quill.getContents();\\n                        };\\n                    })(this));\\n                };\\n\\n                UndoManager.prototype.clear = function () {\\n                    this.stack = {\\n                        undo: [],\\n                        redo: []\\n                    };\\n                    return this.oldDelta = this.quill.getContents();\\n                };\\n\\n                UndoManager.prototype.record = function (changeDelta, oldDelta) {\\n                    var change, ignored, timestamp, undoDelta;\\n                    if (!(changeDelta.ops.length > 0)) {\\n                        return;\\n                    }\\n                    this.stack.redo = [];\\n                    try {\\n                        undoDelta = this.quill.getContents().diff(this.oldDelta);\\n                        timestamp = new Date().getTime();\\n                        if (this.lastRecorded + this.options.delay > timestamp && this.stack.undo.length > 0) {\\n                            change = this.stack.undo.pop();\\n                            undoDelta = undoDelta.compose(change.undo);\\n                            changeDelta = change.redo.compose(changeDelta);\\n                        } else {\\n                            this.lastRecorded = timestamp;\\n                        }\\n                        this.stack.undo.push({\\n                            redo: changeDelta,\\n                            undo: undoDelta\\n                        });\\n                        if (this.stack.undo.length > this.options.maxStack) {\\n                            return this.stack.undo.unshift();\\n                        }\\n                    } catch (_error) {\\n                        ignored = _error;\\n                        console.warn('Could not record change... clearing undo stack.');\\n                        return this.clear();\\n                    }\\n                };\\n\\n                UndoManager.prototype.redo = function () {\\n                    return this._change('redo', 'undo');\\n                };\\n\\n                UndoManager.prototype.undo = function () {\\n                    return this._change('undo', 'redo');\\n                };\\n\\n                UndoManager.prototype._getLastChangeIndex = function (delta) {\\n                    var index, lastIndex;\\n                    lastIndex = 0;\\n                    index = 0;\\n                    _.each(delta.ops, function (op) {\\n                        if (op.insert != null) {\\n                            return lastIndex = Math.max(index + (op.insert.length || 1), lastIndex);\\n                        } else if (op[\\\"delete\\\"] != null) {\\n                            return lastIndex = Math.max(index, lastIndex);\\n                        } else if (op.retain != null) {\\n                            if (op.attributes != null) {\\n                                lastIndex = Math.max(index + op.retain, lastIndex);\\n                            }\\n                            return index += op.retain;\\n                        }\\n                    });\\n                    return lastIndex;\\n                };\\n\\n                UndoManager.prototype._change = function (source, dest) {\\n                    var change, index;\\n                    if (this.stack[source].length > 0) {\\n                        change = this.stack[source].pop();\\n                        this.lastRecorded = 0;\\n                        this.ignoreChange = true;\\n                        this.quill.updateContents(change[source], Quill.sources.USER);\\n                        this.ignoreChange = false;\\n                        index = this._getLastChangeIndex(change[source]);\\n                        this.quill.setSelection(index, index);\\n                        this.oldDelta = this.quill.getContents();\\n                        return this.stack[dest].push(change);\\n                    }\\n                };\\n\\n                UndoManager.prototype._transform = function (delta) {\\n                    var change, i, j, len, len1, ref, ref1, results;\\n                    this.oldDelta = delta.transform(this.oldDelta, true);\\n                    ref = this.stack.undo;\\n                    for (i = 0, len = ref.length; i < len; i++) {\\n                        change = ref[i];\\n                        change.undo = delta.transform(change.undo, true);\\n                        change.redo = delta.transform(change.redo, true);\\n                    }\\n                    ref1 = this.stack.redo;\\n                    results = [];\\n                    for (j = 0, len1 = ref1.length; j < len1; j++) {\\n                        change = ref1[j];\\n                        change.undo = delta.transform(change.undo, true);\\n                        results.push(change.redo = delta.transform(change.redo, true));\\n                    }\\n                    return results;\\n                };\\n\\n                return UndoManager;\\n\\n            })();\\n\\n            Quill.registerModule('undo-manager', UndoManager);\\n\\n            module.exports = UndoManager;\\n\\n\\n        }, {\\\"../quill\\\": 30}],\\n        30: [function (_dereq_, module, exports) {\\n            var Delta, Document, Editor, EventEmitter2, Format, Normalizer, Quill, Range, _, dom, pkg,\\n                extend = function (child, parent) {\\n                    for (var key in parent) {\\n                        if (hasProp.call(parent, key)) child[key] = parent[key];\\n                    }\\n                    function ctor() {\\n                        this.constructor = child;\\n                    }\\n\\n                    ctor.prototype = parent.prototype;\\n                    child.prototype = new ctor();\\n                    child.__super__ = parent.prototype;\\n                    return child;\\n                },\\n                hasProp = {}.hasOwnProperty,\\n                slice = [].slice;\\n\\n            _ = _dereq_('lodash');\\n\\n            pkg = _dereq_('../package.json');\\n\\n            Delta = _dereq_('rich-text/lib/delta');\\n\\n            EventEmitter2 = _dereq_('eventemitter2').EventEmitter2;\\n\\n            dom = _dereq_('./lib/dom');\\n\\n            Document = _dereq_('./core/document');\\n\\n            Editor = _dereq_('./core/editor');\\n\\n            Format = _dereq_('./core/format');\\n\\n            Normalizer = _dereq_('./core/normalizer');\\n\\n            Range = _dereq_('./lib/range');\\n\\n            Quill = (function (superClass) {\\n                extend(Quill, superClass);\\n\\n                Quill.version = pkg.version;\\n\\n                Quill.editors = [];\\n\\n                Quill.modules = [];\\n\\n                Quill.themes = [];\\n\\n                Quill.DEFAULTS = {\\n                    formats: ['align', 'bold', 'italic', 'strike', 'underline', 'color', 'background', 'font', 'size', 'link', 'image', 'bullet', 'list'],\\n                    modules: {\\n                        'keyboard': true,\\n                        'paste-manager': true,\\n                        'undo-manager': true\\n                    },\\n                    pollInterval: 100,\\n                    readOnly: false,\\n                    styles: {},\\n                    theme: 'base'\\n                };\\n\\n                Quill.events = {\\n                    FORMAT_INIT: 'format-init',\\n                    MODULE_INIT: 'module-init',\\n                    POST_EVENT: 'post-event',\\n                    PRE_EVENT: 'pre-event',\\n                    SELECTION_CHANGE: 'selection-change',\\n                    TEXT_CHANGE: 'text-change'\\n                };\\n\\n                Quill.sources = Editor.sources;\\n\\n                Quill.registerModule = function (name, module) {\\n                    if (Quill.modules[name] != null) {\\n                        console.warn(\\\"Overwriting \\\" + name + \\\" module\\\");\\n                    }\\n                    return Quill.modules[name] = module;\\n                };\\n\\n                Quill.registerTheme = function (name, theme) {\\n                    if (Quill.themes[name] != null) {\\n                        console.warn(\\\"Overwriting \\\" + name + \\\" theme\\\");\\n                    }\\n                    return Quill.themes[name] = theme;\\n                };\\n\\n                Quill.require = function (name) {\\n                    switch (name) {\\n                        case 'lodash':\\n                            return _;\\n                        case 'delta':\\n                            return Delta;\\n                        case 'format':\\n                            return Format;\\n                        case 'normalizer':\\n                            return Normalizer;\\n                        case 'dom':\\n                            return dom;\\n                        case 'document':\\n                            return Document;\\n                        case 'range':\\n                            return Range;\\n                        default:\\n                            return null;\\n                    }\\n                };\\n\\n                function Quill(container1, options) {\\n                    var html, moduleOptions, themeClass;\\n                    this.container = container1;\\n                    if (options == null) {\\n                        options = {};\\n                    }\\n                    if (_.isString(this.container)) {\\n                        this.container = document.querySelector(this.container);\\n                    }\\n                    if (this.container == null) {\\n                        throw new Error('Invalid Quill container');\\n                    }\\n                    moduleOptions = _.defaults(options.modules || {}, Quill.DEFAULTS.modules);\\n                    html = this.container.innerHTML;\\n                    this.container.innerHTML = '';\\n                    this.options = _.defaults(options, Quill.DEFAULTS);\\n                    this.options.modules = moduleOptions;\\n                    this.options.id = this.id = \\\"ql-editor-\\\" + (Quill.editors.length + 1);\\n                    this.modules = {};\\n                    this.root = this.addContainer('ql-editor');\\n                    this.editor = new Editor(this.root, this, this.options);\\n                    Quill.editors.push(this);\\n                    this.setHTML(html, Quill.sources.SILENT);\\n                    themeClass = Quill.themes[this.options.theme];\\n                    if (themeClass == null) {\\n                        throw new Error(\\\"Cannot load \\\" + this.options.theme + \\\" theme. Are you sure you registered it?\\\");\\n                    }\\n                    this.theme = new themeClass(this, this.options);\\n                    _.each(this.options.modules, (function (_this) {\\n                        return function (option, name) {\\n                            return _this.addModule(name, option);\\n                        };\\n                    })(this));\\n                }\\n\\n                Quill.prototype.destroy = function () {\\n                    var html;\\n                    html = this.getHTML();\\n                    _.each(this.modules, function (module, name) {\\n                        if (_.isFunction(module.destroy)) {\\n                            return module.destroy();\\n                        }\\n                    });\\n                    this.editor.destroy();\\n                    this.removeAllListeners();\\n                    Quill.editors.splice(_.indexOf(Quill.editors, this), 1);\\n                    return this.container.innerHTML = html;\\n                };\\n\\n                Quill.prototype.addContainer = function (className, before) {\\n                    var container, refNode;\\n                    if (before == null) {\\n                        before = false;\\n                    }\\n                    refNode = before ? this.root : null;\\n                    container = document.createElement('div');\\n                    dom(container).addClass(className);\\n                    this.container.insertBefore(container, refNode);\\n                    return container;\\n                };\\n\\n                Quill.prototype.addFormat = function (name, config) {\\n                    this.editor.doc.addFormat(name, config);\\n                    return this.emit(Quill.events.FORMAT_INIT, name);\\n                };\\n\\n                Quill.prototype.addModule = function (name, options) {\\n                    var moduleClass;\\n                    moduleClass = Quill.modules[name];\\n                    if (moduleClass == null) {\\n                        throw new Error(\\\"Cannot load \\\" + name + \\\" module. Are you sure you registered it?\\\");\\n                    }\\n                    if (options === true) {\\n                        options = {};\\n                    }\\n                    options = _.defaults(options, this.theme.constructor.OPTIONS[name] || {}, moduleClass.DEFAULTS || {});\\n                    this.modules[name] = new moduleClass(this, options);\\n                    this.emit(Quill.events.MODULE_INIT, name, this.modules[name]);\\n                    return this.modules[name];\\n                };\\n\\n                Quill.prototype.deleteText = function (start, end, source) {\\n                    var delta, formats, ref;\\n                    if (source == null) {\\n                        source = Quill.sources.API;\\n                    }\\n                    ref = this._buildParams(start, end, {}, source), start = ref[0], end = ref[1], formats = ref[2], source = ref[3];\\n                    if (!(end > start)) {\\n                        return;\\n                    }\\n                    delta = new Delta().retain(start)[\\\"delete\\\"](end - start);\\n                    return this.editor.applyDelta(delta, source);\\n                };\\n\\n                Quill.prototype.emit = function () {\\n                    var args, eventName;\\n                    eventName = arguments[0], args = 2 <= arguments.length ? slice.call(arguments, 1) : [];\\n                    Quill.__super__.emit.apply(this, [Quill.events.PRE_EVENT, eventName].concat(slice.call(args)));\\n                    Quill.__super__.emit.apply(this, [eventName].concat(slice.call(args)));\\n                    return Quill.__super__.emit.apply(this, [Quill.events.POST_EVENT, eventName].concat(slice.call(args)));\\n                };\\n\\n                Quill.prototype.focus = function () {\\n                    return this.editor.focus();\\n                };\\n\\n                Quill.prototype.formatLine = function (start, end, name, value, source) {\\n                    var formats, line, offset, ref, ref1;\\n                    ref = this._buildParams(start, end, name, value, source), start = ref[0], end = ref[1], formats = ref[2], source = ref[3];\\n                    ref1 = this.editor.doc.findLineAt(end), line = ref1[0], offset = ref1[1];\\n                    if (line != null) {\\n                        end += line.length - offset;\\n                    }\\n                    return this.formatText(start, end, formats, source);\\n                };\\n\\n                Quill.prototype.formatText = function (start, end, name, value, source) {\\n                    var delta, formats, ref;\\n                    ref = this._buildParams(start, end, name, value, source), start = ref[0], end = ref[1], formats = ref[2], source = ref[3];\\n                    formats = _.reduce(formats, (function (_this) {\\n                        return function (formats, value, name) {\\n                            var format;\\n                            format = _this.editor.doc.formats[name];\\n                            if (!(value && value !== format.config[\\\"default\\\"])) {\\n                                formats[name] = null;\\n                            }\\n                            return formats;\\n                        };\\n                    })(this), formats);\\n                    delta = new Delta().retain(start).retain(end - start, formats);\\n                    return this.editor.applyDelta(delta, source);\\n                };\\n\\n                Quill.prototype.getBounds = function (index) {\\n                    return this.editor.getBounds(index);\\n                };\\n\\n                Quill.prototype.getContents = function (start, end) {\\n                    if (start == null) {\\n                        start = 0;\\n                    }\\n                    if (end == null) {\\n                        end = null;\\n                    }\\n                    if (_.isObject(start)) {\\n                        end = start.end;\\n                        start = start.start;\\n                    }\\n                    return this.editor.delta.slice(start, end);\\n                };\\n\\n                Quill.prototype.getHTML = function () {\\n                    return this.editor.doc.getHTML();\\n                };\\n\\n                Quill.prototype.getLength = function () {\\n                    return this.editor.length;\\n                };\\n\\n                Quill.prototype.getModule = function (name) {\\n                    return this.modules[name];\\n                };\\n\\n                Quill.prototype.getSelection = function () {\\n                    this.editor.checkUpdate();\\n                    return this.editor.selection.getRange();\\n                };\\n\\n                Quill.prototype.getText = function (start, end) {\\n                    if (start == null) {\\n                        start = 0;\\n                    }\\n                    if (end == null) {\\n                        end = null;\\n                    }\\n                    return _.map(this.getContents(start, end).ops, function (op) {\\n                        if (_.isString(op.insert)) {\\n                            return op.insert;\\n                        } else {\\n                            return '';\\n                        }\\n                    }).join('');\\n                };\\n\\n                Quill.prototype.insertEmbed = function (index, type, url, source) {\\n                    var delta, end, formats, ref;\\n                    ref = this._buildParams(index, 0, type, url, source), index = ref[0], end = ref[1], formats = ref[2], source = ref[3];\\n                    delta = new Delta().retain(index).insert(1, formats);\\n                    return this.editor.applyDelta(delta, source);\\n                };\\n\\n                Quill.prototype.insertText = function (index, text, name, value, source) {\\n                    var delta, end, formats, ref;\\n                    ref = this._buildParams(index, 0, name, value, source), index = ref[0], end = ref[1], formats = ref[2], source = ref[3];\\n                    if (!(text.length > 0)) {\\n                        return;\\n                    }\\n                    delta = new Delta().retain(index).insert(text, formats);\\n                    return this.editor.applyDelta(delta, source);\\n                };\\n\\n                Quill.prototype.onModuleLoad = function (name, callback) {\\n                    if (this.modules[name]) {\\n                        return callback(this.modules[name]);\\n                    }\\n                    return this.on(Quill.events.MODULE_INIT, function (moduleName, module) {\\n                        if (moduleName === name) {\\n                            return callback(module);\\n                        }\\n                    });\\n                };\\n\\n                Quill.prototype.prepareFormat = function (name, value, source) {\\n                    var format, range;\\n                    if (source == null) {\\n                        source = Quill.sources.API;\\n                    }\\n                    format = this.editor.doc.formats[name];\\n                    if (format == null) {\\n                        return;\\n                    }\\n                    range = this.getSelection();\\n                    if (!(range != null ? range.isCollapsed() : void 0)) {\\n                        return;\\n                    }\\n                    if (format.isType(Format.types.LINE)) {\\n                        return this.formatLine(range, name, value, source);\\n                    } else {\\n                        return format.prepare(value);\\n                    }\\n                };\\n\\n                Quill.prototype.setContents = function (delta, source) {\\n                    var lastOp;\\n                    if (source == null) {\\n                        source = Quill.sources.API;\\n                    }\\n                    if (Array.isArray(delta)) {\\n                        delta = new Delta(delta.slice());\\n                    } else {\\n                        delta = new Delta(delta.ops.slice());\\n                    }\\n                    lastOp = _.last(delta.slice(delta.length() - 1).ops);\\n                    delta[\\\"delete\\\"](this.getLength() - 1);\\n                    if ((lastOp != null) && _.isString(lastOp.insert) && _.last(lastOp.insert) === '\\\\n') {\\n                        delta[\\\"delete\\\"](1);\\n                    }\\n                    return this.updateContents(delta, source);\\n                };\\n\\n                Quill.prototype.setHTML = function (html, source) {\\n                    if (source == null) {\\n                        source = Quill.sources.API;\\n                    }\\n                    if (!html.trim()) {\\n                        html = \\\"<\\\" + dom.DEFAULT_BLOCK_TAG + \\\"><\\\" + dom.DEFAULT_BREAK_TAG + \\\"></\\\" + dom.DEFAULT_BLOCK_TAG + \\\">\\\";\\n                    }\\n                    this.editor.doc.setHTML(html);\\n                    return this.editor.checkUpdate(source);\\n                };\\n\\n                Quill.prototype.setSelection = function (start, end, source) {\\n                    var range;\\n                    if (source == null) {\\n                        source = Quill.sources.API;\\n                    }\\n                    if (_.isNumber(start) && _.isNumber(end)) {\\n                        range = new Range(start, end);\\n                    } else {\\n                        range = start;\\n                        source = end || source;\\n                    }\\n                    return this.editor.selection.setRange(range, source);\\n                };\\n\\n                Quill.prototype.setText = function (text, source) {\\n                    var delta;\\n                    if (source == null) {\\n                        source = Quill.sources.API;\\n                    }\\n                    delta = new Delta().insert(text);\\n                    return this.setContents(delta, source);\\n                };\\n\\n                Quill.prototype.updateContents = function (delta, source) {\\n                    if (source == null) {\\n                        source = Quill.sources.API;\\n                    }\\n                    if (Array.isArray(delta)) {\\n                        delta = {\\n                            ops: delta\\n                        };\\n                    }\\n                    return this.editor.applyDelta(delta, source);\\n                };\\n\\n                Quill.prototype._buildParams = function () {\\n                    var formats, params;\\n                    params = 1 <= arguments.length ? slice.call(arguments, 0) : [];\\n                    if (_.isObject(params[0])) {\\n                        params.splice(0, 1, params[0].start, params[0].end);\\n                    }\\n                    if (_.isString(params[2])) {\\n                        formats = {};\\n                        formats[params[2]] = params[3];\\n                        params.splice(2, 2, formats);\\n                    }\\n                    if (params[3] == null) {\\n                        params[3] = Quill.sources.API;\\n                    }\\n                    return params;\\n                };\\n\\n                return Quill;\\n\\n            })(EventEmitter2);\\n\\n            Quill.registerTheme('base', _dereq_('./themes/base'));\\n\\n            Quill.registerTheme('snow', _dereq_('./themes/snow'));\\n\\n            module.exports = Quill;\\n\\n\\n        }, {\\n            \\\"../package.json\\\": 7,\\n            \\\"./core/document\\\": 8,\\n            \\\"./core/editor\\\": 9,\\n            \\\"./core/format\\\": 10,\\n            \\\"./core/normalizer\\\": 13,\\n            \\\"./lib/dom\\\": 17,\\n            \\\"./lib/range\\\": 20,\\n            \\\"./themes/base\\\": 32,\\n            \\\"./themes/snow\\\": 33,\\n            \\\"eventemitter2\\\": 2,\\n            \\\"lodash\\\": 1,\\n            \\\"rich-text/lib/delta\\\": 3\\n        }],\\n        31: [function (_dereq_, module, exports) {\\n            module.exports = \\\".ql-image-tooltip{padding:10px;width:300px}.ql-image-tooltip:after{clear:both;content:\\\\\\\"\\\\\\\";display:table}.ql-image-tooltip a{border:1px solid #000;box-sizing:border-box;display:inline-block;float:left;padding:5px;text-align:center;width:50%}.ql-image-tooltip img{bottom:0;left:0;margin:auto;max-height:100%;max-width:100%;position:absolute;right:0;top:0}.ql-image-tooltip .input{box-sizing:border-box;width:100%}.ql-image-tooltip .preview{margin:10px 0;position:relative;border:1px dashed #000;height:200px}.ql-image-tooltip .preview span{display:inline-block;position:absolute;text-align:center;top:40%;width:100%}.ql-link-tooltip{padding:5px 10px}.ql-link-tooltip input.input{width:170px}.ql-link-tooltip a.done,.ql-link-tooltip input.input{display:none}.ql-link-tooltip a.change{margin-right:4px}.ql-link-tooltip.editing a.done,.ql-link-tooltip.editing input.input{display:inline-block}.ql-link-tooltip.editing a.change,.ql-link-tooltip.editing a.remove,.ql-link-tooltip.editing a.url{display:none}.ql-multi-cursor{position:absolute;left:0;top:0;z-index:1000}.ql-multi-cursor .cursor{margin-left:-1px;position:absolute}.ql-multi-cursor .cursor-flag{bottom:100%;position:absolute;white-space:nowrap}.ql-multi-cursor .cursor-name{display:inline-block;color:#fff;padding:2px 8px}.ql-multi-cursor .cursor-caret{height:100%;position:absolute;width:2px}.ql-multi-cursor .cursor.hidden .cursor-flag{display:none}.ql-multi-cursor .cursor.top .cursor-flag{bottom:auto;top:100%}.ql-multi-cursor .cursor.right .cursor-flag{right:-2px}.ql-paste-manager{left:-100000px;position:absolute;top:50%}.ql-toolbar{box-sizing:border-box}.ql-tooltip{background-color:#fff;border:1px solid #000;box-sizing:border-box;position:absolute;top:0;white-space:nowrap;z-index:2000}.ql-tooltip a{cursor:pointer;text-decoration:none}.ql-container{box-sizing:border-box;cursor:text;font-family:Helvetica,Arial,sans-serif;font-size:13px;height:100%;line-height:1.42;margin:0;overflow-x:hidden;overflow-y:auto;padding:12px 15px;position:relative}.ql-editor{box-sizing:border-box;min-height:100%;outline:0;tab-size:4;white-space:pre-wrap}.ql-editor div{margin:0;padding:0}.ql-editor a{text-decoration:underline}.ql-editor b{font-weight:700}.ql-editor i{font-style:italic}.ql-editor s{text-decoration:line-through}.ql-editor u{text-decoration:underline}.ql-editor a,.ql-editor b,.ql-editor i,.ql-editor s,.ql-editor span,.ql-editor u{background-color:inherit}.ql-editor img{max-width:100%}.ql-editor blockquote,.ql-editor ol,.ql-editor ul{margin:0 0 0 2em;padding:0}.ql-editor ol{list-style-type:decimal}.ql-editor ul{list-style-type:disc}.ql-editor.ql-ie-10 br,.ql-editor.ql-ie-9 br{display:none}\\\";\\n        }, {}],\\n        32: [function (_dereq_, module, exports) {\\n            var BaseTheme, _, baseStyles, dom;\\n\\n            _ = _dereq_('lodash');\\n\\n            dom = _dereq_('../../lib/dom');\\n\\n            baseStyles = _dereq_('./base.styl');\\n\\n            BaseTheme = (function () {\\n                BaseTheme.OPTIONS = {};\\n\\n                BaseTheme.objToCss = function (obj) {\\n                    return _.map(obj, function (value, key) {\\n                        var innerStr;\\n                        innerStr = _.map(value, function (innerValue, innerKey) {\\n                            return innerKey + \\\": \\\" + innerValue + \\\";\\\";\\n                        }).join(' ');\\n                        return key + \\\" { \\\" + innerStr + \\\" }\\\";\\n                    }).join(\\\"\\\\n\\\");\\n                };\\n\\n                function BaseTheme(quill, options) {\\n                    var version;\\n                    this.quill = quill;\\n                    this.options = options;\\n                    dom(this.quill.container).addClass('ql-container');\\n                    if (this.options.styles) {\\n                        this.addStyles(baseStyles + BaseTheme.objToCss(this.options.styles));\\n                    }\\n                    if (dom.isIE(10)) {\\n                        version = dom.isIE(9) ? '9' : '10';\\n                        dom(this.quill.root).addClass('ql-ie-' + version);\\n                    }\\n                }\\n\\n                BaseTheme.prototype.addStyles = function (css) {\\n                    var style;\\n                    if (_.isObject(css)) {\\n                        css = BaseTheme.objToCss(css);\\n                    }\\n                    style = document.createElement('style');\\n                    style.type = 'text/css';\\n                    style.appendChild(document.createTextNode(css));\\n                    return document.head.appendChild(style);\\n                };\\n\\n                return BaseTheme;\\n\\n            })();\\n\\n            module.exports = BaseTheme;\\n\\n\\n        }, {\\\"../../lib/dom\\\": 17, \\\"./base.styl\\\": 31, \\\"lodash\\\": 1}],\\n        33: [function (_dereq_, module, exports) {\\n            var BaseTheme, ColorPicker, Picker, SnowTheme, _, dom,\\n                extend = function (child, parent) {\\n                    for (var key in parent) {\\n                        if (hasProp.call(parent, key)) child[key] = parent[key];\\n                    }\\n                    function ctor() {\\n                        this.constructor = child;\\n                    }\\n\\n                    ctor.prototype = parent.prototype;\\n                    child.prototype = new ctor();\\n                    child.__super__ = parent.prototype;\\n                    return child;\\n                },\\n                hasProp = {}.hasOwnProperty;\\n\\n            _ = _dereq_('lodash');\\n\\n            ColorPicker = _dereq_('../../lib/color-picker');\\n\\n            BaseTheme = _dereq_('../base');\\n\\n            dom = _dereq_('../../lib/dom');\\n\\n            Picker = _dereq_('../../lib/picker');\\n\\n            SnowTheme = (function (superClass) {\\n                extend(SnowTheme, superClass);\\n\\n                SnowTheme.COLORS = [\\\"#000000\\\", \\\"#e60000\\\", \\\"#ff9900\\\", \\\"#ffff00\\\", \\\"#008A00\\\", \\\"#0066cc\\\", \\\"#9933ff\\\", \\\"#ffffff\\\", \\\"#facccc\\\", \\\"#ffebcc\\\", \\\"#ffffcc\\\", \\\"#cce8cc\\\", \\\"#cce0f5\\\", \\\"#ebd6ff\\\", \\\"#bbbbbb\\\", \\\"#f06666\\\", \\\"#ffc266\\\", \\\"#ffff66\\\", \\\"#66b966\\\", \\\"#66a3e0\\\", \\\"#c285ff\\\", \\\"#888888\\\", \\\"#a10000\\\", \\\"#b26b00\\\", \\\"#b2b200\\\", \\\"#006100\\\", \\\"#0047b2\\\", \\\"#6b24b2\\\", \\\"#444444\\\", \\\"#5c0000\\\", \\\"#663d00\\\", \\\"#666600\\\", \\\"#003700\\\", \\\"#002966\\\", \\\"#3d1466\\\"];\\n\\n                SnowTheme.OPTIONS = {\\n                    'multi-cursor': {\\n                        template: '<span class=\\\"cursor-flag\\\"> <span class=\\\"cursor-triangle top\\\"></span> <span class=\\\"cursor-name\\\"></span> <span class=\\\"cursor-triangle bottom\\\"></span> </span> <span class=\\\"cursor-caret\\\"></span>'\\n                    }\\n                };\\n\\n                function SnowTheme(quill, options) {\\n                    this.quill = quill;\\n                    this.options = options;\\n                    SnowTheme.__super__.constructor.apply(this, arguments);\\n                    dom(this.quill.container).addClass('ql-snow');\\n                    this.pickers = [];\\n                    this.quill.on(this.quill.constructor.events.SELECTION_CHANGE, (function (_this) {\\n                        return function (range) {\\n                            if (range != null) {\\n                                return _.invoke(_this.pickers, 'close');\\n                            }\\n                        };\\n                    })(this));\\n                    this.quill.onModuleLoad('multi-cursor', _.bind(this.extendMultiCursor, this));\\n                    this.quill.onModuleLoad('toolbar', _.bind(this.extendToolbar, this));\\n                }\\n\\n                SnowTheme.prototype.extendMultiCursor = function (module) {\\n                    return module.on(module.constructor.events.CURSOR_ADDED, function (cursor) {\\n                        var bottomTriangle, topTriangle;\\n                        bottomTriangle = cursor.elem.querySelector('.cursor-triangle.bottom');\\n                        topTriangle = cursor.elem.querySelector('.cursor-triangle.top');\\n                        return bottomTriangle.style.borderTopColor = topTriangle.style.borderBottomColor = cursor.color;\\n                    });\\n                };\\n\\n                SnowTheme.prototype.extendToolbar = function (module) {\\n                    dom(module.container).addClass('ql-snow');\\n                    _.each(['color', 'background', 'font', 'size', 'align'], (function (_this) {\\n                        return function (format) {\\n                            var picker, select;\\n                            select = module.container.querySelector(\\\".ql-\\\" + format);\\n                            if (select == null) {\\n                                return;\\n                            }\\n                            switch (format) {\\n                                case 'font':\\n                                case 'size':\\n                                case 'align':\\n                                    picker = new Picker(select);\\n                                    break;\\n                                case 'color':\\n                                case 'background':\\n                                    picker = new ColorPicker(select);\\n                                    _.each(picker.container.querySelectorAll('.ql-picker-item'), function (item, i) {\\n                                        if (i < 7) {\\n                                            return dom(item).addClass('ql-primary-color');\\n                                        }\\n                                    });\\n                            }\\n                            if (picker != null) {\\n                                return _this.pickers.push(picker);\\n                            }\\n                        };\\n                    })(this));\\n                    return _.each(dom(module.container).textNodes(), function (node) {\\n                        if (dom(node).text().trim().length === 0) {\\n                            return dom(node).remove();\\n                        }\\n                    });\\n                };\\n\\n                return SnowTheme;\\n\\n            })(BaseTheme);\\n\\n            module.exports = SnowTheme;\\n\\n\\n        }, {\\\"../../lib/color-picker\\\": 16, \\\"../../lib/dom\\\": 17, \\\"../../lib/picker\\\": 19, \\\"../base\\\": 32, \\\"lodash\\\": 1}]\\n    }, {}, [15])(15)\\n});\\n/*!\\n * Responsive Bootstrap Toolkit\\n * Author:    Maciej Gurban\\n * License:   MIT\\n * Version:   2.5.1 (2015-11-02)\\n * Origin:    https://github.com/maciej-gurban/responsive-bootstrap-toolkit\\n */\\n;var ResponsiveBootstrapToolkit = (function ($) {\\n\\n    // Internal methods\\n    var internal = {\\n\\n        /**\\n         * Breakpoint detection divs for each framework version\\n         */\\n        detectionDivs: {\\n            // Bootstrap 3\\n            bootstrap: {\\n                'xs': $('<div class=\\\"device-xs visible-xs visible-xs-block\\\"></div>'),\\n                'sm': $('<div class=\\\"device-sm visible-sm visible-sm-block\\\"></div>'),\\n                'md': $('<div class=\\\"device-md visible-md visible-md-block\\\"></div>'),\\n                'lg': $('<div class=\\\"device-lg visible-lg visible-lg-block\\\"></div>')\\n            },\\n            // Foundation 5\\n            foundation: {\\n                'small': $('<div class=\\\"device-xs show-for-small-only\\\"></div>'),\\n                'medium': $('<div class=\\\"device-sm show-for-medium-only\\\"></div>'),\\n                'large': $('<div class=\\\"device-md show-for-large-only\\\"></div>'),\\n                'xlarge': $('<div class=\\\"device-lg show-for-xlarge-only\\\"></div>')\\n            }\\n        },\\n\\n        /**\\n         * Append visibility divs after DOM laoded\\n         */\\n        applyDetectionDivs: function () {\\n            $(document).ready(function () {\\n                $.each(self.breakpoints, function (alias) {\\n                    self.breakpoints[alias].appendTo('.responsive-bootstrap-toolkit');\\n                });\\n            });\\n        },\\n\\n        /**\\n         * Determines whether passed string is a parsable expression\\n         */\\n        isAnExpression: function (str) {\\n            return (str.charAt(0) == '<' || str.charAt(0) == '>');\\n        },\\n\\n        /**\\n         * Splits the expression in into <|> [=] alias\\n         */\\n        splitExpression: function (str) {\\n\\n            // Used operator\\n            var operator = str.charAt(0);\\n            // Include breakpoint equal to alias?\\n            var orEqual = (str.charAt(1) == '=') ? true : false;\\n\\n            /**\\n             * Index at which breakpoint name starts.\\n             *\\n             * For:  >sm, index = 1\\n             * For: >=sm, index = 2\\n             */\\n            var index = 1 + (orEqual ? 1 : 0);\\n\\n            /**\\n             * The remaining part of the expression, after the operator, will be treated as the\\n             * breakpoint name to compare with\\n             */\\n            var breakpointName = str.slice(index);\\n\\n            return {\\n                operator: operator,\\n                orEqual: orEqual,\\n                breakpointName: breakpointName\\n            };\\n        },\\n\\n        /**\\n         * Returns true if currently active breakpoint matches the expression\\n         */\\n        isAnyActive: function (breakpoints) {\\n            var found = false;\\n            $.each(breakpoints, function (index, alias) {\\n                // Once first breakpoint matches, return true and break out of the loop\\n                if (self.breakpoints[alias].is(':visible')) {\\n                    found = true;\\n                    return false;\\n                }\\n            });\\n            return found;\\n        },\\n\\n        /**\\n         * Determines whether current breakpoint matches the expression given\\n         */\\n        isMatchingExpression: function (str) {\\n\\n            var expression = internal.splitExpression(str);\\n\\n            // Get names of all breakpoints\\n            var breakpointList = Object.keys(self.breakpoints);\\n\\n            // Get index of sought breakpoint in the list\\n            var pos = breakpointList.indexOf(expression.breakpointName);\\n\\n            // Breakpoint found\\n            if (pos !== -1) {\\n\\n                var start = 0;\\n                var end = 0;\\n\\n                /**\\n                 * Parsing viewport.is('<=md') we interate from smallest breakpoint ('xs') and end\\n                 * at 'md' breakpoint, indicated in the expression,\\n                 * That makes: start = 0, end = 2 (index of 'md' breakpoint)\\n                 *\\n                 * Parsing viewport.is('<md') we start at index 'xs' breakpoint, and end at\\n                 * 'sm' breakpoint, one before 'md'.\\n                 * Which makes: start = 0, end = 1\\n                 */\\n                if (expression.operator == '<') {\\n                    start = 0;\\n                    end = expression.orEqual ? ++pos : pos;\\n                }\\n                /**\\n                 * Parsing viewport.is('>=sm') we interate from breakpoint 'sm' and end at the end\\n                 * of breakpoint list.\\n                 * That makes: start = 1, end = undefined\\n                 *\\n                 * Parsing viewport.is('>sm') we start at breakpoint 'md' and end at the end of\\n                 * breakpoint list.\\n                 * Which makes: start = 2, end = undefined\\n                 */\\n                if (expression.operator == '>') {\\n                    start = expression.orEqual ? pos : ++pos;\\n                    end = undefined;\\n                }\\n\\n                var acceptedBreakpoints = breakpointList.slice(start, end);\\n\\n                return internal.isAnyActive(acceptedBreakpoints);\\n\\n            }\\n        }\\n\\n    };\\n\\n    // Public methods and properties\\n    var self = {\\n\\n        /**\\n         * Determines default debouncing interval of 'changed' method\\n         */\\n        interval: 300,\\n\\n        /**\\n         *\\n         */\\n        framework: null,\\n\\n        /**\\n         * Breakpoint aliases, listed from smallest to biggest\\n         */\\n        breakpoints: null,\\n\\n        /**\\n         * Returns true if current breakpoint matches passed alias\\n         */\\n        is: function (str) {\\n            if (internal.isAnExpression(str)) {\\n                return internal.isMatchingExpression(str);\\n            }\\n            return self.breakpoints[str] && self.breakpoints[str].is(':visible');\\n        },\\n\\n        /**\\n         * Determines which framework-specific breakpoint detection divs to use\\n         */\\n        use: function (frameworkName, breakpoints) {\\n            self.framework = frameworkName.toLowerCase();\\n\\n            if (self.framework === 'bootstrap' || self.framework === 'foundation') {\\n                self.breakpoints = internal.detectionDivs[self.framework];\\n            } else {\\n                self.breakpoints = breakpoints;\\n            }\\n\\n            internal.applyDetectionDivs();\\n        },\\n\\n        /**\\n         * Returns current breakpoint alias\\n         */\\n        current: function () {\\n            var name = 'unrecognized';\\n            $.each(self.breakpoints, function (alias) {\\n                if (self.is(alias)) {\\n                    name = alias;\\n                }\\n            });\\n            return name;\\n        },\\n\\n        /*\\n         * Waits specified number of miliseconds before executing a callback\\n         */\\n        changed: function (fn, ms) {\\n            var timer;\\n            return function () {\\n                clearTimeout(timer);\\n                timer = setTimeout(function () {\\n                    fn();\\n                }, ms || self.interval);\\n            };\\n        }\\n\\n    };\\n\\n    // Create a placeholder\\n    $(document).ready(function () {\\n        $('<div class=\\\"responsive-bootstrap-toolkit\\\"></div>').appendTo('body');\\n    });\\n\\n    if (self.framework === null) {\\n        self.use('bootstrap');\\n    }\\n\\n    return self;\\n\\n})(jQuery);\\n\\n/**!\\n * Sortable\\n * @author    RubaXa   <trash@rubaxa.org>\\n * @license MIT\\n */\\n\\n\\n(function (factory) {\\n    \\\"use strict\\\";\\n\\n    if (typeof define === \\\"function\\\" && define.amd) {\\n        define(factory);\\n    }\\n    else if (typeof module != \\\"undefined\\\" && typeof module.exports != \\\"undefined\\\") {\\n        module.exports = factory();\\n    }\\n    else if (typeof Package !== \\\"undefined\\\") {\\n        Sortable = factory();  // export for Meteor.js\\n    }\\n    else {\\n        /* jshint sub:true */\\n        window[\\\"Sortable\\\"] = factory();\\n    }\\n})(function () {\\n    \\\"use strict\\\";\\n\\n    var dragEl,\\n        parentEl,\\n        ghostEl,\\n        cloneEl,\\n        rootEl,\\n        nextEl,\\n\\n        scrollEl,\\n        scrollParentEl,\\n\\n        lastEl,\\n        lastCSS,\\n        lastParentCSS,\\n\\n        oldIndex,\\n        newIndex,\\n\\n        activeGroup,\\n        autoScroll = {},\\n\\n        tapEvt,\\n        touchEvt,\\n\\n        moved,\\n\\n        /** @const */\\n        RSPACE = /\\\\s+/g,\\n\\n        expando = 'Sortable' + (new Date).getTime(),\\n\\n        win = window,\\n        document = win.document,\\n        parseInt = win.parseInt,\\n\\n        supportDraggable = !!('draggable' in document.createElement('div')),\\n        supportCssPointerEvents = (function (el) {\\n            el = document.createElement('x');\\n            el.style.cssText = 'pointer-events:auto';\\n            return el.style.pointerEvents === 'auto';\\n        })(),\\n\\n        _silent = false,\\n\\n        abs = Math.abs,\\n        slice = [].slice,\\n\\n        touchDragOverListeners = [],\\n\\n        _autoScroll = _throttle(function (/**Event*/evt, /**Object*/options, /**HTMLElement*/rootEl) {\\n            // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\\n            if (rootEl && options.scroll) {\\n                var el,\\n                    rect,\\n                    sens = options.scrollSensitivity,\\n                    speed = options.scrollSpeed,\\n\\n                    x = evt.clientX,\\n                    y = evt.clientY,\\n\\n                    winWidth = window.innerWidth,\\n                    winHeight = window.innerHeight,\\n\\n                    vx,\\n                    vy\\n                    ;\\n\\n                // Delect scrollEl\\n                if (scrollParentEl !== rootEl) {\\n                    scrollEl = options.scroll;\\n                    scrollParentEl = rootEl;\\n\\n                    if (scrollEl === true) {\\n                        scrollEl = rootEl;\\n\\n                        do {\\n                            if ((scrollEl.offsetWidth < scrollEl.scrollWidth) ||\\n                                (scrollEl.offsetHeight < scrollEl.scrollHeight)\\n                            ) {\\n                                break;\\n                            }\\n                            /* jshint boss:true */\\n                        } while (scrollEl = scrollEl.parentNode);\\n                    }\\n                }\\n\\n                if (scrollEl) {\\n                    el = scrollEl;\\n                    rect = scrollEl.getBoundingClientRect();\\n                    vx = (abs(rect.right - x) <= sens) - (abs(rect.left - x) <= sens);\\n                    vy = (abs(rect.bottom - y) <= sens) - (abs(rect.top - y) <= sens);\\n                }\\n\\n\\n                if (!(vx || vy)) {\\n                    vx = (winWidth - x <= sens) - (x <= sens);\\n                    vy = (winHeight - y <= sens) - (y <= sens);\\n\\n                    /* jshint expr:true */\\n                    (vx || vy) && (el = win);\\n                }\\n\\n\\n                if (autoScroll.vx !== vx || autoScroll.vy !== vy || autoScroll.el !== el) {\\n                    autoScroll.el = el;\\n                    autoScroll.vx = vx;\\n                    autoScroll.vy = vy;\\n\\n                    clearInterval(autoScroll.pid);\\n\\n                    if (el) {\\n                        autoScroll.pid = setInterval(function () {\\n                            if (el === win) {\\n                                win.scrollTo(win.pageXOffset + vx * speed, win.pageYOffset + vy * speed);\\n                            } else {\\n                                vy && (el.scrollTop += vy * speed);\\n                                vx && (el.scrollLeft += vx * speed);\\n                            }\\n                        }, 24);\\n                    }\\n                }\\n            }\\n        }, 30),\\n\\n        _prepareGroup = function (options) {\\n            var group = options.group;\\n\\n            if (!group || typeof group != 'object') {\\n                group = options.group = {name: group};\\n            }\\n\\n            ['pull', 'put'].forEach(function (key) {\\n                if (!(key in group)) {\\n                    group[key] = true;\\n                }\\n            });\\n\\n            options.groups = ' ' + group.name + (group.put.join ? ' ' + group.put.join(' ') : '') + ' ';\\n        }\\n        ;\\n\\n\\n    /**\\n     * @class  Sortable\\n     * @param  {HTMLElement}  el\\n     * @param  {Object}       [options]\\n     */\\n    function Sortable(el, options) {\\n        if (!(el && el.nodeType && el.nodeType === 1)) {\\n            throw 'Sortable: `el` must be HTMLElement, and not ' + {}.toString.call(el);\\n        }\\n\\n        this.el = el; // root element\\n        this.options = options = _extend({}, options);\\n\\n\\n        // Export instance\\n        el[expando] = this;\\n\\n\\n        // Default options\\n        var defaults = {\\n            group: Math.random(),\\n            sort: true,\\n            disabled: false,\\n            store: null,\\n            handle: null,\\n            scroll: true,\\n            scrollSensitivity: 30,\\n            scrollSpeed: 10,\\n            draggable: /[uo]l/i.test(el.nodeName) ? 'li' : '>*',\\n            ghostClass: 'sortable-ghost',\\n            chosenClass: 'sortable-chosen',\\n            ignore: 'a, img',\\n            filter: null,\\n            animation: 0,\\n            setData: function (dataTransfer, dragEl) {\\n                dataTransfer.setData('Text', dragEl.textContent);\\n            },\\n            dropBubble: false,\\n            dragoverBubble: false,\\n            dataIdAttr: 'data-id',\\n            delay: 0,\\n            forceFallback: false,\\n            fallbackClass: 'sortable-fallback',\\n            fallbackOnBody: false\\n        };\\n\\n\\n        // Set default options\\n        for (var name in defaults) {\\n            !(name in options) && (options[name] = defaults[name]);\\n        }\\n\\n        _prepareGroup(options);\\n\\n        // Bind all private methods\\n        for (var fn in this) {\\n            if (fn.charAt(0) === '_') {\\n                this[fn] = this[fn].bind(this);\\n            }\\n        }\\n\\n        // Setup drag mode\\n        this.nativeDraggable = options.forceFallback ? false : supportDraggable;\\n\\n        // Bind events\\n        _on(el, 'mousedown', this._onTapStart);\\n        _on(el, 'touchstart', this._onTapStart);\\n\\n        if (this.nativeDraggable) {\\n            _on(el, 'dragover', this);\\n            _on(el, 'dragenter', this);\\n        }\\n\\n        touchDragOverListeners.push(this._onDragOver);\\n\\n        // Restore sorting\\n        options.store && this.sort(options.store.get(this));\\n    }\\n\\n\\n    Sortable.prototype = /** @lends Sortable.prototype */ {\\n        constructor: Sortable,\\n\\n        _onTapStart: function (/** Event|TouchEvent */evt) {\\n            var _this = this,\\n                el = this.el,\\n                options = this.options,\\n                type = evt.type,\\n                touch = evt.touches && evt.touches[0],\\n                target = (touch || evt).target,\\n                originalTarget = target,\\n                filter = options.filter;\\n\\n\\n            if (type === 'mousedown' && evt.button !== 0 || options.disabled) {\\n                return; // only left button or enabled\\n            }\\n\\n            target = _closest(target, options.draggable, el);\\n\\n            if (!target) {\\n                return;\\n            }\\n\\n            // get the index of the dragged element within its parent\\n            oldIndex = _index(target);\\n\\n            // Check filter\\n            if (typeof filter === 'function') {\\n                if (filter.call(this, evt, target, this)) {\\n                    _dispatchEvent(_this, originalTarget, 'filter', target, el, oldIndex);\\n                    evt.preventDefault();\\n                    return; // cancel dnd\\n                }\\n            }\\n            else if (filter) {\\n                filter = filter.split(',').some(function (criteria) {\\n                    criteria = _closest(originalTarget, criteria.trim(), el);\\n\\n                    if (criteria) {\\n                        _dispatchEvent(_this, criteria, 'filter', target, el, oldIndex);\\n                        return true;\\n                    }\\n                });\\n\\n                if (filter) {\\n                    evt.preventDefault();\\n                    return; // cancel dnd\\n                }\\n            }\\n\\n\\n            if (options.handle && !_closest(originalTarget, options.handle, el)) {\\n                return;\\n            }\\n\\n\\n            // Prepare `dragstart`\\n            this._prepareDragStart(evt, touch, target);\\n        },\\n\\n        _prepareDragStart: function (/** Event */evt, /** Touch */touch, /** HTMLElement */target) {\\n            var _this = this,\\n                el = _this.el,\\n                options = _this.options,\\n                ownerDocument = el.ownerDocument,\\n                dragStartFn;\\n\\n            if (target && !dragEl && (target.parentNode === el)) {\\n                tapEvt = evt;\\n\\n                rootEl = el;\\n                dragEl = target;\\n                parentEl = dragEl.parentNode;\\n                nextEl = dragEl.nextSibling;\\n                activeGroup = options.group;\\n\\n                dragStartFn = function () {\\n                    // Delayed drag has been triggered\\n                    // we can re-enable the events: touchmove/mousemove\\n                    _this._disableDelayedDrag();\\n\\n                    // Make the element draggable\\n                    dragEl.draggable = true;\\n\\n                    // Chosen item\\n                    _toggleClass(dragEl, _this.options.chosenClass, true);\\n\\n                    // Bind the events: dragstart/dragend\\n                    _this._triggerDragStart(touch);\\n                };\\n\\n                // Disable \\\"draggable\\\"\\n                options.ignore.split(',').forEach(function (criteria) {\\n                    _find(dragEl, criteria.trim(), _disableDraggable);\\n                });\\n\\n                _on(ownerDocument, 'mouseup', _this._onDrop);\\n                _on(ownerDocument, 'touchend', _this._onDrop);\\n                _on(ownerDocument, 'touchcancel', _this._onDrop);\\n\\n                if (options.delay) {\\n                    // If the user moves the pointer or let go the click or touch\\n                    // before the delay has been reached:\\n                    // disable the delayed drag\\n                    _on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\\n                    _on(ownerDocument, 'touchend', _this._disableDelayedDrag);\\n                    _on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\\n                    _on(ownerDocument, 'mousemove', _this._disableDelayedDrag);\\n                    _on(ownerDocument, 'touchmove', _this._disableDelayedDrag);\\n\\n                    _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\\n                } else {\\n                    dragStartFn();\\n                }\\n            }\\n        },\\n\\n        _disableDelayedDrag: function () {\\n            var ownerDocument = this.el.ownerDocument;\\n\\n            clearTimeout(this._dragStartTimer);\\n            _off(ownerDocument, 'mouseup', this._disableDelayedDrag);\\n            _off(ownerDocument, 'touchend', this._disableDelayedDrag);\\n            _off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\\n            _off(ownerDocument, 'mousemove', this._disableDelayedDrag);\\n            _off(ownerDocument, 'touchmove', this._disableDelayedDrag);\\n        },\\n\\n        _triggerDragStart: function (/** Touch */touch) {\\n            if (touch) {\\n                // Touch device support\\n                tapEvt = {\\n                    target: dragEl,\\n                    clientX: touch.clientX,\\n                    clientY: touch.clientY\\n                };\\n\\n                this._onDragStart(tapEvt, 'touch');\\n            }\\n            else if (!this.nativeDraggable) {\\n                this._onDragStart(tapEvt, true);\\n            }\\n            else {\\n                _on(dragEl, 'dragend', this);\\n                _on(rootEl, 'dragstart', this._onDragStart);\\n            }\\n\\n            try {\\n                if (document.selection) {\\n                    document.selection.empty();\\n                } else {\\n                    window.getSelection().removeAllRanges();\\n                }\\n            } catch (err) {\\n            }\\n        },\\n\\n        _dragStarted: function () {\\n            if (rootEl && dragEl) {\\n                // Apply effect\\n                _toggleClass(dragEl, this.options.ghostClass, true);\\n\\n                Sortable.active = this;\\n\\n                // Drag start event\\n                _dispatchEvent(this, rootEl, 'start', dragEl, rootEl, oldIndex);\\n            }\\n        },\\n\\n        _emulateDragOver: function () {\\n            if (touchEvt) {\\n                if (this._lastX === touchEvt.clientX && this._lastY === touchEvt.clientY) {\\n                    return;\\n                }\\n\\n                this._lastX = touchEvt.clientX;\\n                this._lastY = touchEvt.clientY;\\n\\n                if (!supportCssPointerEvents) {\\n                    _css(ghostEl, 'display', 'none');\\n                }\\n\\n                var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY),\\n                    parent = target,\\n                    groupName = ' ' + this.options.group.name + '',\\n                    i = touchDragOverListeners.length;\\n\\n                if (parent) {\\n                    do {\\n                        if (parent[expando] && parent[expando].options.groups.indexOf(groupName) > -1) {\\n                            while (i--) {\\n                                touchDragOverListeners[i]({\\n                                    clientX: touchEvt.clientX,\\n                                    clientY: touchEvt.clientY,\\n                                    target: target,\\n                                    rootEl: parent\\n                                });\\n                            }\\n\\n                            break;\\n                        }\\n\\n                        target = parent; // store last element\\n                    }\\n                        /* jshint boss:true */\\n                    while (parent = parent.parentNode);\\n                }\\n\\n                if (!supportCssPointerEvents) {\\n                    _css(ghostEl, 'display', '');\\n                }\\n            }\\n        },\\n\\n\\n        _onTouchMove: function (/**TouchEvent*/evt) {\\n            if (tapEvt) {\\n                // only set the status to dragging, when we are actually dragging\\n                if (!Sortable.active) {\\n                    this._dragStarted();\\n                }\\n\\n                // as well as creating the ghost element on the document body\\n                this._appendGhost();\\n\\n                var touch = evt.touches ? evt.touches[0] : evt,\\n                    dx = touch.clientX - tapEvt.clientX,\\n                    dy = touch.clientY - tapEvt.clientY,\\n                    translate3d = evt.touches ? 'translate3d(' + dx + 'px,' + dy + 'px,0)' : 'translate(' + dx + 'px,' + dy + 'px)';\\n\\n                moved = true;\\n                touchEvt = touch;\\n\\n                _css(ghostEl, 'webkitTransform', translate3d);\\n                _css(ghostEl, 'mozTransform', translate3d);\\n                _css(ghostEl, 'msTransform', translate3d);\\n                _css(ghostEl, 'transform', translate3d);\\n\\n                evt.preventDefault();\\n            }\\n        },\\n\\n        _appendGhost: function () {\\n            if (!ghostEl) {\\n                var rect = dragEl.getBoundingClientRect(),\\n                    css = _css(dragEl),\\n                    options = this.options,\\n                    ghostRect;\\n\\n                ghostEl = dragEl.cloneNode(true);\\n\\n                _toggleClass(ghostEl, options.ghostClass, false);\\n                _toggleClass(ghostEl, options.fallbackClass, true);\\n\\n                _css(ghostEl, 'top', rect.top - parseInt(css.marginTop, 10));\\n                _css(ghostEl, 'left', rect.left - parseInt(css.marginLeft, 10));\\n                _css(ghostEl, 'width', rect.width);\\n                _css(ghostEl, 'height', rect.height);\\n                _css(ghostEl, 'opacity', '0.8');\\n                _css(ghostEl, 'position', 'fixed');\\n                _css(ghostEl, 'zIndex', '100000');\\n                _css(ghostEl, 'pointerEvents', 'none');\\n\\n                options.fallbackOnBody && document.body.appendChild(ghostEl) || rootEl.appendChild(ghostEl);\\n\\n                // Fixing dimensions.\\n                ghostRect = ghostEl.getBoundingClientRect();\\n                _css(ghostEl, 'width', rect.width * 2 - ghostRect.width);\\n                _css(ghostEl, 'height', rect.height * 2 - ghostRect.height);\\n            }\\n        },\\n\\n        _onDragStart: function (/**Event*/evt, /**boolean*/useFallback) {\\n            var dataTransfer = evt.dataTransfer,\\n                options = this.options;\\n\\n            this._offUpEvents();\\n\\n            if (activeGroup.pull == 'clone') {\\n                cloneEl = dragEl.cloneNode(true);\\n                _css(cloneEl, 'display', 'none');\\n                rootEl.insertBefore(cloneEl, dragEl);\\n            }\\n\\n            if (useFallback) {\\n\\n                if (useFallback === 'touch') {\\n                    // Bind touch events\\n                    _on(document, 'touchmove', this._onTouchMove);\\n                    _on(document, 'touchend', this._onDrop);\\n                    _on(document, 'touchcancel', this._onDrop);\\n                } else {\\n                    // Old brwoser\\n                    _on(document, 'mousemove', this._onTouchMove);\\n                    _on(document, 'mouseup', this._onDrop);\\n                }\\n\\n                this._loopId = setInterval(this._emulateDragOver, 50);\\n            }\\n            else {\\n                if (dataTransfer) {\\n                    dataTransfer.effectAllowed = 'move';\\n                    options.setData && options.setData.call(this, dataTransfer, dragEl);\\n                }\\n\\n                _on(document, 'drop', this);\\n                setTimeout(this._dragStarted, 0);\\n            }\\n        },\\n\\n        _onDragOver: function (/**Event*/evt) {\\n            var el = this.el,\\n                target,\\n                dragRect,\\n                revert,\\n                options = this.options,\\n                group = options.group,\\n                groupPut = group.put,\\n                isOwner = (activeGroup === group),\\n                canSort = options.sort;\\n\\n            if (evt.preventDefault !== void 0) {\\n                evt.preventDefault();\\n                !options.dragoverBubble && evt.stopPropagation();\\n            }\\n\\n            moved = true;\\n\\n            if (activeGroup && !options.disabled &&\\n                (isOwner\\n                        ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\\n                        : activeGroup.pull && groupPut && (\\n                            (activeGroup.name === group.name) || // by Name\\n                            (groupPut.indexOf && ~groupPut.indexOf(activeGroup.name)) // by Array\\n                        )\\n                ) &&\\n                (evt.rootEl === void 0 || evt.rootEl === this.el) // touch fallback\\n            ) {\\n                // Smart auto-scrolling\\n                _autoScroll(evt, options, this.el);\\n\\n                if (_silent) {\\n                    return;\\n                }\\n\\n                target = _closest(evt.target, options.draggable, el);\\n                dragRect = dragEl.getBoundingClientRect();\\n\\n                if (revert) {\\n                    _cloneHide(true);\\n\\n                    if (cloneEl || nextEl) {\\n                        rootEl.insertBefore(dragEl, cloneEl || nextEl);\\n                    }\\n                    else if (!canSort) {\\n                        rootEl.appendChild(dragEl);\\n                    }\\n\\n                    return;\\n                }\\n\\n\\n                if ((el.children.length === 0) || (el.children[0] === ghostEl) ||\\n                    (el === evt.target) && (target = _ghostIsLast(el, evt))\\n                ) {\\n\\n                    if (target) {\\n                        if (target.animated) {\\n                            return;\\n                        }\\n\\n                        targetRect = target.getBoundingClientRect();\\n                    }\\n\\n                    _cloneHide(isOwner);\\n\\n                    if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect) !== false) {\\n                        if (!dragEl.contains(el)) {\\n                            el.appendChild(dragEl);\\n                            parentEl = el; // actualization\\n                        }\\n\\n                        this._animate(dragRect, dragEl);\\n                        target && this._animate(targetRect, target);\\n                    }\\n                }\\n                else if (target && !target.animated && target !== dragEl && (target.parentNode[expando] !== void 0)) {\\n                    if (lastEl !== target) {\\n                        lastEl = target;\\n                        lastCSS = _css(target);\\n                        lastParentCSS = _css(target.parentNode);\\n                    }\\n\\n\\n                    var targetRect = target.getBoundingClientRect(),\\n                        width = targetRect.right - targetRect.left,\\n                        height = targetRect.bottom - targetRect.top,\\n                        floating = /left|right|inline/.test(lastCSS.cssFloat + lastCSS.display)\\n                            || (lastParentCSS.display == 'flex' && lastParentCSS['flex-direction'].indexOf('row') === 0),\\n                        isWide = (target.offsetWidth > dragEl.offsetWidth),\\n                        isLong = (target.offsetHeight > dragEl.offsetHeight),\\n                        halfway = (floating ? (evt.clientX - targetRect.left) / width : (evt.clientY - targetRect.top) / height) > 0.5,\\n                        nextSibling = target.nextElementSibling,\\n                        moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect),\\n                        after\\n                        ;\\n\\n                    if (moveVector !== false) {\\n                        _silent = true;\\n                        setTimeout(_unsilent, 30);\\n\\n                        _cloneHide(isOwner);\\n\\n                        if (moveVector === 1 || moveVector === -1) {\\n                            after = (moveVector === 1);\\n                        }\\n                        else if (floating) {\\n                            var elTop = dragEl.offsetTop,\\n                                tgTop = target.offsetTop;\\n\\n                            if (elTop === tgTop) {\\n                                after = (target.previousElementSibling === dragEl) && !isWide || halfway && isWide;\\n                            } else {\\n                                after = tgTop > elTop;\\n                            }\\n                        } else {\\n                            after = (nextSibling !== dragEl) && !isLong || halfway && isLong;\\n                        }\\n\\n                        if (!dragEl.contains(el)) {\\n                            if (after && !nextSibling) {\\n                                el.appendChild(dragEl);\\n                            } else {\\n                                target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\\n                            }\\n                        }\\n\\n                        parentEl = dragEl.parentNode; // actualization\\n\\n                        this._animate(dragRect, dragEl);\\n                        this._animate(targetRect, target);\\n                    }\\n                }\\n            }\\n        },\\n\\n        _animate: function (prevRect, target) {\\n            var ms = this.options.animation;\\n\\n            if (ms) {\\n                var currentRect = target.getBoundingClientRect();\\n\\n                _css(target, 'transition', 'none');\\n                _css(target, 'transform', 'translate3d('\\n                    + (prevRect.left - currentRect.left) + 'px,'\\n                    + (prevRect.top - currentRect.top) + 'px,0)'\\n                );\\n\\n                target.offsetWidth; // repaint\\n\\n                _css(target, 'transition', 'all ' + ms + 'ms');\\n                _css(target, 'transform', 'translate3d(0,0,0)');\\n\\n                clearTimeout(target.animated);\\n                target.animated = setTimeout(function () {\\n                    _css(target, 'transition', '');\\n                    _css(target, 'transform', '');\\n                    target.animated = false;\\n                }, ms);\\n            }\\n        },\\n\\n        _offUpEvents: function () {\\n            var ownerDocument = this.el.ownerDocument;\\n\\n            _off(document, 'touchmove', this._onTouchMove);\\n            _off(ownerDocument, 'mouseup', this._onDrop);\\n            _off(ownerDocument, 'touchend', this._onDrop);\\n            _off(ownerDocument, 'touchcancel', this._onDrop);\\n        },\\n\\n        _onDrop: function (/**Event*/evt) {\\n            var el = this.el,\\n                options = this.options;\\n\\n            clearInterval(this._loopId);\\n            clearInterval(autoScroll.pid);\\n            clearTimeout(this._dragStartTimer);\\n\\n            // Unbind events\\n            _off(document, 'mousemove', this._onTouchMove);\\n\\n            if (this.nativeDraggable) {\\n                _off(document, 'drop', this);\\n                _off(el, 'dragstart', this._onDragStart);\\n            }\\n\\n            this._offUpEvents();\\n\\n            if (evt) {\\n                if (moved) {\\n                    evt.preventDefault();\\n                    !options.dropBubble && evt.stopPropagation();\\n                }\\n\\n                ghostEl && ghostEl.parentNode.removeChild(ghostEl);\\n\\n                if (dragEl) {\\n                    if (this.nativeDraggable) {\\n                        _off(dragEl, 'dragend', this);\\n                    }\\n\\n                    _disableDraggable(dragEl);\\n\\n                    // Remove class's\\n                    _toggleClass(dragEl, this.options.ghostClass, false);\\n                    _toggleClass(dragEl, this.options.chosenClass, false);\\n\\n                    if (rootEl !== parentEl) {\\n                        newIndex = _index(dragEl);\\n\\n                        if (newIndex >= 0) {\\n                            // drag from one list and drop into another\\n                            _dispatchEvent(null, parentEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\\n                            _dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\\n\\n                            // Add event\\n                            _dispatchEvent(null, parentEl, 'add', dragEl, rootEl, oldIndex, newIndex);\\n\\n                            // Remove event\\n                            _dispatchEvent(this, rootEl, 'remove', dragEl, rootEl, oldIndex, newIndex);\\n                        }\\n                    }\\n                    else {\\n                        // Remove clone\\n                        cloneEl && cloneEl.parentNode.removeChild(cloneEl);\\n\\n                        if (dragEl.nextSibling !== nextEl) {\\n                            // Get the index of the dragged element within its parent\\n                            newIndex = _index(dragEl);\\n\\n                            if (newIndex >= 0) {\\n                                // drag & drop within the same list\\n                                _dispatchEvent(this, rootEl, 'update', dragEl, rootEl, oldIndex, newIndex);\\n                                _dispatchEvent(this, rootEl, 'sort', dragEl, rootEl, oldIndex, newIndex);\\n                            }\\n                        }\\n                    }\\n\\n                    if (Sortable.active) {\\n                        if (newIndex === null || newIndex === -1) {\\n                            newIndex = oldIndex;\\n                        }\\n\\n                        _dispatchEvent(this, rootEl, 'end', dragEl, rootEl, oldIndex, newIndex);\\n\\n                        // Save sorting\\n                        this.save();\\n                    }\\n                }\\n\\n                // Nulling\\n                rootEl =\\n                    dragEl =\\n                        parentEl =\\n                            ghostEl =\\n                                nextEl =\\n                                    cloneEl =\\n\\n                                        scrollEl =\\n                                            scrollParentEl =\\n\\n                                                tapEvt =\\n                                                    touchEvt =\\n\\n                                                        moved =\\n                                                            newIndex =\\n\\n                                                                lastEl =\\n                                                                    lastCSS =\\n\\n                                                                        activeGroup =\\n                                                                            Sortable.active = null;\\n            }\\n        },\\n\\n\\n        handleEvent: function (/**Event*/evt) {\\n            var type = evt.type;\\n\\n            if (type === 'dragover' || type === 'dragenter') {\\n                if (dragEl) {\\n                    this._onDragOver(evt);\\n                    _globalDragOver(evt);\\n                }\\n            }\\n            else if (type === 'drop' || type === 'dragend') {\\n                this._onDrop(evt);\\n            }\\n        },\\n\\n\\n        /**\\n         * Serializes the item into an array of string.\\n         * @returns {String[]}\\n         */\\n        toArray: function () {\\n            var order = [],\\n                el,\\n                children = this.el.children,\\n                i = 0,\\n                n = children.length,\\n                options = this.options;\\n\\n            for (; i < n; i++) {\\n                el = children[i];\\n                if (_closest(el, options.draggable, this.el)) {\\n                    order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\\n                }\\n            }\\n\\n            return order;\\n        },\\n\\n\\n        /**\\n         * Sorts the elements according to the array.\\n         * @param  {String[]}  order  order of the items\\n         */\\n        sort: function (order) {\\n            var items = {}, rootEl = this.el;\\n\\n            this.toArray().forEach(function (id, i) {\\n                var el = rootEl.children[i];\\n\\n                if (_closest(el, this.options.draggable, rootEl)) {\\n                    items[id] = el;\\n                }\\n            }, this);\\n\\n            order.forEach(function (id) {\\n                if (items[id]) {\\n                    rootEl.removeChild(items[id]);\\n                    rootEl.appendChild(items[id]);\\n                }\\n            });\\n        },\\n\\n\\n        /**\\n         * Save the current sorting\\n         */\\n        save: function () {\\n            var store = this.options.store;\\n            store && store.set(this);\\n        },\\n\\n\\n        /**\\n         * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\\n         * @param   {HTMLElement}  el\\n         * @param   {String}       [selector]  default: `options.draggable`\\n         * @returns {HTMLElement|null}\\n         */\\n        closest: function (el, selector) {\\n            return _closest(el, selector || this.options.draggable, this.el);\\n        },\\n\\n\\n        /**\\n         * Set/get option\\n         * @param   {string} name\\n         * @param   {*}      [value]\\n         * @returns {*}\\n         */\\n        option: function (name, value) {\\n            var options = this.options;\\n\\n            if (value === void 0) {\\n                return options[name];\\n            } else {\\n                options[name] = value;\\n\\n                if (name === 'group') {\\n                    _prepareGroup(options);\\n                }\\n            }\\n        },\\n\\n\\n        /**\\n         * Destroy\\n         */\\n        destroy: function () {\\n            var el = this.el;\\n\\n            el[expando] = null;\\n\\n            _off(el, 'mousedown', this._onTapStart);\\n            _off(el, 'touchstart', this._onTapStart);\\n\\n            if (this.nativeDraggable) {\\n                _off(el, 'dragover', this);\\n                _off(el, 'dragenter', this);\\n            }\\n\\n            // Remove draggable attributes\\n            Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\\n                el.removeAttribute('draggable');\\n            });\\n\\n            touchDragOverListeners.splice(touchDragOverListeners.indexOf(this._onDragOver), 1);\\n\\n            this._onDrop();\\n\\n            this.el = el = null;\\n        }\\n    };\\n\\n\\n    function _cloneHide(state) {\\n        if (cloneEl && (cloneEl.state !== state)) {\\n            _css(cloneEl, 'display', state ? 'none' : '');\\n            !state && cloneEl.state && rootEl.insertBefore(cloneEl, dragEl);\\n            cloneEl.state = state;\\n        }\\n    }\\n\\n\\n    function _closest(/**HTMLElement*/el, /**String*/selector, /**HTMLElement*/ctx) {\\n        if (el) {\\n            ctx = ctx || document;\\n            selector = selector.split('.');\\n\\n            var tag = selector.shift().toUpperCase(),\\n                re = new RegExp('\\\\\\\\s(' + selector.join('|') + ')(?=\\\\\\\\s)', 'g');\\n\\n            do {\\n                if (\\n                    (tag === '>*' && el.parentNode === ctx) || (\\n                        (tag === '' || el.nodeName.toUpperCase() == tag) &&\\n                        (!selector.length || ((' ' + el.className + ' ').match(re) || []).length == selector.length)\\n                    )\\n                ) {\\n                    return el;\\n                }\\n            }\\n            while (el !== ctx && (el = el.parentNode));\\n        }\\n\\n        return null;\\n    }\\n\\n\\n    function _globalDragOver(/**Event*/evt) {\\n        if (evt.dataTransfer) {\\n            evt.dataTransfer.dropEffect = 'move';\\n        }\\n        evt.preventDefault();\\n    }\\n\\n\\n    function _on(el, event, fn) {\\n        el.addEventListener(event, fn, false);\\n    }\\n\\n\\n    function _off(el, event, fn) {\\n        el.removeEventListener(event, fn, false);\\n    }\\n\\n\\n    function _toggleClass(el, name, state) {\\n        if (el) {\\n            if (el.classList) {\\n                el.classList[state ? 'add' : 'remove'](name);\\n            }\\n            else {\\n                var className = (' ' + el.className + ' ').replace(RSPACE, ' ').replace(' ' + name + ' ', ' ');\\n                el.className = (className + (state ? ' ' + name : '')).replace(RSPACE, ' ');\\n            }\\n        }\\n    }\\n\\n\\n    function _css(el, prop, val) {\\n        var style = el && el.style;\\n\\n        if (style) {\\n            if (val === void 0) {\\n                if (document.defaultView && document.defaultView.getComputedStyle) {\\n                    val = document.defaultView.getComputedStyle(el, '');\\n                }\\n                else if (el.currentStyle) {\\n                    val = el.currentStyle;\\n                }\\n\\n                return prop === void 0 ? val : val[prop];\\n            }\\n            else {\\n                if (!(prop in style)) {\\n                    prop = '-webkit-' + prop;\\n                }\\n\\n                style[prop] = val + (typeof val === 'string' ? '' : 'px');\\n            }\\n        }\\n    }\\n\\n\\n    function _find(ctx, tagName, iterator) {\\n        if (ctx) {\\n            var list = ctx.getElementsByTagName(tagName), i = 0, n = list.length;\\n\\n            if (iterator) {\\n                for (; i < n; i++) {\\n                    iterator(list[i], i);\\n                }\\n            }\\n\\n            return list;\\n        }\\n\\n        return [];\\n    }\\n\\n\\n    function _dispatchEvent(sortable, rootEl, name, targetEl, fromEl, startIndex, newIndex) {\\n        var evt = document.createEvent('Event'),\\n            options = (sortable || rootEl[expando]).options,\\n            onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1);\\n\\n        evt.initEvent(name, true, true);\\n\\n        evt.to = rootEl;\\n        evt.from = fromEl || rootEl;\\n        evt.item = targetEl || rootEl;\\n        evt.clone = cloneEl;\\n\\n        evt.oldIndex = startIndex;\\n        evt.newIndex = newIndex;\\n\\n        rootEl.dispatchEvent(evt);\\n\\n        if (options[onName]) {\\n            options[onName].call(sortable, evt);\\n        }\\n    }\\n\\n\\n    function _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect) {\\n        var evt,\\n            sortable = fromEl[expando],\\n            onMoveFn = sortable.options.onMove,\\n            retVal;\\n\\n        evt = document.createEvent('Event');\\n        evt.initEvent('move', true, true);\\n\\n        evt.to = toEl;\\n        evt.from = fromEl;\\n        evt.dragged = dragEl;\\n        evt.draggedRect = dragRect;\\n        evt.related = targetEl || toEl;\\n        evt.relatedRect = targetRect || toEl.getBoundingClientRect();\\n\\n        fromEl.dispatchEvent(evt);\\n\\n        if (onMoveFn) {\\n            retVal = onMoveFn.call(sortable, evt);\\n        }\\n\\n        return retVal;\\n    }\\n\\n\\n    function _disableDraggable(el) {\\n        el.draggable = false;\\n    }\\n\\n\\n    function _unsilent() {\\n        _silent = false;\\n    }\\n\\n\\n    /** @returns {HTMLElement|false} */\\n    function _ghostIsLast(el, evt) {\\n        var lastEl = el.lastElementChild,\\n            rect = lastEl.getBoundingClientRect();\\n\\n        return ((evt.clientY - (rect.top + rect.height) > 5) || (evt.clientX - (rect.right + rect.width) > 5)) && lastEl; // min delta\\n    }\\n\\n\\n    /**\\n     * Generate id\\n     * @param   {HTMLElement} el\\n     * @returns {String}\\n     * @private\\n     */\\n    function _generateId(el) {\\n        var str = el.tagName + el.className + el.src + el.href + el.textContent,\\n            i = str.length,\\n            sum = 0;\\n\\n        while (i--) {\\n            sum += str.charCodeAt(i);\\n        }\\n\\n        return sum.toString(36);\\n    }\\n\\n    /**\\n     * Returns the index of an element within its parent\\n     * @param  {HTMLElement} el\\n     * @return {number}\\n     */\\n    function _index(el) {\\n        var index = 0;\\n\\n        if (!el || !el.parentNode) {\\n            return -1;\\n        }\\n\\n        while (el && (el = el.previousElementSibling)) {\\n            if (el.nodeName.toUpperCase() !== 'TEMPLATE') {\\n                index++;\\n            }\\n        }\\n\\n        return index;\\n    }\\n\\n    function _throttle(callback, ms) {\\n        var args, _this;\\n\\n        return function () {\\n            if (args === void 0) {\\n                args = arguments;\\n                _this = this;\\n\\n                setTimeout(function () {\\n                    if (args.length === 1) {\\n                        callback.call(_this, args[0]);\\n                    } else {\\n                        callback.apply(_this, args);\\n                    }\\n\\n                    args = void 0;\\n                }, ms);\\n            }\\n        };\\n    }\\n\\n    function _extend(dst, src) {\\n        if (dst && src) {\\n            for (var key in src) {\\n                if (src.hasOwnProperty(key)) {\\n                    dst[key] = src[key];\\n                }\\n            }\\n        }\\n\\n        return dst;\\n    }\\n\\n\\n    // Export utils\\n    Sortable.utils = {\\n        on: _on,\\n        off: _off,\\n        css: _css,\\n        find: _find,\\n        is: function (el, selector) {\\n            return !!_closest(el, selector, el);\\n        },\\n        extend: _extend,\\n        throttle: _throttle,\\n        closest: _closest,\\n        toggleClass: _toggleClass,\\n        index: _index\\n    };\\n\\n\\n    /**\\n     * Create sortable instance\\n     * @param {HTMLElement}  el\\n     * @param {Object}      [options]\\n     */\\n    Sortable.create = function (el, options) {\\n        return new Sortable(el, options);\\n    };\\n\\n\\n    // Export\\n    Sortable.version = '1.4.2';\\n    return Sortable;\\n});\\n\\n/**\\n * jQuery plugin for Sortable\\n * @author    RubaXa   <trash@rubaxa.org>\\n * @license MIT\\n */\\n(function (factory) {\\n    \\\"use strict\\\";\\n\\n    if (typeof define === \\\"function\\\" && define.amd) {\\n        define([\\\"jquery\\\"], factory);\\n    }\\n    else {\\n        /* jshint sub:true */\\n        factory(jQuery);\\n    }\\n})(function ($) {\\n    \\\"use strict\\\";\\n\\n\\n    /* CODE */\\n\\n\\n    /**\\n     * jQuery plugin for Sortable\\n     * @param   {Object|String} options\\n     * @param   {..*}           [args]\\n     * @returns {jQuery|*}\\n     */\\n    $.fn.sortable = function (options) {\\n        var retVal,\\n            args = arguments;\\n\\n        this.each(function () {\\n            var $el = $(this),\\n                sortable = $el.data('sortable');\\n\\n            if (!sortable && (options instanceof Object || !options)) {\\n                sortable = new Sortable(this, options);\\n                $el.data('sortable', sortable);\\n            }\\n\\n            if (sortable) {\\n                if (options === 'widget') {\\n                    return sortable;\\n                }\\n                else if (options === 'destroy') {\\n                    sortable.destroy();\\n                    $el.removeData('sortable');\\n                }\\n                else if (typeof sortable[options] === 'function') {\\n                    retVal = sortable[options].apply(sortable, [].slice.call(args, 1));\\n                }\\n                else if (options in sortable.options) {\\n                    retVal = sortable.option.apply(sortable, args);\\n                }\\n            }\\n        });\\n\\n        return (retVal === void 0) ? this : retVal;\\n    };\\n});\\n\\n// TinyColor v1.2.1\\n// https://github.com/bgrins/TinyColor\\n// Brian Grinstead, MIT License\\n\\n(function () {\\n\\n    var trimLeft = /^[\\\\s,#]+/,\\n        trimRight = /\\\\s+$/,\\n        tinyCounter = 0,\\n        math = Math,\\n        mathRound = math.round,\\n        mathMin = math.min,\\n        mathMax = math.max,\\n        mathRandom = math.random;\\n\\n    function tinycolor(color, opts) {\\n\\n        color = (color) ? color : '';\\n        opts = opts || {};\\n\\n        // If input is already a tinycolor, return itself\\n        if (color instanceof tinycolor) {\\n            return color;\\n        }\\n        // If we are called as a function, call using new instead\\n        if (!(this instanceof tinycolor)) {\\n            return new tinycolor(color, opts);\\n        }\\n\\n        var rgb = inputToRGB(color);\\n        this._originalInput = color,\\n            this._r = rgb.r,\\n            this._g = rgb.g,\\n            this._b = rgb.b,\\n            this._a = rgb.a,\\n            this._roundA = mathRound(100 * this._a) / 100,\\n            this._format = opts.format || rgb.format;\\n        this._gradientType = opts.gradientType;\\n\\n        // Don't let the range of [0,255] come back in [0,1].\\n        // Potentially lose a little bit of precision here, but will fix issues where\\n        // .5 gets interpreted as half of the total, instead of half of 1\\n        // If it was supposed to be 128, this was already taken care of by `inputToRgb`\\n        if (this._r < 1) {\\n            this._r = mathRound(this._r);\\n        }\\n        if (this._g < 1) {\\n            this._g = mathRound(this._g);\\n        }\\n        if (this._b < 1) {\\n            this._b = mathRound(this._b);\\n        }\\n\\n        this._ok = rgb.ok;\\n        this._tc_id = tinyCounter++;\\n    }\\n\\n    tinycolor.prototype = {\\n        isDark: function () {\\n            return this.getBrightness() < 128;\\n        },\\n        isLight: function () {\\n            return !this.isDark();\\n        },\\n        isValid: function () {\\n            return this._ok;\\n        },\\n        getOriginalInput: function () {\\n            return this._originalInput;\\n        },\\n        getFormat: function () {\\n            return this._format;\\n        },\\n        getAlpha: function () {\\n            return this._a;\\n        },\\n        getBrightness: function () {\\n            //http://www.w3.org/TR/AERT#color-contrast\\n            var rgb = this.toRgb();\\n            return (rgb.r * 299 + rgb.g * 587 + rgb.b * 114) / 1000;\\n        },\\n        getLuminance: function () {\\n            //http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\\n            var rgb = this.toRgb();\\n            var RsRGB, GsRGB, BsRGB, R, G, B;\\n            RsRGB = rgb.r / 255;\\n            GsRGB = rgb.g / 255;\\n            BsRGB = rgb.b / 255;\\n\\n            if (RsRGB <= 0.03928) {\\n                R = RsRGB / 12.92;\\n            } else {\\n                R = Math.pow(((RsRGB + 0.055) / 1.055), 2.4);\\n            }\\n            if (GsRGB <= 0.03928) {\\n                G = GsRGB / 12.92;\\n            } else {\\n                G = Math.pow(((GsRGB + 0.055) / 1.055), 2.4);\\n            }\\n            if (BsRGB <= 0.03928) {\\n                B = BsRGB / 12.92;\\n            } else {\\n                B = Math.pow(((BsRGB + 0.055) / 1.055), 2.4);\\n            }\\n            return (0.2126 * R) + (0.7152 * G) + (0.0722 * B);\\n        },\\n        setAlpha: function (value) {\\n            this._a = boundAlpha(value);\\n            this._roundA = mathRound(100 * this._a) / 100;\\n            return this;\\n        },\\n        toHsv: function () {\\n            var hsv = rgbToHsv(this._r, this._g, this._b);\\n            return {h: hsv.h * 360, s: hsv.s, v: hsv.v, a: this._a};\\n        },\\n        toHsvString: function () {\\n            var hsv = rgbToHsv(this._r, this._g, this._b);\\n            var h = mathRound(hsv.h * 360), s = mathRound(hsv.s * 100), v = mathRound(hsv.v * 100);\\n            return (this._a == 1) ?\\n                \\\"hsv(\\\" + h + \\\", \\\" + s + \\\"%, \\\" + v + \\\"%)\\\" :\\n                \\\"hsva(\\\" + h + \\\", \\\" + s + \\\"%, \\\" + v + \\\"%, \\\" + this._roundA + \\\")\\\";\\n        },\\n        toHsl: function () {\\n            var hsl = rgbToHsl(this._r, this._g, this._b);\\n            return {h: hsl.h * 360, s: hsl.s, l: hsl.l, a: this._a};\\n        },\\n        toHslString: function () {\\n            var hsl = rgbToHsl(this._r, this._g, this._b);\\n            var h = mathRound(hsl.h * 360), s = mathRound(hsl.s * 100), l = mathRound(hsl.l * 100);\\n            return (this._a == 1) ?\\n                \\\"hsl(\\\" + h + \\\", \\\" + s + \\\"%, \\\" + l + \\\"%)\\\" :\\n                \\\"hsla(\\\" + h + \\\", \\\" + s + \\\"%, \\\" + l + \\\"%, \\\" + this._roundA + \\\")\\\";\\n        },\\n        toHex: function (allow3Char) {\\n            return rgbToHex(this._r, this._g, this._b, allow3Char);\\n        },\\n        toHexString: function (allow3Char) {\\n            return '#' + this.toHex(allow3Char);\\n        },\\n        toHex8: function () {\\n            return rgbaToHex(this._r, this._g, this._b, this._a);\\n        },\\n        toHex8String: function () {\\n            return '#' + this.toHex8();\\n        },\\n        toRgb: function () {\\n            return {r: mathRound(this._r), g: mathRound(this._g), b: mathRound(this._b), a: this._a};\\n        },\\n        toRgbString: function () {\\n            return (this._a == 1) ?\\n                \\\"rgb(\\\" + mathRound(this._r) + \\\", \\\" + mathRound(this._g) + \\\", \\\" + mathRound(this._b) + \\\")\\\" :\\n                \\\"rgba(\\\" + mathRound(this._r) + \\\", \\\" + mathRound(this._g) + \\\", \\\" + mathRound(this._b) + \\\", \\\" + this._roundA + \\\")\\\";\\n        },\\n        toPercentageRgb: function () {\\n            return {\\n                r: mathRound(bound01(this._r, 255) * 100) + \\\"%\\\",\\n                g: mathRound(bound01(this._g, 255) * 100) + \\\"%\\\",\\n                b: mathRound(bound01(this._b, 255) * 100) + \\\"%\\\",\\n                a: this._a\\n            };\\n        },\\n        toPercentageRgbString: function () {\\n            return (this._a == 1) ?\\n                \\\"rgb(\\\" + mathRound(bound01(this._r, 255) * 100) + \\\"%, \\\" + mathRound(bound01(this._g, 255) * 100) + \\\"%, \\\" + mathRound(bound01(this._b, 255) * 100) + \\\"%)\\\" :\\n                \\\"rgba(\\\" + mathRound(bound01(this._r, 255) * 100) + \\\"%, \\\" + mathRound(bound01(this._g, 255) * 100) + \\\"%, \\\" + mathRound(bound01(this._b, 255) * 100) + \\\"%, \\\" + this._roundA + \\\")\\\";\\n        },\\n        toName: function () {\\n            if (this._a === 0) {\\n                return \\\"transparent\\\";\\n            }\\n\\n            if (this._a < 1) {\\n                return false;\\n            }\\n\\n            return hexNames[rgbToHex(this._r, this._g, this._b, true)] || false;\\n        },\\n        toFilter: function (secondColor) {\\n            var hex8String = '#' + rgbaToHex(this._r, this._g, this._b, this._a);\\n            var secondHex8String = hex8String;\\n            var gradientType = this._gradientType ? \\\"GradientType = 1, \\\" : \\\"\\\";\\n\\n            if (secondColor) {\\n                var s = tinycolor(secondColor);\\n                secondHex8String = s.toHex8String();\\n            }\\n\\n            return \\\"progid:DXImageTransform.Microsoft.gradient(\\\" + gradientType + \\\"startColorstr=\\\" + hex8String + \\\",endColorstr=\\\" + secondHex8String + \\\")\\\";\\n        },\\n        toString: function (format) {\\n            var formatSet = !!format;\\n            format = format || this._format;\\n\\n            var formattedString = false;\\n            var hasAlpha = this._a < 1 && this._a >= 0;\\n            var needsAlphaFormat = !formatSet && hasAlpha && (format === \\\"hex\\\" || format === \\\"hex6\\\" || format === \\\"hex3\\\" || format === \\\"name\\\");\\n\\n            if (needsAlphaFormat) {\\n                // Special case for \\\"transparent\\\", all other non-alpha formats\\n                // will return rgba when there is transparency.\\n                if (format === \\\"name\\\" && this._a === 0) {\\n                    return this.toName();\\n                }\\n                return this.toRgbString();\\n            }\\n            if (format === \\\"rgb\\\") {\\n                formattedString = this.toRgbString();\\n            }\\n            if (format === \\\"prgb\\\") {\\n                formattedString = this.toPercentageRgbString();\\n            }\\n            if (format === \\\"hex\\\" || format === \\\"hex6\\\") {\\n                formattedString = this.toHexString();\\n            }\\n            if (format === \\\"hex3\\\") {\\n                formattedString = this.toHexString(true);\\n            }\\n            if (format === \\\"hex8\\\") {\\n                formattedString = this.toHex8String();\\n            }\\n            if (format === \\\"name\\\") {\\n                formattedString = this.toName();\\n            }\\n            if (format === \\\"hsl\\\") {\\n                formattedString = this.toHslString();\\n            }\\n            if (format === \\\"hsv\\\") {\\n                formattedString = this.toHsvString();\\n            }\\n\\n            return formattedString || this.toHexString();\\n        },\\n\\n        _applyModification: function (fn, args) {\\n            var color = fn.apply(null, [this].concat([].slice.call(args)));\\n            this._r = color._r;\\n            this._g = color._g;\\n            this._b = color._b;\\n            this.setAlpha(color._a);\\n            return this;\\n        },\\n        lighten: function () {\\n            return this._applyModification(lighten, arguments);\\n        },\\n        brighten: function () {\\n            return this._applyModification(brighten, arguments);\\n        },\\n        darken: function () {\\n            return this._applyModification(darken, arguments);\\n        },\\n        desaturate: function () {\\n            return this._applyModification(desaturate, arguments);\\n        },\\n        saturate: function () {\\n            return this._applyModification(saturate, arguments);\\n        },\\n        greyscale: function () {\\n            return this._applyModification(greyscale, arguments);\\n        },\\n        spin: function () {\\n            return this._applyModification(spin, arguments);\\n        },\\n\\n        _applyCombination: function (fn, args) {\\n            return fn.apply(null, [this].concat([].slice.call(args)));\\n        },\\n        analogous: function () {\\n            return this._applyCombination(analogous, arguments);\\n        },\\n        complement: function () {\\n            return this._applyCombination(complement, arguments);\\n        },\\n        monochromatic: function () {\\n            return this._applyCombination(monochromatic, arguments);\\n        },\\n        splitcomplement: function () {\\n            return this._applyCombination(splitcomplement, arguments);\\n        },\\n        triad: function () {\\n            return this._applyCombination(triad, arguments);\\n        },\\n        tetrad: function () {\\n            return this._applyCombination(tetrad, arguments);\\n        }\\n    };\\n\\n// If input is an object, force 1 into \\\"1.0\\\" to handle ratios properly\\n// String input requires \\\"1.0\\\" as input, so 1 will be treated as 1\\n    tinycolor.fromRatio = function (color, opts) {\\n        if (typeof color == \\\"object\\\") {\\n            var newColor = {};\\n            for (var i in color) {\\n                if (color.hasOwnProperty(i)) {\\n                    if (i === \\\"a\\\") {\\n                        newColor[i] = color[i];\\n                    }\\n                    else {\\n                        newColor[i] = convertToPercentage(color[i]);\\n                    }\\n                }\\n            }\\n            color = newColor;\\n        }\\n\\n        return tinycolor(color, opts);\\n    };\\n\\n// Given a string or object, convert that input to RGB\\n// Possible string inputs:\\n//\\n//     \\\"red\\\"\\n//     \\\"#f00\\\" or \\\"f00\\\"\\n//     \\\"#ff0000\\\" or \\\"ff0000\\\"\\n//     \\\"#ff000000\\\" or \\\"ff000000\\\"\\n//     \\\"rgb 255 0 0\\\" or \\\"rgb (255, 0, 0)\\\"\\n//     \\\"rgb 1.0 0 0\\\" or \\\"rgb (1, 0, 0)\\\"\\n//     \\\"rgba (255, 0, 0, 1)\\\" or \\\"rgba 255, 0, 0, 1\\\"\\n//     \\\"rgba (1.0, 0, 0, 1)\\\" or \\\"rgba 1.0, 0, 0, 1\\\"\\n//     \\\"hsl(0, 100%, 50%)\\\" or \\\"hsl 0 100% 50%\\\"\\n//     \\\"hsla(0, 100%, 50%, 1)\\\" or \\\"hsla 0 100% 50%, 1\\\"\\n//     \\\"hsv(0, 100%, 100%)\\\" or \\\"hsv 0 100% 100%\\\"\\n//\\n    function inputToRGB(color) {\\n\\n        var rgb = {r: 0, g: 0, b: 0};\\n        var a = 1;\\n        var ok = false;\\n        var format = false;\\n\\n        if (typeof color == \\\"string\\\") {\\n            color = stringInputToObject(color);\\n        }\\n\\n        if (typeof color == \\\"object\\\") {\\n            if (color.hasOwnProperty(\\\"r\\\") && color.hasOwnProperty(\\\"g\\\") && color.hasOwnProperty(\\\"b\\\")) {\\n                rgb = rgbToRgb(color.r, color.g, color.b);\\n                ok = true;\\n                format = String(color.r).substr(-1) === \\\"%\\\" ? \\\"prgb\\\" : \\\"rgb\\\";\\n            }\\n            else if (color.hasOwnProperty(\\\"h\\\") && color.hasOwnProperty(\\\"s\\\") && color.hasOwnProperty(\\\"v\\\")) {\\n                color.s = convertToPercentage(color.s);\\n                color.v = convertToPercentage(color.v);\\n                rgb = hsvToRgb(color.h, color.s, color.v);\\n                ok = true;\\n                format = \\\"hsv\\\";\\n            }\\n            else if (color.hasOwnProperty(\\\"h\\\") && color.hasOwnProperty(\\\"s\\\") && color.hasOwnProperty(\\\"l\\\")) {\\n                color.s = convertToPercentage(color.s);\\n                color.l = convertToPercentage(color.l);\\n                rgb = hslToRgb(color.h, color.s, color.l);\\n                ok = true;\\n                format = \\\"hsl\\\";\\n            }\\n\\n            if (color.hasOwnProperty(\\\"a\\\")) {\\n                a = color.a;\\n            }\\n        }\\n\\n        a = boundAlpha(a);\\n\\n        return {\\n            ok: ok,\\n            format: color.format || format,\\n            r: mathMin(255, mathMax(rgb.r, 0)),\\n            g: mathMin(255, mathMax(rgb.g, 0)),\\n            b: mathMin(255, mathMax(rgb.b, 0)),\\n            a: a\\n        };\\n    }\\n\\n\\n// Conversion Functions\\n// --------------------\\n\\n// `rgbToHsl`, `rgbToHsv`, `hslToRgb`, `hsvToRgb` modified from:\\n// <http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript>\\n\\n// `rgbToRgb`\\n// Handle bounds / percentage checking to conform to CSS color spec\\n// <http://www.w3.org/TR/css3-color/>\\n// *Assumes:* r, g, b in [0, 255] or [0, 1]\\n// *Returns:* { r, g, b } in [0, 255]\\n    function rgbToRgb(r, g, b) {\\n        return {\\n            r: bound01(r, 255) * 255,\\n            g: bound01(g, 255) * 255,\\n            b: bound01(b, 255) * 255\\n        };\\n    }\\n\\n// `rgbToHsl`\\n// Converts an RGB color value to HSL.\\n// *Assumes:* r, g, and b are contained in [0, 255] or [0, 1]\\n// *Returns:* { h, s, l } in [0,1]\\n    function rgbToHsl(r, g, b) {\\n\\n        r = bound01(r, 255);\\n        g = bound01(g, 255);\\n        b = bound01(b, 255);\\n\\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\\n        var h, s, l = (max + min) / 2;\\n\\n        if (max == min) {\\n            h = s = 0; // achromatic\\n        }\\n        else {\\n            var d = max - min;\\n            s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\\n            switch (max) {\\n                case r:\\n                    h = (g - b) / d + (g < b ? 6 : 0);\\n                    break;\\n                case g:\\n                    h = (b - r) / d + 2;\\n                    break;\\n                case b:\\n                    h = (r - g) / d + 4;\\n                    break;\\n            }\\n\\n            h /= 6;\\n        }\\n\\n        return {h: h, s: s, l: l};\\n    }\\n\\n// `hslToRgb`\\n// Converts an HSL color value to RGB.\\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and l are contained [0, 1] or [0, 100]\\n// *Returns:* { r, g, b } in the set [0, 255]\\n    function hslToRgb(h, s, l) {\\n        var r, g, b;\\n\\n        h = bound01(h, 360);\\n        s = bound01(s, 100);\\n        l = bound01(l, 100);\\n\\n        function hue2rgb(p, q, t) {\\n            if (t < 0) t += 1;\\n            if (t > 1) t -= 1;\\n            if (t < 1 / 6) return p + (q - p) * 6 * t;\\n            if (t < 1 / 2) return q;\\n            if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\\n            return p;\\n        }\\n\\n        if (s === 0) {\\n            r = g = b = l; // achromatic\\n        }\\n        else {\\n            var q = l < 0.5 ? l * (1 + s) : l + s - l * s;\\n            var p = 2 * l - q;\\n            r = hue2rgb(p, q, h + 1 / 3);\\n            g = hue2rgb(p, q, h);\\n            b = hue2rgb(p, q, h - 1 / 3);\\n        }\\n\\n        return {r: r * 255, g: g * 255, b: b * 255};\\n    }\\n\\n// `rgbToHsv`\\n// Converts an RGB color value to HSV\\n// *Assumes:* r, g, and b are contained in the set [0, 255] or [0, 1]\\n// *Returns:* { h, s, v } in [0,1]\\n    function rgbToHsv(r, g, b) {\\n\\n        r = bound01(r, 255);\\n        g = bound01(g, 255);\\n        b = bound01(b, 255);\\n\\n        var max = mathMax(r, g, b), min = mathMin(r, g, b);\\n        var h, s, v = max;\\n\\n        var d = max - min;\\n        s = max === 0 ? 0 : d / max;\\n\\n        if (max == min) {\\n            h = 0; // achromatic\\n        }\\n        else {\\n            switch (max) {\\n                case r:\\n                    h = (g - b) / d + (g < b ? 6 : 0);\\n                    break;\\n                case g:\\n                    h = (b - r) / d + 2;\\n                    break;\\n                case b:\\n                    h = (r - g) / d + 4;\\n                    break;\\n            }\\n            h /= 6;\\n        }\\n        return {h: h, s: s, v: v};\\n    }\\n\\n// `hsvToRgb`\\n// Converts an HSV color value to RGB.\\n// *Assumes:* h is contained in [0, 1] or [0, 360] and s and v are contained in [0, 1] or [0, 100]\\n// *Returns:* { r, g, b } in the set [0, 255]\\n    function hsvToRgb(h, s, v) {\\n\\n        h = bound01(h, 360) * 6;\\n        s = bound01(s, 100);\\n        v = bound01(v, 100);\\n\\n        var i = math.floor(h),\\n            f = h - i,\\n            p = v * (1 - s),\\n            q = v * (1 - f * s),\\n            t = v * (1 - (1 - f) * s),\\n            mod = i % 6,\\n            r = [v, q, p, p, t, v][mod],\\n            g = [t, v, v, q, p, p][mod],\\n            b = [p, p, t, v, v, q][mod];\\n\\n        return {r: r * 255, g: g * 255, b: b * 255};\\n    }\\n\\n// `rgbToHex`\\n// Converts an RGB color to hex\\n// Assumes r, g, and b are contained in the set [0, 255]\\n// Returns a 3 or 6 character hex\\n    function rgbToHex(r, g, b, allow3Char) {\\n\\n        var hex = [\\n            pad2(mathRound(r).toString(16)),\\n            pad2(mathRound(g).toString(16)),\\n            pad2(mathRound(b).toString(16))\\n        ];\\n\\n        // Return a 3 character hex if possible\\n        if (allow3Char && hex[0].charAt(0) == hex[0].charAt(1) && hex[1].charAt(0) == hex[1].charAt(1) && hex[2].charAt(0) == hex[2].charAt(1)) {\\n            return hex[0].charAt(0) + hex[1].charAt(0) + hex[2].charAt(0);\\n        }\\n\\n        return hex.join(\\\"\\\");\\n    }\\n\\n// `rgbaToHex`\\n// Converts an RGBA color plus alpha transparency to hex\\n// Assumes r, g, b and a are contained in the set [0, 255]\\n// Returns an 8 character hex\\n    function rgbaToHex(r, g, b, a) {\\n\\n        var hex = [\\n            pad2(convertDecimalToHex(a)),\\n            pad2(mathRound(r).toString(16)),\\n            pad2(mathRound(g).toString(16)),\\n            pad2(mathRound(b).toString(16))\\n        ];\\n\\n        return hex.join(\\\"\\\");\\n    }\\n\\n// `equals`\\n// Can be called with any tinycolor input\\n    tinycolor.equals = function (color1, color2) {\\n        if (!color1 || !color2) {\\n            return false;\\n        }\\n        return tinycolor(color1).toRgbString() == tinycolor(color2).toRgbString();\\n    };\\n\\n    tinycolor.random = function () {\\n        return tinycolor.fromRatio({\\n            r: mathRandom(),\\n            g: mathRandom(),\\n            b: mathRandom()\\n        });\\n    };\\n\\n\\n// Modification Functions\\n// ----------------------\\n// Thanks to less.js for some of the basics here\\n// <https://github.com/cloudhead/less.js/blob/master/lib/less/functions.js>\\n\\n    function desaturate(color, amount) {\\n        amount = (amount === 0) ? 0 : (amount || 10);\\n        var hsl = tinycolor(color).toHsl();\\n        hsl.s -= amount / 100;\\n        hsl.s = clamp01(hsl.s);\\n        return tinycolor(hsl);\\n    }\\n\\n    function saturate(color, amount) {\\n        amount = (amount === 0) ? 0 : (amount || 10);\\n        var hsl = tinycolor(color).toHsl();\\n        hsl.s += amount / 100;\\n        hsl.s = clamp01(hsl.s);\\n        return tinycolor(hsl);\\n    }\\n\\n    function greyscale(color) {\\n        return tinycolor(color).desaturate(100);\\n    }\\n\\n    function lighten(color, amount) {\\n        amount = (amount === 0) ? 0 : (amount || 10);\\n        var hsl = tinycolor(color).toHsl();\\n        hsl.l += amount / 100;\\n        hsl.l = clamp01(hsl.l);\\n        return tinycolor(hsl);\\n    }\\n\\n    function brighten(color, amount) {\\n        amount = (amount === 0) ? 0 : (amount || 10);\\n        var rgb = tinycolor(color).toRgb();\\n        rgb.r = mathMax(0, mathMin(255, rgb.r - mathRound(255 * -(amount / 100))));\\n        rgb.g = mathMax(0, mathMin(255, rgb.g - mathRound(255 * -(amount / 100))));\\n        rgb.b = mathMax(0, mathMin(255, rgb.b - mathRound(255 * -(amount / 100))));\\n        return tinycolor(rgb);\\n    }\\n\\n    function darken(color, amount) {\\n        amount = (amount === 0) ? 0 : (amount || 10);\\n        var hsl = tinycolor(color).toHsl();\\n        hsl.l -= amount / 100;\\n        hsl.l = clamp01(hsl.l);\\n        return tinycolor(hsl);\\n    }\\n\\n// Spin takes a positive or negative amount within [-360, 360] indicating the change of hue.\\n// Values outside of this range will be wrapped into this range.\\n    function spin(color, amount) {\\n        var hsl = tinycolor(color).toHsl();\\n        var hue = (mathRound(hsl.h) + amount) % 360;\\n        hsl.h = hue < 0 ? 360 + hue : hue;\\n        return tinycolor(hsl);\\n    }\\n\\n// Combination Functions\\n// ---------------------\\n// Thanks to jQuery xColor for some of the ideas behind these\\n// <https://github.com/infusion/jQuery-xcolor/blob/master/jquery.xcolor.js>\\n\\n    function complement(color) {\\n        var hsl = tinycolor(color).toHsl();\\n        hsl.h = (hsl.h + 180) % 360;\\n        return tinycolor(hsl);\\n    }\\n\\n    function triad(color) {\\n        var hsl = tinycolor(color).toHsl();\\n        var h = hsl.h;\\n        return [\\n            tinycolor(color),\\n            tinycolor({h: (h + 120) % 360, s: hsl.s, l: hsl.l}),\\n            tinycolor({h: (h + 240) % 360, s: hsl.s, l: hsl.l})\\n        ];\\n    }\\n\\n    function tetrad(color) {\\n        var hsl = tinycolor(color).toHsl();\\n        var h = hsl.h;\\n        return [\\n            tinycolor(color),\\n            tinycolor({h: (h + 90) % 360, s: hsl.s, l: hsl.l}),\\n            tinycolor({h: (h + 180) % 360, s: hsl.s, l: hsl.l}),\\n            tinycolor({h: (h + 270) % 360, s: hsl.s, l: hsl.l})\\n        ];\\n    }\\n\\n    function splitcomplement(color) {\\n        var hsl = tinycolor(color).toHsl();\\n        var h = hsl.h;\\n        return [\\n            tinycolor(color),\\n            tinycolor({h: (h + 72) % 360, s: hsl.s, l: hsl.l}),\\n            tinycolor({h: (h + 216) % 360, s: hsl.s, l: hsl.l})\\n        ];\\n    }\\n\\n    function analogous(color, results, slices) {\\n        results = results || 6;\\n        slices = slices || 30;\\n\\n        var hsl = tinycolor(color).toHsl();\\n        var part = 360 / slices;\\n        var ret = [tinycolor(color)];\\n\\n        for (hsl.h = ((hsl.h - (part * results >> 1)) + 720) % 360; --results;) {\\n            hsl.h = (hsl.h + part) % 360;\\n            ret.push(tinycolor(hsl));\\n        }\\n        return ret;\\n    }\\n\\n    function monochromatic(color, results) {\\n        results = results || 6;\\n        var hsv = tinycolor(color).toHsv();\\n        var h = hsv.h, s = hsv.s, v = hsv.v;\\n        var ret = [];\\n        var modification = 1 / results;\\n\\n        while (results--) {\\n            ret.push(tinycolor({h: h, s: s, v: v}));\\n            v = (v + modification) % 1;\\n        }\\n\\n        return ret;\\n    }\\n\\n// Utility Functions\\n// ---------------------\\n\\n    tinycolor.mix = function (color1, color2, amount) {\\n        amount = (amount === 0) ? 0 : (amount || 50);\\n\\n        var rgb1 = tinycolor(color1).toRgb();\\n        var rgb2 = tinycolor(color2).toRgb();\\n\\n        var p = amount / 100;\\n        var w = p * 2 - 1;\\n        var a = rgb2.a - rgb1.a;\\n\\n        var w1;\\n\\n        if (w * a == -1) {\\n            w1 = w;\\n        } else {\\n            w1 = (w + a) / (1 + w * a);\\n        }\\n\\n        w1 = (w1 + 1) / 2;\\n\\n        var w2 = 1 - w1;\\n\\n        var rgba = {\\n            r: rgb2.r * w1 + rgb1.r * w2,\\n            g: rgb2.g * w1 + rgb1.g * w2,\\n            b: rgb2.b * w1 + rgb1.b * w2,\\n            a: rgb2.a * p + rgb1.a * (1 - p)\\n        };\\n\\n        return tinycolor(rgba);\\n    };\\n\\n\\n// Readability Functions\\n// ---------------------\\n// <http://www.w3.org/TR/2008/REC-WCAG20-20081211/#contrast-ratiodef (WCAG Version 2)\\n\\n// `contrast`\\n// Analyze the 2 colors and returns the color contrast defined by (WCAG Version 2)\\n    tinycolor.readability = function (color1, color2) {\\n        var c1 = tinycolor(color1);\\n        var c2 = tinycolor(color2);\\n        return (Math.max(c1.getLuminance(), c2.getLuminance()) + 0.05) / (Math.min(c1.getLuminance(), c2.getLuminance()) + 0.05);\\n    };\\n\\n// `isReadable`\\n// Ensure that foreground and background color combinations meet WCAG2 guidelines.\\n// The third argument is an optional Object.\\n//      the 'level' property states 'AA' or 'AAA' - if missing or invalid, it defaults to 'AA';\\n//      the 'size' property states 'large' or 'small' - if missing or invalid, it defaults to 'small'.\\n// If the entire object is absent, isReadable defaults to {level:\\\"AA\\\",size:\\\"small\\\"}.\\n\\n// *Example*\\n//    tinycolor.isReadable(\\\"#000\\\", \\\"#111\\\") => false\\n//    tinycolor.isReadable(\\\"#000\\\", \\\"#111\\\",{level:\\\"AA\\\",size:\\\"large\\\"}) => false\\n    tinycolor.isReadable = function (color1, color2, wcag2) {\\n        var readability = tinycolor.readability(color1, color2);\\n        var wcag2Parms, out;\\n\\n        out = false;\\n\\n        wcag2Parms = validateWCAG2Parms(wcag2);\\n        switch (wcag2Parms.level + wcag2Parms.size) {\\n            case \\\"AAsmall\\\":\\n            case \\\"AAAlarge\\\":\\n                out = readability >= 4.5;\\n                break;\\n            case \\\"AAlarge\\\":\\n                out = readability >= 3;\\n                break;\\n            case \\\"AAAsmall\\\":\\n                out = readability >= 7;\\n                break;\\n        }\\n        return out;\\n\\n    };\\n\\n// `mostReadable`\\n// Given a base color and a list of possible foreground or background\\n// colors for that base, returns the most readable color.\\n// Optionally returns Black or White if the most readable color is unreadable.\\n// *Example*\\n//    tinycolor.mostReadable(tinycolor.mostReadable(\\\"#123\\\", [\\\"#124\\\", \\\"#125\\\"],{includeFallbackColors:false}).toHexString(); // \\\"#112255\\\"\\n//    tinycolor.mostReadable(tinycolor.mostReadable(\\\"#123\\\", [\\\"#124\\\", \\\"#125\\\"],{includeFallbackColors:true}).toHexString();  // \\\"#ffffff\\\"\\n//    tinycolor.mostReadable(\\\"#a8015a\\\", [\\\"#faf3f3\\\"],{includeFallbackColors:true,level:\\\"AAA\\\",size:\\\"large\\\"}).toHexString(); // \\\"#faf3f3\\\"\\n//    tinycolor.mostReadable(\\\"#a8015a\\\", [\\\"#faf3f3\\\"],{includeFallbackColors:true,level:\\\"AAA\\\",size:\\\"small\\\"}).toHexString(); // \\\"#ffffff\\\"\\n    tinycolor.mostReadable = function (baseColor, colorList, args) {\\n        var bestColor = null;\\n        var bestScore = 0;\\n        var readability;\\n        var includeFallbackColors, level, size;\\n        args = args || {};\\n        includeFallbackColors = args.includeFallbackColors;\\n        level = args.level;\\n        size = args.size;\\n\\n        for (var i = 0; i < colorList.length; i++) {\\n            readability = tinycolor.readability(baseColor, colorList[i]);\\n            if (readability > bestScore) {\\n                bestScore = readability;\\n                bestColor = tinycolor(colorList[i]);\\n            }\\n        }\\n\\n        if (tinycolor.isReadable(baseColor, bestColor, {\\\"level\\\": level, \\\"size\\\": size}) || !includeFallbackColors) {\\n            return bestColor;\\n        }\\n        else {\\n            args.includeFallbackColors = false;\\n            return tinycolor.mostReadable(baseColor, [\\\"#fff\\\", \\\"#000\\\"], args);\\n        }\\n    };\\n\\n\\n// Big List of Colors\\n// ------------------\\n// <http://www.w3.org/TR/css3-color/#svg-color>\\n    var names = tinycolor.names = {\\n        aliceblue: \\\"f0f8ff\\\",\\n        antiquewhite: \\\"faebd7\\\",\\n        aqua: \\\"0ff\\\",\\n        aquamarine: \\\"7fffd4\\\",\\n        azure: \\\"f0ffff\\\",\\n        beige: \\\"f5f5dc\\\",\\n        bisque: \\\"ffe4c4\\\",\\n        black: \\\"000\\\",\\n        blanchedalmond: \\\"ffebcd\\\",\\n        blue: \\\"00f\\\",\\n        blueviolet: \\\"8a2be2\\\",\\n        brown: \\\"a52a2a\\\",\\n        burlywood: \\\"deb887\\\",\\n        burntsienna: \\\"ea7e5d\\\",\\n        cadetblue: \\\"5f9ea0\\\",\\n        chartreuse: \\\"7fff00\\\",\\n        chocolate: \\\"d2691e\\\",\\n        coral: \\\"ff7f50\\\",\\n        cornflowerblue: \\\"6495ed\\\",\\n        cornsilk: \\\"fff8dc\\\",\\n        crimson: \\\"dc143c\\\",\\n        cyan: \\\"0ff\\\",\\n        darkblue: \\\"00008b\\\",\\n        darkcyan: \\\"008b8b\\\",\\n        darkgoldenrod: \\\"b8860b\\\",\\n        darkgray: \\\"a9a9a9\\\",\\n        darkgreen: \\\"006400\\\",\\n        darkgrey: \\\"a9a9a9\\\",\\n        darkkhaki: \\\"bdb76b\\\",\\n        darkmagenta: \\\"8b008b\\\",\\n        darkolivegreen: \\\"556b2f\\\",\\n        darkorange: \\\"ff8c00\\\",\\n        darkorchid: \\\"9932cc\\\",\\n        darkred: \\\"8b0000\\\",\\n        darksalmon: \\\"e9967a\\\",\\n        darkseagreen: \\\"8fbc8f\\\",\\n        darkslateblue: \\\"483d8b\\\",\\n        darkslategray: \\\"2f4f4f\\\",\\n        darkslategrey: \\\"2f4f4f\\\",\\n        darkturquoise: \\\"00ced1\\\",\\n        darkviolet: \\\"9400d3\\\",\\n        deeppink: \\\"ff1493\\\",\\n        deepskyblue: \\\"00bfff\\\",\\n        dimgray: \\\"696969\\\",\\n        dimgrey: \\\"696969\\\",\\n        dodgerblue: \\\"1e90ff\\\",\\n        firebrick: \\\"b22222\\\",\\n        floralwhite: \\\"fffaf0\\\",\\n        forestgreen: \\\"228b22\\\",\\n        fuchsia: \\\"f0f\\\",\\n        gainsboro: \\\"dcdcdc\\\",\\n        ghostwhite: \\\"f8f8ff\\\",\\n        gold: \\\"ffd700\\\",\\n        goldenrod: \\\"daa520\\\",\\n        gray: \\\"808080\\\",\\n        green: \\\"008000\\\",\\n        greenyellow: \\\"adff2f\\\",\\n        grey: \\\"808080\\\",\\n        honeydew: \\\"f0fff0\\\",\\n        hotpink: \\\"ff69b4\\\",\\n        indianred: \\\"cd5c5c\\\",\\n        indigo: \\\"4b0082\\\",\\n        ivory: \\\"fffff0\\\",\\n        khaki: \\\"f0e68c\\\",\\n        lavender: \\\"e6e6fa\\\",\\n        lavenderblush: \\\"fff0f5\\\",\\n        lawngreen: \\\"7cfc00\\\",\\n        lemonchiffon: \\\"fffacd\\\",\\n        lightblue: \\\"add8e6\\\",\\n        lightcoral: \\\"f08080\\\",\\n        lightcyan: \\\"e0ffff\\\",\\n        lightgoldenrodyellow: \\\"fafad2\\\",\\n        lightgray: \\\"d3d3d3\\\",\\n        lightgreen: \\\"90ee90\\\",\\n        lightgrey: \\\"d3d3d3\\\",\\n        lightpink: \\\"ffb6c1\\\",\\n        lightsalmon: \\\"ffa07a\\\",\\n        lightseagreen: \\\"20b2aa\\\",\\n        lightskyblue: \\\"87cefa\\\",\\n        lightslategray: \\\"789\\\",\\n        lightslategrey: \\\"789\\\",\\n        lightsteelblue: \\\"b0c4de\\\",\\n        lightyellow: \\\"ffffe0\\\",\\n        lime: \\\"0f0\\\",\\n        limegreen: \\\"32cd32\\\",\\n        linen: \\\"faf0e6\\\",\\n        magenta: \\\"f0f\\\",\\n        maroon: \\\"800000\\\",\\n        mediumaquamarine: \\\"66cdaa\\\",\\n        mediumblue: \\\"0000cd\\\",\\n        mediumorchid: \\\"ba55d3\\\",\\n        mediumpurple: \\\"9370db\\\",\\n        mediumseagreen: \\\"3cb371\\\",\\n        mediumslateblue: \\\"7b68ee\\\",\\n        mediumspringgreen: \\\"00fa9a\\\",\\n        mediumturquoise: \\\"48d1cc\\\",\\n        mediumvioletred: \\\"c71585\\\",\\n        midnightblue: \\\"191970\\\",\\n        mintcream: \\\"f5fffa\\\",\\n        mistyrose: \\\"ffe4e1\\\",\\n        moccasin: \\\"ffe4b5\\\",\\n        navajowhite: \\\"ffdead\\\",\\n        navy: \\\"000080\\\",\\n        oldlace: \\\"fdf5e6\\\",\\n        olive: \\\"808000\\\",\\n        olivedrab: \\\"6b8e23\\\",\\n        orange: \\\"ffa500\\\",\\n        orangered: \\\"ff4500\\\",\\n        orchid: \\\"da70d6\\\",\\n        palegoldenrod: \\\"eee8aa\\\",\\n        palegreen: \\\"98fb98\\\",\\n        paleturquoise: \\\"afeeee\\\",\\n        palevioletred: \\\"db7093\\\",\\n        papayawhip: \\\"ffefd5\\\",\\n        peachpuff: \\\"ffdab9\\\",\\n        peru: \\\"cd853f\\\",\\n        pink: \\\"ffc0cb\\\",\\n        plum: \\\"dda0dd\\\",\\n        powderblue: \\\"b0e0e6\\\",\\n        purple: \\\"800080\\\",\\n        rebeccapurple: \\\"663399\\\",\\n        red: \\\"f00\\\",\\n        rosybrown: \\\"bc8f8f\\\",\\n        royalblue: \\\"4169e1\\\",\\n        saddlebrown: \\\"8b4513\\\",\\n        salmon: \\\"fa8072\\\",\\n        sandybrown: \\\"f4a460\\\",\\n        seagreen: \\\"2e8b57\\\",\\n        seashell: \\\"fff5ee\\\",\\n        sienna: \\\"a0522d\\\",\\n        silver: \\\"c0c0c0\\\",\\n        skyblue: \\\"87ceeb\\\",\\n        slateblue: \\\"6a5acd\\\",\\n        slategray: \\\"708090\\\",\\n        slategrey: \\\"708090\\\",\\n        snow: \\\"fffafa\\\",\\n        springgreen: \\\"00ff7f\\\",\\n        steelblue: \\\"4682b4\\\",\\n        tan: \\\"d2b48c\\\",\\n        teal: \\\"008080\\\",\\n        thistle: \\\"d8bfd8\\\",\\n        tomato: \\\"ff6347\\\",\\n        turquoise: \\\"40e0d0\\\",\\n        violet: \\\"ee82ee\\\",\\n        wheat: \\\"f5deb3\\\",\\n        white: \\\"fff\\\",\\n        whitesmoke: \\\"f5f5f5\\\",\\n        yellow: \\\"ff0\\\",\\n        yellowgreen: \\\"9acd32\\\"\\n    };\\n\\n// Make it easy to access colors via `hexNames[hex]`\\n    var hexNames = tinycolor.hexNames = flip(names);\\n\\n\\n// Utilities\\n// ---------\\n\\n// `{ 'name1': 'val1' }` becomes `{ 'val1': 'name1' }`\\n    function flip(o) {\\n        var flipped = {};\\n        for (var i in o) {\\n            if (o.hasOwnProperty(i)) {\\n                flipped[o[i]] = i;\\n            }\\n        }\\n        return flipped;\\n    }\\n\\n// Return a valid alpha value [0,1] with all invalid values being set to 1\\n    function boundAlpha(a) {\\n        a = parseFloat(a);\\n\\n        if (isNaN(a) || a < 0 || a > 1) {\\n            a = 1;\\n        }\\n\\n        return a;\\n    }\\n\\n// Take input from [0, n] and return it as [0, 1]\\n    function bound01(n, max) {\\n        if (isOnePointZero(n)) {\\n            n = \\\"100%\\\";\\n        }\\n\\n        var processPercent = isPercentage(n);\\n        n = mathMin(max, mathMax(0, parseFloat(n)));\\n\\n        // Automatically convert percentage into number\\n        if (processPercent) {\\n            n = parseInt(n * max, 10) / 100;\\n        }\\n\\n        // Handle floating point rounding errors\\n        if ((math.abs(n - max) < 0.000001)) {\\n            return 1;\\n        }\\n\\n        // Convert into [0, 1] range if it isn't already\\n        return (n % max) / parseFloat(max);\\n    }\\n\\n// Force a number between 0 and 1\\n    function clamp01(val) {\\n        return mathMin(1, mathMax(0, val));\\n    }\\n\\n// Parse a base-16 hex value into a base-10 integer\\n    function parseIntFromHex(val) {\\n        return parseInt(val, 16);\\n    }\\n\\n// Need to handle 1.0 as 100%, since once it is a number, there is no difference between it and 1\\n// <http://stackoverflow.com/questions/7422072/javascript-how-to-detect-number-as-a-decimal-including-1-0>\\n    function isOnePointZero(n) {\\n        return typeof n == \\\"string\\\" && n.indexOf('.') != -1 && parseFloat(n) === 1;\\n    }\\n\\n// Check to see if string passed in is a percentage\\n    function isPercentage(n) {\\n        return typeof n === \\\"string\\\" && n.indexOf('%') != -1;\\n    }\\n\\n// Force a hex value to have 2 characters\\n    function pad2(c) {\\n        return c.length == 1 ? '0' + c : '' + c;\\n    }\\n\\n// Replace a decimal with it's percentage value\\n    function convertToPercentage(n) {\\n        if (n <= 1) {\\n            n = (n * 100) + \\\"%\\\";\\n        }\\n\\n        return n;\\n    }\\n\\n// Converts a decimal to a hex value\\n    function convertDecimalToHex(d) {\\n        return Math.round(parseFloat(d) * 255).toString(16);\\n    }\\n\\n// Converts a hex value to a decimal\\n    function convertHexToDecimal(h) {\\n        return (parseIntFromHex(h) / 255);\\n    }\\n\\n    var matchers = (function () {\\n\\n        // <http://www.w3.org/TR/css3-values/#integers>\\n        var CSS_INTEGER = \\\"[-\\\\\\\\+]?\\\\\\\\d+%?\\\";\\n\\n        // <http://www.w3.org/TR/css3-values/#number-value>\\n        var CSS_NUMBER = \\\"[-\\\\\\\\+]?\\\\\\\\d*\\\\\\\\.\\\\\\\\d+%?\\\";\\n\\n        // Allow positive/negative integer/number.  Don't capture the either/or, just the entire outcome.\\n        var CSS_UNIT = \\\"(?:\\\" + CSS_NUMBER + \\\")|(?:\\\" + CSS_INTEGER + \\\")\\\";\\n\\n        // Actual matching.\\n        // Parentheses and commas are optional, but not required.\\n        // Whitespace can take the place of commas or opening paren\\n        var PERMISSIVE_MATCH3 = \\\"[\\\\\\\\s|\\\\\\\\(]+(\\\" + CSS_UNIT + \\\")[,|\\\\\\\\s]+(\\\" + CSS_UNIT + \\\")[,|\\\\\\\\s]+(\\\" + CSS_UNIT + \\\")\\\\\\\\s*\\\\\\\\)?\\\";\\n        var PERMISSIVE_MATCH4 = \\\"[\\\\\\\\s|\\\\\\\\(]+(\\\" + CSS_UNIT + \\\")[,|\\\\\\\\s]+(\\\" + CSS_UNIT + \\\")[,|\\\\\\\\s]+(\\\" + CSS_UNIT + \\\")[,|\\\\\\\\s]+(\\\" + CSS_UNIT + \\\")\\\\\\\\s*\\\\\\\\)?\\\";\\n\\n        return {\\n            rgb: new RegExp(\\\"rgb\\\" + PERMISSIVE_MATCH3),\\n            rgba: new RegExp(\\\"rgba\\\" + PERMISSIVE_MATCH4),\\n            hsl: new RegExp(\\\"hsl\\\" + PERMISSIVE_MATCH3),\\n            hsla: new RegExp(\\\"hsla\\\" + PERMISSIVE_MATCH4),\\n            hsv: new RegExp(\\\"hsv\\\" + PERMISSIVE_MATCH3),\\n            hsva: new RegExp(\\\"hsva\\\" + PERMISSIVE_MATCH4),\\n            hex3: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\\n            hex6: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,\\n            hex8: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/\\n        };\\n    })();\\n\\n// `stringInputToObject`\\n// Permissive string parsing.  Take in a number of formats, and output an object\\n// based on detected format.  Returns `{ r, g, b }` or `{ h, s, l }` or `{ h, s, v}`\\n    function stringInputToObject(color) {\\n\\n        color = color.replace(trimLeft, '').replace(trimRight, '').toLowerCase();\\n        var named = false;\\n        if (names[color]) {\\n            color = names[color];\\n            named = true;\\n        }\\n        else if (color == 'transparent') {\\n            return {r: 0, g: 0, b: 0, a: 0, format: \\\"name\\\"};\\n        }\\n\\n        // Try to match string input using regular expressions.\\n        // Keep most of the number bounding out of this function - don't worry about [0,1] or [0,100] or [0,360]\\n        // Just return an object and let the conversion functions handle that.\\n        // This way the result will be the same whether the tinycolor is initialized with string or object.\\n        var match;\\n        if ((match = matchers.rgb.exec(color))) {\\n            return {r: match[1], g: match[2], b: match[3]};\\n        }\\n        if ((match = matchers.rgba.exec(color))) {\\n            return {r: match[1], g: match[2], b: match[3], a: match[4]};\\n        }\\n        if ((match = matchers.hsl.exec(color))) {\\n            return {h: match[1], s: match[2], l: match[3]};\\n        }\\n        if ((match = matchers.hsla.exec(color))) {\\n            return {h: match[1], s: match[2], l: match[3], a: match[4]};\\n        }\\n        if ((match = matchers.hsv.exec(color))) {\\n            return {h: match[1], s: match[2], v: match[3]};\\n        }\\n        if ((match = matchers.hsva.exec(color))) {\\n            return {h: match[1], s: match[2], v: match[3], a: match[4]};\\n        }\\n        if ((match = matchers.hex8.exec(color))) {\\n            return {\\n                a: convertHexToDecimal(match[1]),\\n                r: parseIntFromHex(match[2]),\\n                g: parseIntFromHex(match[3]),\\n                b: parseIntFromHex(match[4]),\\n                format: named ? \\\"name\\\" : \\\"hex8\\\"\\n            };\\n        }\\n        if ((match = matchers.hex6.exec(color))) {\\n            return {\\n                r: parseIntFromHex(match[1]),\\n                g: parseIntFromHex(match[2]),\\n                b: parseIntFromHex(match[3]),\\n                format: named ? \\\"name\\\" : \\\"hex\\\"\\n            };\\n        }\\n        if ((match = matchers.hex3.exec(color))) {\\n            return {\\n                r: parseIntFromHex(match[1] + '' + match[1]),\\n                g: parseIntFromHex(match[2] + '' + match[2]),\\n                b: parseIntFromHex(match[3] + '' + match[3]),\\n                format: named ? \\\"name\\\" : \\\"hex\\\"\\n            };\\n        }\\n\\n        return false;\\n    }\\n\\n    function validateWCAG2Parms(parms) {\\n        // return valid WCAG2 parms for isReadable.\\n        // If input parms are invalid, return {\\\"level\\\":\\\"AA\\\", \\\"size\\\":\\\"small\\\"}\\n        var level, size;\\n        parms = parms || {\\\"level\\\": \\\"AA\\\", \\\"size\\\": \\\"small\\\"};\\n        level = (parms.level || \\\"AA\\\").toUpperCase();\\n        size = (parms.size || \\\"small\\\").toLowerCase();\\n        if (level !== \\\"AA\\\" && level !== \\\"AAA\\\") {\\n            level = \\\"AA\\\";\\n        }\\n        if (size !== \\\"small\\\" && size !== \\\"large\\\") {\\n            size = \\\"small\\\";\\n        }\\n        return {\\\"level\\\": level, \\\"size\\\": size};\\n    }\\n\\n// Node: Export function\\n    if (typeof module !== \\\"undefined\\\" && module.exports) {\\n        module.exports = tinycolor;\\n    }\\n// AMD/requirejs: Define the module\\n    else if (typeof define === 'function' && define.amd) {\\n        define(function () {\\n            return tinycolor;\\n        });\\n    }\\n// Browser: Expose to window\\n    else {\\n        window.tinycolor = tinycolor;\\n    }\\n\\n})();\\n\\n\\n/*\\n *\\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\\n *\\n * Copyright (c) 2012, Matias Meno\\n *\\n * Permission is hereby granted, free of charge, to any person obtaining a copy\\n * of this software and associated documentation files (the \\\"Software\\\"), to deal\\n * in the Software without restriction, including without limitation the rights\\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\\n * copies of the Software, and to permit persons to whom the Software is\\n * furnished to do so, subject to the following conditions:\\n *\\n * The above copyright notice and this permission notice shall be included in\\n * all copies or substantial portions of the Software.\\n *\\n * THE SOFTWARE IS PROVIDED \\\"AS IS\\\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\\n * THE SOFTWARE.\\n *\\n */\\n\\n(function () {\\n    var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\\n        __slice = [].slice,\\n        __hasProp = {}.hasOwnProperty,\\n        __extends = function (child, parent) {\\n            for (var key in parent) {\\n                if (__hasProp.call(parent, key)) child[key] = parent[key];\\n            }\\n            function ctor() {\\n                this.constructor = child;\\n            }\\n\\n            ctor.prototype = parent.prototype;\\n            child.prototype = new ctor();\\n            child.__super__ = parent.prototype;\\n            return child;\\n        };\\n\\n    noop = function () {\\n    };\\n\\n    Emitter = (function () {\\n        function Emitter() {\\n        }\\n\\n        Emitter.prototype.addEventListener = Emitter.prototype.on;\\n\\n        Emitter.prototype.on = function (event, fn) {\\n            this._callbacks = this._callbacks || {};\\n            if (!this._callbacks[event]) {\\n                this._callbacks[event] = [];\\n            }\\n            this._callbacks[event].push(fn);\\n            return this;\\n        };\\n\\n        Emitter.prototype.emit = function () {\\n            var args, callback, callbacks, event, _i, _len;\\n            event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\\n            this._callbacks = this._callbacks || {};\\n            callbacks = this._callbacks[event];\\n            if (callbacks) {\\n                for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\\n                    callback = callbacks[_i];\\n                    callback.apply(this, args);\\n                }\\n            }\\n            return this;\\n        };\\n\\n        Emitter.prototype.removeListener = Emitter.prototype.off;\\n\\n        Emitter.prototype.removeAllListeners = Emitter.prototype.off;\\n\\n        Emitter.prototype.removeEventListener = Emitter.prototype.off;\\n\\n        Emitter.prototype.off = function (event, fn) {\\n            var callback, callbacks, i, _i, _len;\\n            if (!this._callbacks || arguments.length === 0) {\\n                this._callbacks = {};\\n                return this;\\n            }\\n            callbacks = this._callbacks[event];\\n            if (!callbacks) {\\n                return this;\\n            }\\n            if (arguments.length === 1) {\\n                delete this._callbacks[event];\\n                return this;\\n            }\\n            for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {\\n                callback = callbacks[i];\\n                if (callback === fn) {\\n                    callbacks.splice(i, 1);\\n                    break;\\n                }\\n            }\\n            return this;\\n        };\\n\\n        return Emitter;\\n\\n    })();\\n\\n    Dropzone = (function (_super) {\\n        var extend, resolveOption;\\n\\n        __extends(Dropzone, _super);\\n\\n        Dropzone.prototype.Emitter = Emitter;\\n\\n\\n        /*\\n         This is a list of all available events you can register on a dropzone object.\\n\\n         You can register an event handler like this:\\n\\n         dropzone.on(\\\"dragEnter\\\", function() { });\\n         */\\n\\n        Dropzone.prototype.events = [\\\"drop\\\", \\\"dragstart\\\", \\\"dragend\\\", \\\"dragenter\\\", \\\"dragover\\\", \\\"dragleave\\\", \\\"addedfile\\\", \\\"addedfiles\\\", \\\"removedfile\\\", \\\"thumbnail\\\", \\\"error\\\", \\\"errormultiple\\\", \\\"processing\\\", \\\"processingmultiple\\\", \\\"uploadprogress\\\", \\\"totaluploadprogress\\\", \\\"sending\\\", \\\"sendingmultiple\\\", \\\"success\\\", \\\"successmultiple\\\", \\\"canceled\\\", \\\"canceledmultiple\\\", \\\"complete\\\", \\\"completemultiple\\\", \\\"reset\\\", \\\"maxfilesexceeded\\\", \\\"maxfilesreached\\\", \\\"queuecomplete\\\"];\\n\\n        Dropzone.prototype.defaultOptions = {\\n            url: null,\\n            method: \\\"post\\\",\\n            withCredentials: false,\\n            parallelUploads: 2,\\n            uploadMultiple: false,\\n            maxFilesize: 256,\\n            paramName: \\\"file\\\",\\n            createImageThumbnails: true,\\n            maxThumbnailFilesize: 10,\\n            thumbnailWidth: 120,\\n            thumbnailHeight: 120,\\n            filesizeBase: 1000,\\n            maxFiles: null,\\n            params: {},\\n            clickable: true,\\n            ignoreHiddenFiles: true,\\n            acceptedFiles: null,\\n            acceptedMimeTypes: null,\\n            autoProcessQueue: true,\\n            autoQueue: true,\\n            addRemoveLinks: false,\\n            previewsContainer: null,\\n            hiddenInputContainer: \\\"body\\\",\\n            capture: null,\\n            dictDefaultMessage: \\\"Drop files here to upload\\\",\\n            dictFallbackMessage: \\\"Your browser does not support drag'n'drop file uploads.\\\",\\n            dictFallbackText: \\\"Please use the fallback form below to upload your files like in the olden days.\\\",\\n            dictFileTooBig: \\\"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\\\",\\n            dictInvalidFileType: \\\"You can't upload files of this type.\\\",\\n            dictResponseError: \\\"Server responded with {{statusCode}} code.\\\",\\n            dictCancelUpload: \\\"Cancel upload\\\",\\n            dictCancelUploadConfirmation: \\\"Are you sure you want to cancel this upload?\\\",\\n            dictRemoveFile: \\\"Remove file\\\",\\n            dictRemoveFileConfirmation: null,\\n            dictMaxFilesExceeded: \\\"You can not upload any more files.\\\",\\n            accept: function (file, done) {\\n                return done();\\n            },\\n            init: function () {\\n                return noop;\\n            },\\n            forceFallback: false,\\n            fallback: function () {\\n                var child, messageElement, span, _i, _len, _ref;\\n                this.element.className = \\\"\\\" + this.element.className + \\\" dz-browser-not-supported\\\";\\n                _ref = this.element.getElementsByTagName(\\\"div\\\");\\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                    child = _ref[_i];\\n                    if (/(^| )dz-message($| )/.test(child.className)) {\\n                        messageElement = child;\\n                        child.className = \\\"dz-message\\\";\\n                        continue;\\n                    }\\n                }\\n                if (!messageElement) {\\n                    messageElement = Dropzone.createElement(\\\"<div class=\\\\\\\"dz-message\\\\\\\"><span></span></div>\\\");\\n                    this.element.appendChild(messageElement);\\n                }\\n                span = messageElement.getElementsByTagName(\\\"span\\\")[0];\\n                if (span) {\\n                    if (span.textContent != null) {\\n                        span.textContent = this.options.dictFallbackMessage;\\n                    } else if (span.innerText != null) {\\n                        span.innerText = this.options.dictFallbackMessage;\\n                    }\\n                }\\n                return this.element.appendChild(this.getFallbackForm());\\n            },\\n            resize: function (file) {\\n                var info, srcRatio, trgRatio;\\n                info = {\\n                    srcX: 0,\\n                    srcY: 0,\\n                    srcWidth: file.width,\\n                    srcHeight: file.height\\n                };\\n                srcRatio = file.width / file.height;\\n                info.optWidth = this.options.thumbnailWidth;\\n                info.optHeight = this.options.thumbnailHeight;\\n                if ((info.optWidth == null) && (info.optHeight == null)) {\\n                    info.optWidth = info.srcWidth;\\n                    info.optHeight = info.srcHeight;\\n                } else if (info.optWidth == null) {\\n                    info.optWidth = srcRatio * info.optHeight;\\n                } else if (info.optHeight == null) {\\n                    info.optHeight = (1 / srcRatio) * info.optWidth;\\n                }\\n                trgRatio = info.optWidth / info.optHeight;\\n                if (file.height < info.optHeight || file.width < info.optWidth) {\\n                    info.trgHeight = info.srcHeight;\\n                    info.trgWidth = info.srcWidth;\\n                } else {\\n                    if (srcRatio > trgRatio) {\\n                        info.srcHeight = file.height;\\n                        info.srcWidth = info.srcHeight * trgRatio;\\n                    } else {\\n                        info.srcWidth = file.width;\\n                        info.srcHeight = info.srcWidth / trgRatio;\\n                    }\\n                }\\n                info.srcX = (file.width - info.srcWidth) / 2;\\n                info.srcY = (file.height - info.srcHeight) / 2;\\n                return info;\\n            },\\n\\n            /*\\n             Those functions register themselves to the events on init and handle all\\n             the user interface specific stuff. Overwriting them won't break the upload\\n             but can break the way it's displayed.\\n             You can overwrite them if you don't like the default behavior. If you just\\n             want to add an additional event handler, register it on the dropzone object\\n             and don't overwrite those options.\\n             */\\n            drop: function (e) {\\n                return this.element.classList.remove(\\\"dz-drag-hover\\\");\\n            },\\n            dragstart: noop,\\n            dragend: function (e) {\\n                return this.element.classList.remove(\\\"dz-drag-hover\\\");\\n            },\\n            dragenter: function (e) {\\n                return this.element.classList.add(\\\"dz-drag-hover\\\");\\n            },\\n            dragover: function (e) {\\n                return this.element.classList.add(\\\"dz-drag-hover\\\");\\n            },\\n            dragleave: function (e) {\\n                return this.element.classList.remove(\\\"dz-drag-hover\\\");\\n            },\\n            paste: noop,\\n            reset: function () {\\n                return this.element.classList.remove(\\\"dz-started\\\");\\n            },\\n            addedfile: function (file) {\\n                var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\\n                if (this.element === this.previewsContainer) {\\n                    this.element.classList.add(\\\"dz-started\\\");\\n                }\\n                if (this.previewsContainer) {\\n                    file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\\n                    file.previewTemplate = file.previewElement;\\n                    this.previewsContainer.appendChild(file.previewElement);\\n                    _ref = file.previewElement.querySelectorAll(\\\"[data-dz-name]\\\");\\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                        node = _ref[_i];\\n                        node.textContent = file.name;\\n                    }\\n                    _ref1 = file.previewElement.querySelectorAll(\\\"[data-dz-size]\\\");\\n                    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\\n                        node = _ref1[_j];\\n                        node.innerHTML = this.filesize(file.size);\\n                    }\\n                    if (this.options.addRemoveLinks) {\\n                        file._removeLink = Dropzone.createElement(\\\"<a class=\\\\\\\"dz-remove\\\\\\\" href=\\\\\\\"javascript:undefined;\\\\\\\" data-dz-remove>\\\" + this.options.dictRemoveFile + \\\"</a>\\\");\\n                        file.previewElement.appendChild(file._removeLink);\\n                    }\\n                    removeFileEvent = (function (_this) {\\n                        return function (e) {\\n                            e.preventDefault();\\n                            e.stopPropagation();\\n                            if (file.status === Dropzone.UPLOADING) {\\n                                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function () {\\n                                    return _this.removeFile(file);\\n                                });\\n                            } else {\\n                                if (_this.options.dictRemoveFileConfirmation) {\\n                                    return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function () {\\n                                        return _this.removeFile(file);\\n                                    });\\n                                } else {\\n                                    return _this.removeFile(file);\\n                                }\\n                            }\\n                        };\\n                    })(this);\\n                    _ref2 = file.previewElement.querySelectorAll(\\\"[data-dz-remove]\\\");\\n                    _results = [];\\n                    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\\n                        removeLink = _ref2[_k];\\n                        _results.push(removeLink.addEventListener(\\\"click\\\", removeFileEvent));\\n                    }\\n                    return _results;\\n                }\\n            },\\n            removedfile: function (file) {\\n                var _ref;\\n                if (file.previewElement) {\\n                    if ((_ref = file.previewElement) != null) {\\n                        _ref.parentNode.removeChild(file.previewElement);\\n                    }\\n                }\\n                return this._updateMaxFilesReachedClass();\\n            },\\n            thumbnail: function (file, dataUrl) {\\n                var thumbnailElement, _i, _len, _ref;\\n                if (file.previewElement) {\\n                    file.previewElement.classList.remove(\\\"dz-file-preview\\\");\\n                    _ref = file.previewElement.querySelectorAll(\\\"[data-dz-thumbnail]\\\");\\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                        thumbnailElement = _ref[_i];\\n                        thumbnailElement.alt = file.name;\\n                        thumbnailElement.src = dataUrl;\\n                    }\\n                    return setTimeout(((function (_this) {\\n                        return function () {\\n                            return file.previewElement.classList.add(\\\"dz-image-preview\\\");\\n                        };\\n                    })(this)), 1);\\n                }\\n            },\\n            error: function (file, message) {\\n                var node, _i, _len, _ref, _results;\\n                if (file.previewElement) {\\n                    file.previewElement.classList.add(\\\"dz-error\\\");\\n                    if (typeof message !== \\\"String\\\" && message.error) {\\n                        message = message.error;\\n                    }\\n                    _ref = file.previewElement.querySelectorAll(\\\"[data-dz-errormessage]\\\");\\n                    _results = [];\\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                        node = _ref[_i];\\n                        _results.push(node.textContent = message);\\n                    }\\n                    return _results;\\n                }\\n            },\\n            errormultiple: noop,\\n            processing: function (file) {\\n                if (file.previewElement) {\\n                    file.previewElement.classList.add(\\\"dz-processing\\\");\\n                    if (file._removeLink) {\\n                        return file._removeLink.textContent = this.options.dictCancelUpload;\\n                    }\\n                }\\n            },\\n            processingmultiple: noop,\\n            uploadprogress: function (file, progress, bytesSent) {\\n                var node, _i, _len, _ref, _results;\\n                if (file.previewElement) {\\n                    _ref = file.previewElement.querySelectorAll(\\\"[data-dz-uploadprogress]\\\");\\n                    _results = [];\\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                        node = _ref[_i];\\n                        if (node.nodeName === 'PROGRESS') {\\n                            _results.push(node.value = progress);\\n                        } else {\\n                            _results.push(node.style.width = \\\"\\\" + progress + \\\"%\\\");\\n                        }\\n                    }\\n                    return _results;\\n                }\\n            },\\n            totaluploadprogress: noop,\\n            sending: noop,\\n            sendingmultiple: noop,\\n            success: function (file) {\\n                if (file.previewElement) {\\n                    return file.previewElement.classList.add(\\\"dz-success\\\");\\n                }\\n            },\\n            successmultiple: noop,\\n            canceled: function (file) {\\n                return this.emit(\\\"error\\\", file, \\\"Upload canceled.\\\");\\n            },\\n            canceledmultiple: noop,\\n            complete: function (file) {\\n                if (file._removeLink) {\\n                    file._removeLink.textContent = this.options.dictRemoveFile;\\n                }\\n                if (file.previewElement) {\\n                    return file.previewElement.classList.add(\\\"dz-complete\\\");\\n                }\\n            },\\n            completemultiple: noop,\\n            maxfilesexceeded: noop,\\n            maxfilesreached: noop,\\n            queuecomplete: noop,\\n            addedfiles: noop,\\n            previewTemplate: \\\"<div class=\\\\\\\"dz-preview dz-file-preview\\\\\\\">\\\\n  <div class=\\\\\\\"dz-image\\\\\\\"><img data-dz-thumbnail /></div>\\\\n  <div class=\\\\\\\"dz-details\\\\\\\">\\\\n    <div class=\\\\\\\"dz-size\\\\\\\"><span data-dz-size></span></div>\\\\n    <div class=\\\\\\\"dz-filename\\\\\\\"><span data-dz-name></span></div>\\\\n  </div>\\\\n  <div class=\\\\\\\"dz-progress\\\\\\\"><span class=\\\\\\\"dz-upload\\\\\\\" data-dz-uploadprogress></span></div>\\\\n  <div class=\\\\\\\"dz-error-message\\\\\\\"><span data-dz-errormessage></span></div>\\\\n  <div class=\\\\\\\"dz-success-mark\\\\\\\">\\\\n    <svg width=\\\\\\\"54px\\\\\\\" height=\\\\\\\"54px\\\\\\\" viewBox=\\\\\\\"0 0 54 54\\\\\\\" version=\\\\\\\"1.1\\\\\\\" xmlns=\\\\\\\"http://www.w3.org/2000/svg\\\\\\\" xmlns:xlink=\\\\\\\"http://www.w3.org/1999/xlink\\\\\\\" xmlns:sketch=\\\\\\\"http://www.bohemiancoding.com/sketch/ns\\\\\\\">\\\\n      <title>Check</title>\\\\n      <defs></defs>\\\\n      <g id=\\\\\\\"Page-1\\\\\\\" stroke=\\\\\\\"none\\\\\\\" stroke-width=\\\\\\\"1\\\\\\\" fill=\\\\\\\"none\\\\\\\" fill-rule=\\\\\\\"evenodd\\\\\\\" sketch:type=\\\\\\\"MSPage\\\\\\\">\\\\n        <path d=\\\\\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\\\\\" id=\\\\\\\"Oval-2\\\\\\\" stroke-opacity=\\\\\\\"0.198794158\\\\\\\" stroke=\\\\\\\"#747474\\\\\\\" fill-opacity=\\\\\\\"0.816519475\\\\\\\" fill=\\\\\\\"#FFFFFF\\\\\\\" sketch:type=\\\\\\\"MSShapeGroup\\\\\\\"></path>\\\\n      </g>\\\\n    </svg>\\\\n  </div>\\\\n  <div class=\\\\\\\"dz-error-mark\\\\\\\">\\\\n    <svg width=\\\\\\\"54px\\\\\\\" height=\\\\\\\"54px\\\\\\\" viewBox=\\\\\\\"0 0 54 54\\\\\\\" version=\\\\\\\"1.1\\\\\\\" xmlns=\\\\\\\"http://www.w3.org/2000/svg\\\\\\\" xmlns:xlink=\\\\\\\"http://www.w3.org/1999/xlink\\\\\\\" xmlns:sketch=\\\\\\\"http://www.bohemiancoding.com/sketch/ns\\\\\\\">\\\\n      <title>Error</title>\\\\n      <defs></defs>\\\\n      <g id=\\\\\\\"Page-1\\\\\\\" stroke=\\\\\\\"none\\\\\\\" stroke-width=\\\\\\\"1\\\\\\\" fill=\\\\\\\"none\\\\\\\" fill-rule=\\\\\\\"evenodd\\\\\\\" sketch:type=\\\\\\\"MSPage\\\\\\\">\\\\n        <g id=\\\\\\\"Check-+-Oval-2\\\\\\\" sketch:type=\\\\\\\"MSLayerGroup\\\\\\\" stroke=\\\\\\\"#747474\\\\\\\" stroke-opacity=\\\\\\\"0.198794158\\\\\\\" fill=\\\\\\\"#FFFFFF\\\\\\\" fill-opacity=\\\\\\\"0.816519475\\\\\\\">\\\\n          <path d=\\\\\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\\\\\" id=\\\\\\\"Oval-2\\\\\\\" sketch:type=\\\\\\\"MSShapeGroup\\\\\\\"></path>\\\\n        </g>\\\\n      </g>\\\\n    </svg>\\\\n  </div>\\\\n</div>\\\"\\n        };\\n\\n        extend = function () {\\n            var key, object, objects, target, val, _i, _len;\\n            target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\\n            for (_i = 0, _len = objects.length; _i < _len; _i++) {\\n                object = objects[_i];\\n                for (key in object) {\\n                    val = object[key];\\n                    target[key] = val;\\n                }\\n            }\\n            return target;\\n        };\\n\\n        function Dropzone(element, options) {\\n            var elementOptions, fallback, _ref;\\n            this.element = element;\\n            this.version = Dropzone.version;\\n            this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\\\n*/g, \\\"\\\");\\n            this.clickableElements = [];\\n            this.listeners = [];\\n            this.files = [];\\n            if (typeof this.element === \\\"string\\\") {\\n                this.element = document.querySelector(this.element);\\n            }\\n            if (!(this.element && (this.element.nodeType != null))) {\\n                throw new Error(\\\"Invalid dropzone element.\\\");\\n            }\\n            if (this.element.dropzone) {\\n                throw new Error(\\\"Dropzone already attached.\\\");\\n            }\\n            Dropzone.instances.push(this);\\n            this.element.dropzone = this;\\n            elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};\\n            this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\\n            if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\\n                return this.options.fallback.call(this);\\n            }\\n            if (this.options.url == null) {\\n                this.options.url = this.element.getAttribute(\\\"action\\\");\\n            }\\n            if (!this.options.url) {\\n                throw new Error(\\\"No URL provided.\\\");\\n            }\\n            if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\\n                throw new Error(\\\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\\\");\\n            }\\n            if (this.options.acceptedMimeTypes) {\\n                this.options.acceptedFiles = this.options.acceptedMimeTypes;\\n                delete this.options.acceptedMimeTypes;\\n            }\\n            this.options.method = this.options.method.toUpperCase();\\n            if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\\n                fallback.parentNode.removeChild(fallback);\\n            }\\n            if (this.options.previewsContainer !== false) {\\n                if (this.options.previewsContainer) {\\n                    this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \\\"previewsContainer\\\");\\n                } else {\\n                    this.previewsContainer = this.element;\\n                }\\n            }\\n            if (this.options.clickable) {\\n                if (this.options.clickable === true) {\\n                    this.clickableElements = [this.element];\\n                } else {\\n                    this.clickableElements = Dropzone.getElements(this.options.clickable, \\\"clickable\\\");\\n                }\\n            }\\n            this.init();\\n        }\\n\\n        Dropzone.prototype.getAcceptedFiles = function () {\\n            var file, _i, _len, _ref, _results;\\n            _ref = this.files;\\n            _results = [];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                file = _ref[_i];\\n                if (file.accepted) {\\n                    _results.push(file);\\n                }\\n            }\\n            return _results;\\n        };\\n\\n        Dropzone.prototype.getRejectedFiles = function () {\\n            var file, _i, _len, _ref, _results;\\n            _ref = this.files;\\n            _results = [];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                file = _ref[_i];\\n                if (!file.accepted) {\\n                    _results.push(file);\\n                }\\n            }\\n            return _results;\\n        };\\n\\n        Dropzone.prototype.getFilesWithStatus = function (status) {\\n            var file, _i, _len, _ref, _results;\\n            _ref = this.files;\\n            _results = [];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                file = _ref[_i];\\n                if (file.status === status) {\\n                    _results.push(file);\\n                }\\n            }\\n            return _results;\\n        };\\n\\n        Dropzone.prototype.getQueuedFiles = function () {\\n            return this.getFilesWithStatus(Dropzone.QUEUED);\\n        };\\n\\n        Dropzone.prototype.getUploadingFiles = function () {\\n            return this.getFilesWithStatus(Dropzone.UPLOADING);\\n        };\\n\\n        Dropzone.prototype.getAddedFiles = function () {\\n            return this.getFilesWithStatus(Dropzone.ADDED);\\n        };\\n\\n        Dropzone.prototype.getActiveFiles = function () {\\n            var file, _i, _len, _ref, _results;\\n            _ref = this.files;\\n            _results = [];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                file = _ref[_i];\\n                if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\\n                    _results.push(file);\\n                }\\n            }\\n            return _results;\\n        };\\n\\n        Dropzone.prototype.init = function () {\\n            var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;\\n            if (this.element.tagName === \\\"form\\\") {\\n                this.element.setAttribute(\\\"enctype\\\", \\\"multipart/form-data\\\");\\n            }\\n            if (this.element.classList.contains(\\\"dropzone\\\") && !this.element.querySelector(\\\".dz-message\\\")) {\\n                this.element.appendChild(Dropzone.createElement(\\\"<div class=\\\\\\\"dz-default dz-message\\\\\\\"><span>\\\" + this.options.dictDefaultMessage + \\\"</span></div>\\\"));\\n            }\\n            if (this.clickableElements.length) {\\n                setupHiddenFileInput = (function (_this) {\\n                    return function () {\\n                        if (_this.hiddenFileInput) {\\n                            _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);\\n                        }\\n                        _this.hiddenFileInput = document.createElement(\\\"input\\\");\\n                        _this.hiddenFileInput.setAttribute(\\\"type\\\", \\\"file\\\");\\n                        if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\\n                            _this.hiddenFileInput.setAttribute(\\\"multiple\\\", \\\"multiple\\\");\\n                        }\\n                        _this.hiddenFileInput.className = \\\"dz-hidden-input\\\";\\n                        if (_this.options.acceptedFiles != null) {\\n                            _this.hiddenFileInput.setAttribute(\\\"accept\\\", _this.options.acceptedFiles);\\n                        }\\n                        if (_this.options.capture != null) {\\n                            _this.hiddenFileInput.setAttribute(\\\"capture\\\", _this.options.capture);\\n                        }\\n                        _this.hiddenFileInput.style.visibility = \\\"hidden\\\";\\n                        _this.hiddenFileInput.style.position = \\\"absolute\\\";\\n                        _this.hiddenFileInput.style.top = \\\"0\\\";\\n                        _this.hiddenFileInput.style.left = \\\"0\\\";\\n                        _this.hiddenFileInput.style.height = \\\"0\\\";\\n                        _this.hiddenFileInput.style.width = \\\"0\\\";\\n                        document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);\\n                        return _this.hiddenFileInput.addEventListener(\\\"change\\\", function () {\\n                            var file, files, _i, _len;\\n                            files = _this.hiddenFileInput.files;\\n                            if (files.length) {\\n                                for (_i = 0, _len = files.length; _i < _len; _i++) {\\n                                    file = files[_i];\\n                                    _this.addFile(file);\\n                                }\\n                            }\\n                            _this.emit(\\\"addedfiles\\\", files);\\n                            return setupHiddenFileInput();\\n                        });\\n                    };\\n                })(this);\\n                setupHiddenFileInput();\\n            }\\n            this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;\\n            _ref1 = this.events;\\n            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\\n                eventName = _ref1[_i];\\n                this.on(eventName, this.options[eventName]);\\n            }\\n            this.on(\\\"uploadprogress\\\", (function (_this) {\\n                return function () {\\n                    return _this.updateTotalUploadProgress();\\n                };\\n            })(this));\\n            this.on(\\\"removedfile\\\", (function (_this) {\\n                return function () {\\n                    return _this.updateTotalUploadProgress();\\n                };\\n            })(this));\\n            this.on(\\\"canceled\\\", (function (_this) {\\n                return function (file) {\\n                    return _this.emit(\\\"complete\\\", file);\\n                };\\n            })(this));\\n            this.on(\\\"complete\\\", (function (_this) {\\n                return function (file) {\\n                    if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\\n                        return setTimeout((function () {\\n                            return _this.emit(\\\"queuecomplete\\\");\\n                        }), 0);\\n                    }\\n                };\\n            })(this));\\n            noPropagation = function (e) {\\n                e.stopPropagation();\\n                if (e.preventDefault) {\\n                    return e.preventDefault();\\n                } else {\\n                    return e.returnValue = false;\\n                }\\n            };\\n            this.listeners = [\\n                {\\n                    element: this.element,\\n                    events: {\\n                        \\\"dragstart\\\": (function (_this) {\\n                            return function (e) {\\n                                return _this.emit(\\\"dragstart\\\", e);\\n                            };\\n                        })(this),\\n                        \\\"dragenter\\\": (function (_this) {\\n                            return function (e) {\\n                                noPropagation(e);\\n                                return _this.emit(\\\"dragenter\\\", e);\\n                            };\\n                        })(this),\\n                        \\\"dragover\\\": (function (_this) {\\n                            return function (e) {\\n                                var efct;\\n                                try {\\n                                    efct = e.dataTransfer.effectAllowed;\\n                                } catch (_error) {\\n                                }\\n                                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\\n                                noPropagation(e);\\n                                return _this.emit(\\\"dragover\\\", e);\\n                            };\\n                        })(this),\\n                        \\\"dragleave\\\": (function (_this) {\\n                            return function (e) {\\n                                return _this.emit(\\\"dragleave\\\", e);\\n                            };\\n                        })(this),\\n                        \\\"drop\\\": (function (_this) {\\n                            return function (e) {\\n                                noPropagation(e);\\n                                return _this.drop(e);\\n                            };\\n                        })(this),\\n                        \\\"dragend\\\": (function (_this) {\\n                            return function (e) {\\n                                return _this.emit(\\\"dragend\\\", e);\\n                            };\\n                        })(this)\\n                    }\\n                }\\n            ];\\n            this.clickableElements.forEach((function (_this) {\\n                return function (clickableElement) {\\n                    return _this.listeners.push({\\n                        element: clickableElement,\\n                        events: {\\n                            \\\"click\\\": function (evt) {\\n                                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\\\".dz-message\\\")))) {\\n                                    _this.hiddenFileInput.click();\\n                                }\\n                                return true;\\n                            }\\n                        }\\n                    });\\n                };\\n            })(this));\\n            this.enable();\\n            return this.options.init.call(this);\\n        };\\n\\n        Dropzone.prototype.destroy = function () {\\n            var _ref;\\n            this.disable();\\n            this.removeAllFiles(true);\\n            if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {\\n                this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\\n                this.hiddenFileInput = null;\\n            }\\n            delete this.element.dropzone;\\n            return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\\n        };\\n\\n        Dropzone.prototype.updateTotalUploadProgress = function () {\\n            var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;\\n            totalBytesSent = 0;\\n            totalBytes = 0;\\n            activeFiles = this.getActiveFiles();\\n            if (activeFiles.length) {\\n                _ref = this.getActiveFiles();\\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                    file = _ref[_i];\\n                    totalBytesSent += file.upload.bytesSent;\\n                    totalBytes += file.upload.total;\\n                }\\n                totalUploadProgress = 100 * totalBytesSent / totalBytes;\\n            } else {\\n                totalUploadProgress = 100;\\n            }\\n            return this.emit(\\\"totaluploadprogress\\\", totalUploadProgress, totalBytes, totalBytesSent);\\n        };\\n\\n        Dropzone.prototype._getParamName = function (n) {\\n            if (typeof this.options.paramName === \\\"function\\\") {\\n                return this.options.paramName(n);\\n            } else {\\n                return \\\"\\\" + this.options.paramName + (this.options.uploadMultiple ? \\\"[\\\" + n + \\\"]\\\" : \\\"\\\");\\n            }\\n        };\\n\\n        Dropzone.prototype.getFallbackForm = function () {\\n            var existingFallback, fields, fieldsString, form;\\n            if (existingFallback = this.getExistingFallback()) {\\n                return existingFallback;\\n            }\\n            fieldsString = \\\"<div class=\\\\\\\"dz-fallback\\\\\\\">\\\";\\n            if (this.options.dictFallbackText) {\\n                fieldsString += \\\"<p>\\\" + this.options.dictFallbackText + \\\"</p>\\\";\\n            }\\n            fieldsString += \\\"<input type=\\\\\\\"file\\\\\\\" name=\\\\\\\"\\\" + (this._getParamName(0)) + \\\"\\\\\\\" \\\" + (this.options.uploadMultiple ? 'multiple=\\\"multiple\\\"' : void 0) + \\\" /><input type=\\\\\\\"submit\\\\\\\" value=\\\\\\\"Upload!\\\\\\\"></div>\\\";\\n            fields = Dropzone.createElement(fieldsString);\\n            if (this.element.tagName !== \\\"FORM\\\") {\\n                form = Dropzone.createElement(\\\"<form action=\\\\\\\"\\\" + this.options.url + \\\"\\\\\\\" enctype=\\\\\\\"multipart/form-data\\\\\\\" method=\\\\\\\"\\\" + this.options.method + \\\"\\\\\\\"></form>\\\");\\n                form.appendChild(fields);\\n            } else {\\n                this.element.setAttribute(\\\"enctype\\\", \\\"multipart/form-data\\\");\\n                this.element.setAttribute(\\\"method\\\", this.options.method);\\n            }\\n            return form != null ? form : fields;\\n        };\\n\\n        Dropzone.prototype.getExistingFallback = function () {\\n            var fallback, getFallback, tagName, _i, _len, _ref;\\n            getFallback = function (elements) {\\n                var el, _i, _len;\\n                for (_i = 0, _len = elements.length; _i < _len; _i++) {\\n                    el = elements[_i];\\n                    if (/(^| )fallback($| )/.test(el.className)) {\\n                        return el;\\n                    }\\n                }\\n            };\\n            _ref = [\\\"div\\\", \\\"form\\\"];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                tagName = _ref[_i];\\n                if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\\n                    return fallback;\\n                }\\n            }\\n        };\\n\\n        Dropzone.prototype.setupEventListeners = function () {\\n            var elementListeners, event, listener, _i, _len, _ref, _results;\\n            _ref = this.listeners;\\n            _results = [];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                elementListeners = _ref[_i];\\n                _results.push((function () {\\n                    var _ref1, _results1;\\n                    _ref1 = elementListeners.events;\\n                    _results1 = [];\\n                    for (event in _ref1) {\\n                        listener = _ref1[event];\\n                        _results1.push(elementListeners.element.addEventListener(event, listener, false));\\n                    }\\n                    return _results1;\\n                })());\\n            }\\n            return _results;\\n        };\\n\\n        Dropzone.prototype.removeEventListeners = function () {\\n            var elementListeners, event, listener, _i, _len, _ref, _results;\\n            _ref = this.listeners;\\n            _results = [];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                elementListeners = _ref[_i];\\n                _results.push((function () {\\n                    var _ref1, _results1;\\n                    _ref1 = elementListeners.events;\\n                    _results1 = [];\\n                    for (event in _ref1) {\\n                        listener = _ref1[event];\\n                        _results1.push(elementListeners.element.removeEventListener(event, listener, false));\\n                    }\\n                    return _results1;\\n                })());\\n            }\\n            return _results;\\n        };\\n\\n        Dropzone.prototype.disable = function () {\\n            var file, _i, _len, _ref, _results;\\n            this.clickableElements.forEach(function (element) {\\n                return element.classList.remove(\\\"dz-clickable\\\");\\n            });\\n            this.removeEventListeners();\\n            _ref = this.files;\\n            _results = [];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                file = _ref[_i];\\n                _results.push(this.cancelUpload(file));\\n            }\\n            return _results;\\n        };\\n\\n        Dropzone.prototype.enable = function () {\\n            this.clickableElements.forEach(function (element) {\\n                return element.classList.add(\\\"dz-clickable\\\");\\n            });\\n            return this.setupEventListeners();\\n        };\\n\\n        Dropzone.prototype.filesize = function (size) {\\n            var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\\n            selectedSize = 0;\\n            selectedUnit = \\\"b\\\";\\n            if (size > 0) {\\n                units = ['TB', 'GB', 'MB', 'KB', 'b'];\\n                for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\\n                    unit = units[i];\\n                    cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\\n                    if (size >= cutoff) {\\n                        selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\\n                        selectedUnit = unit;\\n                        break;\\n                    }\\n                }\\n                selectedSize = Math.round(10 * selectedSize) / 10;\\n            }\\n            return \\\"<strong>\\\" + selectedSize + \\\"</strong> \\\" + selectedUnit;\\n        };\\n\\n        Dropzone.prototype._updateMaxFilesReachedClass = function () {\\n            if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\\n                if (this.getAcceptedFiles().length === this.options.maxFiles) {\\n                    this.emit('maxfilesreached', this.files);\\n                }\\n                return this.element.classList.add(\\\"dz-max-files-reached\\\");\\n            } else {\\n                return this.element.classList.remove(\\\"dz-max-files-reached\\\");\\n            }\\n        };\\n\\n        Dropzone.prototype.drop = function (e) {\\n            var files, items;\\n            if (!e.dataTransfer) {\\n                return;\\n            }\\n            this.emit(\\\"drop\\\", e);\\n            files = e.dataTransfer.files;\\n            this.emit(\\\"addedfiles\\\", files);\\n            if (files.length) {\\n                items = e.dataTransfer.items;\\n                if (items && items.length && (items[0].webkitGetAsEntry != null)) {\\n                    this._addFilesFromItems(items);\\n                } else {\\n                    this.handleFiles(files);\\n                }\\n            }\\n        };\\n\\n        Dropzone.prototype.paste = function (e) {\\n            var items, _ref;\\n            if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {\\n                return;\\n            }\\n            this.emit(\\\"paste\\\", e);\\n            items = e.clipboardData.items;\\n            if (items.length) {\\n                return this._addFilesFromItems(items);\\n            }\\n        };\\n\\n        Dropzone.prototype.handleFiles = function (files) {\\n            var file, _i, _len, _results;\\n            _results = [];\\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\\n                file = files[_i];\\n                _results.push(this.addFile(file));\\n            }\\n            return _results;\\n        };\\n\\n        Dropzone.prototype._addFilesFromItems = function (items) {\\n            var entry, item, _i, _len, _results;\\n            _results = [];\\n            for (_i = 0, _len = items.length; _i < _len; _i++) {\\n                item = items[_i];\\n                if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\\n                    if (entry.isFile) {\\n                        _results.push(this.addFile(item.getAsFile()));\\n                    } else if (entry.isDirectory) {\\n                        _results.push(this._addFilesFromDirectory(entry, entry.name));\\n                    } else {\\n                        _results.push(void 0);\\n                    }\\n                } else if (item.getAsFile != null) {\\n                    if ((item.kind == null) || item.kind === \\\"file\\\") {\\n                        _results.push(this.addFile(item.getAsFile()));\\n                    } else {\\n                        _results.push(void 0);\\n                    }\\n                } else {\\n                    _results.push(void 0);\\n                }\\n            }\\n            return _results;\\n        };\\n\\n        Dropzone.prototype._addFilesFromDirectory = function (directory, path) {\\n            var dirReader, entriesReader;\\n            dirReader = directory.createReader();\\n            entriesReader = (function (_this) {\\n                return function (entries) {\\n                    var entry, _i, _len;\\n                    for (_i = 0, _len = entries.length; _i < _len; _i++) {\\n                        entry = entries[_i];\\n                        if (entry.isFile) {\\n                            entry.file(function (file) {\\n                                if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\\n                                    return;\\n                                }\\n                                file.fullPath = \\\"\\\" + path + \\\"/\\\" + file.name;\\n                                return _this.addFile(file);\\n                            });\\n                        } else if (entry.isDirectory) {\\n                            _this._addFilesFromDirectory(entry, \\\"\\\" + path + \\\"/\\\" + entry.name);\\n                        }\\n                    }\\n                };\\n            })(this);\\n            return dirReader.readEntries(entriesReader, function (error) {\\n                return typeof console !== \\\"undefined\\\" && console !== null ? typeof console.log === \\\"function\\\" ? console.log(error) : void 0 : void 0;\\n            });\\n        };\\n\\n        Dropzone.prototype.accept = function (file, done) {\\n            if (file.size > this.options.maxFilesize * 1024 * 1024) {\\n                return done(this.options.dictFileTooBig.replace(\\\"{{filesize}}\\\", Math.round(file.size / 1024 / 10.24) / 100).replace(\\\"{{maxFilesize}}\\\", this.options.maxFilesize));\\n            } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\\n                return done(this.options.dictInvalidFileType);\\n            } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\\n                done(this.options.dictMaxFilesExceeded.replace(\\\"{{maxFiles}}\\\", this.options.maxFiles));\\n                return this.emit(\\\"maxfilesexceeded\\\", file);\\n            } else {\\n                return this.options.accept.call(this, file, done);\\n            }\\n        };\\n\\n        Dropzone.prototype.addFile = function (file) {\\n            file.upload = {\\n                progress: 0,\\n                total: file.size,\\n                bytesSent: 0\\n            };\\n            this.files.push(file);\\n            file.status = Dropzone.ADDED;\\n            this.emit(\\\"addedfile\\\", file);\\n            this._enqueueThumbnail(file);\\n            return this.accept(file, (function (_this) {\\n                return function (error) {\\n                    if (error) {\\n                        file.accepted = false;\\n                        _this._errorProcessing([file], error);\\n                    } else {\\n                        file.accepted = true;\\n                        if (_this.options.autoQueue) {\\n                            _this.enqueueFile(file);\\n                        }\\n                    }\\n                    return _this._updateMaxFilesReachedClass();\\n                };\\n            })(this));\\n        };\\n\\n        Dropzone.prototype.enqueueFiles = function (files) {\\n            var file, _i, _len;\\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\\n                file = files[_i];\\n                this.enqueueFile(file);\\n            }\\n            return null;\\n        };\\n\\n        Dropzone.prototype.enqueueFile = function (file) {\\n            if (file.status === Dropzone.ADDED && file.accepted === true) {\\n                file.status = Dropzone.QUEUED;\\n                if (this.options.autoProcessQueue) {\\n                    return setTimeout(((function (_this) {\\n                        return function () {\\n                            return _this.processQueue();\\n                        };\\n                    })(this)), 0);\\n                }\\n            } else {\\n                throw new Error(\\\"This file can't be queued because it has already been processed or was rejected.\\\");\\n            }\\n        };\\n\\n        Dropzone.prototype._thumbnailQueue = [];\\n\\n        Dropzone.prototype._processingThumbnail = false;\\n\\n        Dropzone.prototype._enqueueThumbnail = function (file) {\\n            if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\\n                this._thumbnailQueue.push(file);\\n                return setTimeout(((function (_this) {\\n                    return function () {\\n                        return _this._processThumbnailQueue();\\n                    };\\n                })(this)), 0);\\n            }\\n        };\\n\\n        Dropzone.prototype._processThumbnailQueue = function () {\\n            if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\\n                return;\\n            }\\n            this._processingThumbnail = true;\\n            return this.createThumbnail(this._thumbnailQueue.shift(), (function (_this) {\\n                return function () {\\n                    _this._processingThumbnail = false;\\n                    return _this._processThumbnailQueue();\\n                };\\n            })(this));\\n        };\\n\\n        Dropzone.prototype.removeFile = function (file) {\\n            if (file.status === Dropzone.UPLOADING) {\\n                this.cancelUpload(file);\\n            }\\n            this.files = without(this.files, file);\\n            this.emit(\\\"removedfile\\\", file);\\n            if (this.files.length === 0) {\\n                return this.emit(\\\"reset\\\");\\n            }\\n        };\\n\\n        Dropzone.prototype.removeAllFiles = function (cancelIfNecessary) {\\n            var file, _i, _len, _ref;\\n            if (cancelIfNecessary == null) {\\n                cancelIfNecessary = false;\\n            }\\n            _ref = this.files.slice();\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                file = _ref[_i];\\n                if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\\n                    this.removeFile(file);\\n                }\\n            }\\n            return null;\\n        };\\n\\n        Dropzone.prototype.createThumbnail = function (file, callback) {\\n            var fileReader;\\n            fileReader = new FileReader;\\n            fileReader.onload = (function (_this) {\\n                return function () {\\n                    if (file.type === \\\"image/svg+xml\\\") {\\n                        _this.emit(\\\"thumbnail\\\", file, fileReader.result);\\n                        if (callback != null) {\\n                            callback();\\n                        }\\n                        return;\\n                    }\\n                    return _this.createThumbnailFromUrl(file, fileReader.result, callback);\\n                };\\n            })(this);\\n            return fileReader.readAsDataURL(file);\\n        };\\n\\n        Dropzone.prototype.createThumbnailFromUrl = function (file, imageUrl, callback, crossOrigin) {\\n            var img;\\n            img = document.createElement(\\\"img\\\");\\n            if (crossOrigin) {\\n                img.crossOrigin = crossOrigin;\\n            }\\n            img.onload = (function (_this) {\\n                return function () {\\n                    var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;\\n                    file.width = img.width;\\n                    file.height = img.height;\\n                    resizeInfo = _this.options.resize.call(_this, file);\\n                    if (resizeInfo.trgWidth == null) {\\n                        resizeInfo.trgWidth = resizeInfo.optWidth;\\n                    }\\n                    if (resizeInfo.trgHeight == null) {\\n                        resizeInfo.trgHeight = resizeInfo.optHeight;\\n                    }\\n                    canvas = document.createElement(\\\"canvas\\\");\\n                    ctx = canvas.getContext(\\\"2d\\\");\\n                    canvas.width = resizeInfo.trgWidth;\\n                    canvas.height = resizeInfo.trgHeight;\\n                    drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\\n                    thumbnail = canvas.toDataURL(\\\"image/png\\\");\\n                    _this.emit(\\\"thumbnail\\\", file, thumbnail);\\n                    if (callback != null) {\\n                        return callback();\\n                    }\\n                };\\n            })(this);\\n            if (callback != null) {\\n                img.onerror = callback;\\n            }\\n            return img.src = imageUrl;\\n        };\\n\\n        Dropzone.prototype.processQueue = function () {\\n            var i, parallelUploads, processingLength, queuedFiles;\\n            parallelUploads = this.options.parallelUploads;\\n            processingLength = this.getUploadingFiles().length;\\n            i = processingLength;\\n            if (processingLength >= parallelUploads) {\\n                return;\\n            }\\n            queuedFiles = this.getQueuedFiles();\\n            if (!(queuedFiles.length > 0)) {\\n                return;\\n            }\\n            if (this.options.uploadMultiple) {\\n                return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\\n            } else {\\n                while (i < parallelUploads) {\\n                    if (!queuedFiles.length) {\\n                        return;\\n                    }\\n                    this.processFile(queuedFiles.shift());\\n                    i++;\\n                }\\n            }\\n        };\\n\\n        Dropzone.prototype.processFile = function (file) {\\n            return this.processFiles([file]);\\n        };\\n\\n        Dropzone.prototype.processFiles = function (files) {\\n            var file, _i, _len;\\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\\n                file = files[_i];\\n                file.processing = true;\\n                file.status = Dropzone.UPLOADING;\\n                this.emit(\\\"processing\\\", file);\\n            }\\n            if (this.options.uploadMultiple) {\\n                this.emit(\\\"processingmultiple\\\", files);\\n            }\\n            return this.uploadFiles(files);\\n        };\\n\\n        Dropzone.prototype._getFilesWithXhr = function (xhr) {\\n            var file, files;\\n            return files = (function () {\\n                var _i, _len, _ref, _results;\\n                _ref = this.files;\\n                _results = [];\\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                    file = _ref[_i];\\n                    if (file.xhr === xhr) {\\n                        _results.push(file);\\n                    }\\n                }\\n                return _results;\\n            }).call(this);\\n        };\\n\\n        Dropzone.prototype.cancelUpload = function (file) {\\n            var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;\\n            if (file.status === Dropzone.UPLOADING) {\\n                groupedFiles = this._getFilesWithXhr(file.xhr);\\n                for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {\\n                    groupedFile = groupedFiles[_i];\\n                    groupedFile.status = Dropzone.CANCELED;\\n                }\\n                file.xhr.abort();\\n                for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {\\n                    groupedFile = groupedFiles[_j];\\n                    this.emit(\\\"canceled\\\", groupedFile);\\n                }\\n                if (this.options.uploadMultiple) {\\n                    this.emit(\\\"canceledmultiple\\\", groupedFiles);\\n                }\\n            } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {\\n                file.status = Dropzone.CANCELED;\\n                this.emit(\\\"canceled\\\", file);\\n                if (this.options.uploadMultiple) {\\n                    this.emit(\\\"canceledmultiple\\\", [file]);\\n                }\\n            }\\n            if (this.options.autoProcessQueue) {\\n                return this.processQueue();\\n            }\\n        };\\n\\n        resolveOption = function () {\\n            var args, option;\\n            option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\\n            if (typeof option === 'function') {\\n                return option.apply(this, args);\\n            }\\n            return option;\\n        };\\n\\n        Dropzone.prototype.uploadFile = function (file) {\\n            return this.uploadFiles([file]);\\n        };\\n\\n        Dropzone.prototype.uploadFiles = function (files) {\\n            var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\\n            xhr = new XMLHttpRequest();\\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\\n                file = files[_i];\\n                file.xhr = xhr;\\n            }\\n            method = resolveOption(this.options.method, files);\\n            url = resolveOption(this.options.url, files);\\n            xhr.open(method, url, true);\\n            xhr.withCredentials = !!this.options.withCredentials;\\n            response = null;\\n            handleError = (function (_this) {\\n                return function () {\\n                    var _j, _len1, _results;\\n                    _results = [];\\n                    for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\\n                        file = files[_j];\\n                        _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\\\"{{statusCode}}\\\", xhr.status), xhr));\\n                    }\\n                    return _results;\\n                };\\n            })(this);\\n            updateProgress = (function (_this) {\\n                return function (e) {\\n                    var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;\\n                    if (e != null) {\\n                        progress = 100 * e.loaded / e.total;\\n                        for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\\n                            file = files[_j];\\n                            file.upload = {\\n                                progress: progress,\\n                                total: e.total,\\n                                bytesSent: e.loaded\\n                            };\\n                        }\\n                    } else {\\n                        allFilesFinished = true;\\n                        progress = 100;\\n                        for (_k = 0, _len2 = files.length; _k < _len2; _k++) {\\n                            file = files[_k];\\n                            if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\\n                                allFilesFinished = false;\\n                            }\\n                            file.upload.progress = progress;\\n                            file.upload.bytesSent = file.upload.total;\\n                        }\\n                        if (allFilesFinished) {\\n                            return;\\n                        }\\n                    }\\n                    _results = [];\\n                    for (_l = 0, _len3 = files.length; _l < _len3; _l++) {\\n                        file = files[_l];\\n                        _results.push(_this.emit(\\\"uploadprogress\\\", file, progress, file.upload.bytesSent));\\n                    }\\n                    return _results;\\n                };\\n            })(this);\\n            xhr.onload = (function (_this) {\\n                return function (e) {\\n                    var _ref;\\n                    if (files[0].status === Dropzone.CANCELED) {\\n                        return;\\n                    }\\n                    if (xhr.readyState !== 4) {\\n                        return;\\n                    }\\n                    response = xhr.responseText;\\n                    if (xhr.getResponseHeader(\\\"content-type\\\") && ~xhr.getResponseHeader(\\\"content-type\\\").indexOf(\\\"application/json\\\")) {\\n                        try {\\n                            response = JSON.parse(response);\\n                        } catch (_error) {\\n                            e = _error;\\n                            response = \\\"Invalid JSON response from server.\\\";\\n                        }\\n                    }\\n                    updateProgress();\\n                    if (!((200 <= (_ref = xhr.status) && _ref < 300))) {\\n                        return handleError();\\n                    } else {\\n                        return _this._finished(files, response, e);\\n                    }\\n                };\\n            })(this);\\n            xhr.onerror = (function (_this) {\\n                return function () {\\n                    if (files[0].status === Dropzone.CANCELED) {\\n                        return;\\n                    }\\n                    return handleError();\\n                };\\n            })(this);\\n            progressObj = (_ref = xhr.upload) != null ? _ref : xhr;\\n            progressObj.onprogress = updateProgress;\\n            headers = {\\n                \\\"Accept\\\": \\\"application/json\\\",\\n                \\\"Cache-Control\\\": \\\"no-cache\\\",\\n                \\\"X-Requested-With\\\": \\\"XMLHttpRequest\\\"\\n            };\\n            if (this.options.headers) {\\n                extend(headers, this.options.headers);\\n            }\\n            for (headerName in headers) {\\n                headerValue = headers[headerName];\\n                if (headerValue) {\\n                    xhr.setRequestHeader(headerName, headerValue);\\n                }\\n            }\\n            formData = new FormData();\\n            if (this.options.params) {\\n                _ref1 = this.options.params;\\n                for (key in _ref1) {\\n                    value = _ref1[key];\\n                    formData.append(key, value);\\n                }\\n            }\\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\\n                file = files[_j];\\n                this.emit(\\\"sending\\\", file, xhr, formData);\\n            }\\n            if (this.options.uploadMultiple) {\\n                this.emit(\\\"sendingmultiple\\\", files, xhr, formData);\\n            }\\n            if (this.element.tagName === \\\"FORM\\\") {\\n                _ref2 = this.element.querySelectorAll(\\\"input, textarea, select, button\\\");\\n                for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\\n                    input = _ref2[_k];\\n                    inputName = input.getAttribute(\\\"name\\\");\\n                    inputType = input.getAttribute(\\\"type\\\");\\n                    if (input.tagName === \\\"SELECT\\\" && input.hasAttribute(\\\"multiple\\\")) {\\n                        _ref3 = input.options;\\n                        for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\\n                            option = _ref3[_l];\\n                            if (option.selected) {\\n                                formData.append(inputName, option.value);\\n                            }\\n                        }\\n                    } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \\\"checkbox\\\" && _ref4 !== \\\"radio\\\") || input.checked) {\\n                        formData.append(inputName, input.value);\\n                    }\\n                }\\n            }\\n            for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\\n                formData.append(this._getParamName(i), files[i], files[i].name);\\n            }\\n            return this.submitRequest(xhr, formData, files);\\n        };\\n\\n        Dropzone.prototype.submitRequest = function (xhr, formData, files) {\\n            return xhr.send(formData);\\n        };\\n\\n        Dropzone.prototype._finished = function (files, responseText, e) {\\n            var file, _i, _len;\\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\\n                file = files[_i];\\n                file.status = Dropzone.SUCCESS;\\n                this.emit(\\\"success\\\", file, responseText, e);\\n                this.emit(\\\"complete\\\", file);\\n            }\\n            if (this.options.uploadMultiple) {\\n                this.emit(\\\"successmultiple\\\", files, responseText, e);\\n                this.emit(\\\"completemultiple\\\", files);\\n            }\\n            if (this.options.autoProcessQueue) {\\n                return this.processQueue();\\n            }\\n        };\\n\\n        Dropzone.prototype._errorProcessing = function (files, message, xhr) {\\n            var file, _i, _len;\\n            for (_i = 0, _len = files.length; _i < _len; _i++) {\\n                file = files[_i];\\n                file.status = Dropzone.ERROR;\\n                this.emit(\\\"error\\\", file, message, xhr);\\n                this.emit(\\\"complete\\\", file);\\n            }\\n            if (this.options.uploadMultiple) {\\n                this.emit(\\\"errormultiple\\\", files, message, xhr);\\n                this.emit(\\\"completemultiple\\\", files);\\n            }\\n            if (this.options.autoProcessQueue) {\\n                return this.processQueue();\\n            }\\n        };\\n\\n        return Dropzone;\\n\\n    })(Emitter);\\n\\n    Dropzone.version = \\\"4.2.0\\\";\\n\\n    Dropzone.options = {};\\n\\n    Dropzone.optionsForElement = function (element) {\\n        if (element.getAttribute(\\\"id\\\")) {\\n            return Dropzone.options[camelize(element.getAttribute(\\\"id\\\"))];\\n        } else {\\n            return void 0;\\n        }\\n    };\\n\\n    Dropzone.instances = [];\\n\\n    Dropzone.forElement = function (element) {\\n        if (typeof element === \\\"string\\\") {\\n            element = document.querySelector(element);\\n        }\\n        if ((element != null ? element.dropzone : void 0) == null) {\\n            throw new Error(\\\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\\\");\\n        }\\n        return element.dropzone;\\n    };\\n\\n    Dropzone.autoDiscover = true;\\n\\n    Dropzone.discover = function () {\\n        var checkElements, dropzone, dropzones, _i, _len, _results;\\n        if (document.querySelectorAll) {\\n            dropzones = document.querySelectorAll(\\\".dropzone\\\");\\n        } else {\\n            dropzones = [];\\n            checkElements = function (elements) {\\n                var el, _i, _len, _results;\\n                _results = [];\\n                for (_i = 0, _len = elements.length; _i < _len; _i++) {\\n                    el = elements[_i];\\n                    if (/(^| )dropzone($| )/.test(el.className)) {\\n                        _results.push(dropzones.push(el));\\n                    } else {\\n                        _results.push(void 0);\\n                    }\\n                }\\n                return _results;\\n            };\\n            checkElements(document.getElementsByTagName(\\\"div\\\"));\\n            checkElements(document.getElementsByTagName(\\\"form\\\"));\\n        }\\n        _results = [];\\n        for (_i = 0, _len = dropzones.length; _i < _len; _i++) {\\n            dropzone = dropzones[_i];\\n            if (Dropzone.optionsForElement(dropzone) !== false) {\\n                _results.push(new Dropzone(dropzone));\\n            } else {\\n                _results.push(void 0);\\n            }\\n        }\\n        return _results;\\n    };\\n\\n    Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\\\/12/i];\\n\\n    Dropzone.isBrowserSupported = function () {\\n        var capableBrowser, regex, _i, _len, _ref;\\n        capableBrowser = true;\\n        if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\\n            if (!(\\\"classList\\\" in document.createElement(\\\"a\\\"))) {\\n                capableBrowser = false;\\n            } else {\\n                _ref = Dropzone.blacklistedBrowsers;\\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                    regex = _ref[_i];\\n                    if (regex.test(navigator.userAgent)) {\\n                        capableBrowser = false;\\n                        continue;\\n                    }\\n                }\\n            }\\n        } else {\\n            capableBrowser = false;\\n        }\\n        return capableBrowser;\\n    };\\n\\n    without = function (list, rejectedItem) {\\n        var item, _i, _len, _results;\\n        _results = [];\\n        for (_i = 0, _len = list.length; _i < _len; _i++) {\\n            item = list[_i];\\n            if (item !== rejectedItem) {\\n                _results.push(item);\\n            }\\n        }\\n        return _results;\\n    };\\n\\n    camelize = function (str) {\\n        return str.replace(/[\\\\-_](\\\\w)/g, function (match) {\\n            return match.charAt(1).toUpperCase();\\n        });\\n    };\\n\\n    Dropzone.createElement = function (string) {\\n        var div;\\n        div = document.createElement(\\\"div\\\");\\n        div.innerHTML = string;\\n        return div.childNodes[0];\\n    };\\n\\n    Dropzone.elementInside = function (element, container) {\\n        if (element === container) {\\n            return true;\\n        }\\n        while (element = element.parentNode) {\\n            if (element === container) {\\n                return true;\\n            }\\n        }\\n        return false;\\n    };\\n\\n    Dropzone.getElement = function (el, name) {\\n        var element;\\n        if (typeof el === \\\"string\\\") {\\n            element = document.querySelector(el);\\n        } else if (el.nodeType != null) {\\n            element = el;\\n        }\\n        if (element == null) {\\n            throw new Error(\\\"Invalid `\\\" + name + \\\"` option provided. Please provide a CSS selector or a plain HTML element.\\\");\\n        }\\n        return element;\\n    };\\n\\n    Dropzone.getElements = function (els, name) {\\n        var e, el, elements, _i, _j, _len, _len1, _ref;\\n        if (els instanceof Array) {\\n            elements = [];\\n            try {\\n                for (_i = 0, _len = els.length; _i < _len; _i++) {\\n                    el = els[_i];\\n                    elements.push(this.getElement(el, name));\\n                }\\n            } catch (_error) {\\n                e = _error;\\n                elements = null;\\n            }\\n        } else if (typeof els === \\\"string\\\") {\\n            elements = [];\\n            _ref = document.querySelectorAll(els);\\n            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\\n                el = _ref[_j];\\n                elements.push(el);\\n            }\\n        } else if (els.nodeType != null) {\\n            elements = [els];\\n        }\\n        if (!((elements != null) && elements.length)) {\\n            throw new Error(\\\"Invalid `\\\" + name + \\\"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\\\");\\n        }\\n        return elements;\\n    };\\n\\n    Dropzone.confirm = function (question, accepted, rejected) {\\n        if (window.confirm(question)) {\\n            return accepted();\\n        } else if (rejected != null) {\\n            return rejected();\\n        }\\n    };\\n\\n    Dropzone.isValidFile = function (file, acceptedFiles) {\\n        var baseMimeType, mimeType, validType, _i, _len;\\n        if (!acceptedFiles) {\\n            return true;\\n        }\\n        acceptedFiles = acceptedFiles.split(\\\",\\\");\\n        mimeType = file.type;\\n        baseMimeType = mimeType.replace(/\\\\/.*$/, \\\"\\\");\\n        for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {\\n            validType = acceptedFiles[_i];\\n            validType = validType.trim();\\n            if (validType.charAt(0) === \\\".\\\") {\\n                if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\\n                    return true;\\n                }\\n            } else if (/\\\\/\\\\*$/.test(validType)) {\\n                if (baseMimeType === validType.replace(/\\\\/.*$/, \\\"\\\")) {\\n                    return true;\\n                }\\n            } else {\\n                if (mimeType === validType) {\\n                    return true;\\n                }\\n            }\\n        }\\n        return false;\\n    };\\n\\n    if (typeof jQuery !== \\\"undefined\\\" && jQuery !== null) {\\n        jQuery.fn.dropzone = function (options) {\\n            return this.each(function () {\\n                return new Dropzone(this, options);\\n            });\\n        };\\n    }\\n\\n    if (typeof module !== \\\"undefined\\\" && module !== null) {\\n        module.exports = Dropzone;\\n    } else {\\n        window.Dropzone = Dropzone;\\n    }\\n\\n    Dropzone.ADDED = \\\"added\\\";\\n\\n    Dropzone.QUEUED = \\\"queued\\\";\\n\\n    Dropzone.ACCEPTED = Dropzone.QUEUED;\\n\\n    Dropzone.UPLOADING = \\\"uploading\\\";\\n\\n    Dropzone.PROCESSING = Dropzone.UPLOADING;\\n\\n    Dropzone.CANCELED = \\\"canceled\\\";\\n\\n    Dropzone.ERROR = \\\"error\\\";\\n\\n    Dropzone.SUCCESS = \\\"success\\\";\\n\\n\\n    /*\\n\\n     Bugfix for iOS 6 and 7\\n     Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\\n     based on the work of https://github.com/stomita/ios-imagefile-megapixel\\n     */\\n\\n    detectVerticalSquash = function (img) {\\n        var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\\n        iw = img.naturalWidth;\\n        ih = img.naturalHeight;\\n        canvas = document.createElement(\\\"canvas\\\");\\n        canvas.width = 1;\\n        canvas.height = ih;\\n        ctx = canvas.getContext(\\\"2d\\\");\\n        ctx.drawImage(img, 0, 0);\\n        data = ctx.getImageData(0, 0, 1, ih).data;\\n        sy = 0;\\n        ey = ih;\\n        py = ih;\\n        while (py > sy) {\\n            alpha = data[(py - 1) * 4 + 3];\\n            if (alpha === 0) {\\n                ey = py;\\n            } else {\\n                sy = py;\\n            }\\n            py = (ey + sy) >> 1;\\n        }\\n        ratio = py / ih;\\n        if (ratio === 0) {\\n            return 1;\\n        } else {\\n            return ratio;\\n        }\\n    };\\n\\n    drawImageIOSFix = function (ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\\n        var vertSquashRatio;\\n        vertSquashRatio = detectVerticalSquash(img);\\n        return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\\n    };\\n\\n\\n    /*\\n     * contentloaded.js\\n     *\\n     * Author: Diego Perini (diego.perini at gmail.com)\\n     * Summary: cross-browser wrapper for DOMContentLoaded\\n     * Updated: 20101020\\n     * License: MIT\\n     * Version: 1.2\\n     *\\n     * URL:\\n     * http://javascript.nwbox.com/ContentLoaded/\\n     * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\\n     */\\n\\n    contentLoaded = function (win, fn) {\\n        var add, doc, done, init, poll, pre, rem, root, top;\\n        done = false;\\n        top = true;\\n        doc = win.document;\\n        root = doc.documentElement;\\n        add = (doc.addEventListener ? \\\"addEventListener\\\" : \\\"attachEvent\\\");\\n        rem = (doc.addEventListener ? \\\"removeEventListener\\\" : \\\"detachEvent\\\");\\n        pre = (doc.addEventListener ? \\\"\\\" : \\\"on\\\");\\n        init = function (e) {\\n            if (e.type === \\\"readystatechange\\\" && doc.readyState !== \\\"complete\\\") {\\n                return;\\n            }\\n            (e.type === \\\"load\\\" ? win : doc)[rem](pre + e.type, init, false);\\n            if (!done && (done = true)) {\\n                return fn.call(win, e.type || e);\\n            }\\n        };\\n        poll = function () {\\n            var e;\\n            try {\\n                root.doScroll(\\\"left\\\");\\n            } catch (_error) {\\n                e = _error;\\n                setTimeout(poll, 50);\\n                return;\\n            }\\n            return init(\\\"poll\\\");\\n        };\\n        if (doc.readyState !== \\\"complete\\\") {\\n            if (doc.createEventObject && root.doScroll) {\\n                try {\\n                    top = !win.frameElement;\\n                } catch (_error) {\\n                }\\n                if (top) {\\n                    poll();\\n                }\\n            }\\n            doc[add](pre + \\\"DOMContentLoaded\\\", init, false);\\n            doc[add](pre + \\\"readystatechange\\\", init, false);\\n            return win[add](pre + \\\"load\\\", init, false);\\n        }\\n    };\\n\\n    Dropzone._autoDiscoverFunction = function () {\\n        if (Dropzone.autoDiscover) {\\n            return Dropzone.discover();\\n        }\\n    };\\n\\n    contentLoaded(window, Dropzone._autoDiscoverFunction);\\n\\n}).call(this);\\n\\n/*!\\n * Bootstrap v4.0.0-alpha.5 (https://getbootstrap.com)\\n * Copyright 2011-2016 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n */\\n\\nif (typeof jQuery === 'undefined') {\\n    throw new Error('Bootstrap\\\\'s JavaScript requires jQuery')\\n}\\n\\n+function ($) {\\n    var version = $.fn.jquery.split(' ')[0].split('.')\\n    if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1) || (version[0] >= 4)) {\\n        throw new Error('Bootstrap\\\\'s JavaScript requires at least jQuery v1.9.1 but less than v4.0.0')\\n    }\\n}(jQuery);\\n\\n\\n+function () {\\n\\n    var _typeof = typeof Symbol === \\\"function\\\" && typeof Symbol.iterator === \\\"symbol\\\" ? function (obj) {\\n            return typeof obj;\\n        } : function (obj) {\\n            return obj && typeof Symbol === \\\"function\\\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \\\"symbol\\\" : typeof obj;\\n        };\\n\\n    var _createClass = function () {\\n        function defineProperties(target, props) {\\n            for (var i = 0; i < props.length; i++) {\\n                var descriptor = props[i];\\n                descriptor.enumerable = descriptor.enumerable || false;\\n                descriptor.configurable = true;\\n                if (\\\"value\\\" in descriptor) descriptor.writable = true;\\n                Object.defineProperty(target, descriptor.key, descriptor);\\n            }\\n        }\\n\\n        return function (Constructor, protoProps, staticProps) {\\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\\n            if (staticProps) defineProperties(Constructor, staticProps);\\n            return Constructor;\\n        };\\n    }();\\n\\n    function _possibleConstructorReturn(self, call) {\\n        if (!self) {\\n            throw new ReferenceError(\\\"this hasn't been initialised - super() hasn't been called\\\");\\n        }\\n        return call && (typeof call === \\\"object\\\" || typeof call === \\\"function\\\") ? call : self;\\n    }\\n\\n    function _inherits(subClass, superClass) {\\n        if (typeof superClass !== \\\"function\\\" && superClass !== null) {\\n            throw new TypeError(\\\"Super expression must either be null or a function, not \\\" + typeof superClass);\\n        }\\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\\n            constructor: {\\n                value: subClass,\\n                enumerable: false,\\n                writable: true,\\n                configurable: true\\n            }\\n        });\\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\\n    }\\n\\n    function _classCallCheck(instance, Constructor) {\\n        if (!(instance instanceof Constructor)) {\\n            throw new TypeError(\\\"Cannot call a class as a function\\\");\\n        }\\n    }\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): util.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var Util = function ($) {\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Private TransitionEnd Helpers\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var transition = false;\\n\\n        var MAX_UID = 1000000;\\n\\n        var TransitionEndEvent = {\\n            WebkitTransition: 'webkitTransitionEnd',\\n            MozTransition: 'transitionend',\\n            OTransition: 'oTransitionEnd otransitionend',\\n            transition: 'transitionend'\\n        };\\n\\n        // shoutout AngusCroll (https://goo.gl/pxwQGp)\\n        function toType(obj) {\\n            return {}.toString.call(obj).match(/\\\\s([a-zA-Z]+)/)[1].toLowerCase();\\n        }\\n\\n        function isElement(obj) {\\n            return (obj[0] || obj).nodeType;\\n        }\\n\\n        function getSpecialTransitionEndEvent() {\\n            return {\\n                bindType: transition.end,\\n                delegateType: transition.end,\\n                handle: function handle(event) {\\n                    if ($(event.target).is(this)) {\\n                        return event.handleObj.handler.apply(this, arguments); // eslint-disable-line prefer-rest-params\\n                    }\\n                    return undefined;\\n                }\\n            };\\n        }\\n\\n        function transitionEndTest() {\\n            if (window.QUnit) {\\n                return false;\\n            }\\n\\n            var el = document.createElement('bootstrap');\\n\\n            for (var name in TransitionEndEvent) {\\n                if (el.style[name] !== undefined) {\\n                    return {end: TransitionEndEvent[name]};\\n                }\\n            }\\n\\n            return false;\\n        }\\n\\n        function transitionEndEmulator(duration) {\\n            var _this = this;\\n\\n            var called = false;\\n\\n            $(this).one(Util.TRANSITION_END, function () {\\n                called = true;\\n            });\\n\\n            setTimeout(function () {\\n                if (!called) {\\n                    Util.triggerTransitionEnd(_this);\\n                }\\n            }, duration);\\n\\n            return this;\\n        }\\n\\n        function setTransitionEndSupport() {\\n            transition = transitionEndTest();\\n\\n            $.fn.emulateTransitionEnd = transitionEndEmulator;\\n\\n            if (Util.supportsTransitionEnd()) {\\n                $.event.special[Util.TRANSITION_END] = getSpecialTransitionEndEvent();\\n            }\\n        }\\n\\n        /**\\n         * --------------------------------------------------------------------------\\n         * Public Util Api\\n         * --------------------------------------------------------------------------\\n         */\\n\\n        var Util = {\\n\\n            TRANSITION_END: 'bsTransitionEnd',\\n\\n            getUID: function getUID(prefix) {\\n                do {\\n                    /* eslint-disable no-bitwise */\\n                    prefix += ~~(Math.random() * MAX_UID); // \\\"~~\\\" acts like a faster Math.floor() here\\n                    /* eslint-enable no-bitwise */\\n                } while (document.getElementById(prefix));\\n                return prefix;\\n            },\\n            getSelectorFromElement: function getSelectorFromElement(element) {\\n                var selector = element.getAttribute('data-target');\\n\\n                if (!selector) {\\n                    selector = element.getAttribute('href') || '';\\n                    selector = /^#[a-z]/i.test(selector) ? selector : null;\\n                }\\n\\n                return selector;\\n            },\\n            reflow: function reflow(element) {\\n                new Function('bs', 'return bs')(element.offsetHeight);\\n            },\\n            triggerTransitionEnd: function triggerTransitionEnd(element) {\\n                $(element).trigger(transition.end);\\n            },\\n            supportsTransitionEnd: function supportsTransitionEnd() {\\n                return Boolean(transition);\\n            },\\n            typeCheckConfig: function typeCheckConfig(componentName, config, configTypes) {\\n                for (var property in configTypes) {\\n                    if (configTypes.hasOwnProperty(property)) {\\n                        var expectedTypes = configTypes[property];\\n                        var value = config[property];\\n                        var valueType = void 0;\\n\\n                        if (value && isElement(value)) {\\n                            valueType = 'element';\\n                        } else {\\n                            valueType = toType(value);\\n                        }\\n\\n                        if (!new RegExp(expectedTypes).test(valueType)) {\\n                            throw new Error(componentName.toUpperCase() + ': ' + ('Option \\\"' + property + '\\\" provided type \\\"' + valueType + '\\\" ') + ('but expected type \\\"' + expectedTypes + '\\\".'));\\n                        }\\n                    }\\n                }\\n            }\\n        };\\n\\n        setTransitionEndSupport();\\n\\n        return Util;\\n    }(jQuery);\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): alert.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var Alert = function ($) {\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Constants\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var NAME = 'alert';\\n        var VERSION = '4.0.0-alpha.5';\\n        var DATA_KEY = 'bs.alert';\\n        var EVENT_KEY = '.' + DATA_KEY;\\n        var DATA_API_KEY = '.data-api';\\n        var JQUERY_NO_CONFLICT = $.fn[NAME];\\n        var TRANSITION_DURATION = 150;\\n\\n        var Selector = {\\n            DISMISS: '[data-dismiss=\\\"alert\\\"]'\\n        };\\n\\n        var Event = {\\n            CLOSE: 'close' + EVENT_KEY,\\n            CLOSED: 'closed' + EVENT_KEY,\\n            CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n        };\\n\\n        var ClassName = {\\n            ALERT: 'alert',\\n            FADE: 'fade',\\n            IN: 'in'\\n        };\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Class Definition\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var Alert = function () {\\n            function Alert(element) {\\n                _classCallCheck(this, Alert);\\n\\n                this._element = element;\\n            }\\n\\n            // getters\\n\\n            // public\\n\\n            Alert.prototype.close = function close(element) {\\n                element = element || this._element;\\n\\n                var rootElement = this._getRootElement(element);\\n                var customEvent = this._triggerCloseEvent(rootElement);\\n\\n                if (customEvent.isDefaultPrevented()) {\\n                    return;\\n                }\\n\\n                this._removeElement(rootElement);\\n            };\\n\\n            Alert.prototype.dispose = function dispose() {\\n                $.removeData(this._element, DATA_KEY);\\n                this._element = null;\\n            };\\n\\n            // private\\n\\n            Alert.prototype._getRootElement = function _getRootElement(element) {\\n                var selector = Util.getSelectorFromElement(element);\\n                var parent = false;\\n\\n                if (selector) {\\n                    parent = $(selector)[0];\\n                }\\n\\n                if (!parent) {\\n                    parent = $(element).closest('.' + ClassName.ALERT)[0];\\n                }\\n\\n                return parent;\\n            };\\n\\n            Alert.prototype._triggerCloseEvent = function _triggerCloseEvent(element) {\\n                var closeEvent = $.Event(Event.CLOSE);\\n\\n                $(element).trigger(closeEvent);\\n                return closeEvent;\\n            };\\n\\n            Alert.prototype._removeElement = function _removeElement(element) {\\n                $(element).removeClass(ClassName.IN);\\n\\n                if (!Util.supportsTransitionEnd() || !$(element).hasClass(ClassName.FADE)) {\\n                    this._destroyElement(element);\\n                    return;\\n                }\\n\\n                $(element).one(Util.TRANSITION_END, $.proxy(this._destroyElement, this, element)).emulateTransitionEnd(TRANSITION_DURATION);\\n            };\\n\\n            Alert.prototype._destroyElement = function _destroyElement(element) {\\n                $(element).detach().trigger(Event.CLOSED).remove();\\n            };\\n\\n            // static\\n\\n            Alert._jQueryInterface = function _jQueryInterface(config) {\\n                return this.each(function () {\\n                    var $element = $(this);\\n                    var data = $element.data(DATA_KEY);\\n\\n                    if (!data) {\\n                        data = new Alert(this);\\n                        $element.data(DATA_KEY, data);\\n                    }\\n\\n                    if (config === 'close') {\\n                        data[config](this);\\n                    }\\n                });\\n            };\\n\\n            Alert._handleDismiss = function _handleDismiss(alertInstance) {\\n                return function (event) {\\n                    if (event) {\\n                        event.preventDefault();\\n                    }\\n\\n                    alertInstance.close(this);\\n                };\\n            };\\n\\n            _createClass(Alert, null, [{\\n                key: 'VERSION',\\n                get: function get() {\\n                    return VERSION;\\n                }\\n            }]);\\n\\n            return Alert;\\n        }();\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Data Api implementation\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $(document).on(Event.CLICK_DATA_API, Selector.DISMISS, Alert._handleDismiss(new Alert()));\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * jQuery\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $.fn[NAME] = Alert._jQueryInterface;\\n        $.fn[NAME].Constructor = Alert;\\n        $.fn[NAME].noConflict = function () {\\n            $.fn[NAME] = JQUERY_NO_CONFLICT;\\n            return Alert._jQueryInterface;\\n        };\\n\\n        return Alert;\\n    }(jQuery);\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): button.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var Button = function ($) {\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Constants\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var NAME = 'button';\\n        var VERSION = '4.0.0-alpha.5';\\n        var DATA_KEY = 'bs.button';\\n        var EVENT_KEY = '.' + DATA_KEY;\\n        var DATA_API_KEY = '.data-api';\\n        var JQUERY_NO_CONFLICT = $.fn[NAME];\\n\\n        var ClassName = {\\n            ACTIVE: 'active',\\n            BUTTON: 'btn',\\n            FOCUS: 'focus'\\n        };\\n\\n        var Selector = {\\n            DATA_TOGGLE_CARROT: '[data-toggle^=\\\"button\\\"]',\\n            DATA_TOGGLE: '[data-toggle=\\\"buttons\\\"]',\\n            INPUT: 'input',\\n            ACTIVE: '.active',\\n            BUTTON: '.btn'\\n        };\\n\\n        var Event = {\\n            CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,\\n            FOCUS_BLUR_DATA_API: 'focus' + EVENT_KEY + DATA_API_KEY + ' ' + ('blur' + EVENT_KEY + DATA_API_KEY)\\n        };\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Class Definition\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var Button = function () {\\n            function Button(element) {\\n                _classCallCheck(this, Button);\\n\\n                this._element = element;\\n            }\\n\\n            // getters\\n\\n            // public\\n\\n            Button.prototype.toggle = function toggle() {\\n                var triggerChangeEvent = true;\\n                var rootElement = $(this._element).closest(Selector.DATA_TOGGLE)[0];\\n\\n                if (rootElement) {\\n                    var input = $(this._element).find(Selector.INPUT)[0];\\n\\n                    if (input) {\\n                        if (input.type === 'radio') {\\n                            if (input.checked && $(this._element).hasClass(ClassName.ACTIVE)) {\\n                                triggerChangeEvent = false;\\n                            } else {\\n                                var activeElement = $(rootElement).find(Selector.ACTIVE)[0];\\n\\n                                if (activeElement) {\\n                                    $(activeElement).removeClass(ClassName.ACTIVE);\\n                                }\\n                            }\\n                        }\\n\\n                        if (triggerChangeEvent) {\\n                            input.checked = !$(this._element).hasClass(ClassName.ACTIVE);\\n                            $(this._element).trigger('change');\\n                        }\\n\\n                        input.focus();\\n                    }\\n                } else {\\n                    this._element.setAttribute('aria-pressed', !$(this._element).hasClass(ClassName.ACTIVE));\\n                }\\n\\n                if (triggerChangeEvent) {\\n                    $(this._element).toggleClass(ClassName.ACTIVE);\\n                }\\n            };\\n\\n            Button.prototype.dispose = function dispose() {\\n                $.removeData(this._element, DATA_KEY);\\n                this._element = null;\\n            };\\n\\n            // static\\n\\n            Button._jQueryInterface = function _jQueryInterface(config) {\\n                return this.each(function () {\\n                    var data = $(this).data(DATA_KEY);\\n\\n                    if (!data) {\\n                        data = new Button(this);\\n                        $(this).data(DATA_KEY, data);\\n                    }\\n\\n                    if (config === 'toggle') {\\n                        data[config]();\\n                    }\\n                });\\n            };\\n\\n            _createClass(Button, null, [{\\n                key: 'VERSION',\\n                get: function get() {\\n                    return VERSION;\\n                }\\n            }]);\\n\\n            return Button;\\n        }();\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Data Api implementation\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\\n            event.preventDefault();\\n\\n            var button = event.target;\\n\\n            if (!$(button).hasClass(ClassName.BUTTON)) {\\n                button = $(button).closest(Selector.BUTTON);\\n            }\\n\\n            Button._jQueryInterface.call($(button), 'toggle');\\n        }).on(Event.FOCUS_BLUR_DATA_API, Selector.DATA_TOGGLE_CARROT, function (event) {\\n            var button = $(event.target).closest(Selector.BUTTON)[0];\\n            $(button).toggleClass(ClassName.FOCUS, /^focus(in)?$/.test(event.type));\\n        });\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * jQuery\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $.fn[NAME] = Button._jQueryInterface;\\n        $.fn[NAME].Constructor = Button;\\n        $.fn[NAME].noConflict = function () {\\n            $.fn[NAME] = JQUERY_NO_CONFLICT;\\n            return Button._jQueryInterface;\\n        };\\n\\n        return Button;\\n    }(jQuery);\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): carousel.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var Carousel = function ($) {\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Constants\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var NAME = 'carousel';\\n        var VERSION = '4.0.0-alpha.5';\\n        var DATA_KEY = 'bs.carousel';\\n        var EVENT_KEY = '.' + DATA_KEY;\\n        var DATA_API_KEY = '.data-api';\\n        var JQUERY_NO_CONFLICT = $.fn[NAME];\\n        var TRANSITION_DURATION = 600;\\n        var ARROW_LEFT_KEYCODE = 37; // KeyboardEvent.which value for left arrow key\\n        var ARROW_RIGHT_KEYCODE = 39; // KeyboardEvent.which value for right arrow key\\n\\n        var Default = {\\n            interval: 5000,\\n            keyboard: true,\\n            slide: false,\\n            pause: 'hover',\\n            wrap: true\\n        };\\n\\n        var DefaultType = {\\n            interval: '(number|boolean)',\\n            keyboard: 'boolean',\\n            slide: '(boolean|string)',\\n            pause: '(string|boolean)',\\n            wrap: 'boolean'\\n        };\\n\\n        var Direction = {\\n            NEXT: 'next',\\n            PREVIOUS: 'prev'\\n        };\\n\\n        var Event = {\\n            SLIDE: 'slide' + EVENT_KEY,\\n            SLID: 'slid' + EVENT_KEY,\\n            KEYDOWN: 'keydown' + EVENT_KEY,\\n            MOUSEENTER: 'mouseenter' + EVENT_KEY,\\n            MOUSELEAVE: 'mouseleave' + EVENT_KEY,\\n            LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY,\\n            CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n        };\\n\\n        var ClassName = {\\n            CAROUSEL: 'carousel',\\n            ACTIVE: 'active',\\n            SLIDE: 'slide',\\n            RIGHT: 'right',\\n            LEFT: 'left',\\n            ITEM: 'carousel-item'\\n        };\\n\\n        var Selector = {\\n            ACTIVE: '.active',\\n            ACTIVE_ITEM: '.active.carousel-item',\\n            ITEM: '.carousel-item',\\n            NEXT_PREV: '.next, .prev',\\n            INDICATORS: '.carousel-indicators',\\n            DATA_SLIDE: '[data-slide], [data-slide-to]',\\n            DATA_RIDE: '[data-ride=\\\"carousel\\\"]'\\n        };\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Class Definition\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var Carousel = function () {\\n            function Carousel(element, config) {\\n                _classCallCheck(this, Carousel);\\n\\n                this._items = null;\\n                this._interval = null;\\n                this._activeElement = null;\\n\\n                this._isPaused = false;\\n                this._isSliding = false;\\n\\n                this._config = this._getConfig(config);\\n                this._element = $(element)[0];\\n                this._indicatorsElement = $(this._element).find(Selector.INDICATORS)[0];\\n\\n                this._addEventListeners();\\n            }\\n\\n            // getters\\n\\n            // public\\n\\n            Carousel.prototype.next = function next() {\\n                if (!this._isSliding) {\\n                    this._slide(Direction.NEXT);\\n                }\\n            };\\n\\n            Carousel.prototype.nextWhenVisible = function nextWhenVisible() {\\n                // Don't call next when the page isn't visible\\n                if (!document.hidden) {\\n                    this.next();\\n                }\\n            };\\n\\n            Carousel.prototype.prev = function prev() {\\n                if (!this._isSliding) {\\n                    this._slide(Direction.PREVIOUS);\\n                }\\n            };\\n\\n            Carousel.prototype.pause = function pause(event) {\\n                if (!event) {\\n                    this._isPaused = true;\\n                }\\n\\n                if ($(this._element).find(Selector.NEXT_PREV)[0] && Util.supportsTransitionEnd()) {\\n                    Util.triggerTransitionEnd(this._element);\\n                    this.cycle(true);\\n                }\\n\\n                clearInterval(this._interval);\\n                this._interval = null;\\n            };\\n\\n            Carousel.prototype.cycle = function cycle(event) {\\n                if (!event) {\\n                    this._isPaused = false;\\n                }\\n\\n                if (this._interval) {\\n                    clearInterval(this._interval);\\n                    this._interval = null;\\n                }\\n\\n                if (this._config.interval && !this._isPaused) {\\n                    this._interval = setInterval($.proxy(document.visibilityState ? this.nextWhenVisible : this.next, this), this._config.interval);\\n                }\\n            };\\n\\n            Carousel.prototype.to = function to(index) {\\n                var _this2 = this;\\n\\n                this._activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];\\n\\n                var activeIndex = this._getItemIndex(this._activeElement);\\n\\n                if (index > this._items.length - 1 || index < 0) {\\n                    return;\\n                }\\n\\n                if (this._isSliding) {\\n                    $(this._element).one(Event.SLID, function () {\\n                        return _this2.to(index);\\n                    });\\n                    return;\\n                }\\n\\n                if (activeIndex === index) {\\n                    this.pause();\\n                    this.cycle();\\n                    return;\\n                }\\n\\n                var direction = index > activeIndex ? Direction.NEXT : Direction.PREVIOUS;\\n\\n                this._slide(direction, this._items[index]);\\n            };\\n\\n            Carousel.prototype.dispose = function dispose() {\\n                $(this._element).off(EVENT_KEY);\\n                $.removeData(this._element, DATA_KEY);\\n\\n                this._items = null;\\n                this._config = null;\\n                this._element = null;\\n                this._interval = null;\\n                this._isPaused = null;\\n                this._isSliding = null;\\n                this._activeElement = null;\\n                this._indicatorsElement = null;\\n            };\\n\\n            // private\\n\\n            Carousel.prototype._getConfig = function _getConfig(config) {\\n                config = $.extend({}, Default, config);\\n                Util.typeCheckConfig(NAME, config, DefaultType);\\n                return config;\\n            };\\n\\n            Carousel.prototype._addEventListeners = function _addEventListeners() {\\n                if (this._config.keyboard) {\\n                    $(this._element).on(Event.KEYDOWN, $.proxy(this._keydown, this));\\n                }\\n\\n                if (this._config.pause === 'hover' && !('ontouchstart' in document.documentElement)) {\\n                    $(this._element).on(Event.MOUSEENTER, $.proxy(this.pause, this)).on(Event.MOUSELEAVE, $.proxy(this.cycle, this));\\n                }\\n            };\\n\\n            Carousel.prototype._keydown = function _keydown(event) {\\n                event.preventDefault();\\n\\n                if (/input|textarea/i.test(event.target.tagName)) {\\n                    return;\\n                }\\n\\n                switch (event.which) {\\n                    case ARROW_LEFT_KEYCODE:\\n                        this.prev();\\n                        break;\\n                    case ARROW_RIGHT_KEYCODE:\\n                        this.next();\\n                        break;\\n                    default:\\n                        return;\\n                }\\n            };\\n\\n            Carousel.prototype._getItemIndex = function _getItemIndex(element) {\\n                this._items = $.makeArray($(element).parent().find(Selector.ITEM));\\n                return this._items.indexOf(element);\\n            };\\n\\n            Carousel.prototype._getItemByDirection = function _getItemByDirection(direction, activeElement) {\\n                var isNextDirection = direction === Direction.NEXT;\\n                var isPrevDirection = direction === Direction.PREVIOUS;\\n                var activeIndex = this._getItemIndex(activeElement);\\n                var lastItemIndex = this._items.length - 1;\\n                var isGoingToWrap = isPrevDirection && activeIndex === 0 || isNextDirection && activeIndex === lastItemIndex;\\n\\n                if (isGoingToWrap && !this._config.wrap) {\\n                    return activeElement;\\n                }\\n\\n                var delta = direction === Direction.PREVIOUS ? -1 : 1;\\n                var itemIndex = (activeIndex + delta) % this._items.length;\\n\\n                return itemIndex === -1 ? this._items[this._items.length - 1] : this._items[itemIndex];\\n            };\\n\\n            Carousel.prototype._triggerSlideEvent = function _triggerSlideEvent(relatedTarget, directionalClassname) {\\n                var slideEvent = $.Event(Event.SLIDE, {\\n                    relatedTarget: relatedTarget,\\n                    direction: directionalClassname\\n                });\\n\\n                $(this._element).trigger(slideEvent);\\n\\n                return slideEvent;\\n            };\\n\\n            Carousel.prototype._setActiveIndicatorElement = function _setActiveIndicatorElement(element) {\\n                if (this._indicatorsElement) {\\n                    $(this._indicatorsElement).find(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\\n\\n                    var nextIndicator = this._indicatorsElement.children[this._getItemIndex(element)];\\n\\n                    if (nextIndicator) {\\n                        $(nextIndicator).addClass(ClassName.ACTIVE);\\n                    }\\n                }\\n            };\\n\\n            Carousel.prototype._slide = function _slide(direction, element) {\\n                var _this3 = this;\\n\\n                var activeElement = $(this._element).find(Selector.ACTIVE_ITEM)[0];\\n                var nextElement = element || activeElement && this._getItemByDirection(direction, activeElement);\\n\\n                var isCycling = Boolean(this._interval);\\n\\n                var directionalClassName = direction === Direction.NEXT ? ClassName.LEFT : ClassName.RIGHT;\\n\\n                if (nextElement && $(nextElement).hasClass(ClassName.ACTIVE)) {\\n                    this._isSliding = false;\\n                    return;\\n                }\\n\\n                var slideEvent = this._triggerSlideEvent(nextElement, directionalClassName);\\n                if (slideEvent.isDefaultPrevented()) {\\n                    return;\\n                }\\n\\n                if (!activeElement || !nextElement) {\\n                    // some weirdness is happening, so we bail\\n                    return;\\n                }\\n\\n                this._isSliding = true;\\n\\n                if (isCycling) {\\n                    this.pause();\\n                }\\n\\n                this._setActiveIndicatorElement(nextElement);\\n\\n                var slidEvent = $.Event(Event.SLID, {\\n                    relatedTarget: nextElement,\\n                    direction: directionalClassName\\n                });\\n\\n                if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.SLIDE)) {\\n\\n                    $(nextElement).addClass(direction);\\n\\n                    Util.reflow(nextElement);\\n\\n                    $(activeElement).addClass(directionalClassName);\\n                    $(nextElement).addClass(directionalClassName);\\n\\n                    $(activeElement).one(Util.TRANSITION_END, function () {\\n                        $(nextElement).removeClass(directionalClassName).removeClass(direction);\\n\\n                        $(nextElement).addClass(ClassName.ACTIVE);\\n\\n                        $(activeElement).removeClass(ClassName.ACTIVE).removeClass(direction).removeClass(directionalClassName);\\n\\n                        _this3._isSliding = false;\\n\\n                        setTimeout(function () {\\n                            return $(_this3._element).trigger(slidEvent);\\n                        }, 0);\\n                    }).emulateTransitionEnd(TRANSITION_DURATION);\\n                } else {\\n                    $(activeElement).removeClass(ClassName.ACTIVE);\\n                    $(nextElement).addClass(ClassName.ACTIVE);\\n\\n                    this._isSliding = false;\\n                    $(this._element).trigger(slidEvent);\\n                }\\n\\n                if (isCycling) {\\n                    this.cycle();\\n                }\\n            };\\n\\n            // static\\n\\n            Carousel._jQueryInterface = function _jQueryInterface(config) {\\n                return this.each(function () {\\n                    var data = $(this).data(DATA_KEY);\\n                    var _config = $.extend({}, Default, $(this).data());\\n\\n                    if ((typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object') {\\n                        $.extend(_config, config);\\n                    }\\n\\n                    var action = typeof config === 'string' ? config : _config.slide;\\n\\n                    if (!data) {\\n                        data = new Carousel(this, _config);\\n                        $(this).data(DATA_KEY, data);\\n                    }\\n\\n                    if (typeof config === 'number') {\\n                        data.to(config);\\n                    } else if (typeof action === 'string') {\\n                        if (data[action] === undefined) {\\n                            throw new Error('No method named \\\"' + action + '\\\"');\\n                        }\\n                        data[action]();\\n                    } else if (_config.interval) {\\n                        data.pause();\\n                        data.cycle();\\n                    }\\n                });\\n            };\\n\\n            Carousel._dataApiClickHandler = function _dataApiClickHandler(event) {\\n                var selector = Util.getSelectorFromElement(this);\\n\\n                if (!selector) {\\n                    return;\\n                }\\n\\n                var target = $(selector)[0];\\n\\n                if (!target || !$(target).hasClass(ClassName.CAROUSEL)) {\\n                    return;\\n                }\\n\\n                var config = $.extend({}, $(target).data(), $(this).data());\\n                var slideIndex = this.getAttribute('data-slide-to');\\n\\n                if (slideIndex) {\\n                    config.interval = false;\\n                }\\n\\n                Carousel._jQueryInterface.call($(target), config);\\n\\n                if (slideIndex) {\\n                    $(target).data(DATA_KEY).to(slideIndex);\\n                }\\n\\n                event.preventDefault();\\n            };\\n\\n            _createClass(Carousel, null, [{\\n                key: 'VERSION',\\n                get: function get() {\\n                    return VERSION;\\n                }\\n            }, {\\n                key: 'Default',\\n                get: function get() {\\n                    return Default;\\n                }\\n            }]);\\n\\n            return Carousel;\\n        }();\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Data Api implementation\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $(document).on(Event.CLICK_DATA_API, Selector.DATA_SLIDE, Carousel._dataApiClickHandler);\\n\\n        $(window).on(Event.LOAD_DATA_API, function () {\\n            $(Selector.DATA_RIDE).each(function () {\\n                var $carousel = $(this);\\n                Carousel._jQueryInterface.call($carousel, $carousel.data());\\n            });\\n        });\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * jQuery\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $.fn[NAME] = Carousel._jQueryInterface;\\n        $.fn[NAME].Constructor = Carousel;\\n        $.fn[NAME].noConflict = function () {\\n            $.fn[NAME] = JQUERY_NO_CONFLICT;\\n            return Carousel._jQueryInterface;\\n        };\\n\\n        return Carousel;\\n    }(jQuery);\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): collapse.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var Collapse = function ($) {\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Constants\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var NAME = 'collapse';\\n        var VERSION = '4.0.0-alpha.5';\\n        var DATA_KEY = 'bs.collapse';\\n        var EVENT_KEY = '.' + DATA_KEY;\\n        var DATA_API_KEY = '.data-api';\\n        var JQUERY_NO_CONFLICT = $.fn[NAME];\\n        var TRANSITION_DURATION = 600;\\n\\n        var Default = {\\n            toggle: true,\\n            parent: ''\\n        };\\n\\n        var DefaultType = {\\n            toggle: 'boolean',\\n            parent: 'string'\\n        };\\n\\n        var Event = {\\n            SHOW: 'show' + EVENT_KEY,\\n            SHOWN: 'shown' + EVENT_KEY,\\n            HIDE: 'hide' + EVENT_KEY,\\n            HIDDEN: 'hidden' + EVENT_KEY,\\n            CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n        };\\n\\n        var ClassName = {\\n            IN: 'in',\\n            COLLAPSE: 'collapse',\\n            COLLAPSING: 'collapsing',\\n            COLLAPSED: 'collapsed'\\n        };\\n\\n        var Dimension = {\\n            WIDTH: 'width',\\n            HEIGHT: 'height'\\n        };\\n\\n        var Selector = {\\n            ACTIVES: '.card > .in, .card > .collapsing',\\n            DATA_TOGGLE: '[data-toggle=\\\"collapse\\\"]'\\n        };\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Class Definition\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var Collapse = function () {\\n            function Collapse(element, config) {\\n                _classCallCheck(this, Collapse);\\n\\n                this._isTransitioning = false;\\n                this._element = element;\\n                this._config = this._getConfig(config);\\n                this._triggerArray = $.makeArray($('[data-toggle=\\\"collapse\\\"][href=\\\"#' + element.id + '\\\"],' + ('[data-toggle=\\\"collapse\\\"][data-target=\\\"#' + element.id + '\\\"]')));\\n\\n                this._parent = this._config.parent ? this._getParent() : null;\\n\\n                if (!this._config.parent) {\\n                    this._addAriaAndCollapsedClass(this._element, this._triggerArray);\\n                }\\n\\n                if (this._config.toggle) {\\n                    this.toggle();\\n                }\\n            }\\n\\n            // getters\\n\\n            // public\\n\\n            Collapse.prototype.toggle = function toggle() {\\n                if ($(this._element).hasClass(ClassName.IN)) {\\n                    this.hide();\\n                } else {\\n                    this.show();\\n                }\\n            };\\n\\n            Collapse.prototype.show = function show() {\\n                var _this4 = this;\\n\\n                if (this._isTransitioning || $(this._element).hasClass(ClassName.IN)) {\\n                    return;\\n                }\\n\\n                var actives = void 0;\\n                var activesData = void 0;\\n\\n                if (this._parent) {\\n                    actives = $.makeArray($(Selector.ACTIVES));\\n                    if (!actives.length) {\\n                        actives = null;\\n                    }\\n                }\\n\\n                if (actives) {\\n                    activesData = $(actives).data(DATA_KEY);\\n                    if (activesData && activesData._isTransitioning) {\\n                        return;\\n                    }\\n                }\\n\\n                var startEvent = $.Event(Event.SHOW);\\n                $(this._element).trigger(startEvent);\\n                if (startEvent.isDefaultPrevented()) {\\n                    return;\\n                }\\n\\n                if (actives) {\\n                    Collapse._jQueryInterface.call($(actives), 'hide');\\n                    if (!activesData) {\\n                        $(actives).data(DATA_KEY, null);\\n                    }\\n                }\\n\\n                var dimension = this._getDimension();\\n\\n                $(this._element).removeClass(ClassName.COLLAPSE).addClass(ClassName.COLLAPSING);\\n\\n                this._element.style[dimension] = 0;\\n                this._element.setAttribute('aria-expanded', true);\\n\\n                if (this._triggerArray.length) {\\n                    $(this._triggerArray).removeClass(ClassName.COLLAPSED).attr('aria-expanded', true);\\n                }\\n\\n                this.setTransitioning(true);\\n\\n                var complete = function complete() {\\n                    $(_this4._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).addClass(ClassName.IN);\\n\\n                    _this4._element.style[dimension] = '';\\n\\n                    _this4.setTransitioning(false);\\n\\n                    $(_this4._element).trigger(Event.SHOWN);\\n                };\\n\\n                if (!Util.supportsTransitionEnd()) {\\n                    complete();\\n                    return;\\n                }\\n\\n                var capitalizedDimension = dimension[0].toUpperCase() + dimension.slice(1);\\n                var scrollSize = 'scroll' + capitalizedDimension;\\n\\n                $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\\n\\n                this._element.style[dimension] = this._element[scrollSize] + 'px';\\n            };\\n\\n            Collapse.prototype.hide = function hide() {\\n                var _this5 = this;\\n\\n                if (this._isTransitioning || !$(this._element).hasClass(ClassName.IN)) {\\n                    return;\\n                }\\n\\n                var startEvent = $.Event(Event.HIDE);\\n                $(this._element).trigger(startEvent);\\n                if (startEvent.isDefaultPrevented()) {\\n                    return;\\n                }\\n\\n                var dimension = this._getDimension();\\n                var offsetDimension = dimension === Dimension.WIDTH ? 'offsetWidth' : 'offsetHeight';\\n\\n                this._element.style[dimension] = this._element[offsetDimension] + 'px';\\n\\n                Util.reflow(this._element);\\n\\n                $(this._element).addClass(ClassName.COLLAPSING).removeClass(ClassName.COLLAPSE).removeClass(ClassName.IN);\\n\\n                this._element.setAttribute('aria-expanded', false);\\n\\n                if (this._triggerArray.length) {\\n                    $(this._triggerArray).addClass(ClassName.COLLAPSED).attr('aria-expanded', false);\\n                }\\n\\n                this.setTransitioning(true);\\n\\n                var complete = function complete() {\\n                    _this5.setTransitioning(false);\\n                    $(_this5._element).removeClass(ClassName.COLLAPSING).addClass(ClassName.COLLAPSE).trigger(Event.HIDDEN);\\n                };\\n\\n                this._element.style[dimension] = '';\\n\\n                if (!Util.supportsTransitionEnd()) {\\n                    complete();\\n                    return;\\n                }\\n\\n                $(this._element).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\\n            };\\n\\n            Collapse.prototype.setTransitioning = function setTransitioning(isTransitioning) {\\n                this._isTransitioning = isTransitioning;\\n            };\\n\\n            Collapse.prototype.dispose = function dispose() {\\n                $.removeData(this._element, DATA_KEY);\\n\\n                this._config = null;\\n                this._parent = null;\\n                this._element = null;\\n                this._triggerArray = null;\\n                this._isTransitioning = null;\\n            };\\n\\n            // private\\n\\n            Collapse.prototype._getConfig = function _getConfig(config) {\\n                config = $.extend({}, Default, config);\\n                config.toggle = Boolean(config.toggle); // coerce string values\\n                Util.typeCheckConfig(NAME, config, DefaultType);\\n                return config;\\n            };\\n\\n            Collapse.prototype._getDimension = function _getDimension() {\\n                var hasWidth = $(this._element).hasClass(Dimension.WIDTH);\\n                return hasWidth ? Dimension.WIDTH : Dimension.HEIGHT;\\n            };\\n\\n            Collapse.prototype._getParent = function _getParent() {\\n                var _this6 = this;\\n\\n                var parent = $(this._config.parent)[0];\\n                var selector = '[data-toggle=\\\"collapse\\\"][data-parent=\\\"' + this._config.parent + '\\\"]';\\n\\n                $(parent).find(selector).each(function (i, element) {\\n                    _this6._addAriaAndCollapsedClass(Collapse._getTargetFromElement(element), [element]);\\n                });\\n\\n                return parent;\\n            };\\n\\n            Collapse.prototype._addAriaAndCollapsedClass = function _addAriaAndCollapsedClass(element, triggerArray) {\\n                if (element) {\\n                    var isOpen = $(element).hasClass(ClassName.IN);\\n                    element.setAttribute('aria-expanded', isOpen);\\n\\n                    if (triggerArray.length) {\\n                        $(triggerArray).toggleClass(ClassName.COLLAPSED, !isOpen).attr('aria-expanded', isOpen);\\n                    }\\n                }\\n            };\\n\\n            // static\\n\\n            Collapse._getTargetFromElement = function _getTargetFromElement(element) {\\n                var selector = Util.getSelectorFromElement(element);\\n                return selector ? $(selector)[0] : null;\\n            };\\n\\n            Collapse._jQueryInterface = function _jQueryInterface(config) {\\n                return this.each(function () {\\n                    var $this = $(this);\\n                    var data = $this.data(DATA_KEY);\\n                    var _config = $.extend({}, Default, $this.data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);\\n\\n                    if (!data && _config.toggle && /show|hide/.test(config)) {\\n                        _config.toggle = false;\\n                    }\\n\\n                    if (!data) {\\n                        data = new Collapse(this, _config);\\n                        $this.data(DATA_KEY, data);\\n                    }\\n\\n                    if (typeof config === 'string') {\\n                        if (data[config] === undefined) {\\n                            throw new Error('No method named \\\"' + config + '\\\"');\\n                        }\\n                        data[config]();\\n                    }\\n                });\\n            };\\n\\n            _createClass(Collapse, null, [{\\n                key: 'VERSION',\\n                get: function get() {\\n                    return VERSION;\\n                }\\n            }, {\\n                key: 'Default',\\n                get: function get() {\\n                    return Default;\\n                }\\n            }]);\\n\\n            return Collapse;\\n        }();\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Data Api implementation\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\\n            event.preventDefault();\\n\\n            var target = Collapse._getTargetFromElement(this);\\n            var data = $(target).data(DATA_KEY);\\n            var config = data ? 'toggle' : $(this).data();\\n\\n            Collapse._jQueryInterface.call($(target), config);\\n        });\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * jQuery\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $.fn[NAME] = Collapse._jQueryInterface;\\n        $.fn[NAME].Constructor = Collapse;\\n        $.fn[NAME].noConflict = function () {\\n            $.fn[NAME] = JQUERY_NO_CONFLICT;\\n            return Collapse._jQueryInterface;\\n        };\\n\\n        return Collapse;\\n    }(jQuery);\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): dropdown.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var Dropdown = function ($) {\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Constants\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var NAME = 'dropdown';\\n        var VERSION = '4.0.0-alpha.5';\\n        var DATA_KEY = 'bs.dropdown';\\n        var EVENT_KEY = '.' + DATA_KEY;\\n        var DATA_API_KEY = '.data-api';\\n        var JQUERY_NO_CONFLICT = $.fn[NAME];\\n        var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\\n        var ARROW_UP_KEYCODE = 38; // KeyboardEvent.which value for up arrow key\\n        var ARROW_DOWN_KEYCODE = 40; // KeyboardEvent.which value for down arrow key\\n        var RIGHT_MOUSE_BUTTON_WHICH = 3; // MouseEvent.which value for the right button (assuming a right-handed mouse)\\n\\n        var Event = {\\n            HIDE: 'hide' + EVENT_KEY,\\n            HIDDEN: 'hidden' + EVENT_KEY,\\n            SHOW: 'show' + EVENT_KEY,\\n            SHOWN: 'shown' + EVENT_KEY,\\n            CLICK: 'click' + EVENT_KEY,\\n            CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY,\\n            KEYDOWN_DATA_API: 'keydown' + EVENT_KEY + DATA_API_KEY\\n        };\\n\\n        var ClassName = {\\n            BACKDROP: 'dropdown-backdrop',\\n            DISABLED: 'disabled',\\n            OPEN: 'open'\\n        };\\n\\n        var Selector = {\\n            BACKDROP: '.dropdown-backdrop',\\n            DATA_TOGGLE: '[data-toggle=\\\"dropdown\\\"]',\\n            FORM_CHILD: '.dropdown form',\\n            ROLE_MENU: '[role=\\\"menu\\\"]',\\n            ROLE_LISTBOX: '[role=\\\"listbox\\\"]',\\n            NAVBAR_NAV: '.navbar-nav',\\n            VISIBLE_ITEMS: '[role=\\\"menu\\\"] li:not(.disabled) a, ' + '[role=\\\"listbox\\\"] li:not(.disabled) a'\\n        };\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Class Definition\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var Dropdown = function () {\\n            function Dropdown(element) {\\n                _classCallCheck(this, Dropdown);\\n\\n                this._element = element;\\n\\n                this._addEventListeners();\\n            }\\n\\n            // getters\\n\\n            // public\\n\\n            Dropdown.prototype.toggle = function toggle() {\\n                if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\\n                    return false;\\n                }\\n\\n                var parent = Dropdown._getParentFromElement(this);\\n                var isActive = $(parent).hasClass(ClassName.OPEN);\\n\\n                Dropdown._clearMenus();\\n\\n                if (isActive) {\\n                    return false;\\n                }\\n\\n                if ('ontouchstart' in document.documentElement && !$(parent).closest(Selector.NAVBAR_NAV).length) {\\n\\n                    // if mobile we use a backdrop because click events don't delegate\\n                    var dropdown = document.createElement('div');\\n                    dropdown.className = ClassName.BACKDROP;\\n                    $(dropdown).insertBefore(this);\\n                    $(dropdown).on('click', Dropdown._clearMenus);\\n                }\\n\\n                var relatedTarget = {relatedTarget: this};\\n                var showEvent = $.Event(Event.SHOW, relatedTarget);\\n\\n                $(parent).trigger(showEvent);\\n\\n                if (showEvent.isDefaultPrevented()) {\\n                    return false;\\n                }\\n\\n                this.focus();\\n                this.setAttribute('aria-expanded', 'true');\\n\\n                $(parent).toggleClass(ClassName.OPEN);\\n                $(parent).trigger($.Event(Event.SHOWN, relatedTarget));\\n\\n                return false;\\n            };\\n\\n            Dropdown.prototype.dispose = function dispose() {\\n                $.removeData(this._element, DATA_KEY);\\n                $(this._element).off(EVENT_KEY);\\n                this._element = null;\\n            };\\n\\n            // private\\n\\n            Dropdown.prototype._addEventListeners = function _addEventListeners() {\\n                $(this._element).on(Event.CLICK, this.toggle);\\n            };\\n\\n            // static\\n\\n            Dropdown._jQueryInterface = function _jQueryInterface(config) {\\n                return this.each(function () {\\n                    var data = $(this).data(DATA_KEY);\\n\\n                    if (!data) {\\n                        $(this).data(DATA_KEY, data = new Dropdown(this));\\n                    }\\n\\n                    if (typeof config === 'string') {\\n                        if (data[config] === undefined) {\\n                            throw new Error('No method named \\\"' + config + '\\\"');\\n                        }\\n                        data[config].call(this);\\n                    }\\n                });\\n            };\\n\\n            Dropdown._clearMenus = function _clearMenus(event) {\\n                if (event && event.which === RIGHT_MOUSE_BUTTON_WHICH) {\\n                    return;\\n                }\\n\\n                var backdrop = $(Selector.BACKDROP)[0];\\n                if (backdrop) {\\n                    backdrop.parentNode.removeChild(backdrop);\\n                }\\n\\n                var toggles = $.makeArray($(Selector.DATA_TOGGLE));\\n\\n                for (var i = 0; i < toggles.length; i++) {\\n                    var parent = Dropdown._getParentFromElement(toggles[i]);\\n                    var relatedTarget = {relatedTarget: toggles[i]};\\n\\n                    if (!$(parent).hasClass(ClassName.OPEN)) {\\n                        continue;\\n                    }\\n\\n                    if (event && event.type === 'click' && /input|textarea/i.test(event.target.tagName) && $.contains(parent, event.target)) {\\n                        continue;\\n                    }\\n\\n                    var hideEvent = $.Event(Event.HIDE, relatedTarget);\\n                    $(parent).trigger(hideEvent);\\n                    if (hideEvent.isDefaultPrevented()) {\\n                        continue;\\n                    }\\n\\n                    toggles[i].setAttribute('aria-expanded', 'false');\\n\\n                    $(parent).removeClass(ClassName.OPEN).trigger($.Event(Event.HIDDEN, relatedTarget));\\n                }\\n            };\\n\\n            Dropdown._getParentFromElement = function _getParentFromElement(element) {\\n                var parent = void 0;\\n                var selector = Util.getSelectorFromElement(element);\\n\\n                if (selector) {\\n                    parent = $(selector)[0];\\n                }\\n\\n                return parent || element.parentNode;\\n            };\\n\\n            Dropdown._dataApiKeydownHandler = function _dataApiKeydownHandler(event) {\\n                if (!/(38|40|27|32)/.test(event.which) || /input|textarea/i.test(event.target.tagName)) {\\n                    return;\\n                }\\n\\n                event.preventDefault();\\n                event.stopPropagation();\\n\\n                if (this.disabled || $(this).hasClass(ClassName.DISABLED)) {\\n                    return;\\n                }\\n\\n                var parent = Dropdown._getParentFromElement(this);\\n                var isActive = $(parent).hasClass(ClassName.OPEN);\\n\\n                if (!isActive && event.which !== ESCAPE_KEYCODE || isActive && event.which === ESCAPE_KEYCODE) {\\n\\n                    if (event.which === ESCAPE_KEYCODE) {\\n                        var toggle = $(parent).find(Selector.DATA_TOGGLE)[0];\\n                        $(toggle).trigger('focus');\\n                    }\\n\\n                    $(this).trigger('click');\\n                    return;\\n                }\\n\\n                var items = $.makeArray($(Selector.VISIBLE_ITEMS));\\n\\n                items = items.filter(function (item) {\\n                    return item.offsetWidth || item.offsetHeight;\\n                });\\n\\n                if (!items.length) {\\n                    return;\\n                }\\n\\n                var index = items.indexOf(event.target);\\n\\n                if (event.which === ARROW_UP_KEYCODE && index > 0) {\\n                    // up\\n                    index--;\\n                }\\n\\n                if (event.which === ARROW_DOWN_KEYCODE && index < items.length - 1) {\\n                    // down\\n                    index++;\\n                }\\n\\n                if (index < 0) {\\n                    index = 0;\\n                }\\n\\n                items[index].focus();\\n            };\\n\\n            _createClass(Dropdown, null, [{\\n                key: 'VERSION',\\n                get: function get() {\\n                    return VERSION;\\n                }\\n            }]);\\n\\n            return Dropdown;\\n        }();\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Data Api implementation\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $(document).on(Event.KEYDOWN_DATA_API, Selector.DATA_TOGGLE, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_MENU, Dropdown._dataApiKeydownHandler).on(Event.KEYDOWN_DATA_API, Selector.ROLE_LISTBOX, Dropdown._dataApiKeydownHandler).on(Event.CLICK_DATA_API, Dropdown._clearMenus).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, Dropdown.prototype.toggle).on(Event.CLICK_DATA_API, Selector.FORM_CHILD, function (e) {\\n            e.stopPropagation();\\n        });\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * jQuery\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $.fn[NAME] = Dropdown._jQueryInterface;\\n        $.fn[NAME].Constructor = Dropdown;\\n        $.fn[NAME].noConflict = function () {\\n            $.fn[NAME] = JQUERY_NO_CONFLICT;\\n            return Dropdown._jQueryInterface;\\n        };\\n\\n        return Dropdown;\\n    }(jQuery);\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): modal.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var Modal = function ($) {\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Constants\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var NAME = 'modal';\\n        var VERSION = '4.0.0-alpha.5';\\n        var DATA_KEY = 'bs.modal';\\n        var EVENT_KEY = '.' + DATA_KEY;\\n        var DATA_API_KEY = '.data-api';\\n        var JQUERY_NO_CONFLICT = $.fn[NAME];\\n        var TRANSITION_DURATION = 300;\\n        var BACKDROP_TRANSITION_DURATION = 150;\\n        var ESCAPE_KEYCODE = 27; // KeyboardEvent.which value for Escape (Esc) key\\n\\n        var Default = {\\n            backdrop: true,\\n            keyboard: true,\\n            focus: true,\\n            show: true\\n        };\\n\\n        var DefaultType = {\\n            backdrop: '(boolean|string)',\\n            keyboard: 'boolean',\\n            focus: 'boolean',\\n            show: 'boolean'\\n        };\\n\\n        var Event = {\\n            HIDE: 'hide' + EVENT_KEY,\\n            HIDDEN: 'hidden' + EVENT_KEY,\\n            SHOW: 'show' + EVENT_KEY,\\n            SHOWN: 'shown' + EVENT_KEY,\\n            FOCUSIN: 'focusin' + EVENT_KEY,\\n            RESIZE: 'resize' + EVENT_KEY,\\n            CLICK_DISMISS: 'click.dismiss' + EVENT_KEY,\\n            KEYDOWN_DISMISS: 'keydown.dismiss' + EVENT_KEY,\\n            MOUSEUP_DISMISS: 'mouseup.dismiss' + EVENT_KEY,\\n            MOUSEDOWN_DISMISS: 'mousedown.dismiss' + EVENT_KEY,\\n            CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n        };\\n\\n        var ClassName = {\\n            SCROLLBAR_MEASURER: 'modal-scrollbar-measure',\\n            BACKDROP: 'modal-backdrop',\\n            OPEN: 'modal-open',\\n            FADE: 'fade',\\n            IN: 'in'\\n        };\\n\\n        var Selector = {\\n            DIALOG: '.modal-dialog',\\n            DATA_TOGGLE: '[data-toggle=\\\"modal\\\"]',\\n            DATA_DISMISS: '[data-dismiss=\\\"modal\\\"]',\\n            FIXED_CONTENT: '.navbar-fixed-top, .navbar-fixed-bottom, .is-fixed'\\n        };\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Class Definition\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var Modal = function () {\\n            function Modal(element, config) {\\n                _classCallCheck(this, Modal);\\n\\n                this._config = this._getConfig(config);\\n                this._element = element;\\n                this._dialog = $(element).find(Selector.DIALOG)[0];\\n                this._backdrop = null;\\n                this._isShown = false;\\n                this._isBodyOverflowing = false;\\n                this._ignoreBackdropClick = false;\\n                this._originalBodyPadding = 0;\\n                this._scrollbarWidth = 0;\\n            }\\n\\n            // getters\\n\\n            // public\\n\\n            Modal.prototype.toggle = function toggle(relatedTarget) {\\n                return this._isShown ? this.hide() : this.show(relatedTarget);\\n            };\\n\\n            Modal.prototype.show = function show(relatedTarget) {\\n                var _this7 = this;\\n\\n                var showEvent = $.Event(Event.SHOW, {\\n                    relatedTarget: relatedTarget\\n                });\\n\\n                $(this._element).trigger(showEvent);\\n\\n                if (this._isShown || showEvent.isDefaultPrevented()) {\\n                    return;\\n                }\\n\\n                this._isShown = true;\\n\\n                this._checkScrollbar();\\n                this._setScrollbar();\\n\\n                $(document.body).addClass(ClassName.OPEN);\\n\\n                this._setEscapeEvent();\\n                this._setResizeEvent();\\n\\n                $(this._element).on(Event.CLICK_DISMISS, Selector.DATA_DISMISS, $.proxy(this.hide, this));\\n\\n                $(this._dialog).on(Event.MOUSEDOWN_DISMISS, function () {\\n                    $(_this7._element).one(Event.MOUSEUP_DISMISS, function (event) {\\n                        if ($(event.target).is(_this7._element)) {\\n                            _this7._ignoreBackdropClick = true;\\n                        }\\n                    });\\n                });\\n\\n                this._showBackdrop($.proxy(this._showElement, this, relatedTarget));\\n            };\\n\\n            Modal.prototype.hide = function hide(event) {\\n                if (event) {\\n                    event.preventDefault();\\n                }\\n\\n                var hideEvent = $.Event(Event.HIDE);\\n\\n                $(this._element).trigger(hideEvent);\\n\\n                if (!this._isShown || hideEvent.isDefaultPrevented()) {\\n                    return;\\n                }\\n\\n                this._isShown = false;\\n\\n                this._setEscapeEvent();\\n                this._setResizeEvent();\\n\\n                $(document).off(Event.FOCUSIN);\\n\\n                $(this._element).removeClass(ClassName.IN);\\n\\n                $(this._element).off(Event.CLICK_DISMISS);\\n                $(this._dialog).off(Event.MOUSEDOWN_DISMISS);\\n\\n                if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {\\n\\n                    $(this._element).one(Util.TRANSITION_END, $.proxy(this._hideModal, this)).emulateTransitionEnd(TRANSITION_DURATION);\\n                } else {\\n                    this._hideModal();\\n                }\\n            };\\n\\n            Modal.prototype.dispose = function dispose() {\\n                $.removeData(this._element, DATA_KEY);\\n\\n                $(window).off(EVENT_KEY);\\n                $(document).off(EVENT_KEY);\\n                $(this._element).off(EVENT_KEY);\\n                $(this._backdrop).off(EVENT_KEY);\\n\\n                this._config = null;\\n                this._element = null;\\n                this._dialog = null;\\n                this._backdrop = null;\\n                this._isShown = null;\\n                this._isBodyOverflowing = null;\\n                this._ignoreBackdropClick = null;\\n                this._originalBodyPadding = null;\\n                this._scrollbarWidth = null;\\n            };\\n\\n            // private\\n\\n            Modal.prototype._getConfig = function _getConfig(config) {\\n                config = $.extend({}, Default, config);\\n                Util.typeCheckConfig(NAME, config, DefaultType);\\n                return config;\\n            };\\n\\n            Modal.prototype._showElement = function _showElement(relatedTarget) {\\n                var _this8 = this;\\n\\n                var transition = Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE);\\n\\n                if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\\n                    // don't move modals dom position\\n                    document.body.appendChild(this._element);\\n                }\\n\\n                this._element.style.display = 'block';\\n                this._element.removeAttribute('aria-hidden');\\n                this._element.scrollTop = 0;\\n\\n                if (transition) {\\n                    Util.reflow(this._element);\\n                }\\n\\n                $(this._element).addClass(ClassName.IN);\\n\\n                if (this._config.focus) {\\n                    this._enforceFocus();\\n                }\\n\\n                var shownEvent = $.Event(Event.SHOWN, {\\n                    relatedTarget: relatedTarget\\n                });\\n\\n                var transitionComplete = function transitionComplete() {\\n                    if (_this8._config.focus) {\\n                        _this8._element.focus();\\n                    }\\n                    $(_this8._element).trigger(shownEvent);\\n                };\\n\\n                if (transition) {\\n                    $(this._dialog).one(Util.TRANSITION_END, transitionComplete).emulateTransitionEnd(TRANSITION_DURATION);\\n                } else {\\n                    transitionComplete();\\n                }\\n            };\\n\\n            Modal.prototype._enforceFocus = function _enforceFocus() {\\n                var _this9 = this;\\n\\n                $(document).off(Event.FOCUSIN) // guard against infinite focus loop\\n                    .on(Event.FOCUSIN, function (event) {\\n                        if (document !== event.target && _this9._element !== event.target && !$(_this9._element).has(event.target).length) {\\n                            _this9._element.focus();\\n                        }\\n                    });\\n            };\\n\\n            Modal.prototype._setEscapeEvent = function _setEscapeEvent() {\\n                var _this10 = this;\\n\\n                if (this._isShown && this._config.keyboard) {\\n                    $(this._element).on(Event.KEYDOWN_DISMISS, function (event) {\\n                        if (event.which === ESCAPE_KEYCODE) {\\n                            _this10.hide();\\n                        }\\n                    });\\n                } else if (!this._isShown) {\\n                    $(this._element).off(Event.KEYDOWN_DISMISS);\\n                }\\n            };\\n\\n            Modal.prototype._setResizeEvent = function _setResizeEvent() {\\n                if (this._isShown) {\\n                    $(window).on(Event.RESIZE, $.proxy(this._handleUpdate, this));\\n                } else {\\n                    $(window).off(Event.RESIZE);\\n                }\\n            };\\n\\n            Modal.prototype._hideModal = function _hideModal() {\\n                var _this11 = this;\\n\\n                this._element.style.display = 'none';\\n                this._element.setAttribute('aria-hidden', 'true');\\n                this._showBackdrop(function () {\\n                    $(document.body).removeClass(ClassName.OPEN);\\n                    _this11._resetAdjustments();\\n                    _this11._resetScrollbar();\\n                    $(_this11._element).trigger(Event.HIDDEN);\\n                });\\n            };\\n\\n            Modal.prototype._removeBackdrop = function _removeBackdrop() {\\n                if (this._backdrop) {\\n                    $(this._backdrop).remove();\\n                    this._backdrop = null;\\n                }\\n            };\\n\\n            Modal.prototype._showBackdrop = function _showBackdrop(callback) {\\n                var _this12 = this;\\n\\n                var animate = $(this._element).hasClass(ClassName.FADE) ? ClassName.FADE : '';\\n\\n                if (this._isShown && this._config.backdrop) {\\n                    var doAnimate = Util.supportsTransitionEnd() && animate;\\n\\n                    this._backdrop = document.createElement('div');\\n                    this._backdrop.className = ClassName.BACKDROP;\\n\\n                    if (animate) {\\n                        $(this._backdrop).addClass(animate);\\n                    }\\n\\n                    $(this._backdrop).appendTo(document.body);\\n\\n                    $(this._element).on(Event.CLICK_DISMISS, function (event) {\\n                        if (_this12._ignoreBackdropClick) {\\n                            _this12._ignoreBackdropClick = false;\\n                            return;\\n                        }\\n                        if (event.target !== event.currentTarget) {\\n                            return;\\n                        }\\n                        if (_this12._config.backdrop === 'static') {\\n                            _this12._element.focus();\\n                        } else {\\n                            _this12.hide();\\n                        }\\n                    });\\n\\n                    if (doAnimate) {\\n                        Util.reflow(this._backdrop);\\n                    }\\n\\n                    $(this._backdrop).addClass(ClassName.IN);\\n\\n                    if (!callback) {\\n                        return;\\n                    }\\n\\n                    if (!doAnimate) {\\n                        callback();\\n                        return;\\n                    }\\n\\n                    $(this._backdrop).one(Util.TRANSITION_END, callback).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\\n                } else if (!this._isShown && this._backdrop) {\\n                    $(this._backdrop).removeClass(ClassName.IN);\\n\\n                    var callbackRemove = function callbackRemove() {\\n                        _this12._removeBackdrop();\\n                        if (callback) {\\n                            callback();\\n                        }\\n                    };\\n\\n                    if (Util.supportsTransitionEnd() && $(this._element).hasClass(ClassName.FADE)) {\\n                        $(this._backdrop).one(Util.TRANSITION_END, callbackRemove).emulateTransitionEnd(BACKDROP_TRANSITION_DURATION);\\n                    } else {\\n                        callbackRemove();\\n                    }\\n                } else if (callback) {\\n                    callback();\\n                }\\n            };\\n\\n            // ----------------------------------------------------------------------\\n            // the following methods are used to handle overflowing modals\\n            // todo (fat): these should probably be refactored out of modal.js\\n            // ----------------------------------------------------------------------\\n\\n            Modal.prototype._handleUpdate = function _handleUpdate() {\\n                this._adjustDialog();\\n            };\\n\\n            Modal.prototype._adjustDialog = function _adjustDialog() {\\n                var isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\\n\\n                if (!this._isBodyOverflowing && isModalOverflowing) {\\n                    this._element.style.paddingLeft = this._scrollbarWidth + 'px';\\n                }\\n\\n                if (this._isBodyOverflowing && !isModalOverflowing) {\\n                    this._element.style.paddingRight = this._scrollbarWidth + 'px';\\n                }\\n            };\\n\\n            Modal.prototype._resetAdjustments = function _resetAdjustments() {\\n                this._element.style.paddingLeft = '';\\n                this._element.style.paddingRight = '';\\n            };\\n\\n            Modal.prototype._checkScrollbar = function _checkScrollbar() {\\n                this._isBodyOverflowing = document.body.clientWidth < window.innerWidth;\\n                this._scrollbarWidth = this._getScrollbarWidth();\\n            };\\n\\n            Modal.prototype._setScrollbar = function _setScrollbar() {\\n                var bodyPadding = parseInt($(Selector.FIXED_CONTENT).css('padding-right') || 0, 10);\\n\\n                this._originalBodyPadding = document.body.style.paddingRight || '';\\n\\n                if (this._isBodyOverflowing) {\\n                    document.body.style.paddingRight = bodyPadding + this._scrollbarWidth + 'px';\\n                }\\n            };\\n\\n            Modal.prototype._resetScrollbar = function _resetScrollbar() {\\n                document.body.style.paddingRight = this._originalBodyPadding;\\n            };\\n\\n            Modal.prototype._getScrollbarWidth = function _getScrollbarWidth() {\\n                // thx d.walsh\\n                var scrollDiv = document.createElement('div');\\n                scrollDiv.className = ClassName.SCROLLBAR_MEASURER;\\n                document.body.appendChild(scrollDiv);\\n                var scrollbarWidth = scrollDiv.offsetWidth - scrollDiv.clientWidth;\\n                document.body.removeChild(scrollDiv);\\n                return scrollbarWidth;\\n            };\\n\\n            // static\\n\\n            Modal._jQueryInterface = function _jQueryInterface(config, relatedTarget) {\\n                return this.each(function () {\\n                    var data = $(this).data(DATA_KEY);\\n                    var _config = $.extend({}, Modal.Default, $(this).data(), (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config);\\n\\n                    if (!data) {\\n                        data = new Modal(this, _config);\\n                        $(this).data(DATA_KEY, data);\\n                    }\\n\\n                    if (typeof config === 'string') {\\n                        if (data[config] === undefined) {\\n                            throw new Error('No method named \\\"' + config + '\\\"');\\n                        }\\n                        data[config](relatedTarget);\\n                    } else if (_config.show) {\\n                        data.show(relatedTarget);\\n                    }\\n                });\\n            };\\n\\n            _createClass(Modal, null, [{\\n                key: 'VERSION',\\n                get: function get() {\\n                    return VERSION;\\n                }\\n            }, {\\n                key: 'Default',\\n                get: function get() {\\n                    return Default;\\n                }\\n            }]);\\n\\n            return Modal;\\n        }();\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Data Api implementation\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\\n            var _this13 = this;\\n\\n            var target = void 0;\\n            var selector = Util.getSelectorFromElement(this);\\n\\n            if (selector) {\\n                target = $(selector)[0];\\n            }\\n\\n            var config = $(target).data(DATA_KEY) ? 'toggle' : $.extend({}, $(target).data(), $(this).data());\\n\\n            if (this.tagName === 'A') {\\n                event.preventDefault();\\n            }\\n\\n            var $target = $(target).one(Event.SHOW, function (showEvent) {\\n                if (showEvent.isDefaultPrevented()) {\\n                    // only register focus restorer if modal will actually get shown\\n                    return;\\n                }\\n\\n                $target.one(Event.HIDDEN, function () {\\n                    if ($(_this13).is(':visible')) {\\n                        _this13.focus();\\n                    }\\n                });\\n            });\\n\\n            Modal._jQueryInterface.call($(target), config, this);\\n        });\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * jQuery\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $.fn[NAME] = Modal._jQueryInterface;\\n        $.fn[NAME].Constructor = Modal;\\n        $.fn[NAME].noConflict = function () {\\n            $.fn[NAME] = JQUERY_NO_CONFLICT;\\n            return Modal._jQueryInterface;\\n        };\\n\\n        return Modal;\\n    }(jQuery);\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): scrollspy.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var ScrollSpy = function ($) {\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Constants\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var NAME = 'scrollspy';\\n        var VERSION = '4.0.0-alpha.5';\\n        var DATA_KEY = 'bs.scrollspy';\\n        var EVENT_KEY = '.' + DATA_KEY;\\n        var DATA_API_KEY = '.data-api';\\n        var JQUERY_NO_CONFLICT = $.fn[NAME];\\n\\n        var Default = {\\n            offset: 10,\\n            method: 'auto',\\n            target: ''\\n        };\\n\\n        var DefaultType = {\\n            offset: 'number',\\n            method: 'string',\\n            target: '(string|element)'\\n        };\\n\\n        var Event = {\\n            ACTIVATE: 'activate' + EVENT_KEY,\\n            SCROLL: 'scroll' + EVENT_KEY,\\n            LOAD_DATA_API: 'load' + EVENT_KEY + DATA_API_KEY\\n        };\\n\\n        var ClassName = {\\n            DROPDOWN_ITEM: 'dropdown-item',\\n            DROPDOWN_MENU: 'dropdown-menu',\\n            NAV_LINK: 'nav-link',\\n            NAV: 'nav',\\n            ACTIVE: 'active'\\n        };\\n\\n        var Selector = {\\n            DATA_SPY: '[data-spy=\\\"scroll\\\"]',\\n            ACTIVE: '.active',\\n            LIST_ITEM: '.list-item',\\n            LI: 'li',\\n            LI_DROPDOWN: 'li.dropdown',\\n            NAV_LINKS: '.nav-link',\\n            DROPDOWN: '.dropdown',\\n            DROPDOWN_ITEMS: '.dropdown-item',\\n            DROPDOWN_TOGGLE: '.dropdown-toggle'\\n        };\\n\\n        var OffsetMethod = {\\n            OFFSET: 'offset',\\n            POSITION: 'position'\\n        };\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Class Definition\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var ScrollSpy = function () {\\n            function ScrollSpy(element, config) {\\n                _classCallCheck(this, ScrollSpy);\\n\\n                this._element = element;\\n                this._scrollElement = element.tagName === 'BODY' ? window : element;\\n                this._config = this._getConfig(config);\\n                this._selector = this._config.target + ' ' + Selector.NAV_LINKS + ',' + (this._config.target + ' ' + Selector.DROPDOWN_ITEMS);\\n                this._offsets = [];\\n                this._targets = [];\\n                this._activeTarget = null;\\n                this._scrollHeight = 0;\\n\\n                $(this._scrollElement).on(Event.SCROLL, $.proxy(this._process, this));\\n\\n                this.refresh();\\n                this._process();\\n            }\\n\\n            // getters\\n\\n            // public\\n\\n            ScrollSpy.prototype.refresh = function refresh() {\\n                var _this14 = this;\\n\\n                var autoMethod = this._scrollElement !== this._scrollElement.window ? OffsetMethod.POSITION : OffsetMethod.OFFSET;\\n\\n                var offsetMethod = this._config.method === 'auto' ? autoMethod : this._config.method;\\n\\n                var offsetBase = offsetMethod === OffsetMethod.POSITION ? this._getScrollTop() : 0;\\n\\n                this._offsets = [];\\n                this._targets = [];\\n\\n                this._scrollHeight = this._getScrollHeight();\\n\\n                var targets = $.makeArray($(this._selector));\\n\\n                targets.map(function (element) {\\n                    var target = void 0;\\n                    var targetSelector = Util.getSelectorFromElement(element);\\n\\n                    if (targetSelector) {\\n                        target = $(targetSelector)[0];\\n                    }\\n\\n                    if (target && (target.offsetWidth || target.offsetHeight)) {\\n                        // todo (fat): remove sketch reliance on jQuery position/offset\\n                        return [$(target)[offsetMethod]().top + offsetBase, targetSelector];\\n                    }\\n                    return null;\\n                }).filter(function (item) {\\n                    return item;\\n                }).sort(function (a, b) {\\n                    return a[0] - b[0];\\n                }).forEach(function (item) {\\n                    _this14._offsets.push(item[0]);\\n                    _this14._targets.push(item[1]);\\n                });\\n            };\\n\\n            ScrollSpy.prototype.dispose = function dispose() {\\n                $.removeData(this._element, DATA_KEY);\\n                $(this._scrollElement).off(EVENT_KEY);\\n\\n                this._element = null;\\n                this._scrollElement = null;\\n                this._config = null;\\n                this._selector = null;\\n                this._offsets = null;\\n                this._targets = null;\\n                this._activeTarget = null;\\n                this._scrollHeight = null;\\n            };\\n\\n            // private\\n\\n            ScrollSpy.prototype._getConfig = function _getConfig(config) {\\n                config = $.extend({}, Default, config);\\n\\n                if (typeof config.target !== 'string') {\\n                    var id = $(config.target).attr('id');\\n                    if (!id) {\\n                        id = Util.getUID(NAME);\\n                        $(config.target).attr('id', id);\\n                    }\\n                    config.target = '#' + id;\\n                }\\n\\n                Util.typeCheckConfig(NAME, config, DefaultType);\\n\\n                return config;\\n            };\\n\\n            ScrollSpy.prototype._getScrollTop = function _getScrollTop() {\\n                return this._scrollElement === window ? this._scrollElement.scrollY : this._scrollElement.scrollTop;\\n            };\\n\\n            ScrollSpy.prototype._getScrollHeight = function _getScrollHeight() {\\n                return this._scrollElement.scrollHeight || Math.max(document.body.scrollHeight, document.documentElement.scrollHeight);\\n            };\\n\\n            ScrollSpy.prototype._process = function _process() {\\n                var scrollTop = this._getScrollTop() + this._config.offset;\\n                var scrollHeight = this._getScrollHeight();\\n                var maxScroll = this._config.offset + scrollHeight - this._scrollElement.offsetHeight;\\n\\n                if (this._scrollHeight !== scrollHeight) {\\n                    this.refresh();\\n                }\\n\\n                if (scrollTop >= maxScroll) {\\n                    var target = this._targets[this._targets.length - 1];\\n\\n                    if (this._activeTarget !== target) {\\n                        this._activate(target);\\n                    }\\n                }\\n\\n                if (this._activeTarget && scrollTop < this._offsets[0]) {\\n                    this._activeTarget = null;\\n                    this._clear();\\n                    return;\\n                }\\n\\n                for (var i = this._offsets.length; i--;) {\\n                    var isActiveTarget = this._activeTarget !== this._targets[i] && scrollTop >= this._offsets[i] && (this._offsets[i + 1] === undefined || scrollTop < this._offsets[i + 1]);\\n\\n                    if (isActiveTarget) {\\n                        this._activate(this._targets[i]);\\n                    }\\n                }\\n            };\\n\\n            ScrollSpy.prototype._activate = function _activate(target) {\\n                this._activeTarget = target;\\n\\n                this._clear();\\n\\n                var queries = this._selector.split(',');\\n                queries = queries.map(function (selector) {\\n                    return selector + '[data-target=\\\"' + target + '\\\"],' + (selector + '[href=\\\"' + target + '\\\"]');\\n                });\\n\\n                var $link = $(queries.join(','));\\n\\n                if ($link.hasClass(ClassName.DROPDOWN_ITEM)) {\\n                    $link.closest(Selector.DROPDOWN).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\\n                    $link.addClass(ClassName.ACTIVE);\\n                } else {\\n                    // todo (fat) this is kinda sus...\\n                    // recursively add actives to tested nav-links\\n                    $link.parents(Selector.LI).find(Selector.NAV_LINKS).addClass(ClassName.ACTIVE);\\n                }\\n\\n                $(this._scrollElement).trigger(Event.ACTIVATE, {\\n                    relatedTarget: target\\n                });\\n            };\\n\\n            ScrollSpy.prototype._clear = function _clear() {\\n                $(this._selector).filter(Selector.ACTIVE).removeClass(ClassName.ACTIVE);\\n            };\\n\\n            // static\\n\\n            ScrollSpy._jQueryInterface = function _jQueryInterface(config) {\\n                return this.each(function () {\\n                    var data = $(this).data(DATA_KEY);\\n                    var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' && config || null;\\n\\n                    if (!data) {\\n                        data = new ScrollSpy(this, _config);\\n                        $(this).data(DATA_KEY, data);\\n                    }\\n\\n                    if (typeof config === 'string') {\\n                        if (data[config] === undefined) {\\n                            throw new Error('No method named \\\"' + config + '\\\"');\\n                        }\\n                        data[config]();\\n                    }\\n                });\\n            };\\n\\n            _createClass(ScrollSpy, null, [{\\n                key: 'VERSION',\\n                get: function get() {\\n                    return VERSION;\\n                }\\n            }, {\\n                key: 'Default',\\n                get: function get() {\\n                    return Default;\\n                }\\n            }]);\\n\\n            return ScrollSpy;\\n        }();\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Data Api implementation\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $(window).on(Event.LOAD_DATA_API, function () {\\n            var scrollSpys = $.makeArray($(Selector.DATA_SPY));\\n\\n            for (var i = scrollSpys.length; i--;) {\\n                var $spy = $(scrollSpys[i]);\\n                ScrollSpy._jQueryInterface.call($spy, $spy.data());\\n            }\\n        });\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * jQuery\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $.fn[NAME] = ScrollSpy._jQueryInterface;\\n        $.fn[NAME].Constructor = ScrollSpy;\\n        $.fn[NAME].noConflict = function () {\\n            $.fn[NAME] = JQUERY_NO_CONFLICT;\\n            return ScrollSpy._jQueryInterface;\\n        };\\n\\n        return ScrollSpy;\\n    }(jQuery);\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): tab.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var Tab = function ($) {\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Constants\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var NAME = 'tab';\\n        var VERSION = '4.0.0-alpha.5';\\n        var DATA_KEY = 'bs.tab';\\n        var EVENT_KEY = '.' + DATA_KEY;\\n        var DATA_API_KEY = '.data-api';\\n        var JQUERY_NO_CONFLICT = $.fn[NAME];\\n        var TRANSITION_DURATION = 150;\\n\\n        var Event = {\\n            HIDE: 'hide' + EVENT_KEY,\\n            HIDDEN: 'hidden' + EVENT_KEY,\\n            SHOW: 'show' + EVENT_KEY,\\n            SHOWN: 'shown' + EVENT_KEY,\\n            CLICK_DATA_API: 'click' + EVENT_KEY + DATA_API_KEY\\n        };\\n\\n        var ClassName = {\\n            DROPDOWN_MENU: 'dropdown-menu',\\n            ACTIVE: 'active',\\n            FADE: 'fade',\\n            IN: 'in'\\n        };\\n\\n        var Selector = {\\n            A: 'a',\\n            LI: 'li',\\n            DROPDOWN: '.dropdown',\\n            UL: 'ul:not(.dropdown-menu)',\\n            FADE_CHILD: '> .nav-item .fade, > .fade',\\n            ACTIVE: '.active',\\n            ACTIVE_CHILD: '> .nav-item > .active, > .active',\\n            DATA_TOGGLE: '[data-toggle=\\\"tab\\\"], [data-toggle=\\\"pill\\\"]',\\n            DROPDOWN_TOGGLE: '.dropdown-toggle',\\n            DROPDOWN_ACTIVE_CHILD: '> .dropdown-menu .active'\\n        };\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Class Definition\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var Tab = function () {\\n            function Tab(element) {\\n                _classCallCheck(this, Tab);\\n\\n                this._element = element;\\n            }\\n\\n            // getters\\n\\n            // public\\n\\n            Tab.prototype.show = function show() {\\n                var _this15 = this;\\n\\n                if (this._element.parentNode && this._element.parentNode.nodeType === Node.ELEMENT_NODE && $(this._element).hasClass(ClassName.ACTIVE)) {\\n                    return;\\n                }\\n\\n                var target = void 0;\\n                var previous = void 0;\\n                var ulElement = $(this._element).closest(Selector.UL)[0];\\n                var selector = Util.getSelectorFromElement(this._element);\\n\\n                if (ulElement) {\\n                    previous = $.makeArray($(ulElement).find(Selector.ACTIVE));\\n                    previous = previous[previous.length - 1];\\n                }\\n\\n                var hideEvent = $.Event(Event.HIDE, {\\n                    relatedTarget: this._element\\n                });\\n\\n                var showEvent = $.Event(Event.SHOW, {\\n                    relatedTarget: previous\\n                });\\n\\n                if (previous) {\\n                    $(previous).trigger(hideEvent);\\n                }\\n\\n                $(this._element).trigger(showEvent);\\n\\n                if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) {\\n                    return;\\n                }\\n\\n                if (selector) {\\n                    target = $(selector)[0];\\n                }\\n\\n                this._activate(this._element, ulElement);\\n\\n                var complete = function complete() {\\n                    var hiddenEvent = $.Event(Event.HIDDEN, {\\n                        relatedTarget: _this15._element\\n                    });\\n\\n                    var shownEvent = $.Event(Event.SHOWN, {\\n                        relatedTarget: previous\\n                    });\\n\\n                    $(previous).trigger(hiddenEvent);\\n                    $(_this15._element).trigger(shownEvent);\\n                };\\n\\n                if (target) {\\n                    this._activate(target, target.parentNode, complete);\\n                } else {\\n                    complete();\\n                }\\n            };\\n\\n            Tab.prototype.dispose = function dispose() {\\n                $.removeClass(this._element, DATA_KEY);\\n                this._element = null;\\n            };\\n\\n            // private\\n\\n            Tab.prototype._activate = function _activate(element, container, callback) {\\n                var active = $(container).find(Selector.ACTIVE_CHILD)[0];\\n                var isTransitioning = callback && Util.supportsTransitionEnd() && (active && $(active).hasClass(ClassName.FADE) || Boolean($(container).find(Selector.FADE_CHILD)[0]));\\n\\n                var complete = $.proxy(this._transitionComplete, this, element, active, isTransitioning, callback);\\n\\n                if (active && isTransitioning) {\\n                    $(active).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\\n                } else {\\n                    complete();\\n                }\\n\\n                if (active) {\\n                    $(active).removeClass(ClassName.IN);\\n                }\\n            };\\n\\n            Tab.prototype._transitionComplete = function _transitionComplete(element, active, isTransitioning, callback) {\\n                if (active) {\\n                    $(active).removeClass(ClassName.ACTIVE);\\n\\n                    var dropdownChild = $(active).find(Selector.DROPDOWN_ACTIVE_CHILD)[0];\\n\\n                    if (dropdownChild) {\\n                        $(dropdownChild).removeClass(ClassName.ACTIVE);\\n                    }\\n\\n                    active.setAttribute('aria-expanded', false);\\n                }\\n\\n                $(element).addClass(ClassName.ACTIVE);\\n                element.setAttribute('aria-expanded', true);\\n\\n                if (isTransitioning) {\\n                    Util.reflow(element);\\n                    $(element).addClass(ClassName.IN);\\n                } else {\\n                    $(element).removeClass(ClassName.FADE);\\n                }\\n\\n                if (element.parentNode && $(element.parentNode).hasClass(ClassName.DROPDOWN_MENU)) {\\n\\n                    var dropdownElement = $(element).closest(Selector.DROPDOWN)[0];\\n                    if (dropdownElement) {\\n                        $(dropdownElement).find(Selector.DROPDOWN_TOGGLE).addClass(ClassName.ACTIVE);\\n                    }\\n\\n                    element.setAttribute('aria-expanded', true);\\n                }\\n\\n                if (callback) {\\n                    callback();\\n                }\\n            };\\n\\n            // static\\n\\n            Tab._jQueryInterface = function _jQueryInterface(config) {\\n                return this.each(function () {\\n                    var $this = $(this);\\n                    var data = $this.data(DATA_KEY);\\n\\n                    if (!data) {\\n                        data = data = new Tab(this);\\n                        $this.data(DATA_KEY, data);\\n                    }\\n\\n                    if (typeof config === 'string') {\\n                        if (data[config] === undefined) {\\n                            throw new Error('No method named \\\"' + config + '\\\"');\\n                        }\\n                        data[config]();\\n                    }\\n                });\\n            };\\n\\n            _createClass(Tab, null, [{\\n                key: 'VERSION',\\n                get: function get() {\\n                    return VERSION;\\n                }\\n            }]);\\n\\n            return Tab;\\n        }();\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Data Api implementation\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $(document).on(Event.CLICK_DATA_API, Selector.DATA_TOGGLE, function (event) {\\n            event.preventDefault();\\n            Tab._jQueryInterface.call($(this), 'show');\\n        });\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * jQuery\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $.fn[NAME] = Tab._jQueryInterface;\\n        $.fn[NAME].Constructor = Tab;\\n        $.fn[NAME].noConflict = function () {\\n            $.fn[NAME] = JQUERY_NO_CONFLICT;\\n            return Tab._jQueryInterface;\\n        };\\n\\n        return Tab;\\n    }(jQuery);\\n\\n    /* global Tether */\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): tooltip.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var Tooltip = function ($) {\\n\\n        /**\\n         * Check for Tether dependency\\n         * Tether - http://tether.io/\\n         */\\n        if (window.Tether === undefined) {\\n            throw new Error('Bootstrap tooltips require Tether (http://tether.io/)');\\n        }\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Constants\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var NAME = 'tooltip';\\n        var VERSION = '4.0.0-alpha.5';\\n        var DATA_KEY = 'bs.tooltip';\\n        var EVENT_KEY = '.' + DATA_KEY;\\n        var JQUERY_NO_CONFLICT = $.fn[NAME];\\n        var TRANSITION_DURATION = 150;\\n        var CLASS_PREFIX = 'bs-tether';\\n\\n        var Default = {\\n            animation: true,\\n            template: '<div class=\\\"tooltip\\\" role=\\\"tooltip\\\">' + '<div class=\\\"tooltip-inner\\\"></div></div>',\\n            trigger: 'hover focus',\\n            title: '',\\n            delay: 0,\\n            html: false,\\n            selector: false,\\n            placement: 'top',\\n            offset: '0 0',\\n            constraints: []\\n        };\\n\\n        var DefaultType = {\\n            animation: 'boolean',\\n            template: 'string',\\n            title: '(string|element|function)',\\n            trigger: 'string',\\n            delay: '(number|object)',\\n            html: 'boolean',\\n            selector: '(string|boolean)',\\n            placement: '(string|function)',\\n            offset: 'string',\\n            constraints: 'array'\\n        };\\n\\n        var AttachmentMap = {\\n            TOP: 'bottom center',\\n            RIGHT: 'middle left',\\n            BOTTOM: 'top center',\\n            LEFT: 'middle right'\\n        };\\n\\n        var HoverState = {\\n            IN: 'in',\\n            OUT: 'out'\\n        };\\n\\n        var Event = {\\n            HIDE: 'hide' + EVENT_KEY,\\n            HIDDEN: 'hidden' + EVENT_KEY,\\n            SHOW: 'show' + EVENT_KEY,\\n            SHOWN: 'shown' + EVENT_KEY,\\n            INSERTED: 'inserted' + EVENT_KEY,\\n            CLICK: 'click' + EVENT_KEY,\\n            FOCUSIN: 'focusin' + EVENT_KEY,\\n            FOCUSOUT: 'focusout' + EVENT_KEY,\\n            MOUSEENTER: 'mouseenter' + EVENT_KEY,\\n            MOUSELEAVE: 'mouseleave' + EVENT_KEY\\n        };\\n\\n        var ClassName = {\\n            FADE: 'fade',\\n            IN: 'in'\\n        };\\n\\n        var Selector = {\\n            TOOLTIP: '.tooltip',\\n            TOOLTIP_INNER: '.tooltip-inner'\\n        };\\n\\n        var TetherClass = {\\n            element: false,\\n            enabled: false\\n        };\\n\\n        var Trigger = {\\n            HOVER: 'hover',\\n            FOCUS: 'focus',\\n            CLICK: 'click',\\n            MANUAL: 'manual'\\n        };\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Class Definition\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var Tooltip = function () {\\n            function Tooltip(element, config) {\\n                _classCallCheck(this, Tooltip);\\n\\n                // private\\n                this._isEnabled = true;\\n                this._timeout = 0;\\n                this._hoverState = '';\\n                this._activeTrigger = {};\\n                this._tether = null;\\n\\n                // protected\\n                this.element = element;\\n                this.config = this._getConfig(config);\\n                this.tip = null;\\n\\n                this._setListeners();\\n            }\\n\\n            // getters\\n\\n            // public\\n\\n            Tooltip.prototype.enable = function enable() {\\n                this._isEnabled = true;\\n            };\\n\\n            Tooltip.prototype.disable = function disable() {\\n                this._isEnabled = false;\\n            };\\n\\n            Tooltip.prototype.toggleEnabled = function toggleEnabled() {\\n                this._isEnabled = !this._isEnabled;\\n            };\\n\\n            Tooltip.prototype.toggle = function toggle(event) {\\n                if (event) {\\n                    var dataKey = this.constructor.DATA_KEY;\\n                    var context = $(event.currentTarget).data(dataKey);\\n\\n                    if (!context) {\\n                        context = new this.constructor(event.currentTarget, this._getDelegateConfig());\\n                        $(event.currentTarget).data(dataKey, context);\\n                    }\\n\\n                    context._activeTrigger.click = !context._activeTrigger.click;\\n\\n                    if (context._isWithActiveTrigger()) {\\n                        context._enter(null, context);\\n                    } else {\\n                        context._leave(null, context);\\n                    }\\n                } else {\\n\\n                    if ($(this.getTipElement()).hasClass(ClassName.IN)) {\\n                        this._leave(null, this);\\n                        return;\\n                    }\\n\\n                    this._enter(null, this);\\n                }\\n            };\\n\\n            Tooltip.prototype.dispose = function dispose() {\\n                clearTimeout(this._timeout);\\n\\n                this.cleanupTether();\\n\\n                $.removeData(this.element, this.constructor.DATA_KEY);\\n\\n                $(this.element).off(this.constructor.EVENT_KEY);\\n\\n                if (this.tip) {\\n                    $(this.tip).remove();\\n                }\\n\\n                this._isEnabled = null;\\n                this._timeout = null;\\n                this._hoverState = null;\\n                this._activeTrigger = null;\\n                this._tether = null;\\n\\n                this.element = null;\\n                this.config = null;\\n                this.tip = null;\\n            };\\n\\n            Tooltip.prototype.show = function show() {\\n                var _this16 = this;\\n\\n                var showEvent = $.Event(this.constructor.Event.SHOW);\\n\\n                if (this.isWithContent() && this._isEnabled) {\\n                    $(this.element).trigger(showEvent);\\n\\n                    var isInTheDom = $.contains(this.element.ownerDocument.documentElement, this.element);\\n\\n                    if (showEvent.isDefaultPrevented() || !isInTheDom) {\\n                        return;\\n                    }\\n\\n                    var tip = this.getTipElement();\\n                    var tipId = Util.getUID(this.constructor.NAME);\\n\\n                    tip.setAttribute('id', tipId);\\n                    this.element.setAttribute('aria-describedby', tipId);\\n\\n                    this.setContent();\\n\\n                    if (this.config.animation) {\\n                        $(tip).addClass(ClassName.FADE);\\n                    }\\n\\n                    var placement = typeof this.config.placement === 'function' ? this.config.placement.call(this, tip, this.element) : this.config.placement;\\n\\n                    var attachment = this._getAttachment(placement);\\n\\n                    $(tip).data(this.constructor.DATA_KEY, this).appendTo(document.body);\\n\\n                    $(this.element).trigger(this.constructor.Event.INSERTED);\\n\\n                    this._tether = new Tether({\\n                        attachment: attachment,\\n                        element: tip,\\n                        target: this.element,\\n                        classes: TetherClass,\\n                        classPrefix: CLASS_PREFIX,\\n                        offset: this.config.offset,\\n                        constraints: this.config.constraints,\\n                        addTargetClasses: false\\n                    });\\n\\n                    Util.reflow(tip);\\n                    this._tether.position();\\n\\n                    $(tip).addClass(ClassName.IN);\\n\\n                    var complete = function complete() {\\n                        var prevHoverState = _this16._hoverState;\\n                        _this16._hoverState = null;\\n\\n                        $(_this16.element).trigger(_this16.constructor.Event.SHOWN);\\n\\n                        if (prevHoverState === HoverState.OUT) {\\n                            _this16._leave(null, _this16);\\n                        }\\n                    };\\n\\n                    if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\\n                        $(this.tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(Tooltip._TRANSITION_DURATION);\\n                        return;\\n                    }\\n\\n                    complete();\\n                }\\n            };\\n\\n            Tooltip.prototype.hide = function hide(callback) {\\n                var _this17 = this;\\n\\n                var tip = this.getTipElement();\\n                var hideEvent = $.Event(this.constructor.Event.HIDE);\\n                var complete = function complete() {\\n                    if (_this17._hoverState !== HoverState.IN && tip.parentNode) {\\n                        tip.parentNode.removeChild(tip);\\n                    }\\n\\n                    _this17.element.removeAttribute('aria-describedby');\\n                    $(_this17.element).trigger(_this17.constructor.Event.HIDDEN);\\n                    _this17.cleanupTether();\\n\\n                    if (callback) {\\n                        callback();\\n                    }\\n                };\\n\\n                $(this.element).trigger(hideEvent);\\n\\n                if (hideEvent.isDefaultPrevented()) {\\n                    return;\\n                }\\n\\n                $(tip).removeClass(ClassName.IN);\\n\\n                if (Util.supportsTransitionEnd() && $(this.tip).hasClass(ClassName.FADE)) {\\n\\n                    $(tip).one(Util.TRANSITION_END, complete).emulateTransitionEnd(TRANSITION_DURATION);\\n                } else {\\n                    complete();\\n                }\\n\\n                this._hoverState = '';\\n            };\\n\\n            // protected\\n\\n            Tooltip.prototype.isWithContent = function isWithContent() {\\n                return Boolean(this.getTitle());\\n            };\\n\\n            Tooltip.prototype.getTipElement = function getTipElement() {\\n                return this.tip = this.tip || $(this.config.template)[0];\\n            };\\n\\n            Tooltip.prototype.setContent = function setContent() {\\n                var $tip = $(this.getTipElement());\\n\\n                this.setElementContent($tip.find(Selector.TOOLTIP_INNER), this.getTitle());\\n\\n                $tip.removeClass(ClassName.FADE).removeClass(ClassName.IN);\\n\\n                this.cleanupTether();\\n            };\\n\\n            Tooltip.prototype.setElementContent = function setElementContent($element, content) {\\n                var html = this.config.html;\\n                if ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) === 'object' && (content.nodeType || content.jquery)) {\\n                    // content is a DOM node or a jQuery\\n                    if (html) {\\n                        if (!$(content).parent().is($element)) {\\n                            $element.empty().append(content);\\n                        }\\n                    } else {\\n                        $element.text($(content).text());\\n                    }\\n                } else {\\n                    $element[html ? 'html' : 'text'](content);\\n                }\\n            };\\n\\n            Tooltip.prototype.getTitle = function getTitle() {\\n                var title = this.element.getAttribute('data-original-title');\\n\\n                if (!title) {\\n                    title = typeof this.config.title === 'function' ? this.config.title.call(this.element) : this.config.title;\\n                }\\n\\n                return title;\\n            };\\n\\n            Tooltip.prototype.cleanupTether = function cleanupTether() {\\n                if (this._tether) {\\n                    this._tether.destroy();\\n                }\\n            };\\n\\n            // private\\n\\n            Tooltip.prototype._getAttachment = function _getAttachment(placement) {\\n                return AttachmentMap[placement.toUpperCase()];\\n            };\\n\\n            Tooltip.prototype._setListeners = function _setListeners() {\\n                var _this18 = this;\\n\\n                var triggers = this.config.trigger.split(' ');\\n\\n                triggers.forEach(function (trigger) {\\n                    if (trigger === 'click') {\\n                        $(_this18.element).on(_this18.constructor.Event.CLICK, _this18.config.selector, $.proxy(_this18.toggle, _this18));\\n                    } else if (trigger !== Trigger.MANUAL) {\\n                        var eventIn = trigger === Trigger.HOVER ? _this18.constructor.Event.MOUSEENTER : _this18.constructor.Event.FOCUSIN;\\n                        var eventOut = trigger === Trigger.HOVER ? _this18.constructor.Event.MOUSELEAVE : _this18.constructor.Event.FOCUSOUT;\\n\\n                        $(_this18.element).on(eventIn, _this18.config.selector, $.proxy(_this18._enter, _this18)).on(eventOut, _this18.config.selector, $.proxy(_this18._leave, _this18));\\n                    }\\n                });\\n\\n                if (this.config.selector) {\\n                    this.config = $.extend({}, this.config, {\\n                        trigger: 'manual',\\n                        selector: ''\\n                    });\\n                } else {\\n                    this._fixTitle();\\n                }\\n            };\\n\\n            Tooltip.prototype._fixTitle = function _fixTitle() {\\n                var titleType = _typeof(this.element.getAttribute('data-original-title'));\\n                if (this.element.getAttribute('title') || titleType !== 'string') {\\n                    this.element.setAttribute('data-original-title', this.element.getAttribute('title') || '');\\n                    this.element.setAttribute('title', '');\\n                }\\n            };\\n\\n            Tooltip.prototype._enter = function _enter(event, context) {\\n                var dataKey = this.constructor.DATA_KEY;\\n\\n                context = context || $(event.currentTarget).data(dataKey);\\n\\n                if (!context) {\\n                    context = new this.constructor(event.currentTarget, this._getDelegateConfig());\\n                    $(event.currentTarget).data(dataKey, context);\\n                }\\n\\n                if (event) {\\n                    context._activeTrigger[event.type === 'focusin' ? Trigger.FOCUS : Trigger.HOVER] = true;\\n                }\\n\\n                if ($(context.getTipElement()).hasClass(ClassName.IN) || context._hoverState === HoverState.IN) {\\n                    context._hoverState = HoverState.IN;\\n                    return;\\n                }\\n\\n                clearTimeout(context._timeout);\\n\\n                context._hoverState = HoverState.IN;\\n\\n                if (!context.config.delay || !context.config.delay.show) {\\n                    context.show();\\n                    return;\\n                }\\n\\n                context._timeout = setTimeout(function () {\\n                    if (context._hoverState === HoverState.IN) {\\n                        context.show();\\n                    }\\n                }, context.config.delay.show);\\n            };\\n\\n            Tooltip.prototype._leave = function _leave(event, context) {\\n                var dataKey = this.constructor.DATA_KEY;\\n\\n                context = context || $(event.currentTarget).data(dataKey);\\n\\n                if (!context) {\\n                    context = new this.constructor(event.currentTarget, this._getDelegateConfig());\\n                    $(event.currentTarget).data(dataKey, context);\\n                }\\n\\n                if (event) {\\n                    context._activeTrigger[event.type === 'focusout' ? Trigger.FOCUS : Trigger.HOVER] = false;\\n                }\\n\\n                if (context._isWithActiveTrigger()) {\\n                    return;\\n                }\\n\\n                clearTimeout(context._timeout);\\n\\n                context._hoverState = HoverState.OUT;\\n\\n                if (!context.config.delay || !context.config.delay.hide) {\\n                    context.hide();\\n                    return;\\n                }\\n\\n                context._timeout = setTimeout(function () {\\n                    if (context._hoverState === HoverState.OUT) {\\n                        context.hide();\\n                    }\\n                }, context.config.delay.hide);\\n            };\\n\\n            Tooltip.prototype._isWithActiveTrigger = function _isWithActiveTrigger() {\\n                for (var trigger in this._activeTrigger) {\\n                    if (this._activeTrigger[trigger]) {\\n                        return true;\\n                    }\\n                }\\n\\n                return false;\\n            };\\n\\n            Tooltip.prototype._getConfig = function _getConfig(config) {\\n                config = $.extend({}, this.constructor.Default, $(this.element).data(), config);\\n\\n                if (config.delay && typeof config.delay === 'number') {\\n                    config.delay = {\\n                        show: config.delay,\\n                        hide: config.delay\\n                    };\\n                }\\n\\n                Util.typeCheckConfig(NAME, config, this.constructor.DefaultType);\\n\\n                return config;\\n            };\\n\\n            Tooltip.prototype._getDelegateConfig = function _getDelegateConfig() {\\n                var config = {};\\n\\n                if (this.config) {\\n                    for (var key in this.config) {\\n                        if (this.constructor.Default[key] !== this.config[key]) {\\n                            config[key] = this.config[key];\\n                        }\\n                    }\\n                }\\n\\n                return config;\\n            };\\n\\n            // static\\n\\n            Tooltip._jQueryInterface = function _jQueryInterface(config) {\\n                return this.each(function () {\\n                    var data = $(this).data(DATA_KEY);\\n                    var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' ? config : null;\\n\\n                    if (!data && /dispose|hide/.test(config)) {\\n                        return;\\n                    }\\n\\n                    if (!data) {\\n                        data = new Tooltip(this, _config);\\n                        $(this).data(DATA_KEY, data);\\n                    }\\n\\n                    if (typeof config === 'string') {\\n                        if (data[config] === undefined) {\\n                            throw new Error('No method named \\\"' + config + '\\\"');\\n                        }\\n                        data[config]();\\n                    }\\n                });\\n            };\\n\\n            _createClass(Tooltip, null, [{\\n                key: 'VERSION',\\n                get: function get() {\\n                    return VERSION;\\n                }\\n            }, {\\n                key: 'Default',\\n                get: function get() {\\n                    return Default;\\n                }\\n            }, {\\n                key: 'NAME',\\n                get: function get() {\\n                    return NAME;\\n                }\\n            }, {\\n                key: 'DATA_KEY',\\n                get: function get() {\\n                    return DATA_KEY;\\n                }\\n            }, {\\n                key: 'Event',\\n                get: function get() {\\n                    return Event;\\n                }\\n            }, {\\n                key: 'EVENT_KEY',\\n                get: function get() {\\n                    return EVENT_KEY;\\n                }\\n            }, {\\n                key: 'DefaultType',\\n                get: function get() {\\n                    return DefaultType;\\n                }\\n            }]);\\n\\n            return Tooltip;\\n        }();\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * jQuery\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $.fn[NAME] = Tooltip._jQueryInterface;\\n        $.fn[NAME].Constructor = Tooltip;\\n        $.fn[NAME].noConflict = function () {\\n            $.fn[NAME] = JQUERY_NO_CONFLICT;\\n            return Tooltip._jQueryInterface;\\n        };\\n\\n        return Tooltip;\\n    }(jQuery);\\n\\n    /**\\n     * --------------------------------------------------------------------------\\n     * Bootstrap (v4.0.0-alpha.5): popover.js\\n     * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\\n     * --------------------------------------------------------------------------\\n     */\\n\\n    var Popover = function ($) {\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Constants\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var NAME = 'popover';\\n        var VERSION = '4.0.0-alpha.5';\\n        var DATA_KEY = 'bs.popover';\\n        var EVENT_KEY = '.' + DATA_KEY;\\n        var JQUERY_NO_CONFLICT = $.fn[NAME];\\n\\n        var Default = $.extend({}, Tooltip.Default, {\\n            placement: 'right',\\n            trigger: 'click',\\n            content: '',\\n            template: '<div class=\\\"popover\\\" role=\\\"tooltip\\\">' + '<h3 class=\\\"popover-title\\\"></h3>' + '<div class=\\\"popover-content\\\"></div></div>'\\n        });\\n\\n        var DefaultType = $.extend({}, Tooltip.DefaultType, {\\n            content: '(string|element|function)'\\n        });\\n\\n        var ClassName = {\\n            FADE: 'fade',\\n            IN: 'in'\\n        };\\n\\n        var Selector = {\\n            TITLE: '.popover-title',\\n            CONTENT: '.popover-content'\\n        };\\n\\n        var Event = {\\n            HIDE: 'hide' + EVENT_KEY,\\n            HIDDEN: 'hidden' + EVENT_KEY,\\n            SHOW: 'show' + EVENT_KEY,\\n            SHOWN: 'shown' + EVENT_KEY,\\n            INSERTED: 'inserted' + EVENT_KEY,\\n            CLICK: 'click' + EVENT_KEY,\\n            FOCUSIN: 'focusin' + EVENT_KEY,\\n            FOCUSOUT: 'focusout' + EVENT_KEY,\\n            MOUSEENTER: 'mouseenter' + EVENT_KEY,\\n            MOUSELEAVE: 'mouseleave' + EVENT_KEY\\n        };\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * Class Definition\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        var Popover = function (_Tooltip) {\\n            _inherits(Popover, _Tooltip);\\n\\n            function Popover() {\\n                _classCallCheck(this, Popover);\\n\\n                return _possibleConstructorReturn(this, _Tooltip.apply(this, arguments));\\n            }\\n\\n            // overrides\\n\\n            Popover.prototype.isWithContent = function isWithContent() {\\n                return this.getTitle() || this._getContent();\\n            };\\n\\n            Popover.prototype.getTipElement = function getTipElement() {\\n                return this.tip = this.tip || $(this.config.template)[0];\\n            };\\n\\n            Popover.prototype.setContent = function setContent() {\\n                var $tip = $(this.getTipElement());\\n\\n                // we use append for html objects to maintain js events\\n                this.setElementContent($tip.find(Selector.TITLE), this.getTitle());\\n                this.setElementContent($tip.find(Selector.CONTENT), this._getContent());\\n\\n                $tip.removeClass(ClassName.FADE).removeClass(ClassName.IN);\\n\\n                this.cleanupTether();\\n            };\\n\\n            // private\\n\\n            Popover.prototype._getContent = function _getContent() {\\n                return this.element.getAttribute('data-content') || (typeof this.config.content === 'function' ? this.config.content.call(this.element) : this.config.content);\\n            };\\n\\n            // static\\n\\n            Popover._jQueryInterface = function _jQueryInterface(config) {\\n                return this.each(function () {\\n                    var data = $(this).data(DATA_KEY);\\n                    var _config = (typeof config === 'undefined' ? 'undefined' : _typeof(config)) === 'object' ? config : null;\\n\\n                    if (!data && /destroy|hide/.test(config)) {\\n                        return;\\n                    }\\n\\n                    if (!data) {\\n                        data = new Popover(this, _config);\\n                        $(this).data(DATA_KEY, data);\\n                    }\\n\\n                    if (typeof config === 'string') {\\n                        if (data[config] === undefined) {\\n                            throw new Error('No method named \\\"' + config + '\\\"');\\n                        }\\n                        data[config]();\\n                    }\\n                });\\n            };\\n\\n            _createClass(Popover, null, [{\\n                key: 'VERSION',\\n\\n\\n                // getters\\n\\n                get: function get() {\\n                    return VERSION;\\n                }\\n            }, {\\n                key: 'Default',\\n                get: function get() {\\n                    return Default;\\n                }\\n            }, {\\n                key: 'NAME',\\n                get: function get() {\\n                    return NAME;\\n                }\\n            }, {\\n                key: 'DATA_KEY',\\n                get: function get() {\\n                    return DATA_KEY;\\n                }\\n            }, {\\n                key: 'Event',\\n                get: function get() {\\n                    return Event;\\n                }\\n            }, {\\n                key: 'EVENT_KEY',\\n                get: function get() {\\n                    return EVENT_KEY;\\n                }\\n            }, {\\n                key: 'DefaultType',\\n                get: function get() {\\n                    return DefaultType;\\n                }\\n            }]);\\n\\n            return Popover;\\n        }(Tooltip);\\n\\n        /**\\n         * ------------------------------------------------------------------------\\n         * jQuery\\n         * ------------------------------------------------------------------------\\n         */\\n\\n        $.fn[NAME] = Popover._jQueryInterface;\\n        $.fn[NAME].Constructor = Popover;\\n        $.fn[NAME].noConflict = function () {\\n            $.fn[NAME] = JQUERY_NO_CONFLICT;\\n            return Popover._jQueryInterface;\\n        };\\n\\n        return Popover;\\n    }(jQuery);\\n\\n}();\\n\\n// ┌───────────────────────────────────────────────────────────────────────────────────────────────────────┐ \\\\\\\\\\n// │ Raphaël 2.2.0 - JavaScript Vector Library                                                             │ \\\\\\\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\n// │ Copyright © 2008-2016 Dmitry Baranovskiy (http://raphaeljs.com)                                       │ \\\\\\\\\\n// │ Copyright © 2008-2016 Sencha Labs (http://sencha.com)                                                 │ \\\\\\\\\\n// ├───────────────────────────────────────────────────────────────────────────────────────────────────────┤ \\\\\\\\\\n// │ Licensed under the MIT (https://github.com/DmitryBaranovskiy/raphael/blob/master/license.txt) license.│ \\\\\\\\\\n// └───────────────────────────────────────────────────────────────────────────────────────────────────────┘ \\\\\\\\\\n\\n(function webpackUniversalModuleDefinition(root, factory) {\\n    if (typeof exports === 'object' && typeof module === 'object')\\n        module.exports = factory();\\n    else if (typeof define === 'function' && define.amd)\\n        define([], factory);\\n    else if (typeof exports === 'object')\\n        exports[\\\"Raphael\\\"] = factory();\\n    else\\n        root[\\\"Raphael\\\"] = factory();\\n})(this, function () {\\n    return /******/ (function (modules) { // webpackBootstrap\\n        /******/ \\t// The module cache\\n        /******/\\n        var installedModules = {};\\n\\n        /******/ \\t// The require function\\n        /******/\\n        function __webpack_require__(moduleId) {\\n\\n            /******/ \\t\\t// Check if module is in cache\\n            /******/\\n            if (installedModules[moduleId])\\n            /******/            return installedModules[moduleId].exports;\\n\\n            /******/ \\t\\t// Create a new module (and put it into the cache)\\n            /******/\\n            var module = installedModules[moduleId] = {\\n                /******/            exports: {},\\n                /******/            id: moduleId,\\n                /******/            loaded: false\\n                /******/\\n            };\\n\\n            /******/ \\t\\t// Execute the module function\\n            /******/\\n            modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n            /******/ \\t\\t// Flag the module as loaded\\n            /******/\\n            module.loaded = true;\\n\\n            /******/ \\t\\t// Return the exports of the module\\n            /******/\\n            return module.exports;\\n            /******/\\n        }\\n\\n\\n        /******/ \\t// expose the modules object (__webpack_modules__)\\n        /******/\\n        __webpack_require__.m = modules;\\n\\n        /******/ \\t// expose the module cache\\n        /******/\\n        __webpack_require__.c = installedModules;\\n\\n        /******/ \\t// __webpack_public_path__\\n        /******/\\n        __webpack_require__.p = \\\"\\\";\\n\\n        /******/ \\t// Load entry module and return exports\\n        /******/\\n        return __webpack_require__(0);\\n        /******/\\n    })\\n    /************************************************************************/\\n    /******/([\\n        /* 0 */\\n        /***/ function (module, exports, __webpack_require__) {\\n\\n            var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_RESULT__ = function (R) {\\n\\n                return R;\\n\\n            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n\\n            /***/\\n        },\\n        /* 1 */\\n        /***/ function (module, exports, __webpack_require__) {\\n\\n            var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (eve) {\\n\\n                /*\\\\\\n                 * Raphael\\n                 [ method ]\\n                 **\\n                 * Creates a canvas object on which to draw.\\n                 * You must do this first, as all future calls to drawing methods\\n                 * from this instance will be bound to this canvas.\\n                 > Parameters\\n                 **\\n                 - container (HTMLElement|string) DOM element or its ID which is going to be a parent for drawing surface\\n                 - width (number)\\n                 - height (number)\\n                 - callback (function) #optional callback function which is going to be executed in the context of newly created paper\\n                 * or\\n                 - x (number)\\n                 - y (number)\\n                 - width (number)\\n                 - height (number)\\n                 - callback (function) #optional callback function which is going to be executed in the context of newly created paper\\n                 * or\\n                 - all (array) (first 3 or 4 elements in the array are equal to [containerID, width, height] or [x, y, width, height]. The rest are element descriptions in format {type: type, <attributes>}). See @Paper.add.\\n                 - callback (function) #optional callback function which is going to be executed in the context of newly created paper\\n                 * or\\n                 - onReadyCallback (function) function that is going to be called on DOM ready event. You can also subscribe to this event via Eve’s “DOMLoad” event. In this case method returns `undefined`.\\n                 = (object) @Paper\\n                 > Usage\\n                 | // Each of the following examples create a canvas\\n                 | // that is 320px wide by 200px high.\\n                 | // Canvas is created at the viewport’s 10,50 coordinate.\\n                 | var paper = Raphael(10, 50, 320, 200);\\n                 | // Canvas is created at the top left corner of the #notepad element\\n                 | // (or its top right corner in dir=\\\"rtl\\\" elements)\\n                 | var paper = Raphael(document.getElementById(\\\"notepad\\\"), 320, 200);\\n                 | // Same as above\\n                 | var paper = Raphael(\\\"notepad\\\", 320, 200);\\n                 | // Image dump\\n                 | var set = Raphael([\\\"notepad\\\", 320, 200, {\\n                 |     type: \\\"rect\\\",\\n                 |     x: 10,\\n                 |     y: 10,\\n                 |     width: 25,\\n                 |     height: 25,\\n                 |     stroke: \\\"#f00\\\"\\n                 | }, {\\n                 |     type: \\\"text\\\",\\n                 |     x: 30,\\n                 |     y: 40,\\n                 |     text: \\\"Dump\\\"\\n                 | }]);\\n                 \\\\*/\\n                function R(first) {\\n                    if (R.is(first, \\\"function\\\")) {\\n                        return loaded ? first() : eve.on(\\\"raphael.DOMload\\\", first);\\n                    } else if (R.is(first, array)) {\\n                        return R._engine.create[apply](R, first.splice(0, 3 + R.is(first[0], nu))).add(first);\\n                    } else {\\n                        var args = Array.prototype.slice.call(arguments, 0);\\n                        if (R.is(args[args.length - 1], \\\"function\\\")) {\\n                            var f = args.pop();\\n                            return loaded ? f.call(R._engine.create[apply](R, args)) : eve.on(\\\"raphael.DOMload\\\", function () {\\n                                    f.call(R._engine.create[apply](R, args));\\n                                });\\n                        } else {\\n                            return R._engine.create[apply](R, arguments);\\n                        }\\n                    }\\n                }\\n\\n                R.version = \\\"2.2.0\\\";\\n                R.eve = eve;\\n                var loaded,\\n                    separator = /[, ]+/,\\n                    elements = {circle: 1, rect: 1, path: 1, ellipse: 1, text: 1, image: 1},\\n                    formatrg = /\\\\{(\\\\d+)\\\\}/g,\\n                    proto = \\\"prototype\\\",\\n                    has = \\\"hasOwnProperty\\\",\\n                    g = {\\n                        doc: document,\\n                        win: window\\n                    },\\n                    oldRaphael = {\\n                        was: Object.prototype[has].call(g.win, \\\"Raphael\\\"),\\n                        is: g.win.Raphael\\n                    },\\n                    Paper = function () {\\n                        /*\\\\\\n                         * Paper.ca\\n                         [ property (object) ]\\n                         **\\n                         * Shortcut for @Paper.customAttributes\\n                         \\\\*/\\n                        /*\\\\\\n                         * Paper.customAttributes\\n                         [ property (object) ]\\n                         **\\n                         * If you have a set of attributes that you would like to represent\\n                         * as a function of some number you can do it easily with custom attributes:\\n                         > Usage\\n                         | paper.customAttributes.hue = function (num) {\\n                         |     num = num % 1;\\n                         |     return {fill: \\\"hsb(\\\" + num + \\\", 0.75, 1)\\\"};\\n                         | };\\n                         | // Custom attribute “hue” will change fill\\n                         | // to be given hue with fixed saturation and brightness.\\n                         | // Now you can use it like this:\\n                         | var c = paper.circle(10, 10, 10).attr({hue: .45});\\n                         | // or even like this:\\n                         | c.animate({hue: 1}, 1e3);\\n                         |\\n                         | // You could also create custom attribute\\n                         | // with multiple parameters:\\n                         | paper.customAttributes.hsb = function (h, s, b) {\\n                         |     return {fill: \\\"hsb(\\\" + [h, s, b].join(\\\",\\\") + \\\")\\\"};\\n                         | };\\n                         | c.attr({hsb: \\\"0.5 .8 1\\\"});\\n                         | c.animate({hsb: [1, 0, 0.5]}, 1e3);\\n                         \\\\*/\\n                        this.ca = this.customAttributes = {};\\n                    },\\n                    paperproto,\\n                    appendChild = \\\"appendChild\\\",\\n                    apply = \\\"apply\\\",\\n                    concat = \\\"concat\\\",\\n                    supportsTouch = ('ontouchstart' in g.win) || g.win.DocumentTouch && g.doc instanceof DocumentTouch, //taken from Modernizr touch test\\n                    E = \\\"\\\",\\n                    S = \\\" \\\",\\n                    Str = String,\\n                    split = \\\"split\\\",\\n                    events = \\\"click dblclick mousedown mousemove mouseout mouseover mouseup touchstart touchmove touchend touchcancel\\\"[split](S),\\n                    touchMap = {\\n                        mousedown: \\\"touchstart\\\",\\n                        mousemove: \\\"touchmove\\\",\\n                        mouseup: \\\"touchend\\\"\\n                    },\\n                    lowerCase = Str.prototype.toLowerCase,\\n                    math = Math,\\n                    mmax = math.max,\\n                    mmin = math.min,\\n                    abs = math.abs,\\n                    pow = math.pow,\\n                    PI = math.PI,\\n                    nu = \\\"number\\\",\\n                    string = \\\"string\\\",\\n                    array = \\\"array\\\",\\n                    toString = \\\"toString\\\",\\n                    fillString = \\\"fill\\\",\\n                    objectToString = Object.prototype.toString,\\n                    paper = {},\\n                    push = \\\"push\\\",\\n                    ISURL = R._ISURL = /^url\\\\(['\\\"]?(.+?)['\\\"]?\\\\)$/i,\\n                    colourRegExp = /^\\\\s*((#[a-f\\\\d]{6})|(#[a-f\\\\d]{3})|rgba?\\\\(\\\\s*([\\\\d\\\\.]+%?\\\\s*,\\\\s*[\\\\d\\\\.]+%?\\\\s*,\\\\s*[\\\\d\\\\.]+%?(?:\\\\s*,\\\\s*[\\\\d\\\\.]+%?)?)\\\\s*\\\\)|hsba?\\\\(\\\\s*([\\\\d\\\\.]+(?:deg|\\\\xb0|%)?\\\\s*,\\\\s*[\\\\d\\\\.]+%?\\\\s*,\\\\s*[\\\\d\\\\.]+(?:%?\\\\s*,\\\\s*[\\\\d\\\\.]+)?)%?\\\\s*\\\\)|hsla?\\\\(\\\\s*([\\\\d\\\\.]+(?:deg|\\\\xb0|%)?\\\\s*,\\\\s*[\\\\d\\\\.]+%?\\\\s*,\\\\s*[\\\\d\\\\.]+(?:%?\\\\s*,\\\\s*[\\\\d\\\\.]+)?)%?\\\\s*\\\\))\\\\s*$/i,\\n                    isnan = {\\\"NaN\\\": 1, \\\"Infinity\\\": 1, \\\"-Infinity\\\": 1},\\n                    bezierrg = /^(?:cubic-)?bezier\\\\(([^,]+),([^,]+),([^,]+),([^\\\\)]+)\\\\)/,\\n                    round = math.round,\\n                    setAttribute = \\\"setAttribute\\\",\\n                    toFloat = parseFloat,\\n                    toInt = parseInt,\\n                    upperCase = Str.prototype.toUpperCase,\\n                    availableAttrs = R._availableAttrs = {\\n                        \\\"arrow-end\\\": \\\"none\\\",\\n                        \\\"arrow-start\\\": \\\"none\\\",\\n                        blur: 0,\\n                        \\\"clip-rect\\\": \\\"0 0 1e9 1e9\\\",\\n                        cursor: \\\"default\\\",\\n                        cx: 0,\\n                        cy: 0,\\n                        fill: \\\"#fff\\\",\\n                        \\\"fill-opacity\\\": 1,\\n                        font: '10px \\\"Arial\\\"',\\n                        \\\"font-family\\\": '\\\"Arial\\\"',\\n                        \\\"font-size\\\": \\\"10\\\",\\n                        \\\"font-style\\\": \\\"normal\\\",\\n                        \\\"font-weight\\\": 400,\\n                        gradient: 0,\\n                        height: 0,\\n                        href: \\\"http://raphaeljs.com/\\\",\\n                        \\\"letter-spacing\\\": 0,\\n                        opacity: 1,\\n                        path: \\\"M0,0\\\",\\n                        r: 0,\\n                        rx: 0,\\n                        ry: 0,\\n                        src: \\\"\\\",\\n                        stroke: \\\"#000\\\",\\n                        \\\"stroke-dasharray\\\": \\\"\\\",\\n                        \\\"stroke-linecap\\\": \\\"butt\\\",\\n                        \\\"stroke-linejoin\\\": \\\"butt\\\",\\n                        \\\"stroke-miterlimit\\\": 0,\\n                        \\\"stroke-opacity\\\": 1,\\n                        \\\"stroke-width\\\": 1,\\n                        target: \\\"_blank\\\",\\n                        \\\"text-anchor\\\": \\\"middle\\\",\\n                        title: \\\"Raphael\\\",\\n                        transform: \\\"\\\",\\n                        width: 0,\\n                        x: 0,\\n                        y: 0,\\n                        \\\"class\\\": \\\"\\\"\\n                    },\\n                    availableAnimAttrs = R._availableAnimAttrs = {\\n                        blur: nu,\\n                        \\\"clip-rect\\\": \\\"csv\\\",\\n                        cx: nu,\\n                        cy: nu,\\n                        fill: \\\"colour\\\",\\n                        \\\"fill-opacity\\\": nu,\\n                        \\\"font-size\\\": nu,\\n                        height: nu,\\n                        opacity: nu,\\n                        path: \\\"path\\\",\\n                        r: nu,\\n                        rx: nu,\\n                        ry: nu,\\n                        stroke: \\\"colour\\\",\\n                        \\\"stroke-opacity\\\": nu,\\n                        \\\"stroke-width\\\": nu,\\n                        transform: \\\"transform\\\",\\n                        width: nu,\\n                        x: nu,\\n                        y: nu\\n                    },\\n                    whitespace = /[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]/g,\\n                    commaSpaces = /[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*,[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*/,\\n                    hsrg = {hs: 1, rg: 1},\\n                    p2s = /,?([achlmqrstvxz]),?/gi,\\n                    pathCommand = /([achlmrqstvz])[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*,?[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*)+)/ig,\\n                    tCommand = /([rstm])[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029,]*((-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*,?[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*)+)/ig,\\n                    pathValues = /(-?\\\\d*\\\\.?\\\\d*(?:e[\\\\-+]?\\\\d+)?)[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*,?[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*/ig,\\n                    radial_gradient = R._radial_gradient = /^r(?:\\\\(([^,]+?)[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*,[\\\\x09\\\\x0a\\\\x0b\\\\x0c\\\\x0d\\\\x20\\\\xa0\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000\\\\u2028\\\\u2029]*([^\\\\)]+?)\\\\))?/,\\n                    eldata = {},\\n                    sortByKey = function (a, b) {\\n                        return a.key - b.key;\\n                    },\\n                    sortByNumber = function (a, b) {\\n                        return toFloat(a) - toFloat(b);\\n                    },\\n                    fun = function () {\\n                    },\\n                    pipe = function (x) {\\n                        return x;\\n                    },\\n                    rectPath = R._rectPath = function (x, y, w, h, r) {\\n                        if (r) {\\n                            return [[\\\"M\\\", x + r, y], [\\\"l\\\", w - r * 2, 0], [\\\"a\\\", r, r, 0, 0, 1, r, r], [\\\"l\\\", 0, h - r * 2], [\\\"a\\\", r, r, 0, 0, 1, -r, r], [\\\"l\\\", r * 2 - w, 0], [\\\"a\\\", r, r, 0, 0, 1, -r, -r], [\\\"l\\\", 0, r * 2 - h], [\\\"a\\\", r, r, 0, 0, 1, r, -r], [\\\"z\\\"]];\\n                        }\\n                        return [[\\\"M\\\", x, y], [\\\"l\\\", w, 0], [\\\"l\\\", 0, h], [\\\"l\\\", -w, 0], [\\\"z\\\"]];\\n                    },\\n                    ellipsePath = function (x, y, rx, ry) {\\n                        if (ry == null) {\\n                            ry = rx;\\n                        }\\n                        return [[\\\"M\\\", x, y], [\\\"m\\\", 0, -ry], [\\\"a\\\", rx, ry, 0, 1, 1, 0, 2 * ry], [\\\"a\\\", rx, ry, 0, 1, 1, 0, -2 * ry], [\\\"z\\\"]];\\n                    },\\n                    getPath = R._getPath = {\\n                        path: function (el) {\\n                            return el.attr(\\\"path\\\");\\n                        },\\n                        circle: function (el) {\\n                            var a = el.attrs;\\n                            return ellipsePath(a.cx, a.cy, a.r);\\n                        },\\n                        ellipse: function (el) {\\n                            var a = el.attrs;\\n                            return ellipsePath(a.cx, a.cy, a.rx, a.ry);\\n                        },\\n                        rect: function (el) {\\n                            var a = el.attrs;\\n                            return rectPath(a.x, a.y, a.width, a.height, a.r);\\n                        },\\n                        image: function (el) {\\n                            var a = el.attrs;\\n                            return rectPath(a.x, a.y, a.width, a.height);\\n                        },\\n                        text: function (el) {\\n                            var bbox = el._getBBox();\\n                            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\\n                        },\\n                        set: function (el) {\\n                            var bbox = el._getBBox();\\n                            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\\n                        }\\n                    },\\n                    /*\\\\\\n                     * Raphael.mapPath\\n                     [ method ]\\n                     **\\n                     * Transform the path string with given matrix.\\n                     > Parameters\\n                     - path (string) path string\\n                     - matrix (object) see @Matrix\\n                     = (string) transformed path string\\n                     \\\\*/\\n                    mapPath = R.mapPath = function (path, matrix) {\\n                        if (!matrix) {\\n                            return path;\\n                        }\\n                        var x, y, i, j, ii, jj, pathi;\\n                        path = path2curve(path);\\n                        for (i = 0, ii = path.length; i < ii; i++) {\\n                            pathi = path[i];\\n                            for (j = 1, jj = pathi.length; j < jj; j += 2) {\\n                                x = matrix.x(pathi[j], pathi[j + 1]);\\n                                y = matrix.y(pathi[j], pathi[j + 1]);\\n                                pathi[j] = x;\\n                                pathi[j + 1] = y;\\n                            }\\n                        }\\n                        return path;\\n                    };\\n\\n                R._g = g;\\n                /*\\\\\\n                 * Raphael.type\\n                 [ property (string) ]\\n                 **\\n                 * Can be “SVG”, “VML” or empty, depending on browser support.\\n                 \\\\*/\\n                R.type = (g.win.SVGAngle || g.doc.implementation.hasFeature(\\\"http://www.w3.org/TR/SVG11/feature#BasicStructure\\\", \\\"1.1\\\") ? \\\"SVG\\\" : \\\"VML\\\");\\n                if (R.type == \\\"VML\\\") {\\n                    var d = g.doc.createElement(\\\"div\\\"),\\n                        b;\\n                    d.innerHTML = '<v:shape adj=\\\"1\\\"/>';\\n                    b = d.firstChild;\\n                    b.style.behavior = \\\"url(#default#VML)\\\";\\n                    if (!(b && typeof b.adj == \\\"object\\\")) {\\n                        return (R.type = E);\\n                    }\\n                    d = null;\\n                }\\n                /*\\\\\\n                 * Raphael.svg\\n                 [ property (boolean) ]\\n                 **\\n                 * `true` if browser supports SVG.\\n                 \\\\*/\\n                /*\\\\\\n                 * Raphael.vml\\n                 [ property (boolean) ]\\n                 **\\n                 * `true` if browser supports VML.\\n                 \\\\*/\\n                R.svg = !(R.vml = R.type == \\\"VML\\\");\\n                R._Paper = Paper;\\n                /*\\\\\\n                 * Raphael.fn\\n                 [ property (object) ]\\n                 **\\n                 * You can add your own method to the canvas. For example if you want to draw a pie chart,\\n                 * you can create your own pie chart function and ship it as a Raphaël plugin. To do this\\n                 * you need to extend the `Raphael.fn` object. You should modify the `fn` object before a\\n                 * Raphaël instance is created, otherwise it will take no effect. Please note that the\\n                 * ability for namespaced plugins was removed in Raphael 2.0. It is up to the plugin to\\n                 * ensure any namespacing ensures proper context.\\n                 > Usage\\n                 | Raphael.fn.arrow = function (x1, y1, x2, y2, size) {\\n                 |     return this.path( ... );\\n                 | };\\n                 | // or create namespace\\n                 | Raphael.fn.mystuff = {\\n                 |     arrow: function () {…},\\n                 |     star: function () {…},\\n                 |     // etc…\\n                 | };\\n                 | var paper = Raphael(10, 10, 630, 480);\\n                 | // then use it\\n                 | paper.arrow(10, 10, 30, 30, 5).attr({fill: \\\"#f00\\\"});\\n                 | paper.mystuff.arrow();\\n                 | paper.mystuff.star();\\n                 \\\\*/\\n                R.fn = paperproto = Paper.prototype = R.prototype;\\n                R._id = 0;\\n                /*\\\\\\n                 * Raphael.is\\n                 [ method ]\\n                 **\\n                 * Handful of replacements for `typeof` operator.\\n                 > Parameters\\n                 - o (…) any object or primitive\\n                 - type (string) name of the type, i.e. “string”, “function”, “number”, etc.\\n                 = (boolean) is given value is of given type\\n                 \\\\*/\\n                R.is = function (o, type) {\\n                    type = lowerCase.call(type);\\n                    if (type == \\\"finite\\\") {\\n                        return !isnan[has](+o);\\n                    }\\n                    if (type == \\\"array\\\") {\\n                        return o instanceof Array;\\n                    }\\n                    return (type == \\\"null\\\" && o === null) ||\\n                        (type == typeof o && o !== null) ||\\n                        (type == \\\"object\\\" && o === Object(o)) ||\\n                        (type == \\\"array\\\" && Array.isArray && Array.isArray(o)) ||\\n                        objectToString.call(o).slice(8, -1).toLowerCase() == type;\\n                };\\n\\n                function clone(obj) {\\n                    if (typeof obj == \\\"function\\\" || Object(obj) !== obj) {\\n                        return obj;\\n                    }\\n                    var res = new obj.constructor;\\n                    for (var key in obj) if (obj[has](key)) {\\n                        res[key] = clone(obj[key]);\\n                    }\\n                    return res;\\n                }\\n\\n                /*\\\\\\n                 * Raphael.angle\\n                 [ method ]\\n                 **\\n                 * Returns angle between two or three points\\n                 > Parameters\\n                 - x1 (number) x coord of first point\\n                 - y1 (number) y coord of first point\\n                 - x2 (number) x coord of second point\\n                 - y2 (number) y coord of second point\\n                 - x3 (number) #optional x coord of third point\\n                 - y3 (number) #optional y coord of third point\\n                 = (number) angle in degrees.\\n                 \\\\*/\\n                R.angle = function (x1, y1, x2, y2, x3, y3) {\\n                    if (x3 == null) {\\n                        var x = x1 - x2,\\n                            y = y1 - y2;\\n                        if (!x && !y) {\\n                            return 0;\\n                        }\\n                        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\\n                    } else {\\n                        return R.angle(x1, y1, x3, y3) - R.angle(x2, y2, x3, y3);\\n                    }\\n                };\\n                /*\\\\\\n                 * Raphael.rad\\n                 [ method ]\\n                 **\\n                 * Transform angle to radians\\n                 > Parameters\\n                 - deg (number) angle in degrees\\n                 = (number) angle in radians.\\n                 \\\\*/\\n                R.rad = function (deg) {\\n                    return deg % 360 * PI / 180;\\n                };\\n                /*\\\\\\n                 * Raphael.deg\\n                 [ method ]\\n                 **\\n                 * Transform angle to degrees\\n                 > Parameters\\n                 - rad (number) angle in radians\\n                 = (number) angle in degrees.\\n                 \\\\*/\\n                R.deg = function (rad) {\\n                    return Math.round((rad * 180 / PI % 360) * 1000) / 1000;\\n                };\\n                /*\\\\\\n                 * Raphael.snapTo\\n                 [ method ]\\n                 **\\n                 * Snaps given value to given grid.\\n                 > Parameters\\n                 - values (array|number) given array of values or step of the grid\\n                 - value (number) value to adjust\\n                 - tolerance (number) #optional tolerance for snapping. Default is `10`.\\n                 = (number) adjusted value.\\n                 \\\\*/\\n                R.snapTo = function (values, value, tolerance) {\\n                    tolerance = R.is(tolerance, \\\"finite\\\") ? tolerance : 10;\\n                    if (R.is(values, array)) {\\n                        var i = values.length;\\n                        while (i--) if (abs(values[i] - value) <= tolerance) {\\n                            return values[i];\\n                        }\\n                    } else {\\n                        values = +values;\\n                        var rem = value % values;\\n                        if (rem < tolerance) {\\n                            return value - rem;\\n                        }\\n                        if (rem > values - tolerance) {\\n                            return value - rem + values;\\n                        }\\n                    }\\n                    return value;\\n                };\\n\\n                /*\\\\\\n                 * Raphael.createUUID\\n                 [ method ]\\n                 **\\n                 * Returns RFC4122, version 4 ID\\n                 \\\\*/\\n                var createUUID = R.createUUID = (function (uuidRegEx, uuidReplacer) {\\n                    return function () {\\n                        return \\\"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\\\".replace(uuidRegEx, uuidReplacer).toUpperCase();\\n                    };\\n                })(/[xy]/g, function (c) {\\n                    var r = math.random() * 16 | 0,\\n                        v = c == \\\"x\\\" ? r : (r & 3 | 8);\\n                    return v.toString(16);\\n                });\\n\\n                /*\\\\\\n                 * Raphael.setWindow\\n                 [ method ]\\n                 **\\n                 * Used when you need to draw in `&lt;iframe>`. Switched window to the iframe one.\\n                 > Parameters\\n                 - newwin (window) new window object\\n                 \\\\*/\\n                R.setWindow = function (newwin) {\\n                    eve(\\\"raphael.setWindow\\\", R, g.win, newwin);\\n                    g.win = newwin;\\n                    g.doc = g.win.document;\\n                    if (R._engine.initWin) {\\n                        R._engine.initWin(g.win);\\n                    }\\n                };\\n                var toHex = function (color) {\\n                        if (R.vml) {\\n                            // http://dean.edwards.name/weblog/2009/10/convert-any-colour-value-to-hex-in-msie/\\n                            var trim = /^\\\\s+|\\\\s+$/g;\\n                            var bod;\\n                            try {\\n                                var docum = new ActiveXObject(\\\"htmlfile\\\");\\n                                docum.write(\\\"<body>\\\");\\n                                docum.close();\\n                                bod = docum.body;\\n                            } catch (e) {\\n                                bod = createPopup().document.body;\\n                            }\\n                            var range = bod.createTextRange();\\n                            toHex = cacher(function (color) {\\n                                try {\\n                                    bod.style.color = Str(color).replace(trim, E);\\n                                    var value = range.queryCommandValue(\\\"ForeColor\\\");\\n                                    value = ((value & 255) << 16) | (value & 65280) | ((value & 16711680) >>> 16);\\n                                    return \\\"#\\\" + (\\\"000000\\\" + value.toString(16)).slice(-6);\\n                                } catch (e) {\\n                                    return \\\"none\\\";\\n                                }\\n                            });\\n                        } else {\\n                            var i = g.doc.createElement(\\\"i\\\");\\n                            i.title = \\\"Rapha\\\\xebl Colour Picker\\\";\\n                            i.style.display = \\\"none\\\";\\n                            g.doc.body.appendChild(i);\\n                            toHex = cacher(function (color) {\\n                                i.style.color = color;\\n                                return g.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\\\"color\\\");\\n                            });\\n                        }\\n                        return toHex(color);\\n                    },\\n                    hsbtoString = function () {\\n                        return \\\"hsb(\\\" + [this.h, this.s, this.b] + \\\")\\\";\\n                    },\\n                    hsltoString = function () {\\n                        return \\\"hsl(\\\" + [this.h, this.s, this.l] + \\\")\\\";\\n                    },\\n                    rgbtoString = function () {\\n                        return this.hex;\\n                    },\\n                    prepareRGB = function (r, g, b) {\\n                        if (g == null && R.is(r, \\\"object\\\") && \\\"r\\\" in r && \\\"g\\\" in r && \\\"b\\\" in r) {\\n                            b = r.b;\\n                            g = r.g;\\n                            r = r.r;\\n                        }\\n                        if (g == null && R.is(r, string)) {\\n                            var clr = R.getRGB(r);\\n                            r = clr.r;\\n                            g = clr.g;\\n                            b = clr.b;\\n                        }\\n                        if (r > 1 || g > 1 || b > 1) {\\n                            r /= 255;\\n                            g /= 255;\\n                            b /= 255;\\n                        }\\n\\n                        return [r, g, b];\\n                    },\\n                    packageRGB = function (r, g, b, o) {\\n                        r *= 255;\\n                        g *= 255;\\n                        b *= 255;\\n                        var rgb = {\\n                            r: r,\\n                            g: g,\\n                            b: b,\\n                            hex: R.rgb(r, g, b),\\n                            toString: rgbtoString\\n                        };\\n                        R.is(o, \\\"finite\\\") && (rgb.opacity = o);\\n                        return rgb;\\n                    };\\n\\n                /*\\\\\\n                 * Raphael.color\\n                 [ method ]\\n                 **\\n                 * Parses the color string and returns object with all values for the given color.\\n                 > Parameters\\n                 - clr (string) color string in one of the supported formats (see @Raphael.getRGB)\\n                 = (object) Combined RGB & HSB object in format:\\n                 o {\\n                 o     r (number) red,\\n                 o     g (number) green,\\n                 o     b (number) blue,\\n                 o     hex (string) color in HTML/CSS format: #••••••,\\n                 o     error (boolean) `true` if string can’t be parsed,\\n                 o     h (number) hue,\\n                 o     s (number) saturation,\\n                 o     v (number) value (brightness),\\n                 o     l (number) lightness\\n                 o }\\n                 \\\\*/\\n                R.color = function (clr) {\\n                    var rgb;\\n                    if (R.is(clr, \\\"object\\\") && \\\"h\\\" in clr && \\\"s\\\" in clr && \\\"b\\\" in clr) {\\n                        rgb = R.hsb2rgb(clr);\\n                        clr.r = rgb.r;\\n                        clr.g = rgb.g;\\n                        clr.b = rgb.b;\\n                        clr.hex = rgb.hex;\\n                    } else if (R.is(clr, \\\"object\\\") && \\\"h\\\" in clr && \\\"s\\\" in clr && \\\"l\\\" in clr) {\\n                        rgb = R.hsl2rgb(clr);\\n                        clr.r = rgb.r;\\n                        clr.g = rgb.g;\\n                        clr.b = rgb.b;\\n                        clr.hex = rgb.hex;\\n                    } else {\\n                        if (R.is(clr, \\\"string\\\")) {\\n                            clr = R.getRGB(clr);\\n                        }\\n                        if (R.is(clr, \\\"object\\\") && \\\"r\\\" in clr && \\\"g\\\" in clr && \\\"b\\\" in clr) {\\n                            rgb = R.rgb2hsl(clr);\\n                            clr.h = rgb.h;\\n                            clr.s = rgb.s;\\n                            clr.l = rgb.l;\\n                            rgb = R.rgb2hsb(clr);\\n                            clr.v = rgb.b;\\n                        } else {\\n                            clr = {hex: \\\"none\\\"};\\n                            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\\n                        }\\n                    }\\n                    clr.toString = rgbtoString;\\n                    return clr;\\n                };\\n                /*\\\\\\n                 * Raphael.hsb2rgb\\n                 [ method ]\\n                 **\\n                 * Converts HSB values to RGB object.\\n                 > Parameters\\n                 - h (number) hue\\n                 - s (number) saturation\\n                 - v (number) value or brightness\\n                 = (object) RGB object in format:\\n                 o {\\n                 o     r (number) red,\\n                 o     g (number) green,\\n                 o     b (number) blue,\\n                 o     hex (string) color in HTML/CSS format: #••••••\\n                 o }\\n                 \\\\*/\\n                R.hsb2rgb = function (h, s, v, o) {\\n                    if (this.is(h, \\\"object\\\") && \\\"h\\\" in h && \\\"s\\\" in h && \\\"b\\\" in h) {\\n                        v = h.b;\\n                        s = h.s;\\n                        o = h.o;\\n                        h = h.h;\\n                    }\\n                    h *= 360;\\n                    var R, G, B, X, C;\\n                    h = (h % 360) / 60;\\n                    C = v * s;\\n                    X = C * (1 - abs(h % 2 - 1));\\n                    R = G = B = v - C;\\n\\n                    h = ~~h;\\n                    R += [C, X, 0, 0, X, C][h];\\n                    G += [X, C, C, X, 0, 0][h];\\n                    B += [0, 0, X, C, C, X][h];\\n                    return packageRGB(R, G, B, o);\\n                };\\n                /*\\\\\\n                 * Raphael.hsl2rgb\\n                 [ method ]\\n                 **\\n                 * Converts HSL values to RGB object.\\n                 > Parameters\\n                 - h (number) hue\\n                 - s (number) saturation\\n                 - l (number) luminosity\\n                 = (object) RGB object in format:\\n                 o {\\n                 o     r (number) red,\\n                 o     g (number) green,\\n                 o     b (number) blue,\\n                 o     hex (string) color in HTML/CSS format: #••••••\\n                 o }\\n                 \\\\*/\\n                R.hsl2rgb = function (h, s, l, o) {\\n                    if (this.is(h, \\\"object\\\") && \\\"h\\\" in h && \\\"s\\\" in h && \\\"l\\\" in h) {\\n                        l = h.l;\\n                        s = h.s;\\n                        h = h.h;\\n                    }\\n                    if (h > 1 || s > 1 || l > 1) {\\n                        h /= 360;\\n                        s /= 100;\\n                        l /= 100;\\n                    }\\n                    h *= 360;\\n                    var R, G, B, X, C;\\n                    h = (h % 360) / 60;\\n                    C = 2 * s * (l < .5 ? l : 1 - l);\\n                    X = C * (1 - abs(h % 2 - 1));\\n                    R = G = B = l - C / 2;\\n\\n                    h = ~~h;\\n                    R += [C, X, 0, 0, X, C][h];\\n                    G += [X, C, C, X, 0, 0][h];\\n                    B += [0, 0, X, C, C, X][h];\\n                    return packageRGB(R, G, B, o);\\n                };\\n                /*\\\\\\n                 * Raphael.rgb2hsb\\n                 [ method ]\\n                 **\\n                 * Converts RGB values to HSB object.\\n                 > Parameters\\n                 - r (number) red\\n                 - g (number) green\\n                 - b (number) blue\\n                 = (object) HSB object in format:\\n                 o {\\n                 o     h (number) hue\\n                 o     s (number) saturation\\n                 o     b (number) brightness\\n                 o }\\n                 \\\\*/\\n                R.rgb2hsb = function (r, g, b) {\\n                    b = prepareRGB(r, g, b);\\n                    r = b[0];\\n                    g = b[1];\\n                    b = b[2];\\n\\n                    var H, S, V, C;\\n                    V = mmax(r, g, b);\\n                    C = V - mmin(r, g, b);\\n                    H = (C == 0 ? null :\\n                            V == r ? (g - b) / C :\\n                                V == g ? (b - r) / C + 2 :\\n                                    (r - g) / C + 4\\n                    );\\n                    H = ((H + 360) % 6) * 60 / 360;\\n                    S = C == 0 ? 0 : C / V;\\n                    return {h: H, s: S, b: V, toString: hsbtoString};\\n                };\\n                /*\\\\\\n                 * Raphael.rgb2hsl\\n                 [ method ]\\n                 **\\n                 * Converts RGB values to HSL object.\\n                 > Parameters\\n                 - r (number) red\\n                 - g (number) green\\n                 - b (number) blue\\n                 = (object) HSL object in format:\\n                 o {\\n                 o     h (number) hue\\n                 o     s (number) saturation\\n                 o     l (number) luminosity\\n                 o }\\n                 \\\\*/\\n                R.rgb2hsl = function (r, g, b) {\\n                    b = prepareRGB(r, g, b);\\n                    r = b[0];\\n                    g = b[1];\\n                    b = b[2];\\n\\n                    var H, S, L, M, m, C;\\n                    M = mmax(r, g, b);\\n                    m = mmin(r, g, b);\\n                    C = M - m;\\n                    H = (C == 0 ? null :\\n                        M == r ? (g - b) / C :\\n                            M == g ? (b - r) / C + 2 :\\n                                (r - g) / C + 4);\\n                    H = ((H + 360) % 6) * 60 / 360;\\n                    L = (M + m) / 2;\\n                    S = (C == 0 ? 0 :\\n                        L < .5 ? C / (2 * L) :\\n                            C / (2 - 2 * L));\\n                    return {h: H, s: S, l: L, toString: hsltoString};\\n                };\\n                R._path2string = function () {\\n                    return this.join(\\\",\\\").replace(p2s, \\\"$1\\\");\\n                };\\n                function repush(array, item) {\\n                    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\\n                        return array.push(array.splice(i, 1)[0]);\\n                    }\\n                }\\n\\n                function cacher(f, scope, postprocessor) {\\n                    function newf() {\\n                        var arg = Array.prototype.slice.call(arguments, 0),\\n                            args = arg.join(\\\"\\\\u2400\\\"),\\n                            cache = newf.cache = newf.cache || {},\\n                            count = newf.count = newf.count || [];\\n                        if (cache[has](args)) {\\n                            repush(count, args);\\n                            return postprocessor ? postprocessor(cache[args]) : cache[args];\\n                        }\\n                        count.length >= 1e3 && delete cache[count.shift()];\\n                        count.push(args);\\n                        cache[args] = f[apply](scope, arg);\\n                        return postprocessor ? postprocessor(cache[args]) : cache[args];\\n                    }\\n\\n                    return newf;\\n                }\\n\\n                var preload = R._preload = function (src, f) {\\n                    var img = g.doc.createElement(\\\"img\\\");\\n                    img.style.cssText = \\\"position:absolute;left:-9999em;top:-9999em\\\";\\n                    img.onload = function () {\\n                        f.call(this);\\n                        this.onload = null;\\n                        g.doc.body.removeChild(this);\\n                    };\\n                    img.onerror = function () {\\n                        g.doc.body.removeChild(this);\\n                    };\\n                    g.doc.body.appendChild(img);\\n                    img.src = src;\\n                };\\n\\n                function clrToString() {\\n                    return this.hex;\\n                }\\n\\n                /*\\\\\\n                 * Raphael.getRGB\\n                 [ method ]\\n                 **\\n                 * Parses colour string as RGB object\\n                 > Parameters\\n                 - colour (string) colour string in one of formats:\\n                 # <ul>\\n                 #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\\n                 #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\\n                 #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\\n                 #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\\n                 #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\\n                 #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\\n                 #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\\n                 #     <li>hsl(•••, •••, •••) — same as hsb</li>\\n                 #     <li>hsl(•••%, •••%, •••%) — same as hsb</li>\\n                 # </ul>\\n                 = (object) RGB object in format:\\n                 o {\\n                 o     r (number) red,\\n                 o     g (number) green,\\n                 o     b (number) blue\\n                 o     hex (string) color in HTML/CSS format: #••••••,\\n                 o     error (boolean) true if string can’t be parsed\\n                 o }\\n                 \\\\*/\\n                R.getRGB = cacher(function (colour) {\\n                    if (!colour || !!((colour = Str(colour)).indexOf(\\\"-\\\") + 1)) {\\n                        return {r: -1, g: -1, b: -1, hex: \\\"none\\\", error: 1, toString: clrToString};\\n                    }\\n                    if (colour == \\\"none\\\") {\\n                        return {r: -1, g: -1, b: -1, hex: \\\"none\\\", toString: clrToString};\\n                    }\\n                    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \\\"#\\\") && (colour = toHex(colour));\\n                    var res,\\n                        red,\\n                        green,\\n                        blue,\\n                        opacity,\\n                        t,\\n                        values,\\n                        rgb = colour.match(colourRegExp);\\n                    if (rgb) {\\n                        if (rgb[2]) {\\n                            blue = toInt(rgb[2].substring(5), 16);\\n                            green = toInt(rgb[2].substring(3, 5), 16);\\n                            red = toInt(rgb[2].substring(1, 3), 16);\\n                        }\\n                        if (rgb[3]) {\\n                            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\\n                            green = toInt((t = rgb[3].charAt(2)) + t, 16);\\n                            red = toInt((t = rgb[3].charAt(1)) + t, 16);\\n                        }\\n                        if (rgb[4]) {\\n                            values = rgb[4][split](commaSpaces);\\n                            red = toFloat(values[0]);\\n                            values[0].slice(-1) == \\\"%\\\" && (red *= 2.55);\\n                            green = toFloat(values[1]);\\n                            values[1].slice(-1) == \\\"%\\\" && (green *= 2.55);\\n                            blue = toFloat(values[2]);\\n                            values[2].slice(-1) == \\\"%\\\" && (blue *= 2.55);\\n                            rgb[1].toLowerCase().slice(0, 4) == \\\"rgba\\\" && (opacity = toFloat(values[3]));\\n                            values[3] && values[3].slice(-1) == \\\"%\\\" && (opacity /= 100);\\n                        }\\n                        if (rgb[5]) {\\n                            values = rgb[5][split](commaSpaces);\\n                            red = toFloat(values[0]);\\n                            values[0].slice(-1) == \\\"%\\\" && (red *= 2.55);\\n                            green = toFloat(values[1]);\\n                            values[1].slice(-1) == \\\"%\\\" && (green *= 2.55);\\n                            blue = toFloat(values[2]);\\n                            values[2].slice(-1) == \\\"%\\\" && (blue *= 2.55);\\n                            (values[0].slice(-3) == \\\"deg\\\" || values[0].slice(-1) == \\\"\\\\xb0\\\") && (red /= 360);\\n                            rgb[1].toLowerCase().slice(0, 4) == \\\"hsba\\\" && (opacity = toFloat(values[3]));\\n                            values[3] && values[3].slice(-1) == \\\"%\\\" && (opacity /= 100);\\n                            return R.hsb2rgb(red, green, blue, opacity);\\n                        }\\n                        if (rgb[6]) {\\n                            values = rgb[6][split](commaSpaces);\\n                            red = toFloat(values[0]);\\n                            values[0].slice(-1) == \\\"%\\\" && (red *= 2.55);\\n                            green = toFloat(values[1]);\\n                            values[1].slice(-1) == \\\"%\\\" && (green *= 2.55);\\n                            blue = toFloat(values[2]);\\n                            values[2].slice(-1) == \\\"%\\\" && (blue *= 2.55);\\n                            (values[0].slice(-3) == \\\"deg\\\" || values[0].slice(-1) == \\\"\\\\xb0\\\") && (red /= 360);\\n                            rgb[1].toLowerCase().slice(0, 4) == \\\"hsla\\\" && (opacity = toFloat(values[3]));\\n                            values[3] && values[3].slice(-1) == \\\"%\\\" && (opacity /= 100);\\n                            return R.hsl2rgb(red, green, blue, opacity);\\n                        }\\n                        rgb = {r: red, g: green, b: blue, toString: clrToString};\\n                        rgb.hex = \\\"#\\\" + (16777216 | blue | (green << 8) | (red << 16)).toString(16).slice(1);\\n                        R.is(opacity, \\\"finite\\\") && (rgb.opacity = opacity);\\n                        return rgb;\\n                    }\\n                    return {r: -1, g: -1, b: -1, hex: \\\"none\\\", error: 1, toString: clrToString};\\n                }, R);\\n                /*\\\\\\n                 * Raphael.hsb\\n                 [ method ]\\n                 **\\n                 * Converts HSB values to hex representation of the colour.\\n                 > Parameters\\n                 - h (number) hue\\n                 - s (number) saturation\\n                 - b (number) value or brightness\\n                 = (string) hex representation of the colour.\\n                 \\\\*/\\n                R.hsb = cacher(function (h, s, b) {\\n                    return R.hsb2rgb(h, s, b).hex;\\n                });\\n                /*\\\\\\n                 * Raphael.hsl\\n                 [ method ]\\n                 **\\n                 * Converts HSL values to hex representation of the colour.\\n                 > Parameters\\n                 - h (number) hue\\n                 - s (number) saturation\\n                 - l (number) luminosity\\n                 = (string) hex representation of the colour.\\n                 \\\\*/\\n                R.hsl = cacher(function (h, s, l) {\\n                    return R.hsl2rgb(h, s, l).hex;\\n                });\\n                /*\\\\\\n                 * Raphael.rgb\\n                 [ method ]\\n                 **\\n                 * Converts RGB values to hex representation of the colour.\\n                 > Parameters\\n                 - r (number) red\\n                 - g (number) green\\n                 - b (number) blue\\n                 = (string) hex representation of the colour.\\n                 \\\\*/\\n                R.rgb = cacher(function (r, g, b) {\\n                    function round(x) {\\n                        return (x + 0.5) | 0;\\n                    }\\n\\n                    return \\\"#\\\" + (16777216 | round(b) | (round(g) << 8) | (round(r) << 16)).toString(16).slice(1);\\n                });\\n                /*\\\\\\n                 * Raphael.getColor\\n                 [ method ]\\n                 **\\n                 * On each call returns next colour in the spectrum. To reset it back to red call @Raphael.getColor.reset\\n                 > Parameters\\n                 - value (number) #optional brightness, default is `0.75`\\n                 = (string) hex representation of the colour.\\n                 \\\\*/\\n                R.getColor = function (value) {\\n                    var start = this.getColor.start = this.getColor.start || {h: 0, s: 1, b: value || .75},\\n                        rgb = this.hsb2rgb(start.h, start.s, start.b);\\n                    start.h += .075;\\n                    if (start.h > 1) {\\n                        start.h = 0;\\n                        start.s -= .2;\\n                        start.s <= 0 && (this.getColor.start = {h: 0, s: 1, b: start.b});\\n                    }\\n                    return rgb.hex;\\n                };\\n                /*\\\\\\n                 * Raphael.getColor.reset\\n                 [ method ]\\n                 **\\n                 * Resets spectrum position for @Raphael.getColor back to red.\\n                 \\\\*/\\n                R.getColor.reset = function () {\\n                    delete this.start;\\n                };\\n\\n                // http://schepers.cc/getting-to-the-point\\n                function catmullRom2bezier(crp, z) {\\n                    var d = [];\\n                    for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\\n                        var p = [\\n                            {x: +crp[i - 2], y: +crp[i - 1]},\\n                            {x: +crp[i], y: +crp[i + 1]},\\n                            {x: +crp[i + 2], y: +crp[i + 3]},\\n                            {x: +crp[i + 4], y: +crp[i + 5]}\\n                        ];\\n                        if (z) {\\n                            if (!i) {\\n                                p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\\n                            } else if (iLen - 4 == i) {\\n                                p[3] = {x: +crp[0], y: +crp[1]};\\n                            } else if (iLen - 2 == i) {\\n                                p[2] = {x: +crp[0], y: +crp[1]};\\n                                p[3] = {x: +crp[2], y: +crp[3]};\\n                            }\\n                        } else {\\n                            if (iLen - 4 == i) {\\n                                p[3] = p[2];\\n                            } else if (!i) {\\n                                p[0] = {x: +crp[i], y: +crp[i + 1]};\\n                            }\\n                        }\\n                        d.push([\\\"C\\\",\\n                            (-p[0].x + 6 * p[1].x + p[2].x) / 6,\\n                            (-p[0].y + 6 * p[1].y + p[2].y) / 6,\\n                            (p[1].x + 6 * p[2].x - p[3].x) / 6,\\n                            (p[1].y + 6 * p[2].y - p[3].y) / 6,\\n                            p[2].x,\\n                            p[2].y\\n                        ]);\\n                    }\\n\\n                    return d;\\n                }\\n\\n                /*\\\\\\n                 * Raphael.parsePathString\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Parses given path string into an array of arrays of path segments.\\n                 > Parameters\\n                 - pathString (string|array) path string or array of segments (in the last case it will be returned straight away)\\n                 = (array) array of segments.\\n                 \\\\*/\\n                R.parsePathString = function (pathString) {\\n                    if (!pathString) {\\n                        return null;\\n                    }\\n                    var pth = paths(pathString);\\n                    if (pth.arr) {\\n                        return pathClone(pth.arr);\\n                    }\\n\\n                    var paramCounts = {a: 7, c: 6, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, z: 0},\\n                        data = [];\\n                    if (R.is(pathString, array) && R.is(pathString[0], array)) { // rough assumption\\n                        data = pathClone(pathString);\\n                    }\\n                    if (!data.length) {\\n                        Str(pathString).replace(pathCommand, function (a, b, c) {\\n                            var params = [],\\n                                name = b.toLowerCase();\\n                            c.replace(pathValues, function (a, b) {\\n                                b && params.push(+b);\\n                            });\\n                            if (name == \\\"m\\\" && params.length > 2) {\\n                                data.push([b][concat](params.splice(0, 2)));\\n                                name = \\\"l\\\";\\n                                b = b == \\\"m\\\" ? \\\"l\\\" : \\\"L\\\";\\n                            }\\n                            if (name == \\\"r\\\") {\\n                                data.push([b][concat](params));\\n                            } else while (params.length >= paramCounts[name]) {\\n                                data.push([b][concat](params.splice(0, paramCounts[name])));\\n                                if (!paramCounts[name]) {\\n                                    break;\\n                                }\\n                            }\\n                        });\\n                    }\\n                    data.toString = R._path2string;\\n                    pth.arr = pathClone(data);\\n                    return data;\\n                };\\n                /*\\\\\\n                 * Raphael.parseTransformString\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Parses given path string into an array of transformations.\\n                 > Parameters\\n                 - TString (string|array) transform string or array of transformations (in the last case it will be returned straight away)\\n                 = (array) array of transformations.\\n                 \\\\*/\\n                R.parseTransformString = cacher(function (TString) {\\n                    if (!TString) {\\n                        return null;\\n                    }\\n                    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\\n                        data = [];\\n                    if (R.is(TString, array) && R.is(TString[0], array)) { // rough assumption\\n                        data = pathClone(TString);\\n                    }\\n                    if (!data.length) {\\n                        Str(TString).replace(tCommand, function (a, b, c) {\\n                            var params = [],\\n                                name = lowerCase.call(b);\\n                            c.replace(pathValues, function (a, b) {\\n                                b && params.push(+b);\\n                            });\\n                            data.push([b][concat](params));\\n                        });\\n                    }\\n                    data.toString = R._path2string;\\n                    return data;\\n                });\\n                // PATHS\\n                var paths = function (ps) {\\n                    var p = paths.ps = paths.ps || {};\\n                    if (p[ps]) {\\n                        p[ps].sleep = 100;\\n                    } else {\\n                        p[ps] = {\\n                            sleep: 100\\n                        };\\n                    }\\n                    setTimeout(function () {\\n                        for (var key in p) if (p[has](key) && key != ps) {\\n                            p[key].sleep--;\\n                            !p[key].sleep && delete p[key];\\n                        }\\n                    });\\n                    return p[ps];\\n                };\\n                /*\\\\\\n                 * Raphael.findDotsAtSegment\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Find dot coordinates on the given cubic bezier curve at the given t.\\n                 > Parameters\\n                 - p1x (number) x of the first point of the curve\\n                 - p1y (number) y of the first point of the curve\\n                 - c1x (number) x of the first anchor of the curve\\n                 - c1y (number) y of the first anchor of the curve\\n                 - c2x (number) x of the second anchor of the curve\\n                 - c2y (number) y of the second anchor of the curve\\n                 - p2x (number) x of the second point of the curve\\n                 - p2y (number) y of the second point of the curve\\n                 - t (number) position on the curve (0..1)\\n                 = (object) point information in format:\\n                 o {\\n                 o     x: (number) x coordinate of the point\\n                 o     y: (number) y coordinate of the point\\n                 o     m: {\\n                 o         x: (number) x coordinate of the left anchor\\n                 o         y: (number) y coordinate of the left anchor\\n                 o     }\\n                 o     n: {\\n                 o         x: (number) x coordinate of the right anchor\\n                 o         y: (number) y coordinate of the right anchor\\n                 o     }\\n                 o     start: {\\n                 o         x: (number) x coordinate of the start of the curve\\n                 o         y: (number) y coordinate of the start of the curve\\n                 o     }\\n                 o     end: {\\n                 o         x: (number) x coordinate of the end of the curve\\n                 o         y: (number) y coordinate of the end of the curve\\n                 o     }\\n                 o     alpha: (number) angle of the curve derivative at the point\\n                 o }\\n                 \\\\*/\\n                R.findDotsAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\\n                    var t1 = 1 - t,\\n                        t13 = pow(t1, 3),\\n                        t12 = pow(t1, 2),\\n                        t2 = t * t,\\n                        t3 = t2 * t,\\n                        x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\\n                        y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\\n                        mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\\n                        my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\\n                        nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\\n                        ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\\n                        ax = t1 * p1x + t * c1x,\\n                        ay = t1 * p1y + t * c1y,\\n                        cx = t1 * c2x + t * p2x,\\n                        cy = t1 * c2y + t * p2y,\\n                        alpha = (90 - math.atan2(mx - nx, my - ny) * 180 / PI);\\n                    (mx > nx || my < ny) && (alpha += 180);\\n                    return {\\n                        x: x,\\n                        y: y,\\n                        m: {x: mx, y: my},\\n                        n: {x: nx, y: ny},\\n                        start: {x: ax, y: ay},\\n                        end: {x: cx, y: cy},\\n                        alpha: alpha\\n                    };\\n                };\\n                /*\\\\\\n                 * Raphael.bezierBBox\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Return bounding box of a given cubic bezier curve\\n                 > Parameters\\n                 - p1x (number) x of the first point of the curve\\n                 - p1y (number) y of the first point of the curve\\n                 - c1x (number) x of the first anchor of the curve\\n                 - c1y (number) y of the first anchor of the curve\\n                 - c2x (number) x of the second anchor of the curve\\n                 - c2y (number) y of the second anchor of the curve\\n                 - p2x (number) x of the second point of the curve\\n                 - p2y (number) y of the second point of the curve\\n                 * or\\n                 - bez (array) array of six points for bezier curve\\n                 = (object) point information in format:\\n                 o {\\n                 o     min: {\\n                 o         x: (number) x coordinate of the left point\\n                 o         y: (number) y coordinate of the top point\\n                 o     }\\n                 o     max: {\\n                 o         x: (number) x coordinate of the right point\\n                 o         y: (number) y coordinate of the bottom point\\n                 o     }\\n                 o }\\n                 \\\\*/\\n                R.bezierBBox = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\\n                    if (!R.is(p1x, \\\"array\\\")) {\\n                        p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\\n                    }\\n                    var bbox = curveDim.apply(null, p1x);\\n                    return {\\n                        x: bbox.min.x,\\n                        y: bbox.min.y,\\n                        x2: bbox.max.x,\\n                        y2: bbox.max.y,\\n                        width: bbox.max.x - bbox.min.x,\\n                        height: bbox.max.y - bbox.min.y\\n                    };\\n                };\\n                /*\\\\\\n                 * Raphael.isPointInsideBBox\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Returns `true` if given point is inside bounding boxes.\\n                 > Parameters\\n                 - bbox (string) bounding box\\n                 - x (string) x coordinate of the point\\n                 - y (string) y coordinate of the point\\n                 = (boolean) `true` if point inside\\n                 \\\\*/\\n                R.isPointInsideBBox = function (bbox, x, y) {\\n                    return x >= bbox.x && x <= bbox.x2 && y >= bbox.y && y <= bbox.y2;\\n                };\\n                /*\\\\\\n                 * Raphael.isBBoxIntersect\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Returns `true` if two bounding boxes intersect\\n                 > Parameters\\n                 - bbox1 (string) first bounding box\\n                 - bbox2 (string) second bounding box\\n                 = (boolean) `true` if they intersect\\n                 \\\\*/\\n                R.isBBoxIntersect = function (bbox1, bbox2) {\\n                    var i = R.isPointInsideBBox;\\n                    return i(bbox2, bbox1.x, bbox1.y)\\n                        || i(bbox2, bbox1.x2, bbox1.y)\\n                        || i(bbox2, bbox1.x, bbox1.y2)\\n                        || i(bbox2, bbox1.x2, bbox1.y2)\\n                        || i(bbox1, bbox2.x, bbox2.y)\\n                        || i(bbox1, bbox2.x2, bbox2.y)\\n                        || i(bbox1, bbox2.x, bbox2.y2)\\n                        || i(bbox1, bbox2.x2, bbox2.y2)\\n                        || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\\n                        && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\\n                };\\n                function base3(t, p1, p2, p3, p4) {\\n                    var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\\n                        t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\\n                    return t * t2 - 3 * p1 + 3 * p2;\\n                }\\n\\n                function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\\n                    if (z == null) {\\n                        z = 1;\\n                    }\\n                    z = z > 1 ? 1 : z < 0 ? 0 : z;\\n                    var z2 = z / 2,\\n                        n = 12,\\n                        Tvalues = [-0.1252, 0.1252, -0.3678, 0.3678, -0.5873, 0.5873, -0.7699, 0.7699, -0.9041, 0.9041, -0.9816, 0.9816],\\n                        Cvalues = [0.2491, 0.2491, 0.2335, 0.2335, 0.2032, 0.2032, 0.1601, 0.1601, 0.1069, 0.1069, 0.0472, 0.0472],\\n                        sum = 0;\\n                    for (var i = 0; i < n; i++) {\\n                        var ct = z2 * Tvalues[i] + z2,\\n                            xbase = base3(ct, x1, x2, x3, x4),\\n                            ybase = base3(ct, y1, y2, y3, y4),\\n                            comb = xbase * xbase + ybase * ybase;\\n                        sum += Cvalues[i] * math.sqrt(comb);\\n                    }\\n                    return z2 * sum;\\n                }\\n\\n                function getTatLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\\n                    if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\\n                        return;\\n                    }\\n                    var t = 1,\\n                        step = t / 2,\\n                        t2 = t - step,\\n                        l,\\n                        e = .01;\\n                    l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\\n                    while (abs(l - ll) > e) {\\n                        step /= 2;\\n                        t2 += (l < ll ? 1 : -1) * step;\\n                        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\\n                    }\\n                    return t2;\\n                }\\n\\n                function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\\n                    if (\\n                        mmax(x1, x2) < mmin(x3, x4) ||\\n                        mmin(x1, x2) > mmax(x3, x4) ||\\n                        mmax(y1, y2) < mmin(y3, y4) ||\\n                        mmin(y1, y2) > mmax(y3, y4)\\n                    ) {\\n                        return;\\n                    }\\n                    var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\\n                        ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\\n                        denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\\n\\n                    if (!denominator) {\\n                        return;\\n                    }\\n                    var px = nx / denominator,\\n                        py = ny / denominator,\\n                        px2 = +px.toFixed(2),\\n                        py2 = +py.toFixed(2);\\n                    if (\\n                        px2 < +mmin(x1, x2).toFixed(2) ||\\n                        px2 > +mmax(x1, x2).toFixed(2) ||\\n                        px2 < +mmin(x3, x4).toFixed(2) ||\\n                        px2 > +mmax(x3, x4).toFixed(2) ||\\n                        py2 < +mmin(y1, y2).toFixed(2) ||\\n                        py2 > +mmax(y1, y2).toFixed(2) ||\\n                        py2 < +mmin(y3, y4).toFixed(2) ||\\n                        py2 > +mmax(y3, y4).toFixed(2)\\n                    ) {\\n                        return;\\n                    }\\n                    return {x: px, y: py};\\n                }\\n\\n                function inter(bez1, bez2) {\\n                    return interHelper(bez1, bez2);\\n                }\\n\\n                function interCount(bez1, bez2) {\\n                    return interHelper(bez1, bez2, 1);\\n                }\\n\\n                function interHelper(bez1, bez2, justCount) {\\n                    var bbox1 = R.bezierBBox(bez1),\\n                        bbox2 = R.bezierBBox(bez2);\\n                    if (!R.isBBoxIntersect(bbox1, bbox2)) {\\n                        return justCount ? 0 : [];\\n                    }\\n                    var l1 = bezlen.apply(0, bez1),\\n                        l2 = bezlen.apply(0, bez2),\\n                        n1 = mmax(~~(l1 / 5), 1),\\n                        n2 = mmax(~~(l2 / 5), 1),\\n                        dots1 = [],\\n                        dots2 = [],\\n                        xy = {},\\n                        res = justCount ? 0 : [];\\n                    for (var i = 0; i < n1 + 1; i++) {\\n                        var p = R.findDotsAtSegment.apply(R, bez1.concat(i / n1));\\n                        dots1.push({x: p.x, y: p.y, t: i / n1});\\n                    }\\n                    for (i = 0; i < n2 + 1; i++) {\\n                        p = R.findDotsAtSegment.apply(R, bez2.concat(i / n2));\\n                        dots2.push({x: p.x, y: p.y, t: i / n2});\\n                    }\\n                    for (i = 0; i < n1; i++) {\\n                        for (var j = 0; j < n2; j++) {\\n                            var di = dots1[i],\\n                                di1 = dots1[i + 1],\\n                                dj = dots2[j],\\n                                dj1 = dots2[j + 1],\\n                                ci = abs(di1.x - di.x) < .001 ? \\\"y\\\" : \\\"x\\\",\\n                                cj = abs(dj1.x - dj.x) < .001 ? \\\"y\\\" : \\\"x\\\",\\n                                is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\\n                            if (is) {\\n                                if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\\n                                    continue;\\n                                }\\n                                xy[is.x.toFixed(4)] = is.y.toFixed(4);\\n                                var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\\n                                    t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\\n                                if (t1 >= 0 && t1 <= 1.001 && t2 >= 0 && t2 <= 1.001) {\\n                                    if (justCount) {\\n                                        res++;\\n                                    } else {\\n                                        res.push({\\n                                            x: is.x,\\n                                            y: is.y,\\n                                            t1: mmin(t1, 1),\\n                                            t2: mmin(t2, 1)\\n                                        });\\n                                    }\\n                                }\\n                            }\\n                        }\\n                    }\\n                    return res;\\n                }\\n\\n                /*\\\\\\n                 * Raphael.pathIntersection\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Finds intersections of two paths\\n                 > Parameters\\n                 - path1 (string) path string\\n                 - path2 (string) path string\\n                 = (array) dots of intersection\\n                 o [\\n                 o     {\\n                 o         x: (number) x coordinate of the point\\n                 o         y: (number) y coordinate of the point\\n                 o         t1: (number) t value for segment of path1\\n                 o         t2: (number) t value for segment of path2\\n                 o         segment1: (number) order number for segment of path1\\n                 o         segment2: (number) order number for segment of path2\\n                 o         bez1: (array) eight coordinates representing beziér curve for the segment of path1\\n                 o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\\n                 o     }\\n                 o ]\\n                 \\\\*/\\n                R.pathIntersection = function (path1, path2) {\\n                    return interPathHelper(path1, path2);\\n                };\\n                R.pathIntersectionNumber = function (path1, path2) {\\n                    return interPathHelper(path1, path2, 1);\\n                };\\n                function interPathHelper(path1, path2, justCount) {\\n                    path1 = R._path2curve(path1);\\n                    path2 = R._path2curve(path2);\\n                    var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\\n                        res = justCount ? 0 : [];\\n                    for (var i = 0, ii = path1.length; i < ii; i++) {\\n                        var pi = path1[i];\\n                        if (pi[0] == \\\"M\\\") {\\n                            x1 = x1m = pi[1];\\n                            y1 = y1m = pi[2];\\n                        } else {\\n                            if (pi[0] == \\\"C\\\") {\\n                                bez1 = [x1, y1].concat(pi.slice(1));\\n                                x1 = bez1[6];\\n                                y1 = bez1[7];\\n                            } else {\\n                                bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\\n                                x1 = x1m;\\n                                y1 = y1m;\\n                            }\\n                            for (var j = 0, jj = path2.length; j < jj; j++) {\\n                                var pj = path2[j];\\n                                if (pj[0] == \\\"M\\\") {\\n                                    x2 = x2m = pj[1];\\n                                    y2 = y2m = pj[2];\\n                                } else {\\n                                    if (pj[0] == \\\"C\\\") {\\n                                        bez2 = [x2, y2].concat(pj.slice(1));\\n                                        x2 = bez2[6];\\n                                        y2 = bez2[7];\\n                                    } else {\\n                                        bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\\n                                        x2 = x2m;\\n                                        y2 = y2m;\\n                                    }\\n                                    var intr = interHelper(bez1, bez2, justCount);\\n                                    if (justCount) {\\n                                        res += intr;\\n                                    } else {\\n                                        for (var k = 0, kk = intr.length; k < kk; k++) {\\n                                            intr[k].segment1 = i;\\n                                            intr[k].segment2 = j;\\n                                            intr[k].bez1 = bez1;\\n                                            intr[k].bez2 = bez2;\\n                                        }\\n                                        res = res.concat(intr);\\n                                    }\\n                                }\\n                            }\\n                        }\\n                    }\\n                    return res;\\n                }\\n\\n                /*\\\\\\n                 * Raphael.isPointInsidePath\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Returns `true` if given point is inside a given closed path.\\n                 > Parameters\\n                 - path (string) path string\\n                 - x (number) x of the point\\n                 - y (number) y of the point\\n                 = (boolean) true, if point is inside the path\\n                 \\\\*/\\n                R.isPointInsidePath = function (path, x, y) {\\n                    var bbox = R.pathBBox(path);\\n                    return R.isPointInsideBBox(bbox, x, y) &&\\n                        interPathHelper(path, [[\\\"M\\\", x, y], [\\\"H\\\", bbox.x2 + 10]], 1) % 2 == 1;\\n                };\\n                R._removedFactory = function (methodname) {\\n                    return function () {\\n                        eve(\\\"raphael.log\\\", null, \\\"Rapha\\\\xebl: you are calling to method \\\\u201c\\\" + methodname + \\\"\\\\u201d of removed object\\\", methodname);\\n                    };\\n                };\\n                /*\\\\\\n                 * Raphael.pathBBox\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Return bounding box of a given path\\n                 > Parameters\\n                 - path (string) path string\\n                 = (object) bounding box\\n                 o {\\n                 o     x: (number) x coordinate of the left top point of the box\\n                 o     y: (number) y coordinate of the left top point of the box\\n                 o     x2: (number) x coordinate of the right bottom point of the box\\n                 o     y2: (number) y coordinate of the right bottom point of the box\\n                 o     width: (number) width of the box\\n                 o     height: (number) height of the box\\n                 o     cx: (number) x coordinate of the center of the box\\n                 o     cy: (number) y coordinate of the center of the box\\n                 o }\\n                 \\\\*/\\n                var pathDimensions = R.pathBBox = function (path) {\\n                        var pth = paths(path);\\n                        if (pth.bbox) {\\n                            return clone(pth.bbox);\\n                        }\\n                        if (!path) {\\n                            return {x: 0, y: 0, width: 0, height: 0, x2: 0, y2: 0};\\n                        }\\n                        path = path2curve(path);\\n                        var x = 0,\\n                            y = 0,\\n                            X = [],\\n                            Y = [],\\n                            p;\\n                        for (var i = 0, ii = path.length; i < ii; i++) {\\n                            p = path[i];\\n                            if (p[0] == \\\"M\\\") {\\n                                x = p[1];\\n                                y = p[2];\\n                                X.push(x);\\n                                Y.push(y);\\n                            } else {\\n                                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\\n                                X = X[concat](dim.min.x, dim.max.x);\\n                                Y = Y[concat](dim.min.y, dim.max.y);\\n                                x = p[5];\\n                                y = p[6];\\n                            }\\n                        }\\n                        var xmin = mmin[apply](0, X),\\n                            ymin = mmin[apply](0, Y),\\n                            xmax = mmax[apply](0, X),\\n                            ymax = mmax[apply](0, Y),\\n                            width = xmax - xmin,\\n                            height = ymax - ymin,\\n                            bb = {\\n                                x: xmin,\\n                                y: ymin,\\n                                x2: xmax,\\n                                y2: ymax,\\n                                width: width,\\n                                height: height,\\n                                cx: xmin + width / 2,\\n                                cy: ymin + height / 2\\n                            };\\n                        pth.bbox = clone(bb);\\n                        return bb;\\n                    },\\n                    pathClone = function (pathArray) {\\n                        var res = clone(pathArray);\\n                        res.toString = R._path2string;\\n                        return res;\\n                    },\\n                    pathToRelative = R._pathToRelative = function (pathArray) {\\n                        var pth = paths(pathArray);\\n                        if (pth.rel) {\\n                            return pathClone(pth.rel);\\n                        }\\n                        if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\\n                            pathArray = R.parsePathString(pathArray);\\n                        }\\n                        var res = [],\\n                            x = 0,\\n                            y = 0,\\n                            mx = 0,\\n                            my = 0,\\n                            start = 0;\\n                        if (pathArray[0][0] == \\\"M\\\") {\\n                            x = pathArray[0][1];\\n                            y = pathArray[0][2];\\n                            mx = x;\\n                            my = y;\\n                            start++;\\n                            res.push([\\\"M\\\", x, y]);\\n                        }\\n                        for (var i = start, ii = pathArray.length; i < ii; i++) {\\n                            var r = res[i] = [],\\n                                pa = pathArray[i];\\n                            if (pa[0] != lowerCase.call(pa[0])) {\\n                                r[0] = lowerCase.call(pa[0]);\\n                                switch (r[0]) {\\n                                    case \\\"a\\\":\\n                                        r[1] = pa[1];\\n                                        r[2] = pa[2];\\n                                        r[3] = pa[3];\\n                                        r[4] = pa[4];\\n                                        r[5] = pa[5];\\n                                        r[6] = +(pa[6] - x).toFixed(3);\\n                                        r[7] = +(pa[7] - y).toFixed(3);\\n                                        break;\\n                                    case \\\"v\\\":\\n                                        r[1] = +(pa[1] - y).toFixed(3);\\n                                        break;\\n                                    case \\\"m\\\":\\n                                        mx = pa[1];\\n                                        my = pa[2];\\n                                    default:\\n                                        for (var j = 1, jj = pa.length; j < jj; j++) {\\n                                            r[j] = +(pa[j] - ((j % 2) ? x : y)).toFixed(3);\\n                                        }\\n                                }\\n                            } else {\\n                                r = res[i] = [];\\n                                if (pa[0] == \\\"m\\\") {\\n                                    mx = pa[1] + x;\\n                                    my = pa[2] + y;\\n                                }\\n                                for (var k = 0, kk = pa.length; k < kk; k++) {\\n                                    res[i][k] = pa[k];\\n                                }\\n                            }\\n                            var len = res[i].length;\\n                            switch (res[i][0]) {\\n                                case \\\"z\\\":\\n                                    x = mx;\\n                                    y = my;\\n                                    break;\\n                                case \\\"h\\\":\\n                                    x += +res[i][len - 1];\\n                                    break;\\n                                case \\\"v\\\":\\n                                    y += +res[i][len - 1];\\n                                    break;\\n                                default:\\n                                    x += +res[i][len - 2];\\n                                    y += +res[i][len - 1];\\n                            }\\n                        }\\n                        res.toString = R._path2string;\\n                        pth.rel = pathClone(res);\\n                        return res;\\n                    },\\n                    pathToAbsolute = R._pathToAbsolute = function (pathArray) {\\n                        var pth = paths(pathArray);\\n                        if (pth.abs) {\\n                            return pathClone(pth.abs);\\n                        }\\n                        if (!R.is(pathArray, array) || !R.is(pathArray && pathArray[0], array)) { // rough assumption\\n                            pathArray = R.parsePathString(pathArray);\\n                        }\\n                        if (!pathArray || !pathArray.length) {\\n                            return [[\\\"M\\\", 0, 0]];\\n                        }\\n                        var res = [],\\n                            x = 0,\\n                            y = 0,\\n                            mx = 0,\\n                            my = 0,\\n                            start = 0;\\n                        if (pathArray[0][0] == \\\"M\\\") {\\n                            x = +pathArray[0][1];\\n                            y = +pathArray[0][2];\\n                            mx = x;\\n                            my = y;\\n                            start++;\\n                            res[0] = [\\\"M\\\", x, y];\\n                        }\\n                        var crz = pathArray.length == 3 && pathArray[0][0] == \\\"M\\\" && pathArray[1][0].toUpperCase() == \\\"R\\\" && pathArray[2][0].toUpperCase() == \\\"Z\\\";\\n                        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\\n                            res.push(r = []);\\n                            pa = pathArray[i];\\n                            if (pa[0] != upperCase.call(pa[0])) {\\n                                r[0] = upperCase.call(pa[0]);\\n                                switch (r[0]) {\\n                                    case \\\"A\\\":\\n                                        r[1] = pa[1];\\n                                        r[2] = pa[2];\\n                                        r[3] = pa[3];\\n                                        r[4] = pa[4];\\n                                        r[5] = pa[5];\\n                                        r[6] = +(pa[6] + x);\\n                                        r[7] = +(pa[7] + y);\\n                                        break;\\n                                    case \\\"V\\\":\\n                                        r[1] = +pa[1] + y;\\n                                        break;\\n                                    case \\\"H\\\":\\n                                        r[1] = +pa[1] + x;\\n                                        break;\\n                                    case \\\"R\\\":\\n                                        var dots = [x, y][concat](pa.slice(1));\\n                                        for (var j = 2, jj = dots.length; j < jj; j++) {\\n                                            dots[j] = +dots[j] + x;\\n                                            dots[++j] = +dots[j] + y;\\n                                        }\\n                                        res.pop();\\n                                        res = res[concat](catmullRom2bezier(dots, crz));\\n                                        break;\\n                                    case \\\"M\\\":\\n                                        mx = +pa[1] + x;\\n                                        my = +pa[2] + y;\\n                                    default:\\n                                        for (j = 1, jj = pa.length; j < jj; j++) {\\n                                            r[j] = +pa[j] + ((j % 2) ? x : y);\\n                                        }\\n                                }\\n                            } else if (pa[0] == \\\"R\\\") {\\n                                dots = [x, y][concat](pa.slice(1));\\n                                res.pop();\\n                                res = res[concat](catmullRom2bezier(dots, crz));\\n                                r = [\\\"R\\\"][concat](pa.slice(-2));\\n                            } else {\\n                                for (var k = 0, kk = pa.length; k < kk; k++) {\\n                                    r[k] = pa[k];\\n                                }\\n                            }\\n                            switch (r[0]) {\\n                                case \\\"Z\\\":\\n                                    x = mx;\\n                                    y = my;\\n                                    break;\\n                                case \\\"H\\\":\\n                                    x = r[1];\\n                                    break;\\n                                case \\\"V\\\":\\n                                    y = r[1];\\n                                    break;\\n                                case \\\"M\\\":\\n                                    mx = r[r.length - 2];\\n                                    my = r[r.length - 1];\\n                                default:\\n                                    x = r[r.length - 2];\\n                                    y = r[r.length - 1];\\n                            }\\n                        }\\n                        res.toString = R._path2string;\\n                        pth.abs = pathClone(res);\\n                        return res;\\n                    },\\n                    l2c = function (x1, y1, x2, y2) {\\n                        return [x1, y1, x2, y2, x2, y2];\\n                    },\\n                    q2c = function (x1, y1, ax, ay, x2, y2) {\\n                        var _13 = 1 / 3,\\n                            _23 = 2 / 3;\\n                        return [\\n                            _13 * x1 + _23 * ax,\\n                            _13 * y1 + _23 * ay,\\n                            _13 * x2 + _23 * ax,\\n                            _13 * y2 + _23 * ay,\\n                            x2,\\n                            y2\\n                        ];\\n                    },\\n                    a2c = function (x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\\n                        // for more information of where this math came from visit:\\n                        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\\n                        var _120 = PI * 120 / 180,\\n                            rad = PI / 180 * (+angle || 0),\\n                            res = [],\\n                            xy,\\n                            rotate = cacher(function (x, y, rad) {\\n                                var X = x * math.cos(rad) - y * math.sin(rad),\\n                                    Y = x * math.sin(rad) + y * math.cos(rad);\\n                                return {x: X, y: Y};\\n                            });\\n                        if (!recursive) {\\n                            xy = rotate(x1, y1, -rad);\\n                            x1 = xy.x;\\n                            y1 = xy.y;\\n                            xy = rotate(x2, y2, -rad);\\n                            x2 = xy.x;\\n                            y2 = xy.y;\\n                            var cos = math.cos(PI / 180 * angle),\\n                                sin = math.sin(PI / 180 * angle),\\n                                x = (x1 - x2) / 2,\\n                                y = (y1 - y2) / 2;\\n                            var h = (x * x) / (rx * rx) + (y * y) / (ry * ry);\\n                            if (h > 1) {\\n                                h = math.sqrt(h);\\n                                rx = h * rx;\\n                                ry = h * ry;\\n                            }\\n                            var rx2 = rx * rx,\\n                                ry2 = ry * ry,\\n                                k = (large_arc_flag == sweep_flag ? -1 : 1) *\\n                                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\\n                                cx = k * rx * y / ry + (x1 + x2) / 2,\\n                                cy = k * -ry * x / rx + (y1 + y2) / 2,\\n                                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\\n                                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\\n\\n                            f1 = x1 < cx ? PI - f1 : f1;\\n                            f2 = x2 < cx ? PI - f2 : f2;\\n                            f1 < 0 && (f1 = PI * 2 + f1);\\n                            f2 < 0 && (f2 = PI * 2 + f2);\\n                            if (sweep_flag && f1 > f2) {\\n                                f1 = f1 - PI * 2;\\n                            }\\n                            if (!sweep_flag && f2 > f1) {\\n                                f2 = f2 - PI * 2;\\n                            }\\n                        } else {\\n                            f1 = recursive[0];\\n                            f2 = recursive[1];\\n                            cx = recursive[2];\\n                            cy = recursive[3];\\n                        }\\n                        var df = f2 - f1;\\n                        if (abs(df) > _120) {\\n                            var f2old = f2,\\n                                x2old = x2,\\n                                y2old = y2;\\n                            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\\n                            x2 = cx + rx * math.cos(f2);\\n                            y2 = cy + ry * math.sin(f2);\\n                            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\\n                        }\\n                        df = f2 - f1;\\n                        var c1 = math.cos(f1),\\n                            s1 = math.sin(f1),\\n                            c2 = math.cos(f2),\\n                            s2 = math.sin(f2),\\n                            t = math.tan(df / 4),\\n                            hx = 4 / 3 * rx * t,\\n                            hy = 4 / 3 * ry * t,\\n                            m1 = [x1, y1],\\n                            m2 = [x1 + hx * s1, y1 - hy * c1],\\n                            m3 = [x2 + hx * s2, y2 - hy * c2],\\n                            m4 = [x2, y2];\\n                        m2[0] = 2 * m1[0] - m2[0];\\n                        m2[1] = 2 * m1[1] - m2[1];\\n                        if (recursive) {\\n                            return [m2, m3, m4][concat](res);\\n                        } else {\\n                            res = [m2, m3, m4][concat](res).join()[split](\\\",\\\");\\n                            var newres = [];\\n                            for (var i = 0, ii = res.length; i < ii; i++) {\\n                                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\\n                            }\\n                            return newres;\\n                        }\\n                    },\\n                    findDotAtSegment = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\\n                        var t1 = 1 - t;\\n                        return {\\n                            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\\n                            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\\n                        };\\n                    },\\n                    curveDim = cacher(function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\\n                        var a = (c2x - 2 * c1x + p1x) - (p2x - 2 * c2x + c1x),\\n                            b = 2 * (c1x - p1x) - 2 * (c2x - c1x),\\n                            c = p1x - c1x,\\n                            t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a,\\n                            t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a,\\n                            y = [p1y, p2y],\\n                            x = [p1x, p2x],\\n                            dot;\\n                        abs(t1) > \\\"1e12\\\" && (t1 = .5);\\n                        abs(t2) > \\\"1e12\\\" && (t2 = .5);\\n                        if (t1 > 0 && t1 < 1) {\\n                            dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\\n                            x.push(dot.x);\\n                            y.push(dot.y);\\n                        }\\n                        if (t2 > 0 && t2 < 1) {\\n                            dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\\n                            x.push(dot.x);\\n                            y.push(dot.y);\\n                        }\\n                        a = (c2y - 2 * c1y + p1y) - (p2y - 2 * c2y + c1y);\\n                        b = 2 * (c1y - p1y) - 2 * (c2y - c1y);\\n                        c = p1y - c1y;\\n                        t1 = (-b + math.sqrt(b * b - 4 * a * c)) / 2 / a;\\n                        t2 = (-b - math.sqrt(b * b - 4 * a * c)) / 2 / a;\\n                        abs(t1) > \\\"1e12\\\" && (t1 = .5);\\n                        abs(t2) > \\\"1e12\\\" && (t2 = .5);\\n                        if (t1 > 0 && t1 < 1) {\\n                            dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t1);\\n                            x.push(dot.x);\\n                            y.push(dot.y);\\n                        }\\n                        if (t2 > 0 && t2 < 1) {\\n                            dot = findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t2);\\n                            x.push(dot.x);\\n                            y.push(dot.y);\\n                        }\\n                        return {\\n                            min: {x: mmin[apply](0, x), y: mmin[apply](0, y)},\\n                            max: {x: mmax[apply](0, x), y: mmax[apply](0, y)}\\n                        };\\n                    }),\\n                    path2curve = R._path2curve = cacher(function (path, path2) {\\n                        var pth = !path2 && paths(path);\\n                        if (!path2 && pth.curve) {\\n                            return pathClone(pth.curve);\\n                        }\\n                        var p = pathToAbsolute(path),\\n                            p2 = path2 && pathToAbsolute(path2),\\n                            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\\n                            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\\n                            processPath = function (path, d, pcom) {\\n                                var nx, ny, tq = {T: 1, Q: 1};\\n                                if (!path) {\\n                                    return [\\\"C\\\", d.x, d.y, d.x, d.y, d.x, d.y];\\n                                }\\n                                !(path[0] in tq) && (d.qx = d.qy = null);\\n                                switch (path[0]) {\\n                                    case \\\"M\\\":\\n                                        d.X = path[1];\\n                                        d.Y = path[2];\\n                                        break;\\n                                    case \\\"A\\\":\\n                                        path = [\\\"C\\\"][concat](a2c[apply](0, [d.x, d.y][concat](path.slice(1))));\\n                                        break;\\n                                    case \\\"S\\\":\\n                                        if (pcom == \\\"C\\\" || pcom == \\\"S\\\") { // In \\\"S\\\" case we have to take into account, if the previous command is C/S.\\n                                            nx = d.x * 2 - d.bx;          // And reflect the previous\\n                                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\\n                                        }\\n                                        else {                            // or some else or nothing\\n                                            nx = d.x;\\n                                            ny = d.y;\\n                                        }\\n                                        path = [\\\"C\\\", nx, ny][concat](path.slice(1));\\n                                        break;\\n                                    case \\\"T\\\":\\n                                        if (pcom == \\\"Q\\\" || pcom == \\\"T\\\") { // In \\\"T\\\" case we have to take into account, if the previous command is Q/T.\\n                                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\\n                                            d.qy = d.y * 2 - d.qy;        // to case \\\"S\\\".\\n                                        }\\n                                        else {                            // or something else or nothing\\n                                            d.qx = d.x;\\n                                            d.qy = d.y;\\n                                        }\\n                                        path = [\\\"C\\\"][concat](q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\\n                                        break;\\n                                    case \\\"Q\\\":\\n                                        d.qx = path[1];\\n                                        d.qy = path[2];\\n                                        path = [\\\"C\\\"][concat](q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\\n                                        break;\\n                                    case \\\"L\\\":\\n                                        path = [\\\"C\\\"][concat](l2c(d.x, d.y, path[1], path[2]));\\n                                        break;\\n                                    case \\\"H\\\":\\n                                        path = [\\\"C\\\"][concat](l2c(d.x, d.y, path[1], d.y));\\n                                        break;\\n                                    case \\\"V\\\":\\n                                        path = [\\\"C\\\"][concat](l2c(d.x, d.y, d.x, path[1]));\\n                                        break;\\n                                    case \\\"Z\\\":\\n                                        path = [\\\"C\\\"][concat](l2c(d.x, d.y, d.X, d.Y));\\n                                        break;\\n                                }\\n                                return path;\\n                            },\\n                            fixArc = function (pp, i) {\\n                                if (pp[i].length > 7) {\\n                                    pp[i].shift();\\n                                    var pi = pp[i];\\n                                    while (pi.length) {\\n                                        pcoms1[i] = \\\"A\\\"; // if created multiple C:s, their original seg is saved\\n                                        p2 && (pcoms2[i] = \\\"A\\\"); // the same as above\\n                                        pp.splice(i++, 0, [\\\"C\\\"][concat](pi.splice(0, 6)));\\n                                    }\\n                                    pp.splice(i, 1);\\n                                    ii = mmax(p.length, p2 && p2.length || 0);\\n                                }\\n                            },\\n                            fixM = function (path1, path2, a1, a2, i) {\\n                                if (path1 && path2 && path1[i][0] == \\\"M\\\" && path2[i][0] != \\\"M\\\") {\\n                                    path2.splice(i, 0, [\\\"M\\\", a2.x, a2.y]);\\n                                    a1.bx = 0;\\n                                    a1.by = 0;\\n                                    a1.x = path1[i][1];\\n                                    a1.y = path1[i][2];\\n                                    ii = mmax(p.length, p2 && p2.length || 0);\\n                                }\\n                            },\\n                            pcoms1 = [], // path commands of original path p\\n                            pcoms2 = [], // path commands of original path p2\\n                            pfirst = \\\"\\\", // temporary holder for original path command\\n                            pcom = \\\"\\\"; // holder for previous path command of original path\\n                        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\\n                            p[i] && (pfirst = p[i][0]); // save current path command\\n\\n                            if (pfirst != \\\"C\\\") // C is not saved yet, because it may be result of conversion\\n                            {\\n                                pcoms1[i] = pfirst; // Save current path command\\n                                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\\n                            }\\n                            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\\n\\n                            if (pcoms1[i] != \\\"A\\\" && pfirst == \\\"C\\\") pcoms1[i] = \\\"C\\\"; // A is the only command\\n                            // which may produce multiple C:s\\n                            // so we have to make sure that C is also C in original path\\n\\n                            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\\n\\n                            if (p2) { // the same procedures is done to p2\\n                                p2[i] && (pfirst = p2[i][0]);\\n                                if (pfirst != \\\"C\\\") {\\n                                    pcoms2[i] = pfirst;\\n                                    i && (pcom = pcoms2[i - 1]);\\n                                }\\n                                p2[i] = processPath(p2[i], attrs2, pcom);\\n\\n                                if (pcoms2[i] != \\\"A\\\" && pfirst == \\\"C\\\") pcoms2[i] = \\\"C\\\";\\n\\n                                fixArc(p2, i);\\n                            }\\n                            fixM(p, p2, attrs, attrs2, i);\\n                            fixM(p2, p, attrs2, attrs, i);\\n                            var seg = p[i],\\n                                seg2 = p2 && p2[i],\\n                                seglen = seg.length,\\n                                seg2len = p2 && seg2.length;\\n                            attrs.x = seg[seglen - 2];\\n                            attrs.y = seg[seglen - 1];\\n                            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\\n                            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\\n                            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\\n                            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\\n                            attrs2.x = p2 && seg2[seg2len - 2];\\n                            attrs2.y = p2 && seg2[seg2len - 1];\\n                        }\\n                        if (!p2) {\\n                            pth.curve = pathClone(p);\\n                        }\\n                        return p2 ? [p, p2] : p;\\n                    }, null, pathClone),\\n                    parseDots = R._parseDots = cacher(function (gradient) {\\n                        var dots = [];\\n                        for (var i = 0, ii = gradient.length; i < ii; i++) {\\n                            var dot = {},\\n                                par = gradient[i].match(/^([^:]*):?([\\\\d\\\\.]*)/);\\n                            dot.color = R.getRGB(par[1]);\\n                            if (dot.color.error) {\\n                                return null;\\n                            }\\n                            dot.opacity = dot.color.opacity;\\n                            dot.color = dot.color.hex;\\n                            par[2] && (dot.offset = par[2] + \\\"%\\\");\\n                            dots.push(dot);\\n                        }\\n                        for (i = 1, ii = dots.length - 1; i < ii; i++) {\\n                            if (!dots[i].offset) {\\n                                var start = toFloat(dots[i - 1].offset || 0),\\n                                    end = 0;\\n                                for (var j = i + 1; j < ii; j++) {\\n                                    if (dots[j].offset) {\\n                                        end = dots[j].offset;\\n                                        break;\\n                                    }\\n                                }\\n                                if (!end) {\\n                                    end = 100;\\n                                    j = ii;\\n                                }\\n                                end = toFloat(end);\\n                                var d = (end - start) / (j - i + 1);\\n                                for (; i < j; i++) {\\n                                    start += d;\\n                                    dots[i].offset = start + \\\"%\\\";\\n                                }\\n                            }\\n                        }\\n                        return dots;\\n                    }),\\n                    tear = R._tear = function (el, paper) {\\n                        el == paper.top && (paper.top = el.prev);\\n                        el == paper.bottom && (paper.bottom = el.next);\\n                        el.next && (el.next.prev = el.prev);\\n                        el.prev && (el.prev.next = el.next);\\n                    },\\n                    tofront = R._tofront = function (el, paper) {\\n                        if (paper.top === el) {\\n                            return;\\n                        }\\n                        tear(el, paper);\\n                        el.next = null;\\n                        el.prev = paper.top;\\n                        paper.top.next = el;\\n                        paper.top = el;\\n                    },\\n                    toback = R._toback = function (el, paper) {\\n                        if (paper.bottom === el) {\\n                            return;\\n                        }\\n                        tear(el, paper);\\n                        el.next = paper.bottom;\\n                        el.prev = null;\\n                        paper.bottom.prev = el;\\n                        paper.bottom = el;\\n                    },\\n                    insertafter = R._insertafter = function (el, el2, paper) {\\n                        tear(el, paper);\\n                        el2 == paper.top && (paper.top = el);\\n                        el2.next && (el2.next.prev = el);\\n                        el.next = el2.next;\\n                        el.prev = el2;\\n                        el2.next = el;\\n                    },\\n                    insertbefore = R._insertbefore = function (el, el2, paper) {\\n                        tear(el, paper);\\n                        el2 == paper.bottom && (paper.bottom = el);\\n                        el2.prev && (el2.prev.next = el);\\n                        el.prev = el2.prev;\\n                        el2.prev = el;\\n                        el.next = el2;\\n                    },\\n                    /*\\\\\\n                     * Raphael.toMatrix\\n                     [ method ]\\n                     **\\n                     * Utility method\\n                     **\\n                     * Returns matrix of transformations applied to a given path\\n                     > Parameters\\n                     - path (string) path string\\n                     - transform (string|array) transformation string\\n                     = (object) @Matrix\\n                     \\\\*/\\n                    toMatrix = R.toMatrix = function (path, transform) {\\n                        var bb = pathDimensions(path),\\n                            el = {\\n                                _: {\\n                                    transform: E\\n                                },\\n                                getBBox: function () {\\n                                    return bb;\\n                                }\\n                            };\\n                        extractTransform(el, transform);\\n                        return el.matrix;\\n                    },\\n                    /*\\\\\\n                     * Raphael.transformPath\\n                     [ method ]\\n                     **\\n                     * Utility method\\n                     **\\n                     * Returns path transformed by a given transformation\\n                     > Parameters\\n                     - path (string) path string\\n                     - transform (string|array) transformation string\\n                     = (string) path\\n                     \\\\*/\\n                    transformPath = R.transformPath = function (path, transform) {\\n                        return mapPath(path, toMatrix(path, transform));\\n                    },\\n                    extractTransform = R._extractTransform = function (el, tstr) {\\n                        if (tstr == null) {\\n                            return el._.transform;\\n                        }\\n                        tstr = Str(tstr).replace(/\\\\.{3}|\\\\u2026/g, el._.transform || E);\\n                        var tdata = R.parseTransformString(tstr),\\n                            deg = 0,\\n                            dx = 0,\\n                            dy = 0,\\n                            sx = 1,\\n                            sy = 1,\\n                            _ = el._,\\n                            m = new Matrix;\\n                        _.transform = tdata || [];\\n                        if (tdata) {\\n                            for (var i = 0, ii = tdata.length; i < ii; i++) {\\n                                var t = tdata[i],\\n                                    tlen = t.length,\\n                                    command = Str(t[0]).toLowerCase(),\\n                                    absolute = t[0] != command,\\n                                    inver = absolute ? m.invert() : 0,\\n                                    x1,\\n                                    y1,\\n                                    x2,\\n                                    y2,\\n                                    bb;\\n                                if (command == \\\"t\\\" && tlen == 3) {\\n                                    if (absolute) {\\n                                        x1 = inver.x(0, 0);\\n                                        y1 = inver.y(0, 0);\\n                                        x2 = inver.x(t[1], t[2]);\\n                                        y2 = inver.y(t[1], t[2]);\\n                                        m.translate(x2 - x1, y2 - y1);\\n                                    } else {\\n                                        m.translate(t[1], t[2]);\\n                                    }\\n                                } else if (command == \\\"r\\\") {\\n                                    if (tlen == 2) {\\n                                        bb = bb || el.getBBox(1);\\n                                        m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\\n                                        deg += t[1];\\n                                    } else if (tlen == 4) {\\n                                        if (absolute) {\\n                                            x2 = inver.x(t[2], t[3]);\\n                                            y2 = inver.y(t[2], t[3]);\\n                                            m.rotate(t[1], x2, y2);\\n                                        } else {\\n                                            m.rotate(t[1], t[2], t[3]);\\n                                        }\\n                                        deg += t[1];\\n                                    }\\n                                } else if (command == \\\"s\\\") {\\n                                    if (tlen == 2 || tlen == 3) {\\n                                        bb = bb || el.getBBox(1);\\n                                        m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\\n                                        sx *= t[1];\\n                                        sy *= t[tlen - 1];\\n                                    } else if (tlen == 5) {\\n                                        if (absolute) {\\n                                            x2 = inver.x(t[3], t[4]);\\n                                            y2 = inver.y(t[3], t[4]);\\n                                            m.scale(t[1], t[2], x2, y2);\\n                                        } else {\\n                                            m.scale(t[1], t[2], t[3], t[4]);\\n                                        }\\n                                        sx *= t[1];\\n                                        sy *= t[2];\\n                                    }\\n                                } else if (command == \\\"m\\\" && tlen == 7) {\\n                                    m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\\n                                }\\n                                _.dirtyT = 1;\\n                                el.matrix = m;\\n                            }\\n                        }\\n\\n                        /*\\\\\\n                         * Element.matrix\\n                         [ property (object) ]\\n                         **\\n                         * Keeps @Matrix object, which represents element transformation\\n                         \\\\*/\\n                        el.matrix = m;\\n\\n                        _.sx = sx;\\n                        _.sy = sy;\\n                        _.deg = deg;\\n                        _.dx = dx = m.e;\\n                        _.dy = dy = m.f;\\n\\n                        if (sx == 1 && sy == 1 && !deg && _.bbox) {\\n                            _.bbox.x += +dx;\\n                            _.bbox.y += +dy;\\n                        } else {\\n                            _.dirtyT = 1;\\n                        }\\n                    },\\n                    getEmpty = function (item) {\\n                        var l = item[0];\\n                        switch (l.toLowerCase()) {\\n                            case \\\"t\\\":\\n                                return [l, 0, 0];\\n                            case \\\"m\\\":\\n                                return [l, 1, 0, 0, 1, 0, 0];\\n                            case \\\"r\\\":\\n                                if (item.length == 4) {\\n                                    return [l, 0, item[2], item[3]];\\n                                } else {\\n                                    return [l, 0];\\n                                }\\n                            case \\\"s\\\":\\n                                if (item.length == 5) {\\n                                    return [l, 1, 1, item[3], item[4]];\\n                                } else if (item.length == 3) {\\n                                    return [l, 1, 1];\\n                                } else {\\n                                    return [l, 1];\\n                                }\\n                        }\\n                    },\\n                    equaliseTransform = R._equaliseTransform = function (t1, t2) {\\n                        t2 = Str(t2).replace(/\\\\.{3}|\\\\u2026/g, t1);\\n                        t1 = R.parseTransformString(t1) || [];\\n                        t2 = R.parseTransformString(t2) || [];\\n                        var maxlength = mmax(t1.length, t2.length),\\n                            from = [],\\n                            to = [],\\n                            i = 0, j, jj,\\n                            tt1, tt2;\\n                        for (; i < maxlength; i++) {\\n                            tt1 = t1[i] || getEmpty(t2[i]);\\n                            tt2 = t2[i] || getEmpty(tt1);\\n                            if ((tt1[0] != tt2[0]) ||\\n                                (tt1[0].toLowerCase() == \\\"r\\\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3])) ||\\n                                (tt1[0].toLowerCase() == \\\"s\\\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4]))\\n                            ) {\\n                                return;\\n                            }\\n                            from[i] = [];\\n                            to[i] = [];\\n                            for (j = 0, jj = mmax(tt1.length, tt2.length); j < jj; j++) {\\n                                j in tt1 && (from[i][j] = tt1[j]);\\n                                j in tt2 && (to[i][j] = tt2[j]);\\n                            }\\n                        }\\n                        return {\\n                            from: from,\\n                            to: to\\n                        };\\n                    };\\n                R._getContainer = function (x, y, w, h) {\\n                    var container;\\n                    container = h == null && !R.is(x, \\\"object\\\") ? g.doc.getElementById(x) : x;\\n                    if (container == null) {\\n                        return;\\n                    }\\n                    if (container.tagName) {\\n                        if (y == null) {\\n                            return {\\n                                container: container,\\n                                width: container.style.pixelWidth || container.offsetWidth,\\n                                height: container.style.pixelHeight || container.offsetHeight\\n                            };\\n                        } else {\\n                            return {\\n                                container: container,\\n                                width: y,\\n                                height: w\\n                            };\\n                        }\\n                    }\\n                    return {\\n                        container: 1,\\n                        x: x,\\n                        y: y,\\n                        width: w,\\n                        height: h\\n                    };\\n                };\\n                /*\\\\\\n                 * Raphael.pathToRelative\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Converts path to relative form\\n                 > Parameters\\n                 - pathString (string|array) path string or array of segments\\n                 = (array) array of segments.\\n                 \\\\*/\\n                R.pathToRelative = pathToRelative;\\n                R._engine = {};\\n                /*\\\\\\n                 * Raphael.path2curve\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Converts path to a new path where all segments are cubic bezier curves.\\n                 > Parameters\\n                 - pathString (string|array) path string or array of segments\\n                 = (array) array of segments.\\n                 \\\\*/\\n                R.path2curve = path2curve;\\n                /*\\\\\\n                 * Raphael.matrix\\n                 [ method ]\\n                 **\\n                 * Utility method\\n                 **\\n                 * Returns matrix based on given parameters.\\n                 > Parameters\\n                 - a (number)\\n                 - b (number)\\n                 - c (number)\\n                 - d (number)\\n                 - e (number)\\n                 - f (number)\\n                 = (object) @Matrix\\n                 \\\\*/\\n                R.matrix = function (a, b, c, d, e, f) {\\n                    return new Matrix(a, b, c, d, e, f);\\n                };\\n                function Matrix(a, b, c, d, e, f) {\\n                    if (a != null) {\\n                        this.a = +a;\\n                        this.b = +b;\\n                        this.c = +c;\\n                        this.d = +d;\\n                        this.e = +e;\\n                        this.f = +f;\\n                    } else {\\n                        this.a = 1;\\n                        this.b = 0;\\n                        this.c = 0;\\n                        this.d = 1;\\n                        this.e = 0;\\n                        this.f = 0;\\n                    }\\n                }\\n\\n                (function (matrixproto) {\\n                    /*\\\\\\n                     * Matrix.add\\n                     [ method ]\\n                     **\\n                     * Adds given matrix to existing one.\\n                     > Parameters\\n                     - a (number)\\n                     - b (number)\\n                     - c (number)\\n                     - d (number)\\n                     - e (number)\\n                     - f (number)\\n                     or\\n                     - matrix (object) @Matrix\\n                     \\\\*/\\n                    matrixproto.add = function (a, b, c, d, e, f) {\\n                        var out = [[], [], []],\\n                            m = [[this.a, this.c, this.e], [this.b, this.d, this.f], [0, 0, 1]],\\n                            matrix = [[a, c, e], [b, d, f], [0, 0, 1]],\\n                            x, y, z, res;\\n\\n                        if (a && a instanceof Matrix) {\\n                            matrix = [[a.a, a.c, a.e], [a.b, a.d, a.f], [0, 0, 1]];\\n                        }\\n\\n                        for (x = 0; x < 3; x++) {\\n                            for (y = 0; y < 3; y++) {\\n                                res = 0;\\n                                for (z = 0; z < 3; z++) {\\n                                    res += m[x][z] * matrix[z][y];\\n                                }\\n                                out[x][y] = res;\\n                            }\\n                        }\\n                        this.a = out[0][0];\\n                        this.b = out[1][0];\\n                        this.c = out[0][1];\\n                        this.d = out[1][1];\\n                        this.e = out[0][2];\\n                        this.f = out[1][2];\\n                    };\\n                    /*\\\\\\n                     * Matrix.invert\\n                     [ method ]\\n                     **\\n                     * Returns inverted version of the matrix\\n                     = (object) @Matrix\\n                     \\\\*/\\n                    matrixproto.invert = function () {\\n                        var me = this,\\n                            x = me.a * me.d - me.b * me.c;\\n                        return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\\n                    };\\n                    /*\\\\\\n                     * Matrix.clone\\n                     [ method ]\\n                     **\\n                     * Returns copy of the matrix\\n                     = (object) @Matrix\\n                     \\\\*/\\n                    matrixproto.clone = function () {\\n                        return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\\n                    };\\n                    /*\\\\\\n                     * Matrix.translate\\n                     [ method ]\\n                     **\\n                     * Translate the matrix\\n                     > Parameters\\n                     - x (number)\\n                     - y (number)\\n                     \\\\*/\\n                    matrixproto.translate = function (x, y) {\\n                        this.add(1, 0, 0, 1, x, y);\\n                    };\\n                    /*\\\\\\n                     * Matrix.scale\\n                     [ method ]\\n                     **\\n                     * Scales the matrix\\n                     > Parameters\\n                     - x (number)\\n                     - y (number) #optional\\n                     - cx (number) #optional\\n                     - cy (number) #optional\\n                     \\\\*/\\n                    matrixproto.scale = function (x, y, cx, cy) {\\n                        y == null && (y = x);\\n                        (cx || cy) && this.add(1, 0, 0, 1, cx, cy);\\n                        this.add(x, 0, 0, y, 0, 0);\\n                        (cx || cy) && this.add(1, 0, 0, 1, -cx, -cy);\\n                    };\\n                    /*\\\\\\n                     * Matrix.rotate\\n                     [ method ]\\n                     **\\n                     * Rotates the matrix\\n                     > Parameters\\n                     - a (number)\\n                     - x (number)\\n                     - y (number)\\n                     \\\\*/\\n                    matrixproto.rotate = function (a, x, y) {\\n                        a = R.rad(a);\\n                        x = x || 0;\\n                        y = y || 0;\\n                        var cos = +math.cos(a).toFixed(9),\\n                            sin = +math.sin(a).toFixed(9);\\n                        this.add(cos, sin, -sin, cos, x, y);\\n                        this.add(1, 0, 0, 1, -x, -y);\\n                    };\\n                    /*\\\\\\n                     * Matrix.x\\n                     [ method ]\\n                     **\\n                     * Return x coordinate for given point after transformation described by the matrix. See also @Matrix.y\\n                     > Parameters\\n                     - x (number)\\n                     - y (number)\\n                     = (number) x\\n                     \\\\*/\\n                    matrixproto.x = function (x, y) {\\n                        return x * this.a + y * this.c + this.e;\\n                    };\\n                    /*\\\\\\n                     * Matrix.y\\n                     [ method ]\\n                     **\\n                     * Return y coordinate for given point after transformation described by the matrix. See also @Matrix.x\\n                     > Parameters\\n                     - x (number)\\n                     - y (number)\\n                     = (number) y\\n                     \\\\*/\\n                    matrixproto.y = function (x, y) {\\n                        return x * this.b + y * this.d + this.f;\\n                    };\\n                    matrixproto.get = function (i) {\\n                        return +this[Str.fromCharCode(97 + i)].toFixed(4);\\n                    };\\n                    matrixproto.toString = function () {\\n                        return R.svg ?\\n                            \\\"matrix(\\\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \\\")\\\" :\\n                            [this.get(0), this.get(2), this.get(1), this.get(3), 0, 0].join();\\n                    };\\n                    matrixproto.toFilter = function () {\\n                        return \\\"progid:DXImageTransform.Microsoft.Matrix(M11=\\\" + this.get(0) +\\n                            \\\", M12=\\\" + this.get(2) + \\\", M21=\\\" + this.get(1) + \\\", M22=\\\" + this.get(3) +\\n                            \\\", Dx=\\\" + this.get(4) + \\\", Dy=\\\" + this.get(5) + \\\", sizingmethod='auto expand')\\\";\\n                    };\\n                    matrixproto.offset = function () {\\n                        return [this.e.toFixed(4), this.f.toFixed(4)];\\n                    };\\n                    function norm(a) {\\n                        return a[0] * a[0] + a[1] * a[1];\\n                    }\\n\\n                    function normalize(a) {\\n                        var mag = math.sqrt(norm(a));\\n                        a[0] && (a[0] /= mag);\\n                        a[1] && (a[1] /= mag);\\n                    }\\n\\n                    /*\\\\\\n                     * Matrix.split\\n                     [ method ]\\n                     **\\n                     * Splits matrix into primitive transformations\\n                     = (object) in format:\\n                     o dx (number) translation by x\\n                     o dy (number) translation by y\\n                     o scalex (number) scale by x\\n                     o scaley (number) scale by y\\n                     o shear (number) shear\\n                     o rotate (number) rotation in deg\\n                     o isSimple (boolean) could it be represented via simple transformations\\n                     \\\\*/\\n                    matrixproto.split = function () {\\n                        var out = {};\\n                        // translation\\n                        out.dx = this.e;\\n                        out.dy = this.f;\\n\\n                        // scale and shear\\n                        var row = [[this.a, this.c], [this.b, this.d]];\\n                        out.scalex = math.sqrt(norm(row[0]));\\n                        normalize(row[0]);\\n\\n                        out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\\n                        row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\\n\\n                        out.scaley = math.sqrt(norm(row[1]));\\n                        normalize(row[1]);\\n                        out.shear /= out.scaley;\\n\\n                        // rotation\\n                        var sin = -row[0][1],\\n                            cos = row[1][1];\\n                        if (cos < 0) {\\n                            out.rotate = R.deg(math.acos(cos));\\n                            if (sin < 0) {\\n                                out.rotate = 360 - out.rotate;\\n                            }\\n                        } else {\\n                            out.rotate = R.deg(math.asin(sin));\\n                        }\\n\\n                        out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\\n                        out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\\n                        out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\\n                        return out;\\n                    };\\n                    /*\\\\\\n                     * Matrix.toTransformString\\n                     [ method ]\\n                     **\\n                     * Return transform string that represents given matrix\\n                     = (string) transform string\\n                     \\\\*/\\n                    matrixproto.toTransformString = function (shorter) {\\n                        var s = shorter || this[split]();\\n                        if (s.isSimple) {\\n                            s.scalex = +s.scalex.toFixed(4);\\n                            s.scaley = +s.scaley.toFixed(4);\\n                            s.rotate = +s.rotate.toFixed(4);\\n                            return (s.dx || s.dy ? \\\"t\\\" + [s.dx, s.dy] : E) +\\n                                (s.scalex != 1 || s.scaley != 1 ? \\\"s\\\" + [s.scalex, s.scaley, 0, 0] : E) +\\n                                (s.rotate ? \\\"r\\\" + [s.rotate, 0, 0] : E);\\n                        } else {\\n                            return \\\"m\\\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\\n                        }\\n                    };\\n                })(Matrix.prototype);\\n\\n                var preventDefault = function () {\\n                        this.returnValue = false;\\n                    },\\n                    preventTouch = function () {\\n                        return this.originalEvent.preventDefault();\\n                    },\\n                    stopPropagation = function () {\\n                        this.cancelBubble = true;\\n                    },\\n                    stopTouch = function () {\\n                        return this.originalEvent.stopPropagation();\\n                    },\\n                    getEventPosition = function (e) {\\n                        var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\\n                            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\\n\\n                        return {\\n                            x: e.clientX + scrollX,\\n                            y: e.clientY + scrollY\\n                        };\\n                    },\\n                    addEvent = (function () {\\n                        if (g.doc.addEventListener) {\\n                            return function (obj, type, fn, element) {\\n                                var f = function (e) {\\n                                    var pos = getEventPosition(e);\\n                                    return fn.call(element, e, pos.x, pos.y);\\n                                };\\n                                obj.addEventListener(type, f, false);\\n\\n                                if (supportsTouch && touchMap[type]) {\\n                                    var _f = function (e) {\\n                                        var pos = getEventPosition(e),\\n                                            olde = e;\\n\\n                                        for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\\n                                            if (e.targetTouches[i].target == obj) {\\n                                                e = e.targetTouches[i];\\n                                                e.originalEvent = olde;\\n                                                e.preventDefault = preventTouch;\\n                                                e.stopPropagation = stopTouch;\\n                                                break;\\n                                            }\\n                                        }\\n\\n                                        return fn.call(element, e, pos.x, pos.y);\\n                                    };\\n                                    obj.addEventListener(touchMap[type], _f, false);\\n                                }\\n\\n                                return function () {\\n                                    obj.removeEventListener(type, f, false);\\n\\n                                    if (supportsTouch && touchMap[type])\\n                                        obj.removeEventListener(touchMap[type], _f, false);\\n\\n                                    return true;\\n                                };\\n                            };\\n                        } else if (g.doc.attachEvent) {\\n                            return function (obj, type, fn, element) {\\n                                var f = function (e) {\\n                                    e = e || g.win.event;\\n                                    var scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\\n                                        scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\\n                                        x = e.clientX + scrollX,\\n                                        y = e.clientY + scrollY;\\n                                    e.preventDefault = e.preventDefault || preventDefault;\\n                                    e.stopPropagation = e.stopPropagation || stopPropagation;\\n                                    return fn.call(element, e, x, y);\\n                                };\\n                                obj.attachEvent(\\\"on\\\" + type, f);\\n                                var detacher = function () {\\n                                    obj.detachEvent(\\\"on\\\" + type, f);\\n                                    return true;\\n                                };\\n                                return detacher;\\n                            };\\n                        }\\n                    })(),\\n                    drag = [],\\n                    dragMove = function (e) {\\n                        var x = e.clientX,\\n                            y = e.clientY,\\n                            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\\n                            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft,\\n                            dragi,\\n                            j = drag.length;\\n                        while (j--) {\\n                            dragi = drag[j];\\n                            if (supportsTouch && e.touches) {\\n                                var i = e.touches.length,\\n                                    touch;\\n                                while (i--) {\\n                                    touch = e.touches[i];\\n                                    if (touch.identifier == dragi.el._drag.id) {\\n                                        x = touch.clientX;\\n                                        y = touch.clientY;\\n                                        (e.originalEvent ? e.originalEvent : e).preventDefault();\\n                                        break;\\n                                    }\\n                                }\\n                            } else {\\n                                e.preventDefault();\\n                            }\\n                            var node = dragi.el.node,\\n                                o,\\n                                next = node.nextSibling,\\n                                parent = node.parentNode,\\n                                display = node.style.display;\\n                            g.win.opera && parent.removeChild(node);\\n                            node.style.display = \\\"none\\\";\\n                            o = dragi.el.paper.getElementByPoint(x, y);\\n                            node.style.display = display;\\n                            g.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\\n                            o && eve(\\\"raphael.drag.over.\\\" + dragi.el.id, dragi.el, o);\\n                            x += scrollX;\\n                            y += scrollY;\\n                            eve(\\\"raphael.drag.move.\\\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\\n                        }\\n                    },\\n                    dragUp = function (e) {\\n                        R.unmousemove(dragMove).unmouseup(dragUp);\\n                        var i = drag.length,\\n                            dragi;\\n                        while (i--) {\\n                            dragi = drag[i];\\n                            dragi.el._drag = {};\\n                            eve(\\\"raphael.drag.end.\\\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\\n                        }\\n                        drag = [];\\n                    },\\n                    /*\\\\\\n                     * Raphael.el\\n                     [ property (object) ]\\n                     **\\n                     * You can add your own method to elements. This is useful when you want to hack default functionality or\\n                     * want to wrap some common transformation or attributes in one method. In difference to canvas methods,\\n                     * you can redefine element method at any time. Expending element methods wouldn’t affect set.\\n                     > Usage\\n                     | Raphael.el.red = function () {\\n                     |     this.attr({fill: \\\"#f00\\\"});\\n                     | };\\n                     | // then use it\\n                     | paper.circle(100, 100, 20).red();\\n                     \\\\*/\\n                    elproto = R.el = {};\\n                /*\\\\\\n                 * Element.click\\n                 [ method ]\\n                 **\\n                 * Adds event handler for click for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.unclick\\n                 [ method ]\\n                 **\\n                 * Removes event handler for click for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n\\n                /*\\\\\\n                 * Element.dblclick\\n                 [ method ]\\n                 **\\n                 * Adds event handler for double click for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.undblclick\\n                 [ method ]\\n                 **\\n                 * Removes event handler for double click for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n\\n                /*\\\\\\n                 * Element.mousedown\\n                 [ method ]\\n                 **\\n                 * Adds event handler for mousedown for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.unmousedown\\n                 [ method ]\\n                 **\\n                 * Removes event handler for mousedown for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n\\n                /*\\\\\\n                 * Element.mousemove\\n                 [ method ]\\n                 **\\n                 * Adds event handler for mousemove for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.unmousemove\\n                 [ method ]\\n                 **\\n                 * Removes event handler for mousemove for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n\\n                /*\\\\\\n                 * Element.mouseout\\n                 [ method ]\\n                 **\\n                 * Adds event handler for mouseout for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.unmouseout\\n                 [ method ]\\n                 **\\n                 * Removes event handler for mouseout for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n\\n                /*\\\\\\n                 * Element.mouseover\\n                 [ method ]\\n                 **\\n                 * Adds event handler for mouseover for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.unmouseover\\n                 [ method ]\\n                 **\\n                 * Removes event handler for mouseover for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n\\n                /*\\\\\\n                 * Element.mouseup\\n                 [ method ]\\n                 **\\n                 * Adds event handler for mouseup for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.unmouseup\\n                 [ method ]\\n                 **\\n                 * Removes event handler for mouseup for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n\\n                /*\\\\\\n                 * Element.touchstart\\n                 [ method ]\\n                 **\\n                 * Adds event handler for touchstart for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.untouchstart\\n                 [ method ]\\n                 **\\n                 * Removes event handler for touchstart for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n\\n                /*\\\\\\n                 * Element.touchmove\\n                 [ method ]\\n                 **\\n                 * Adds event handler for touchmove for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.untouchmove\\n                 [ method ]\\n                 **\\n                 * Removes event handler for touchmove for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n\\n                /*\\\\\\n                 * Element.touchend\\n                 [ method ]\\n                 **\\n                 * Adds event handler for touchend for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.untouchend\\n                 [ method ]\\n                 **\\n                 * Removes event handler for touchend for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n\\n                /*\\\\\\n                 * Element.touchcancel\\n                 [ method ]\\n                 **\\n                 * Adds event handler for touchcancel for the element.\\n                 > Parameters\\n                 - handler (function) handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                /*\\\\\\n                 * Element.untouchcancel\\n                 [ method ]\\n                 **\\n                 * Removes event handler for touchcancel for the element.\\n                 > Parameters\\n                 - handler (function) #optional handler for the event\\n                 = (object) @Element\\n                 \\\\*/\\n                for (var i = events.length; i--;) {\\n                    (function (eventName) {\\n                        R[eventName] = elproto[eventName] = function (fn, scope) {\\n                            if (R.is(fn, \\\"function\\\")) {\\n                                this.events = this.events || [];\\n                                this.events.push({\\n                                    name: eventName,\\n                                    f: fn,\\n                                    unbind: addEvent(this.shape || this.node || g.doc, eventName, fn, scope || this)\\n                                });\\n                            }\\n                            return this;\\n                        };\\n                        R[\\\"un\\\" + eventName] = elproto[\\\"un\\\" + eventName] = function (fn) {\\n                            var events = this.events || [],\\n                                l = events.length;\\n                            while (l--) {\\n                                if (events[l].name == eventName && (R.is(fn, \\\"undefined\\\") || events[l].f == fn)) {\\n                                    events[l].unbind();\\n                                    events.splice(l, 1);\\n                                    !events.length && delete this.events;\\n                                }\\n                            }\\n                            return this;\\n                        };\\n                    })(events[i]);\\n                }\\n\\n                /*\\\\\\n                 * Element.data\\n                 [ method ]\\n                 **\\n                 * Adds or retrieves given value associated with given key.\\n                 **\\n                 * See also @Element.removeData\\n                 > Parameters\\n                 - key (string) key to store data\\n                 - value (any) #optional value to store\\n                 = (object) @Element\\n                 * or, if value is not specified:\\n                 = (any) value\\n                 * or, if key and value are not specified:\\n                 = (object) Key/value pairs for all the data associated with the element.\\n                 > Usage\\n                 | for (var i = 0, i < 5, i++) {\\n                 |     paper.circle(10 + 15 * i, 10, 10)\\n                 |          .attr({fill: \\\"#000\\\"})\\n                 |          .data(\\\"i\\\", i)\\n                 |          .click(function () {\\n                 |             alert(this.data(\\\"i\\\"));\\n                 |          });\\n                 | }\\n                 \\\\*/\\n                elproto.data = function (key, value) {\\n                    var data = eldata[this.id] = eldata[this.id] || {};\\n                    if (arguments.length == 0) {\\n                        return data;\\n                    }\\n                    if (arguments.length == 1) {\\n                        if (R.is(key, \\\"object\\\")) {\\n                            for (var i in key) if (key[has](i)) {\\n                                this.data(i, key[i]);\\n                            }\\n                            return this;\\n                        }\\n                        eve(\\\"raphael.data.get.\\\" + this.id, this, data[key], key);\\n                        return data[key];\\n                    }\\n                    data[key] = value;\\n                    eve(\\\"raphael.data.set.\\\" + this.id, this, value, key);\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.removeData\\n                 [ method ]\\n                 **\\n                 * Removes value associated with an element by given key.\\n                 * If key is not provided, removes all the data of the element.\\n                 > Parameters\\n                 - key (string) #optional key\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.removeData = function (key) {\\n                    if (key == null) {\\n                        eldata[this.id] = {};\\n                    } else {\\n                        eldata[this.id] && delete eldata[this.id][key];\\n                    }\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.getData\\n                 [ method ]\\n                 **\\n                 * Retrieves the element data\\n                 = (object) data\\n                 \\\\*/\\n                elproto.getData = function () {\\n                    return clone(eldata[this.id] || {});\\n                };\\n                /*\\\\\\n                 * Element.hover\\n                 [ method ]\\n                 **\\n                 * Adds event handlers for hover for the element.\\n                 > Parameters\\n                 - f_in (function) handler for hover in\\n                 - f_out (function) handler for hover out\\n                 - icontext (object) #optional context for hover in handler\\n                 - ocontext (object) #optional context for hover out handler\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.hover = function (f_in, f_out, scope_in, scope_out) {\\n                    return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\\n                };\\n                /*\\\\\\n                 * Element.unhover\\n                 [ method ]\\n                 **\\n                 * Removes event handlers for hover for the element.\\n                 > Parameters\\n                 - f_in (function) handler for hover in\\n                 - f_out (function) handler for hover out\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.unhover = function (f_in, f_out) {\\n                    return this.unmouseover(f_in).unmouseout(f_out);\\n                };\\n                var draggable = [];\\n                /*\\\\\\n                 * Element.drag\\n                 [ method ]\\n                 **\\n                 * Adds event handlers for drag of the element.\\n                 > Parameters\\n                 - onmove (function) handler for moving\\n                 - onstart (function) handler for drag start\\n                 - onend (function) handler for drag end\\n                 - mcontext (object) #optional context for moving handler\\n                 - scontext (object) #optional context for drag start handler\\n                 - econtext (object) #optional context for drag end handler\\n                 * Additionally following `drag` events will be triggered: `drag.start.<id>` on start,\\n                 * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element will be dragged over another element\\n                 * `drag.over.<id>` will be fired as well.\\n                 *\\n                 * Start event and start handler will be called in specified context or in context of the element with following parameters:\\n                 o x (number) x position of the mouse\\n                 o y (number) y position of the mouse\\n                 o event (object) DOM event object\\n                 * Move event and move handler will be called in specified context or in context of the element with following parameters:\\n                 o dx (number) shift by x from the start point\\n                 o dy (number) shift by y from the start point\\n                 o x (number) x position of the mouse\\n                 o y (number) y position of the mouse\\n                 o event (object) DOM event object\\n                 * End event and end handler will be called in specified context or in context of the element with following parameters:\\n                 o event (object) DOM event object\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\\n                    function start(e) {\\n                        (e.originalEvent || e).preventDefault();\\n                        var x = e.clientX,\\n                            y = e.clientY,\\n                            scrollY = g.doc.documentElement.scrollTop || g.doc.body.scrollTop,\\n                            scrollX = g.doc.documentElement.scrollLeft || g.doc.body.scrollLeft;\\n                        this._drag.id = e.identifier;\\n                        if (supportsTouch && e.touches) {\\n                            var i = e.touches.length, touch;\\n                            while (i--) {\\n                                touch = e.touches[i];\\n                                this._drag.id = touch.identifier;\\n                                if (touch.identifier == this._drag.id) {\\n                                    x = touch.clientX;\\n                                    y = touch.clientY;\\n                                    break;\\n                                }\\n                            }\\n                        }\\n                        this._drag.x = x + scrollX;\\n                        this._drag.y = y + scrollY;\\n                        !drag.length && R.mousemove(dragMove).mouseup(dragUp);\\n                        drag.push({el: this, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\\n                        onstart && eve.on(\\\"raphael.drag.start.\\\" + this.id, onstart);\\n                        onmove && eve.on(\\\"raphael.drag.move.\\\" + this.id, onmove);\\n                        onend && eve.on(\\\"raphael.drag.end.\\\" + this.id, onend);\\n                        eve(\\\"raphael.drag.start.\\\" + this.id, start_scope || move_scope || this, e.clientX + scrollX, e.clientY + scrollY, e);\\n                    }\\n\\n                    this._drag = {};\\n                    draggable.push({el: this, start: start});\\n                    this.mousedown(start);\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.onDragOver\\n                 [ method ]\\n                 **\\n                 * Shortcut for assigning event handler for `drag.over.<id>` event, where id is id of the element (see @Element.id).\\n                 > Parameters\\n                 - f (function) handler for event, first argument would be the element you are dragging over\\n                 \\\\*/\\n                elproto.onDragOver = function (f) {\\n                    f ? eve.on(\\\"raphael.drag.over.\\\" + this.id, f) : eve.unbind(\\\"raphael.drag.over.\\\" + this.id);\\n                };\\n                /*\\\\\\n                 * Element.undrag\\n                 [ method ]\\n                 **\\n                 * Removes all drag event handlers from given element.\\n                 \\\\*/\\n                elproto.undrag = function () {\\n                    var i = draggable.length;\\n                    while (i--) if (draggable[i].el == this) {\\n                        this.unmousedown(draggable[i].start);\\n                        draggable.splice(i, 1);\\n                        eve.unbind(\\\"raphael.drag.*.\\\" + this.id);\\n                    }\\n                    !draggable.length && R.unmousemove(dragMove).unmouseup(dragUp);\\n                    drag = [];\\n                };\\n                /*\\\\\\n                 * Paper.circle\\n                 [ method ]\\n                 **\\n                 * Draws a circle.\\n                 **\\n                 > Parameters\\n                 **\\n                 - x (number) x coordinate of the centre\\n                 - y (number) y coordinate of the centre\\n                 - r (number) radius\\n                 = (object) Raphaël element object with type “circle”\\n                 **\\n                 > Usage\\n                 | var c = paper.circle(50, 50, 40);\\n                 \\\\*/\\n                paperproto.circle = function (x, y, r) {\\n                    var out = R._engine.circle(this, x || 0, y || 0, r || 0);\\n                    this.__set__ && this.__set__.push(out);\\n                    return out;\\n                };\\n                /*\\\\\\n                 * Paper.rect\\n                 [ method ]\\n                 *\\n                 * Draws a rectangle.\\n                 **\\n                 > Parameters\\n                 **\\n                 - x (number) x coordinate of the top left corner\\n                 - y (number) y coordinate of the top left corner\\n                 - width (number) width\\n                 - height (number) height\\n                 - r (number) #optional radius for rounded corners, default is 0\\n                 = (object) Raphaël element object with type “rect”\\n                 **\\n                 > Usage\\n                 | // regular rectangle\\n                 | var c = paper.rect(10, 10, 50, 50);\\n                 | // rectangle with rounded corners\\n                 | var c = paper.rect(40, 40, 50, 50, 10);\\n                 \\\\*/\\n                paperproto.rect = function (x, y, w, h, r) {\\n                    var out = R._engine.rect(this, x || 0, y || 0, w || 0, h || 0, r || 0);\\n                    this.__set__ && this.__set__.push(out);\\n                    return out;\\n                };\\n                /*\\\\\\n                 * Paper.ellipse\\n                 [ method ]\\n                 **\\n                 * Draws an ellipse.\\n                 **\\n                 > Parameters\\n                 **\\n                 - x (number) x coordinate of the centre\\n                 - y (number) y coordinate of the centre\\n                 - rx (number) horizontal radius\\n                 - ry (number) vertical radius\\n                 = (object) Raphaël element object with type “ellipse”\\n                 **\\n                 > Usage\\n                 | var c = paper.ellipse(50, 50, 40, 20);\\n                 \\\\*/\\n                paperproto.ellipse = function (x, y, rx, ry) {\\n                    var out = R._engine.ellipse(this, x || 0, y || 0, rx || 0, ry || 0);\\n                    this.__set__ && this.__set__.push(out);\\n                    return out;\\n                };\\n                /*\\\\\\n                 * Paper.path\\n                 [ method ]\\n                 **\\n                 * Creates a path element by given path data string.\\n                 > Parameters\\n                 - pathString (string) #optional path string in SVG format.\\n                 * Path string consists of one-letter commands, followed by comma seprarated arguments in numercal form. Example:\\n                 | \\\"M10,20L30,40\\\"\\n                 * Here we can see two commands: “M”, with arguments `(10, 20)` and “L” with arguments `(30, 40)`. Upper case letter mean command is absolute, lower case—relative.\\n                 *\\n                 # <p>Here is short list of commands available, for more details see <a href=\\\"http://www.w3.org/TR/SVG/paths.html#PathData\\\" title=\\\"Details of a path's data attribute's format are described in the SVG specification.\\\">SVG path string format</a>.</p>\\n                 # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\\n                 # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\\n                 # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\\n                 # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\\n                 # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\\n                 # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\\n                 # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\\n                 # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\\n                 # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\\n                 # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\\n                 # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\\n                 # <tr><td>R</td><td><a href=\\\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\\\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\\n                 * * “Catmull-Rom curveto” is a not standard SVG command and added in 2.0 to make life easier.\\n                 * Note: there is a special case when path consist of just three commands: “M10,10R…z”. In this case path will smoothly connects to its beginning.\\n                 > Usage\\n                 | var c = paper.path(\\\"M10 10L90 90\\\");\\n                 | // draw a diagonal line:\\n                 | // move to 10,10, line to 90,90\\n                 * For example of path strings, check out these icons: http://raphaeljs.com/icons/\\n                 \\\\*/\\n                paperproto.path = function (pathString) {\\n                    pathString && !R.is(pathString, string) && !R.is(pathString[0], array) && (pathString += E);\\n                    var out = R._engine.path(R.format[apply](R, arguments), this);\\n                    this.__set__ && this.__set__.push(out);\\n                    return out;\\n                };\\n                /*\\\\\\n                 * Paper.image\\n                 [ method ]\\n                 **\\n                 * Embeds an image into the surface.\\n                 **\\n                 > Parameters\\n                 **\\n                 - src (string) URI of the source image\\n                 - x (number) x coordinate position\\n                 - y (number) y coordinate position\\n                 - width (number) width of the image\\n                 - height (number) height of the image\\n                 = (object) Raphaël element object with type “image”\\n                 **\\n                 > Usage\\n                 | var c = paper.image(\\\"apple.png\\\", 10, 10, 80, 80);\\n                 \\\\*/\\n                paperproto.image = function (src, x, y, w, h) {\\n                    var out = R._engine.image(this, src || \\\"about:blank\\\", x || 0, y || 0, w || 0, h || 0);\\n                    this.__set__ && this.__set__.push(out);\\n                    return out;\\n                };\\n                /*\\\\\\n                 * Paper.text\\n                 [ method ]\\n                 **\\n                 * Draws a text string. If you need line breaks, put “\\\\n” in the string.\\n                 **\\n                 > Parameters\\n                 **\\n                 - x (number) x coordinate position\\n                 - y (number) y coordinate position\\n                 - text (string) The text string to draw\\n                 = (object) Raphaël element object with type “text”\\n                 **\\n                 > Usage\\n                 | var t = paper.text(50, 50, \\\"Raphaël\\\\nkicks\\\\nbutt!\\\");\\n                 \\\\*/\\n                paperproto.text = function (x, y, text) {\\n                    var out = R._engine.text(this, x || 0, y || 0, Str(text));\\n                    this.__set__ && this.__set__.push(out);\\n                    return out;\\n                };\\n                /*\\\\\\n                 * Paper.set\\n                 [ method ]\\n                 **\\n                 * Creates array-like object to keep and operate several elements at once.\\n                 * Warning: it doesn’t create any elements for itself in the page, it just groups existing elements.\\n                 * Sets act as pseudo elements — all methods available to an element can be used on a set.\\n                 = (object) array-like object that represents set of elements\\n                 **\\n                 > Usage\\n                 | var st = paper.set();\\n                 | st.push(\\n                 |     paper.circle(10, 10, 5),\\n                 |     paper.circle(30, 10, 5)\\n                 | );\\n                 | st.attr({fill: \\\"red\\\"}); // changes the fill of both circles\\n                 \\\\*/\\n                paperproto.set = function (itemsArray) {\\n                    !R.is(itemsArray, \\\"array\\\") && (itemsArray = Array.prototype.splice.call(arguments, 0, arguments.length));\\n                    var out = new Set(itemsArray);\\n                    this.__set__ && this.__set__.push(out);\\n                    out[\\\"paper\\\"] = this;\\n                    out[\\\"type\\\"] = \\\"set\\\";\\n                    return out;\\n                };\\n                /*\\\\\\n                 * Paper.setStart\\n                 [ method ]\\n                 **\\n                 * Creates @Paper.set. All elements that will be created after calling this method and before calling\\n                 * @Paper.setFinish will be added to the set.\\n                 **\\n                 > Usage\\n                 | paper.setStart();\\n                 | paper.circle(10, 10, 5),\\n                 | paper.circle(30, 10, 5)\\n                 | var st = paper.setFinish();\\n                 | st.attr({fill: \\\"red\\\"}); // changes the fill of both circles\\n                 \\\\*/\\n                paperproto.setStart = function (set) {\\n                    this.__set__ = set || this.set();\\n                };\\n                /*\\\\\\n                 * Paper.setFinish\\n                 [ method ]\\n                 **\\n                 * See @Paper.setStart. This method finishes catching and returns resulting set.\\n                 **\\n                 = (object) set\\n                 \\\\*/\\n                paperproto.setFinish = function (set) {\\n                    var out = this.__set__;\\n                    delete this.__set__;\\n                    return out;\\n                };\\n                /*\\\\\\n                 * Paper.getSize\\n                 [ method ]\\n                 **\\n                 * Obtains current paper actual size.\\n                 **\\n                 = (object)\\n                 \\\\*/\\n                paperproto.getSize = function () {\\n                    var container = this.canvas.parentNode;\\n                    return {\\n                        width: container.offsetWidth,\\n                        height: container.offsetHeight\\n                    };\\n                };\\n                /*\\\\\\n                 * Paper.setSize\\n                 [ method ]\\n                 **\\n                 * If you need to change dimensions of the canvas call this method\\n                 **\\n                 > Parameters\\n                 **\\n                 - width (number) new width of the canvas\\n                 - height (number) new height of the canvas\\n                 \\\\*/\\n                paperproto.setSize = function (width, height) {\\n                    return R._engine.setSize.call(this, width, height);\\n                };\\n                /*\\\\\\n                 * Paper.setViewBox\\n                 [ method ]\\n                 **\\n                 * Sets the view box of the paper. Practically it gives you ability to zoom and pan whole paper surface by\\n                 * specifying new boundaries.\\n                 **\\n                 > Parameters\\n                 **\\n                 - x (number) new x position, default is `0`\\n                 - y (number) new y position, default is `0`\\n                 - w (number) new width of the canvas\\n                 - h (number) new height of the canvas\\n                 - fit (boolean) `true` if you want graphics to fit into new boundary box\\n                 \\\\*/\\n                paperproto.setViewBox = function (x, y, w, h, fit) {\\n                    return R._engine.setViewBox.call(this, x, y, w, h, fit);\\n                };\\n                /*\\\\\\n                 * Paper.top\\n                 [ property ]\\n                 **\\n                 * Points to the topmost element on the paper\\n                 \\\\*/\\n                /*\\\\\\n                 * Paper.bottom\\n                 [ property ]\\n                 **\\n                 * Points to the bottom element on the paper\\n                 \\\\*/\\n                paperproto.top = paperproto.bottom = null;\\n                /*\\\\\\n                 * Paper.raphael\\n                 [ property ]\\n                 **\\n                 * Points to the @Raphael object/function\\n                 \\\\*/\\n                paperproto.raphael = R;\\n                var getOffset = function (elem) {\\n                    var box = elem.getBoundingClientRect(),\\n                        doc = elem.ownerDocument,\\n                        body = doc.body,\\n                        docElem = doc.documentElement,\\n                        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\\n                        top = box.top + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\\n                        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\\n                    return {\\n                        y: top,\\n                        x: left\\n                    };\\n                };\\n                /*\\\\\\n                 * Paper.getElementByPoint\\n                 [ method ]\\n                 **\\n                 * Returns you topmost element under given point.\\n                 **\\n                 = (object) Raphaël element object\\n                 > Parameters\\n                 **\\n                 - x (number) x coordinate from the top left corner of the window\\n                 - y (number) y coordinate from the top left corner of the window\\n                 > Usage\\n                 | paper.getElementByPoint(mouseX, mouseY).attr({stroke: \\\"#f00\\\"});\\n                 \\\\*/\\n                paperproto.getElementByPoint = function (x, y) {\\n                    var paper = this,\\n                        svg = paper.canvas,\\n                        target = g.doc.elementFromPoint(x, y);\\n                    if (g.win.opera && target.tagName == \\\"svg\\\") {\\n                        var so = getOffset(svg),\\n                            sr = svg.createSVGRect();\\n                        sr.x = x - so.x;\\n                        sr.y = y - so.y;\\n                        sr.width = sr.height = 1;\\n                        var hits = svg.getIntersectionList(sr, null);\\n                        if (hits.length) {\\n                            target = hits[hits.length - 1];\\n                        }\\n                    }\\n                    if (!target) {\\n                        return null;\\n                    }\\n                    while (target.parentNode && target != svg.parentNode && !target.raphael) {\\n                        target = target.parentNode;\\n                    }\\n                    target == paper.canvas.parentNode && (target = svg);\\n                    target = target && target.raphael ? paper.getById(target.raphaelid) : null;\\n                    return target;\\n                };\\n\\n                /*\\\\\\n                 * Paper.getElementsByBBox\\n                 [ method ]\\n                 **\\n                 * Returns set of elements that have an intersecting bounding box\\n                 **\\n                 > Parameters\\n                 **\\n                 - bbox (object) bbox to check with\\n                 = (object) @Set\\n                 \\\\*/\\n                paperproto.getElementsByBBox = function (bbox) {\\n                    var set = this.set();\\n                    this.forEach(function (el) {\\n                        if (R.isBBoxIntersect(el.getBBox(), bbox)) {\\n                            set.push(el);\\n                        }\\n                    });\\n                    return set;\\n                };\\n\\n                /*\\\\\\n                 * Paper.getById\\n                 [ method ]\\n                 **\\n                 * Returns you element by its internal ID.\\n                 **\\n                 > Parameters\\n                 **\\n                 - id (number) id\\n                 = (object) Raphaël element object\\n                 \\\\*/\\n                paperproto.getById = function (id) {\\n                    var bot = this.bottom;\\n                    while (bot) {\\n                        if (bot.id == id) {\\n                            return bot;\\n                        }\\n                        bot = bot.next;\\n                    }\\n                    return null;\\n                };\\n                /*\\\\\\n                 * Paper.forEach\\n                 [ method ]\\n                 **\\n                 * Executes given function for each element on the paper\\n                 *\\n                 * If callback function returns `false` it will stop loop running.\\n                 **\\n                 > Parameters\\n                 **\\n                 - callback (function) function to run\\n                 - thisArg (object) context object for the callback\\n                 = (object) Paper object\\n                 > Usage\\n                 | paper.forEach(function (el) {\\n                 |     el.attr({ stroke: \\\"blue\\\" });\\n                 | });\\n                 \\\\*/\\n                paperproto.forEach = function (callback, thisArg) {\\n                    var bot = this.bottom;\\n                    while (bot) {\\n                        if (callback.call(thisArg, bot) === false) {\\n                            return this;\\n                        }\\n                        bot = bot.next;\\n                    }\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Paper.getElementsByPoint\\n                 [ method ]\\n                 **\\n                 * Returns set of elements that have common point inside\\n                 **\\n                 > Parameters\\n                 **\\n                 - x (number) x coordinate of the point\\n                 - y (number) y coordinate of the point\\n                 = (object) @Set\\n                 \\\\*/\\n                paperproto.getElementsByPoint = function (x, y) {\\n                    var set = this.set();\\n                    this.forEach(function (el) {\\n                        if (el.isPointInside(x, y)) {\\n                            set.push(el);\\n                        }\\n                    });\\n                    return set;\\n                };\\n                function x_y() {\\n                    return this.x + S + this.y;\\n                }\\n\\n                function x_y_w_h() {\\n                    return this.x + S + this.y + S + this.width + \\\" \\\\xd7 \\\" + this.height;\\n                }\\n\\n                /*\\\\\\n                 * Element.isPointInside\\n                 [ method ]\\n                 **\\n                 * Determine if given point is inside this element’s shape\\n                 **\\n                 > Parameters\\n                 **\\n                 - x (number) x coordinate of the point\\n                 - y (number) y coordinate of the point\\n                 = (boolean) `true` if point inside the shape\\n                 \\\\*/\\n                elproto.isPointInside = function (x, y) {\\n                    var rp = this.realPath = getPath[this.type](this);\\n                    if (this.attr('transform') && this.attr('transform').length) {\\n                        rp = R.transformPath(rp, this.attr('transform'));\\n                    }\\n                    return R.isPointInsidePath(rp, x, y);\\n                };\\n                /*\\\\\\n                 * Element.getBBox\\n                 [ method ]\\n                 **\\n                 * Return bounding box for a given element\\n                 **\\n                 > Parameters\\n                 **\\n                 - isWithoutTransform (boolean) flag, `true` if you want to have bounding box before transformations. Default is `false`.\\n                 = (object) Bounding box object:\\n                 o {\\n                 o     x: (number) top left corner x\\n                 o     y: (number) top left corner y\\n                 o     x2: (number) bottom right corner x\\n                 o     y2: (number) bottom right corner y\\n                 o     width: (number) width\\n                 o     height: (number) height\\n                 o }\\n                 \\\\*/\\n                elproto.getBBox = function (isWithoutTransform) {\\n                    if (this.removed) {\\n                        return {};\\n                    }\\n                    var _ = this._;\\n                    if (isWithoutTransform) {\\n                        if (_.dirty || !_.bboxwt) {\\n                            this.realPath = getPath[this.type](this);\\n                            _.bboxwt = pathDimensions(this.realPath);\\n                            _.bboxwt.toString = x_y_w_h;\\n                            _.dirty = 0;\\n                        }\\n                        return _.bboxwt;\\n                    }\\n                    if (_.dirty || _.dirtyT || !_.bbox) {\\n                        if (_.dirty || !this.realPath) {\\n                            _.bboxwt = 0;\\n                            this.realPath = getPath[this.type](this);\\n                        }\\n                        _.bbox = pathDimensions(mapPath(this.realPath, this.matrix));\\n                        _.bbox.toString = x_y_w_h;\\n                        _.dirty = _.dirtyT = 0;\\n                    }\\n                    return _.bbox;\\n                };\\n                /*\\\\\\n                 * Element.clone\\n                 [ method ]\\n                 **\\n                 = (object) clone of a given element\\n                 **\\n                 \\\\*/\\n                elproto.clone = function () {\\n                    if (this.removed) {\\n                        return null;\\n                    }\\n                    var out = this.paper[this.type]().attr(this.attr());\\n                    this.__set__ && this.__set__.push(out);\\n                    return out;\\n                };\\n                /*\\\\\\n                 * Element.glow\\n                 [ method ]\\n                 **\\n                 * Return set of elements that create glow-like effect around given element. See @Paper.set.\\n                 *\\n                 * Note: Glow is not connected to the element. If you change element attributes it won’t adjust itself.\\n                 **\\n                 > Parameters\\n                 **\\n                 - glow (object) #optional parameters object with all properties optional:\\n                 o {\\n                 o     width (number) size of the glow, default is `10`\\n                 o     fill (boolean) will it be filled, default is `false`\\n                 o     opacity (number) opacity, default is `0.5`\\n                 o     offsetx (number) horizontal offset, default is `0`\\n                 o     offsety (number) vertical offset, default is `0`\\n                 o     color (string) glow colour, default is `black`\\n                 o }\\n                 = (object) @Paper.set of elements that represents glow\\n                 \\\\*/\\n                elproto.glow = function (glow) {\\n                    if (this.type == \\\"text\\\") {\\n                        return null;\\n                    }\\n                    glow = glow || {};\\n                    var s = {\\n                            width: (glow.width || 10) + (+this.attr(\\\"stroke-width\\\") || 1),\\n                            fill: glow.fill || false,\\n                            opacity: glow.opacity == null ? .5 : glow.opacity,\\n                            offsetx: glow.offsetx || 0,\\n                            offsety: glow.offsety || 0,\\n                            color: glow.color || \\\"#000\\\"\\n                        },\\n                        c = s.width / 2,\\n                        r = this.paper,\\n                        out = r.set(),\\n                        path = this.realPath || getPath[this.type](this);\\n                    path = this.matrix ? mapPath(path, this.matrix) : path;\\n                    for (var i = 1; i < c + 1; i++) {\\n                        out.push(r.path(path).attr({\\n                            stroke: s.color,\\n                            fill: s.fill ? s.color : \\\"none\\\",\\n                            \\\"stroke-linejoin\\\": \\\"round\\\",\\n                            \\\"stroke-linecap\\\": \\\"round\\\",\\n                            \\\"stroke-width\\\": +(s.width / c * i).toFixed(3),\\n                            opacity: +(s.opacity / c).toFixed(3)\\n                        }));\\n                    }\\n                    return out.insertBefore(this).translate(s.offsetx, s.offsety);\\n                };\\n                var curveslengths = {},\\n                    getPointAtSegmentLength = function (p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\\n                        if (length == null) {\\n                            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\\n                        } else {\\n                            return R.findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, getTatLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\\n                        }\\n                    },\\n                    getLengthFactory = function (istotal, subpath) {\\n                        return function (path, length, onlystart) {\\n                            path = path2curve(path);\\n                            var x, y, p, l, sp = \\\"\\\", subpaths = {}, point,\\n                                len = 0;\\n                            for (var i = 0, ii = path.length; i < ii; i++) {\\n                                p = path[i];\\n                                if (p[0] == \\\"M\\\") {\\n                                    x = +p[1];\\n                                    y = +p[2];\\n                                } else {\\n                                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\\n                                    if (len + l > length) {\\n                                        if (subpath && !subpaths.start) {\\n                                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\\n                                            sp += [\\\"C\\\" + point.start.x, point.start.y, point.m.x, point.m.y, point.x, point.y];\\n                                            if (onlystart) {\\n                                                return sp;\\n                                            }\\n                                            subpaths.start = sp;\\n                                            sp = [\\\"M\\\" + point.x, point.y + \\\"C\\\" + point.n.x, point.n.y, point.end.x, point.end.y, p[5], p[6]].join();\\n                                            len += l;\\n                                            x = +p[5];\\n                                            y = +p[6];\\n                                            continue;\\n                                        }\\n                                        if (!istotal && !subpath) {\\n                                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\\n                                            return {x: point.x, y: point.y, alpha: point.alpha};\\n                                        }\\n                                    }\\n                                    len += l;\\n                                    x = +p[5];\\n                                    y = +p[6];\\n                                }\\n                                sp += p.shift() + p;\\n                            }\\n                            subpaths.end = sp;\\n                            point = istotal ? len : subpath ? subpaths : R.findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\\n                            point.alpha && (point = {x: point.x, y: point.y, alpha: point.alpha});\\n                            return point;\\n                        };\\n                    };\\n                var getTotalLength = getLengthFactory(1),\\n                    getPointAtLength = getLengthFactory(),\\n                    getSubpathsAtLength = getLengthFactory(0, 1);\\n                /*\\\\\\n                 * Raphael.getTotalLength\\n                 [ method ]\\n                 **\\n                 * Returns length of the given path in pixels.\\n                 **\\n                 > Parameters\\n                 **\\n                 - path (string) SVG path string.\\n                 **\\n                 = (number) length.\\n                 \\\\*/\\n                R.getTotalLength = getTotalLength;\\n                /*\\\\\\n                 * Raphael.getPointAtLength\\n                 [ method ]\\n                 **\\n                 * Return coordinates of the point located at the given length on the given path.\\n                 **\\n                 > Parameters\\n                 **\\n                 - path (string) SVG path string\\n                 - length (number)\\n                 **\\n                 = (object) representation of the point:\\n                 o {\\n                 o     x: (number) x coordinate\\n                 o     y: (number) y coordinate\\n                 o     alpha: (number) angle of derivative\\n                 o }\\n                 \\\\*/\\n                R.getPointAtLength = getPointAtLength;\\n                /*\\\\\\n                 * Raphael.getSubpath\\n                 [ method ]\\n                 **\\n                 * Return subpath of a given path from given length to given length.\\n                 **\\n                 > Parameters\\n                 **\\n                 - path (string) SVG path string\\n                 - from (number) position of the start of the segment\\n                 - to (number) position of the end of the segment\\n                 **\\n                 = (string) pathstring for the segment\\n                 \\\\*/\\n                R.getSubpath = function (path, from, to) {\\n                    if (this.getTotalLength(path) - to < 1e-6) {\\n                        return getSubpathsAtLength(path, from).end;\\n                    }\\n                    var a = getSubpathsAtLength(path, to, 1);\\n                    return from ? getSubpathsAtLength(a, from).end : a;\\n                };\\n                /*\\\\\\n                 * Element.getTotalLength\\n                 [ method ]\\n                 **\\n                 * Returns length of the path in pixels. Only works for element of “path” type.\\n                 = (number) length.\\n                 \\\\*/\\n                elproto.getTotalLength = function () {\\n                    var path = this.getPath();\\n                    if (!path) {\\n                        return;\\n                    }\\n\\n                    if (this.node.getTotalLength) {\\n                        return this.node.getTotalLength();\\n                    }\\n\\n                    return getTotalLength(path);\\n                };\\n                /*\\\\\\n                 * Element.getPointAtLength\\n                 [ method ]\\n                 **\\n                 * Return coordinates of the point located at the given length on the given path. Only works for element of “path” type.\\n                 **\\n                 > Parameters\\n                 **\\n                 - length (number)\\n                 **\\n                 = (object) representation of the point:\\n                 o {\\n                 o     x: (number) x coordinate\\n                 o     y: (number) y coordinate\\n                 o     alpha: (number) angle of derivative\\n                 o }\\n                 \\\\*/\\n                elproto.getPointAtLength = function (length) {\\n                    var path = this.getPath();\\n                    if (!path) {\\n                        return;\\n                    }\\n\\n                    return getPointAtLength(path, length);\\n                };\\n                /*\\\\\\n                 * Element.getPath\\n                 [ method ]\\n                 **\\n                 * Returns path of the element. Only works for elements of “path” type and simple elements like circle.\\n                 = (object) path\\n                 **\\n                 \\\\*/\\n                elproto.getPath = function () {\\n                    var path,\\n                        getPath = R._getPath[this.type];\\n\\n                    if (this.type == \\\"text\\\" || this.type == \\\"set\\\") {\\n                        return;\\n                    }\\n\\n                    if (getPath) {\\n                        path = getPath(this);\\n                    }\\n\\n                    return path;\\n                };\\n                /*\\\\\\n                 * Element.getSubpath\\n                 [ method ]\\n                 **\\n                 * Return subpath of a given element from given length to given length. Only works for element of “path” type.\\n                 **\\n                 > Parameters\\n                 **\\n                 - from (number) position of the start of the segment\\n                 - to (number) position of the end of the segment\\n                 **\\n                 = (string) pathstring for the segment\\n                 \\\\*/\\n                elproto.getSubpath = function (from, to) {\\n                    var path = this.getPath();\\n                    if (!path) {\\n                        return;\\n                    }\\n\\n                    return R.getSubpath(path, from, to);\\n                };\\n                /*\\\\\\n                 * Raphael.easing_formulas\\n                 [ property ]\\n                 **\\n                 * Object that contains easing formulas for animation. You could extend it with your own. By default it has following list of easing:\\n                 # <ul>\\n                 #     <li>“linear”</li>\\n                 #     <li>“&lt;” or “easeIn” or “ease-in”</li>\\n                 #     <li>“>” or “easeOut” or “ease-out”</li>\\n                 #     <li>“&lt;>” or “easeInOut” or “ease-in-out”</li>\\n                 #     <li>“backIn” or “back-in”</li>\\n                 #     <li>“backOut” or “back-out”</li>\\n                 #     <li>“elastic”</li>\\n                 #     <li>“bounce”</li>\\n                 # </ul>\\n                 # <p>See also <a href=\\\"http://raphaeljs.com/easing.html\\\">Easing demo</a>.</p>\\n                 \\\\*/\\n                var ef = R.easing_formulas = {\\n                    linear: function (n) {\\n                        return n;\\n                    },\\n                    \\\"<\\\": function (n) {\\n                        return pow(n, 1.7);\\n                    },\\n                    \\\">\\\": function (n) {\\n                        return pow(n, .48);\\n                    },\\n                    \\\"<>\\\": function (n) {\\n                        var q = .48 - n / 1.04,\\n                            Q = math.sqrt(.1734 + q * q),\\n                            x = Q - q,\\n                            X = pow(abs(x), 1 / 3) * (x < 0 ? -1 : 1),\\n                            y = -Q - q,\\n                            Y = pow(abs(y), 1 / 3) * (y < 0 ? -1 : 1),\\n                            t = X + Y + .5;\\n                        return (1 - t) * 3 * t * t + t * t * t;\\n                    },\\n                    backIn: function (n) {\\n                        var s = 1.70158;\\n                        return n * n * ((s + 1) * n - s);\\n                    },\\n                    backOut: function (n) {\\n                        n = n - 1;\\n                        var s = 1.70158;\\n                        return n * n * ((s + 1) * n + s) + 1;\\n                    },\\n                    elastic: function (n) {\\n                        if (n == !!n) {\\n                            return n;\\n                        }\\n                        return pow(2, -10 * n) * math.sin((n - .075) * (2 * PI) / .3) + 1;\\n                    },\\n                    bounce: function (n) {\\n                        var s = 7.5625,\\n                            p = 2.75,\\n                            l;\\n                        if (n < (1 / p)) {\\n                            l = s * n * n;\\n                        } else {\\n                            if (n < (2 / p)) {\\n                                n -= (1.5 / p);\\n                                l = s * n * n + .75;\\n                            } else {\\n                                if (n < (2.5 / p)) {\\n                                    n -= (2.25 / p);\\n                                    l = s * n * n + .9375;\\n                                } else {\\n                                    n -= (2.625 / p);\\n                                    l = s * n * n + .984375;\\n                                }\\n                            }\\n                        }\\n                        return l;\\n                    }\\n                };\\n                ef.easeIn = ef[\\\"ease-in\\\"] = ef[\\\"<\\\"];\\n                ef.easeOut = ef[\\\"ease-out\\\"] = ef[\\\">\\\"];\\n                ef.easeInOut = ef[\\\"ease-in-out\\\"] = ef[\\\"<>\\\"];\\n                ef[\\\"back-in\\\"] = ef.backIn;\\n                ef[\\\"back-out\\\"] = ef.backOut;\\n\\n                var animationElements = [],\\n                    requestAnimFrame = window.requestAnimationFrame ||\\n                        window.webkitRequestAnimationFrame ||\\n                        window.mozRequestAnimationFrame ||\\n                        window.oRequestAnimationFrame ||\\n                        window.msRequestAnimationFrame ||\\n                        function (callback) {\\n                            setTimeout(callback, 16);\\n                        },\\n                    animation = function () {\\n                        var Now = +new Date,\\n                            l = 0;\\n                        for (; l < animationElements.length; l++) {\\n                            var e = animationElements[l];\\n                            if (e.el.removed || e.paused) {\\n                                continue;\\n                            }\\n                            var time = Now - e.start,\\n                                ms = e.ms,\\n                                easing = e.easing,\\n                                from = e.from,\\n                                diff = e.diff,\\n                                to = e.to,\\n                                t = e.t,\\n                                that = e.el,\\n                                set = {},\\n                                now,\\n                                init = {},\\n                                key;\\n                            if (e.initstatus) {\\n                                time = (e.initstatus * e.anim.top - e.prev) / (e.percent - e.prev) * ms;\\n                                e.status = e.initstatus;\\n                                delete e.initstatus;\\n                                e.stop && animationElements.splice(l--, 1);\\n                            } else {\\n                                e.status = (e.prev + (e.percent - e.prev) * (time / ms)) / e.anim.top;\\n                            }\\n                            if (time < 0) {\\n                                continue;\\n                            }\\n                            if (time < ms) {\\n                                var pos = easing(time / ms);\\n                                for (var attr in from) if (from[has](attr)) {\\n                                    switch (availableAnimAttrs[attr]) {\\n                                        case nu:\\n                                            now = +from[attr] + pos * ms * diff[attr];\\n                                            break;\\n                                        case \\\"colour\\\":\\n                                            now = \\\"rgb(\\\" + [\\n                                                    upto255(round(from[attr].r + pos * ms * diff[attr].r)),\\n                                                    upto255(round(from[attr].g + pos * ms * diff[attr].g)),\\n                                                    upto255(round(from[attr].b + pos * ms * diff[attr].b))\\n                                                ].join(\\\",\\\") + \\\")\\\";\\n                                            break;\\n                                        case \\\"path\\\":\\n                                            now = [];\\n                                            for (var i = 0, ii = from[attr].length; i < ii; i++) {\\n                                                now[i] = [from[attr][i][0]];\\n                                                for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\\n                                                    now[i][j] = +from[attr][i][j] + pos * ms * diff[attr][i][j];\\n                                                }\\n                                                now[i] = now[i].join(S);\\n                                            }\\n                                            now = now.join(S);\\n                                            break;\\n                                        case \\\"transform\\\":\\n                                            if (diff[attr].real) {\\n                                                now = [];\\n                                                for (i = 0, ii = from[attr].length; i < ii; i++) {\\n                                                    now[i] = [from[attr][i][0]];\\n                                                    for (j = 1, jj = from[attr][i].length; j < jj; j++) {\\n                                                        now[i][j] = from[attr][i][j] + pos * ms * diff[attr][i][j];\\n                                                    }\\n                                                }\\n                                            } else {\\n                                                var get = function (i) {\\n                                                    return +from[attr][i] + pos * ms * diff[attr][i];\\n                                                };\\n                                                // now = [[\\\"r\\\", get(2), 0, 0], [\\\"t\\\", get(3), get(4)], [\\\"s\\\", get(0), get(1), 0, 0]];\\n                                                now = [[\\\"m\\\", get(0), get(1), get(2), get(3), get(4), get(5)]];\\n                                            }\\n                                            break;\\n                                        case \\\"csv\\\":\\n                                            if (attr == \\\"clip-rect\\\") {\\n                                                now = [];\\n                                                i = 4;\\n                                                while (i--) {\\n                                                    now[i] = +from[attr][i] + pos * ms * diff[attr][i];\\n                                                }\\n                                            }\\n                                            break;\\n                                        default:\\n                                            var from2 = [][concat](from[attr]);\\n                                            now = [];\\n                                            i = that.paper.customAttributes[attr].length;\\n                                            while (i--) {\\n                                                now[i] = +from2[i] + pos * ms * diff[attr][i];\\n                                            }\\n                                            break;\\n                                    }\\n                                    set[attr] = now;\\n                                }\\n                                that.attr(set);\\n                                (function (id, that, anim) {\\n                                    setTimeout(function () {\\n                                        eve(\\\"raphael.anim.frame.\\\" + id, that, anim);\\n                                    });\\n                                })(that.id, that, e.anim);\\n                            } else {\\n                                (function (f, el, a) {\\n                                    setTimeout(function () {\\n                                        eve(\\\"raphael.anim.frame.\\\" + el.id, el, a);\\n                                        eve(\\\"raphael.anim.finish.\\\" + el.id, el, a);\\n                                        R.is(f, \\\"function\\\") && f.call(el);\\n                                    });\\n                                })(e.callback, that, e.anim);\\n                                that.attr(to);\\n                                animationElements.splice(l--, 1);\\n                                if (e.repeat > 1 && !e.next) {\\n                                    for (key in to) if (to[has](key)) {\\n                                        init[key] = e.totalOrigin[key];\\n                                    }\\n                                    e.el.attr(init);\\n                                    runAnimation(e.anim, e.el, e.anim.percents[0], null, e.totalOrigin, e.repeat - 1);\\n                                }\\n                                if (e.next && !e.stop) {\\n                                    runAnimation(e.anim, e.el, e.next, null, e.totalOrigin, e.repeat);\\n                                }\\n                            }\\n                        }\\n                        animationElements.length && requestAnimFrame(animation);\\n                    },\\n                    upto255 = function (color) {\\n                        return color > 255 ? 255 : color < 0 ? 0 : color;\\n                    };\\n                /*\\\\\\n                 * Element.animateWith\\n                 [ method ]\\n                 **\\n                 * Acts similar to @Element.animate, but ensure that given animation runs in sync with another given element.\\n                 **\\n                 > Parameters\\n                 **\\n                 - el (object) element to sync with\\n                 - anim (object) animation to sync with\\n                 - params (object) #optional final attributes for the element, see also @Element.attr\\n                 - ms (number) #optional number of milliseconds for animation to run\\n                 - easing (string) #optional easing type. Accept on of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\\n                 - callback (function) #optional callback function. Will be called at the end of animation.\\n                 * or\\n                 - element (object) element to sync with\\n                 - anim (object) animation to sync with\\n                 - animation (object) #optional animation object, see @Raphael.animation\\n                 **\\n                 = (object) original element\\n                 \\\\*/\\n                elproto.animateWith = function (el, anim, params, ms, easing, callback) {\\n                    var element = this;\\n                    if (element.removed) {\\n                        callback && callback.call(element);\\n                        return element;\\n                    }\\n                    var a = params instanceof Animation ? params : R.animation(params, ms, easing, callback),\\n                        x, y;\\n                    runAnimation(a, element, a.percents[0], null, element.attr());\\n                    for (var i = 0, ii = animationElements.length; i < ii; i++) {\\n                        if (animationElements[i].anim == anim && animationElements[i].el == el) {\\n                            animationElements[ii - 1].start = animationElements[i].start;\\n                            break;\\n                        }\\n                    }\\n                    return element;\\n                    //\\n                    //\\n                    // var a = params ? R.animation(params, ms, easing, callback) : anim,\\n                    //     status = element.status(anim);\\n                    // return this.animate(a).status(a, status * anim.ms / a.ms);\\n                };\\n                function CubicBezierAtTime(t, p1x, p1y, p2x, p2y, duration) {\\n                    var cx = 3 * p1x,\\n                        bx = 3 * (p2x - p1x) - cx,\\n                        ax = 1 - cx - bx,\\n                        cy = 3 * p1y,\\n                        by = 3 * (p2y - p1y) - cy,\\n                        ay = 1 - cy - by;\\n\\n                    function sampleCurveX(t) {\\n                        return ((ax * t + bx) * t + cx) * t;\\n                    }\\n\\n                    function solve(x, epsilon) {\\n                        var t = solveCurveX(x, epsilon);\\n                        return ((ay * t + by) * t + cy) * t;\\n                    }\\n\\n                    function solveCurveX(x, epsilon) {\\n                        var t0, t1, t2, x2, d2, i;\\n                        for (t2 = x, i = 0; i < 8; i++) {\\n                            x2 = sampleCurveX(t2) - x;\\n                            if (abs(x2) < epsilon) {\\n                                return t2;\\n                            }\\n                            d2 = (3 * ax * t2 + 2 * bx) * t2 + cx;\\n                            if (abs(d2) < 1e-6) {\\n                                break;\\n                            }\\n                            t2 = t2 - x2 / d2;\\n                        }\\n                        t0 = 0;\\n                        t1 = 1;\\n                        t2 = x;\\n                        if (t2 < t0) {\\n                            return t0;\\n                        }\\n                        if (t2 > t1) {\\n                            return t1;\\n                        }\\n                        while (t0 < t1) {\\n                            x2 = sampleCurveX(t2);\\n                            if (abs(x2 - x) < epsilon) {\\n                                return t2;\\n                            }\\n                            if (x > x2) {\\n                                t0 = t2;\\n                            } else {\\n                                t1 = t2;\\n                            }\\n                            t2 = (t1 - t0) / 2 + t0;\\n                        }\\n                        return t2;\\n                    }\\n\\n                    return solve(t, 1 / (200 * duration));\\n                }\\n\\n                elproto.onAnimation = function (f) {\\n                    f ? eve.on(\\\"raphael.anim.frame.\\\" + this.id, f) : eve.unbind(\\\"raphael.anim.frame.\\\" + this.id);\\n                    return this;\\n                };\\n                function Animation(anim, ms) {\\n                    var percents = [],\\n                        newAnim = {};\\n                    this.ms = ms;\\n                    this.times = 1;\\n                    if (anim) {\\n                        for (var attr in anim) if (anim[has](attr)) {\\n                            newAnim[toFloat(attr)] = anim[attr];\\n                            percents.push(toFloat(attr));\\n                        }\\n                        percents.sort(sortByNumber);\\n                    }\\n                    this.anim = newAnim;\\n                    this.top = percents[percents.length - 1];\\n                    this.percents = percents;\\n                }\\n\\n                /*\\\\\\n                 * Animation.delay\\n                 [ method ]\\n                 **\\n                 * Creates a copy of existing animation object with given delay.\\n                 **\\n                 > Parameters\\n                 **\\n                 - delay (number) number of ms to pass between animation start and actual animation\\n                 **\\n                 = (object) new altered Animation object\\n                 | var anim = Raphael.animation({cx: 10, cy: 20}, 2e3);\\n                 | circle1.animate(anim); // run the given animation immediately\\n                 | circle2.animate(anim.delay(500)); // run the given animation after 500 ms\\n                 \\\\*/\\n                Animation.prototype.delay = function (delay) {\\n                    var a = new Animation(this.anim, this.ms);\\n                    a.times = this.times;\\n                    a.del = +delay || 0;\\n                    return a;\\n                };\\n                /*\\\\\\n                 * Animation.repeat\\n                 [ method ]\\n                 **\\n                 * Creates a copy of existing animation object with given repetition.\\n                 **\\n                 > Parameters\\n                 **\\n                 - repeat (number) number iterations of animation. For infinite animation pass `Infinity`\\n                 **\\n                 = (object) new altered Animation object\\n                 \\\\*/\\n                Animation.prototype.repeat = function (times) {\\n                    var a = new Animation(this.anim, this.ms);\\n                    a.del = this.del;\\n                    a.times = math.floor(mmax(times, 0)) || 1;\\n                    return a;\\n                };\\n                function runAnimation(anim, element, percent, status, totalOrigin, times) {\\n                    percent = toFloat(percent);\\n                    var params,\\n                        isInAnim,\\n                        isInAnimSet,\\n                        percents = [],\\n                        next,\\n                        prev,\\n                        timestamp,\\n                        ms = anim.ms,\\n                        from = {},\\n                        to = {},\\n                        diff = {};\\n                    if (status) {\\n                        for (i = 0, ii = animationElements.length; i < ii; i++) {\\n                            var e = animationElements[i];\\n                            if (e.el.id == element.id && e.anim == anim) {\\n                                if (e.percent != percent) {\\n                                    animationElements.splice(i, 1);\\n                                    isInAnimSet = 1;\\n                                } else {\\n                                    isInAnim = e;\\n                                }\\n                                element.attr(e.totalOrigin);\\n                                break;\\n                            }\\n                        }\\n                    } else {\\n                        status = +to; // NaN\\n                    }\\n                    for (var i = 0, ii = anim.percents.length; i < ii; i++) {\\n                        if (anim.percents[i] == percent || anim.percents[i] > status * anim.top) {\\n                            percent = anim.percents[i];\\n                            prev = anim.percents[i - 1] || 0;\\n                            ms = ms / anim.top * (percent - prev);\\n                            next = anim.percents[i + 1];\\n                            params = anim.anim[percent];\\n                            break;\\n                        } else if (status) {\\n                            element.attr(anim.anim[anim.percents[i]]);\\n                        }\\n                    }\\n                    if (!params) {\\n                        return;\\n                    }\\n                    if (!isInAnim) {\\n                        for (var attr in params) if (params[has](attr)) {\\n                            if (availableAnimAttrs[has](attr) || element.paper.customAttributes[has](attr)) {\\n                                from[attr] = element.attr(attr);\\n                                (from[attr] == null) && (from[attr] = availableAttrs[attr]);\\n                                to[attr] = params[attr];\\n                                switch (availableAnimAttrs[attr]) {\\n                                    case nu:\\n                                        diff[attr] = (to[attr] - from[attr]) / ms;\\n                                        break;\\n                                    case \\\"colour\\\":\\n                                        from[attr] = R.getRGB(from[attr]);\\n                                        var toColour = R.getRGB(to[attr]);\\n                                        diff[attr] = {\\n                                            r: (toColour.r - from[attr].r) / ms,\\n                                            g: (toColour.g - from[attr].g) / ms,\\n                                            b: (toColour.b - from[attr].b) / ms\\n                                        };\\n                                        break;\\n                                    case \\\"path\\\":\\n                                        var pathes = path2curve(from[attr], to[attr]),\\n                                            toPath = pathes[1];\\n                                        from[attr] = pathes[0];\\n                                        diff[attr] = [];\\n                                        for (i = 0, ii = from[attr].length; i < ii; i++) {\\n                                            diff[attr][i] = [0];\\n                                            for (var j = 1, jj = from[attr][i].length; j < jj; j++) {\\n                                                diff[attr][i][j] = (toPath[i][j] - from[attr][i][j]) / ms;\\n                                            }\\n                                        }\\n                                        break;\\n                                    case \\\"transform\\\":\\n                                        var _ = element._,\\n                                            eq = equaliseTransform(_[attr], to[attr]);\\n                                        if (eq) {\\n                                            from[attr] = eq.from;\\n                                            to[attr] = eq.to;\\n                                            diff[attr] = [];\\n                                            diff[attr].real = true;\\n                                            for (i = 0, ii = from[attr].length; i < ii; i++) {\\n                                                diff[attr][i] = [from[attr][i][0]];\\n                                                for (j = 1, jj = from[attr][i].length; j < jj; j++) {\\n                                                    diff[attr][i][j] = (to[attr][i][j] - from[attr][i][j]) / ms;\\n                                                }\\n                                            }\\n                                        } else {\\n                                            var m = (element.matrix || new Matrix),\\n                                                to2 = {\\n                                                    _: {transform: _.transform},\\n                                                    getBBox: function () {\\n                                                        return element.getBBox(1);\\n                                                    }\\n                                                };\\n                                            from[attr] = [\\n                                                m.a,\\n                                                m.b,\\n                                                m.c,\\n                                                m.d,\\n                                                m.e,\\n                                                m.f\\n                                            ];\\n                                            extractTransform(to2, to[attr]);\\n                                            to[attr] = to2._.transform;\\n                                            diff[attr] = [\\n                                                (to2.matrix.a - m.a) / ms,\\n                                                (to2.matrix.b - m.b) / ms,\\n                                                (to2.matrix.c - m.c) / ms,\\n                                                (to2.matrix.d - m.d) / ms,\\n                                                (to2.matrix.e - m.e) / ms,\\n                                                (to2.matrix.f - m.f) / ms\\n                                            ];\\n                                            // from[attr] = [_.sx, _.sy, _.deg, _.dx, _.dy];\\n                                            // var to2 = {_:{}, getBBox: function () { return element.getBBox(); }};\\n                                            // extractTransform(to2, to[attr]);\\n                                            // diff[attr] = [\\n                                            //     (to2._.sx - _.sx) / ms,\\n                                            //     (to2._.sy - _.sy) / ms,\\n                                            //     (to2._.deg - _.deg) / ms,\\n                                            //     (to2._.dx - _.dx) / ms,\\n                                            //     (to2._.dy - _.dy) / ms\\n                                            // ];\\n                                        }\\n                                        break;\\n                                    case \\\"csv\\\":\\n                                        var values = Str(params[attr])[split](separator),\\n                                            from2 = Str(from[attr])[split](separator);\\n                                        if (attr == \\\"clip-rect\\\") {\\n                                            from[attr] = from2;\\n                                            diff[attr] = [];\\n                                            i = from2.length;\\n                                            while (i--) {\\n                                                diff[attr][i] = (values[i] - from[attr][i]) / ms;\\n                                            }\\n                                        }\\n                                        to[attr] = values;\\n                                        break;\\n                                    default:\\n                                        values = [][concat](params[attr]);\\n                                        from2 = [][concat](from[attr]);\\n                                        diff[attr] = [];\\n                                        i = element.paper.customAttributes[attr].length;\\n                                        while (i--) {\\n                                            diff[attr][i] = ((values[i] || 0) - (from2[i] || 0)) / ms;\\n                                        }\\n                                        break;\\n                                }\\n                            }\\n                        }\\n                        var easing = params.easing,\\n                            easyeasy = R.easing_formulas[easing];\\n                        if (!easyeasy) {\\n                            easyeasy = Str(easing).match(bezierrg);\\n                            if (easyeasy && easyeasy.length == 5) {\\n                                var curve = easyeasy;\\n                                easyeasy = function (t) {\\n                                    return CubicBezierAtTime(t, +curve[1], +curve[2], +curve[3], +curve[4], ms);\\n                                };\\n                            } else {\\n                                easyeasy = pipe;\\n                            }\\n                        }\\n                        timestamp = params.start || anim.start || +new Date;\\n                        e = {\\n                            anim: anim,\\n                            percent: percent,\\n                            timestamp: timestamp,\\n                            start: timestamp + (anim.del || 0),\\n                            status: 0,\\n                            initstatus: status || 0,\\n                            stop: false,\\n                            ms: ms,\\n                            easing: easyeasy,\\n                            from: from,\\n                            diff: diff,\\n                            to: to,\\n                            el: element,\\n                            callback: params.callback,\\n                            prev: prev,\\n                            next: next,\\n                            repeat: times || anim.times,\\n                            origin: element.attr(),\\n                            totalOrigin: totalOrigin\\n                        };\\n                        animationElements.push(e);\\n                        if (status && !isInAnim && !isInAnimSet) {\\n                            e.stop = true;\\n                            e.start = new Date - ms * status;\\n                            if (animationElements.length == 1) {\\n                                return animation();\\n                            }\\n                        }\\n                        if (isInAnimSet) {\\n                            e.start = new Date - e.ms * status;\\n                        }\\n                        animationElements.length == 1 && requestAnimFrame(animation);\\n                    } else {\\n                        isInAnim.initstatus = status;\\n                        isInAnim.start = new Date - isInAnim.ms * status;\\n                    }\\n                    eve(\\\"raphael.anim.start.\\\" + element.id, element, anim);\\n                }\\n\\n                /*\\\\\\n                 * Raphael.animation\\n                 [ method ]\\n                 **\\n                 * Creates an animation object that can be passed to the @Element.animate or @Element.animateWith methods.\\n                 * See also @Animation.delay and @Animation.repeat methods.\\n                 **\\n                 > Parameters\\n                 **\\n                 - params (object) final attributes for the element, see also @Element.attr\\n                 - ms (number) number of milliseconds for animation to run\\n                 - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\\n                 - callback (function) #optional callback function. Will be called at the end of animation.\\n                 **\\n                 = (object) @Animation\\n                 \\\\*/\\n                R.animation = function (params, ms, easing, callback) {\\n                    if (params instanceof Animation) {\\n                        return params;\\n                    }\\n                    if (R.is(easing, \\\"function\\\") || !easing) {\\n                        callback = callback || easing || null;\\n                        easing = null;\\n                    }\\n                    params = Object(params);\\n                    ms = +ms || 0;\\n                    var p = {},\\n                        json,\\n                        attr;\\n                    for (attr in params) if (params[has](attr) && toFloat(attr) != attr && toFloat(attr) + \\\"%\\\" != attr) {\\n                        json = true;\\n                        p[attr] = params[attr];\\n                    }\\n                    if (!json) {\\n                        // if percent-like syntax is used and end-of-all animation callback used\\n                        if (callback) {\\n                            // find the last one\\n                            var lastKey = 0;\\n                            for (var i in params) {\\n                                var percent = toInt(i);\\n                                if (params[has](i) && percent > lastKey) {\\n                                    lastKey = percent;\\n                                }\\n                            }\\n                            lastKey += '%';\\n                            // if already defined callback in the last keyframe, skip\\n                            !params[lastKey].callback && (params[lastKey].callback = callback);\\n                        }\\n                        return new Animation(params, ms);\\n                    } else {\\n                        easing && (p.easing = easing);\\n                        callback && (p.callback = callback);\\n                        return new Animation({100: p}, ms);\\n                    }\\n                };\\n                /*\\\\\\n                 * Element.animate\\n                 [ method ]\\n                 **\\n                 * Creates and starts animation for given element.\\n                 **\\n                 > Parameters\\n                 **\\n                 - params (object) final attributes for the element, see also @Element.attr\\n                 - ms (number) number of milliseconds for animation to run\\n                 - easing (string) #optional easing type. Accept one of @Raphael.easing_formulas or CSS format: `cubic&#x2010;bezier(XX,&#160;XX,&#160;XX,&#160;XX)`\\n                 - callback (function) #optional callback function. Will be called at the end of animation.\\n                 * or\\n                 - animation (object) animation object, see @Raphael.animation\\n                 **\\n                 = (object) original element\\n                 \\\\*/\\n                elproto.animate = function (params, ms, easing, callback) {\\n                    var element = this;\\n                    if (element.removed) {\\n                        callback && callback.call(element);\\n                        return element;\\n                    }\\n                    var anim = params instanceof Animation ? params : R.animation(params, ms, easing, callback);\\n                    runAnimation(anim, element, anim.percents[0], null, element.attr());\\n                    return element;\\n                };\\n                /*\\\\\\n                 * Element.setTime\\n                 [ method ]\\n                 **\\n                 * Sets the status of animation of the element in milliseconds. Similar to @Element.status method.\\n                 **\\n                 > Parameters\\n                 **\\n                 - anim (object) animation object\\n                 - value (number) number of milliseconds from the beginning of the animation\\n                 **\\n                 = (object) original element if `value` is specified\\n                 * Note, that during animation following events are triggered:\\n                 *\\n                 * On each animation frame event `anim.frame.<id>`, on start `anim.start.<id>` and on end `anim.finish.<id>`.\\n                 \\\\*/\\n                elproto.setTime = function (anim, value) {\\n                    if (anim && value != null) {\\n                        this.status(anim, mmin(value, anim.ms) / anim.ms);\\n                    }\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.status\\n                 [ method ]\\n                 **\\n                 * Gets or sets the status of animation of the element.\\n                 **\\n                 > Parameters\\n                 **\\n                 - anim (object) #optional animation object\\n                 - value (number) #optional 0 – 1. If specified, method works like a setter and sets the status of a given animation to the value. This will cause animation to jump to the given position.\\n                 **\\n                 = (number) status\\n                 * or\\n                 = (array) status if `anim` is not specified. Array of objects in format:\\n                 o {\\n                 o     anim: (object) animation object\\n                 o     status: (number) status\\n                 o }\\n                 * or\\n                 = (object) original element if `value` is specified\\n                 \\\\*/\\n                elproto.status = function (anim, value) {\\n                    var out = [],\\n                        i = 0,\\n                        len,\\n                        e;\\n                    if (value != null) {\\n                        runAnimation(anim, this, -1, mmin(value, 1));\\n                        return this;\\n                    } else {\\n                        len = animationElements.length;\\n                        for (; i < len; i++) {\\n                            e = animationElements[i];\\n                            if (e.el.id == this.id && (!anim || e.anim == anim)) {\\n                                if (anim) {\\n                                    return e.status;\\n                                }\\n                                out.push({\\n                                    anim: e.anim,\\n                                    status: e.status\\n                                });\\n                            }\\n                        }\\n                        if (anim) {\\n                            return 0;\\n                        }\\n                        return out;\\n                    }\\n                };\\n                /*\\\\\\n                 * Element.pause\\n                 [ method ]\\n                 **\\n                 * Stops animation of the element with ability to resume it later on.\\n                 **\\n                 > Parameters\\n                 **\\n                 - anim (object) #optional animation object\\n                 **\\n                 = (object) original element\\n                 \\\\*/\\n                elproto.pause = function (anim) {\\n                    for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\\n                        if (eve(\\\"raphael.anim.pause.\\\" + this.id, this, animationElements[i].anim) !== false) {\\n                            animationElements[i].paused = true;\\n                        }\\n                    }\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.resume\\n                 [ method ]\\n                 **\\n                 * Resumes animation if it was paused with @Element.pause method.\\n                 **\\n                 > Parameters\\n                 **\\n                 - anim (object) #optional animation object\\n                 **\\n                 = (object) original element\\n                 \\\\*/\\n                elproto.resume = function (anim) {\\n                    for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\\n                        var e = animationElements[i];\\n                        if (eve(\\\"raphael.anim.resume.\\\" + this.id, this, e.anim) !== false) {\\n                            delete e.paused;\\n                            this.status(e.anim, e.status);\\n                        }\\n                    }\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.stop\\n                 [ method ]\\n                 **\\n                 * Stops animation of the element.\\n                 **\\n                 > Parameters\\n                 **\\n                 - anim (object) #optional animation object\\n                 **\\n                 = (object) original element\\n                 \\\\*/\\n                elproto.stop = function (anim) {\\n                    for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.id == this.id && (!anim || animationElements[i].anim == anim)) {\\n                        if (eve(\\\"raphael.anim.stop.\\\" + this.id, this, animationElements[i].anim) !== false) {\\n                            animationElements.splice(i--, 1);\\n                        }\\n                    }\\n                    return this;\\n                };\\n                function stopAnimation(paper) {\\n                    for (var i = 0; i < animationElements.length; i++) if (animationElements[i].el.paper == paper) {\\n                        animationElements.splice(i--, 1);\\n                    }\\n                }\\n\\n                eve.on(\\\"raphael.remove\\\", stopAnimation);\\n                eve.on(\\\"raphael.clear\\\", stopAnimation);\\n                elproto.toString = function () {\\n                    return \\\"Rapha\\\\xebl\\\\u2019s object\\\";\\n                };\\n\\n                // Set\\n                var Set = function (items) {\\n                        this.items = [];\\n                        this.length = 0;\\n                        this.type = \\\"set\\\";\\n                        if (items) {\\n                            for (var i = 0, ii = items.length; i < ii; i++) {\\n                                if (items[i] && (items[i].constructor == elproto.constructor || items[i].constructor == Set)) {\\n                                    this[this.items.length] = this.items[this.items.length] = items[i];\\n                                    this.length++;\\n                                }\\n                            }\\n                        }\\n                    },\\n                    setproto = Set.prototype;\\n                /*\\\\\\n                 * Set.push\\n                 [ method ]\\n                 **\\n                 * Adds each argument to the current set.\\n                 = (object) original element\\n                 \\\\*/\\n                setproto.push = function () {\\n                    var item,\\n                        len;\\n                    for (var i = 0, ii = arguments.length; i < ii; i++) {\\n                        item = arguments[i];\\n                        if (item && (item.constructor == elproto.constructor || item.constructor == Set)) {\\n                            len = this.items.length;\\n                            this[len] = this.items[len] = item;\\n                            this.length++;\\n                        }\\n                    }\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Set.pop\\n                 [ method ]\\n                 **\\n                 * Removes last element and returns it.\\n                 = (object) element\\n                 \\\\*/\\n                setproto.pop = function () {\\n                    this.length && delete this[this.length--];\\n                    return this.items.pop();\\n                };\\n                /*\\\\\\n                 * Set.forEach\\n                 [ method ]\\n                 **\\n                 * Executes given function for each element in the set.\\n                 *\\n                 * If function returns `false` it will stop loop running.\\n                 **\\n                 > Parameters\\n                 **\\n                 - callback (function) function to run\\n                 - thisArg (object) context object for the callback\\n                 = (object) Set object\\n                 \\\\*/\\n                setproto.forEach = function (callback, thisArg) {\\n                    for (var i = 0, ii = this.items.length; i < ii; i++) {\\n                        if (callback.call(thisArg, this.items[i], i) === false) {\\n                            return this;\\n                        }\\n                    }\\n                    return this;\\n                };\\n                for (var method in elproto) if (elproto[has](method)) {\\n                    setproto[method] = (function (methodname) {\\n                        return function () {\\n                            var arg = arguments;\\n                            return this.forEach(function (el) {\\n                                el[methodname][apply](el, arg);\\n                            });\\n                        };\\n                    })(method);\\n                }\\n                setproto.attr = function (name, value) {\\n                    if (name && R.is(name, array) && R.is(name[0], \\\"object\\\")) {\\n                        for (var j = 0, jj = name.length; j < jj; j++) {\\n                            this.items[j].attr(name[j]);\\n                        }\\n                    } else {\\n                        for (var i = 0, ii = this.items.length; i < ii; i++) {\\n                            this.items[i].attr(name, value);\\n                        }\\n                    }\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Set.clear\\n                 [ method ]\\n                 **\\n                 * Removes all elements from the set\\n                 \\\\*/\\n                setproto.clear = function () {\\n                    while (this.length) {\\n                        this.pop();\\n                    }\\n                };\\n                /*\\\\\\n                 * Set.splice\\n                 [ method ]\\n                 **\\n                 * Removes given element from the set\\n                 **\\n                 > Parameters\\n                 **\\n                 - index (number) position of the deletion\\n                 - count (number) number of element to remove\\n                 - insertion… (object) #optional elements to insert\\n                 = (object) set elements that were deleted\\n                 \\\\*/\\n                setproto.splice = function (index, count, insertion) {\\n                    index = index < 0 ? mmax(this.length + index, 0) : index;\\n                    count = mmax(0, mmin(this.length - index, count));\\n                    var tail = [],\\n                        todel = [],\\n                        args = [],\\n                        i;\\n                    for (i = 2; i < arguments.length; i++) {\\n                        args.push(arguments[i]);\\n                    }\\n                    for (i = 0; i < count; i++) {\\n                        todel.push(this[index + i]);\\n                    }\\n                    for (; i < this.length - index; i++) {\\n                        tail.push(this[index + i]);\\n                    }\\n                    var arglen = args.length;\\n                    for (i = 0; i < arglen + tail.length; i++) {\\n                        this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\\n                    }\\n                    i = this.items.length = this.length -= count - arglen;\\n                    while (this[i]) {\\n                        delete this[i++];\\n                    }\\n                    return new Set(todel);\\n                };\\n                /*\\\\\\n                 * Set.exclude\\n                 [ method ]\\n                 **\\n                 * Removes given element from the set\\n                 **\\n                 > Parameters\\n                 **\\n                 - element (object) element to remove\\n                 = (boolean) `true` if object was found & removed from the set\\n                 \\\\*/\\n                setproto.exclude = function (el) {\\n                    for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\\n                        this.splice(i, 1);\\n                        return true;\\n                    }\\n                };\\n                setproto.animate = function (params, ms, easing, callback) {\\n                    (R.is(easing, \\\"function\\\") || !easing) && (callback = easing || null);\\n                    var len = this.items.length,\\n                        i = len,\\n                        item,\\n                        set = this,\\n                        collector;\\n                    if (!len) {\\n                        return this;\\n                    }\\n                    callback && (collector = function () {\\n                        !--len && callback.call(set);\\n                    });\\n                    easing = R.is(easing, string) ? easing : collector;\\n                    var anim = R.animation(params, ms, easing, collector);\\n                    item = this.items[--i].animate(anim);\\n                    while (i--) {\\n                        this.items[i] && !this.items[i].removed && this.items[i].animateWith(item, anim, anim);\\n                        (this.items[i] && !this.items[i].removed) || len--;\\n                    }\\n                    return this;\\n                };\\n                setproto.insertAfter = function (el) {\\n                    var i = this.items.length;\\n                    while (i--) {\\n                        this.items[i].insertAfter(el);\\n                    }\\n                    return this;\\n                };\\n                setproto.getBBox = function () {\\n                    var x = [],\\n                        y = [],\\n                        x2 = [],\\n                        y2 = [];\\n                    for (var i = this.items.length; i--;) if (!this.items[i].removed) {\\n                        var box = this.items[i].getBBox();\\n                        x.push(box.x);\\n                        y.push(box.y);\\n                        x2.push(box.x + box.width);\\n                        y2.push(box.y + box.height);\\n                    }\\n                    x = mmin[apply](0, x);\\n                    y = mmin[apply](0, y);\\n                    x2 = mmax[apply](0, x2);\\n                    y2 = mmax[apply](0, y2);\\n                    return {\\n                        x: x,\\n                        y: y,\\n                        x2: x2,\\n                        y2: y2,\\n                        width: x2 - x,\\n                        height: y2 - y\\n                    };\\n                };\\n                setproto.clone = function (s) {\\n                    s = this.paper.set();\\n                    for (var i = 0, ii = this.items.length; i < ii; i++) {\\n                        s.push(this.items[i].clone());\\n                    }\\n                    return s;\\n                };\\n                setproto.toString = function () {\\n                    return \\\"Rapha\\\\xebl\\\\u2018s set\\\";\\n                };\\n\\n                setproto.glow = function (glowConfig) {\\n                    var ret = this.paper.set();\\n                    this.forEach(function (shape, index) {\\n                        var g = shape.glow(glowConfig);\\n                        if (g != null) {\\n                            g.forEach(function (shape2, index2) {\\n                                ret.push(shape2);\\n                            });\\n                        }\\n                    });\\n                    return ret;\\n                };\\n\\n\\n                /*\\\\\\n                 * Set.isPointInside\\n                 [ method ]\\n                 **\\n                 * Determine if given point is inside this set’s elements\\n                 **\\n                 > Parameters\\n                 **\\n                 - x (number) x coordinate of the point\\n                 - y (number) y coordinate of the point\\n                 = (boolean) `true` if point is inside any of the set's elements\\n                 \\\\*/\\n                setproto.isPointInside = function (x, y) {\\n                    var isPointInside = false;\\n                    this.forEach(function (el) {\\n                        if (el.isPointInside(x, y)) {\\n                            isPointInside = true;\\n                            return false; // stop loop\\n                        }\\n                    });\\n                    return isPointInside;\\n                };\\n\\n                /*\\\\\\n                 * Raphael.registerFont\\n                 [ method ]\\n                 **\\n                 * Adds given font to the registered set of fonts for Raphaël. Should be used as an internal call from within Cufón’s font file.\\n                 * Returns original parameter, so it could be used with chaining.\\n                 # <a href=\\\"http://wiki.github.com/sorccu/cufon/about\\\">More about Cufón and how to convert your font form TTF, OTF, etc to JavaScript file.</a>\\n                 **\\n                 > Parameters\\n                 **\\n                 - font (object) the font to register\\n                 = (object) the font you passed in\\n                 > Usage\\n                 | Cufon.registerFont(Raphael.registerFont({…}));\\n                 \\\\*/\\n                R.registerFont = function (font) {\\n                    if (!font.face) {\\n                        return font;\\n                    }\\n                    this.fonts = this.fonts || {};\\n                    var fontcopy = {\\n                            w: font.w,\\n                            face: {},\\n                            glyphs: {}\\n                        },\\n                        family = font.face[\\\"font-family\\\"];\\n                    for (var prop in font.face) if (font.face[has](prop)) {\\n                        fontcopy.face[prop] = font.face[prop];\\n                    }\\n                    if (this.fonts[family]) {\\n                        this.fonts[family].push(fontcopy);\\n                    } else {\\n                        this.fonts[family] = [fontcopy];\\n                    }\\n                    if (!font.svg) {\\n                        fontcopy.face[\\\"units-per-em\\\"] = toInt(font.face[\\\"units-per-em\\\"], 10);\\n                        for (var glyph in font.glyphs) if (font.glyphs[has](glyph)) {\\n                            var path = font.glyphs[glyph];\\n                            fontcopy.glyphs[glyph] = {\\n                                w: path.w,\\n                                k: {},\\n                                d: path.d && \\\"M\\\" + path.d.replace(/[mlcxtrv]/g, function (command) {\\n                                    return {l: \\\"L\\\", c: \\\"C\\\", x: \\\"z\\\", t: \\\"m\\\", r: \\\"l\\\", v: \\\"c\\\"}[command] || \\\"M\\\";\\n                                }) + \\\"z\\\"\\n                            };\\n                            if (path.k) {\\n                                for (var k in path.k) if (path[has](k)) {\\n                                    fontcopy.glyphs[glyph].k[k] = path.k[k];\\n                                }\\n                            }\\n                        }\\n                    }\\n                    return font;\\n                };\\n                /*\\\\\\n                 * Paper.getFont\\n                 [ method ]\\n                 **\\n                 * Finds font object in the registered fonts by given parameters. You could specify only one word from the font name, like “Myriad” for “Myriad Pro”.\\n                 **\\n                 > Parameters\\n                 **\\n                 - family (string) font family name or any word from it\\n                 - weight (string) #optional font weight\\n                 - style (string) #optional font style\\n                 - stretch (string) #optional font stretch\\n                 = (object) the font object\\n                 > Usage\\n                 | paper.print(100, 100, \\\"Test string\\\", paper.getFont(\\\"Times\\\", 800), 30);\\n                 \\\\*/\\n                paperproto.getFont = function (family, weight, style, stretch) {\\n                    stretch = stretch || \\\"normal\\\";\\n                    style = style || \\\"normal\\\";\\n                    weight = +weight || {normal: 400, bold: 700, lighter: 300, bolder: 800}[weight] || 400;\\n                    if (!R.fonts) {\\n                        return;\\n                    }\\n                    var font = R.fonts[family];\\n                    if (!font) {\\n                        var name = new RegExp(\\\"(^|\\\\\\\\s)\\\" + family.replace(/[^\\\\w\\\\d\\\\s+!~.:_-]/g, E) + \\\"(\\\\\\\\s|$)\\\", \\\"i\\\");\\n                        for (var fontName in R.fonts) if (R.fonts[has](fontName)) {\\n                            if (name.test(fontName)) {\\n                                font = R.fonts[fontName];\\n                                break;\\n                            }\\n                        }\\n                    }\\n                    var thefont;\\n                    if (font) {\\n                        for (var i = 0, ii = font.length; i < ii; i++) {\\n                            thefont = font[i];\\n                            if (thefont.face[\\\"font-weight\\\"] == weight && (thefont.face[\\\"font-style\\\"] == style || !thefont.face[\\\"font-style\\\"]) && thefont.face[\\\"font-stretch\\\"] == stretch) {\\n                                break;\\n                            }\\n                        }\\n                    }\\n                    return thefont;\\n                };\\n                /*\\\\\\n                 * Paper.print\\n                 [ method ]\\n                 **\\n                 * Creates path that represent given text written using given font at given position with given size.\\n                 * Result of the method is path element that contains whole text as a separate path.\\n                 **\\n                 > Parameters\\n                 **\\n                 - x (number) x position of the text\\n                 - y (number) y position of the text\\n                 - string (string) text to print\\n                 - font (object) font object, see @Paper.getFont\\n                 - size (number) #optional size of the font, default is `16`\\n                 - origin (string) #optional could be `\\\"baseline\\\"` or `\\\"middle\\\"`, default is `\\\"middle\\\"`\\n                 - letter_spacing (number) #optional number in range `-1..1`, default is `0`\\n                 - line_spacing (number) #optional number in range `1..3`, default is `1`\\n                 = (object) resulting path element, which consist of all letters\\n                 > Usage\\n                 | var txt = r.print(10, 50, \\\"print\\\", r.getFont(\\\"Museo\\\"), 30).attr({fill: \\\"#fff\\\"});\\n                 \\\\*/\\n                paperproto.print = function (x, y, string, font, size, origin, letter_spacing, line_spacing) {\\n                    origin = origin || \\\"middle\\\"; // baseline|middle\\n                    letter_spacing = mmax(mmin(letter_spacing || 0, 1), -1);\\n                    line_spacing = mmax(mmin(line_spacing || 1, 3), 1);\\n                    var letters = Str(string)[split](E),\\n                        shift = 0,\\n                        notfirst = 0,\\n                        path = E,\\n                        scale;\\n                    R.is(font, \\\"string\\\") && (font = this.getFont(font));\\n                    if (font) {\\n                        scale = (size || 16) / font.face[\\\"units-per-em\\\"];\\n                        var bb = font.face.bbox[split](separator),\\n                            top = +bb[0],\\n                            lineHeight = bb[3] - bb[1],\\n                            shifty = 0,\\n                            height = +bb[1] + (origin == \\\"baseline\\\" ? lineHeight + (+font.face.descent) : lineHeight / 2);\\n                        for (var i = 0, ii = letters.length; i < ii; i++) {\\n                            if (letters[i] == \\\"\\\\n\\\") {\\n                                shift = 0;\\n                                curr = 0;\\n                                notfirst = 0;\\n                                shifty += lineHeight * line_spacing;\\n                            } else {\\n                                var prev = notfirst && font.glyphs[letters[i - 1]] || {},\\n                                    curr = font.glyphs[letters[i]];\\n                                shift += notfirst ? (prev.w || font.w) + (prev.k && prev.k[letters[i]] || 0) + (font.w * letter_spacing) : 0;\\n                                notfirst = 1;\\n                            }\\n                            if (curr && curr.d) {\\n                                path += R.transformPath(curr.d, [\\\"t\\\", shift * scale, shifty * scale, \\\"s\\\", scale, scale, top, height, \\\"t\\\", (x - top) / scale, (y - height) / scale]);\\n                            }\\n                        }\\n                    }\\n                    return this.path(path).attr({\\n                        fill: \\\"#000\\\",\\n                        stroke: \\\"none\\\"\\n                    });\\n                };\\n\\n                /*\\\\\\n                 * Paper.add\\n                 [ method ]\\n                 **\\n                 * Imports elements in JSON array in format `{type: type, <attributes>}`\\n                 **\\n                 > Parameters\\n                 **\\n                 - json (array)\\n                 = (object) resulting set of imported elements\\n                 > Usage\\n                 | paper.add([\\n                 |     {\\n                 |         type: \\\"circle\\\",\\n                 |         cx: 10,\\n                 |         cy: 10,\\n                 |         r: 5\\n                 |     },\\n                 |     {\\n                 |         type: \\\"rect\\\",\\n                 |         x: 10,\\n                 |         y: 10,\\n                 |         width: 10,\\n                 |         height: 10,\\n                 |         fill: \\\"#fc0\\\"\\n                 |     }\\n                 | ]);\\n                 \\\\*/\\n                paperproto.add = function (json) {\\n                    if (R.is(json, \\\"array\\\")) {\\n                        var res = this.set(),\\n                            i = 0,\\n                            ii = json.length,\\n                            j;\\n                        for (; i < ii; i++) {\\n                            j = json[i] || {};\\n                            elements[has](j.type) && res.push(this[j.type]().attr(j));\\n                        }\\n                    }\\n                    return res;\\n                };\\n\\n                /*\\\\\\n                 * Raphael.format\\n                 [ method ]\\n                 **\\n                 * Simple format function. Replaces construction of type “`{<number>}`” to the corresponding argument.\\n                 **\\n                 > Parameters\\n                 **\\n                 - token (string) string to format\\n                 - … (string) rest of arguments will be treated as parameters for replacement\\n                 = (string) formated string\\n                 > Usage\\n                 | var x = 10,\\n                 |     y = 20,\\n                 |     width = 40,\\n                 |     height = 50;\\n                 | // this will draw a rectangular shape equivalent to \\\"M10,20h40v50h-40z\\\"\\n                 | paper.path(Raphael.format(\\\"M{0},{1}h{2}v{3}h{4}z\\\", x, y, width, height, -width));\\n                 \\\\*/\\n                R.format = function (token, params) {\\n                    var args = R.is(params, array) ? [0][concat](params) : arguments;\\n                    token && R.is(token, string) && args.length - 1 && (token = token.replace(formatrg, function (str, i) {\\n                        return args[++i] == null ? E : args[i];\\n                    }));\\n                    return token || E;\\n                };\\n                /*\\\\\\n                 * Raphael.fullfill\\n                 [ method ]\\n                 **\\n                 * A little bit more advanced format function than @Raphael.format. Replaces construction of type “`{<name>}`” to the corresponding argument.\\n                 **\\n                 > Parameters\\n                 **\\n                 - token (string) string to format\\n                 - json (object) object which properties will be used as a replacement\\n                 = (string) formated string\\n                 > Usage\\n                 | // this will draw a rectangular shape equivalent to \\\"M10,20h40v50h-40z\\\"\\n                 | paper.path(Raphael.fullfill(\\\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\\\", {\\n                 |     x: 10,\\n                 |     y: 20,\\n                 |     dim: {\\n                 |         width: 40,\\n                 |         height: 50,\\n                 |         \\\"negative width\\\": -40\\n                 |     }\\n                 | }));\\n                 \\\\*/\\n                R.fullfill = (function () {\\n                    var tokenRegex = /\\\\{([^\\\\}]+)\\\\}/g,\\n                        objNotationRegex = /(?:(?:^|\\\\.)(.+?)(?=\\\\[|\\\\.|$|\\\\()|\\\\[('|\\\")(.+?)\\\\2\\\\])(\\\\(\\\\))?/g, // matches .xxxxx or [\\\"xxxxx\\\"] to run over object properties\\n                        replacer = function (all, key, obj) {\\n                            var res = obj;\\n                            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\\n                                name = name || quotedName;\\n                                if (res) {\\n                                    if (name in res) {\\n                                        res = res[name];\\n                                    }\\n                                    typeof res == \\\"function\\\" && isFunc && (res = res());\\n                                }\\n                            });\\n                            res = (res == null || res == obj ? all : res) + \\\"\\\";\\n                            return res;\\n                        };\\n                    return function (str, obj) {\\n                        return String(str).replace(tokenRegex, function (all, key) {\\n                            return replacer(all, key, obj);\\n                        });\\n                    };\\n                })();\\n                /*\\\\\\n                 * Raphael.ninja\\n                 [ method ]\\n                 **\\n                 * If you want to leave no trace of Raphaël (Well, Raphaël creates only one global variable `Raphael`, but anyway.) You can use `ninja` method.\\n                 * Beware, that in this case plugins could stop working, because they are depending on global variable existence.\\n                 **\\n                 = (object) Raphael object\\n                 > Usage\\n                 | (function (local_raphael) {\\n                 |     var paper = local_raphael(10, 10, 320, 200);\\n                 |     …\\n                 | })(Raphael.ninja());\\n                 \\\\*/\\n                R.ninja = function () {\\n                    if (oldRaphael.was) {\\n                        g.win.Raphael = oldRaphael.is;\\n                    } else {\\n                        // IE8 raises an error when deleting window property\\n                        window.Raphael = undefined;\\n                        try {\\n                            delete window.Raphael;\\n                        } catch (e) {\\n                        }\\n                    }\\n                    return R;\\n                };\\n                /*\\\\\\n                 * Raphael.st\\n                 [ property (object) ]\\n                 **\\n                 * You can add your own method to elements and sets. It is wise to add a set method for each element method\\n                 * you added, so you will be able to call the same method on sets too.\\n                 **\\n                 * See also @Raphael.el.\\n                 > Usage\\n                 | Raphael.el.red = function () {\\n                 |     this.attr({fill: \\\"#f00\\\"});\\n                 | };\\n                 | Raphael.st.red = function () {\\n                 |     this.forEach(function (el) {\\n                 |         el.red();\\n                 |     });\\n                 | };\\n                 | // then use it\\n                 | paper.set(paper.circle(100, 100, 20), paper.circle(110, 100, 20)).red();\\n                 \\\\*/\\n                R.st = setproto;\\n\\n                eve.on(\\\"raphael.DOMload\\\", function () {\\n                    loaded = true;\\n                });\\n\\n                // Firefox <3.6 fix: http://webreflection.blogspot.com/2009/11/195-chars-to-help-lazy-loading.html\\n                (function (doc, loaded, f) {\\n                    if (doc.readyState == null && doc.addEventListener) {\\n                        doc.addEventListener(loaded, f = function () {\\n                            doc.removeEventListener(loaded, f, false);\\n                            doc.readyState = \\\"complete\\\";\\n                        }, false);\\n                        doc.readyState = \\\"loading\\\";\\n                    }\\n                    function isLoaded() {\\n                        (/in/).test(doc.readyState) ? setTimeout(isLoaded, 9) : R.eve(\\\"raphael.DOMload\\\");\\n                    }\\n\\n                    isLoaded();\\n                })(document, \\\"DOMContentLoaded\\\");\\n\\n                return R;\\n            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n\\n\\n            /***/\\n        },\\n        /* 2 */\\n        /***/ function (module, exports, __webpack_require__) {\\n\\n            var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\\n            //\\n            // Licensed under the Apache License, Version 2.0 (the \\\"License\\\");\\n            // you may not use this file except in compliance with the License.\\n            // You may obtain a copy of the License at\\n            //\\n            // http://www.apache.org/licenses/LICENSE-2.0\\n            //\\n            // Unless required by applicable law or agreed to in writing, software\\n            // distributed under the License is distributed on an \\\"AS IS\\\" BASIS,\\n            // WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\\n            // See the License for the specific language governing permissions and\\n            // limitations under the License.\\n            // ┌────────────────────────────────────────────────────────────┐ \\\\\\\\\\n            // │ Eve 0.5.0 - JavaScript Events Library                      │ \\\\\\\\\\n            // ├────────────────────────────────────────────────────────────┤ \\\\\\\\\\n            // │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\\\\\\n            // └────────────────────────────────────────────────────────────┘ \\\\\\\\\\n\\n            (function (glob) {\\n                var version = \\\"0.5.0\\\",\\n                    has = \\\"hasOwnProperty\\\",\\n                    separator = /[\\\\.\\\\/]/,\\n                    comaseparator = /\\\\s*,\\\\s*/,\\n                    wildcard = \\\"*\\\",\\n                    fun = function () {\\n                    },\\n                    numsort = function (a, b) {\\n                        return a - b;\\n                    },\\n                    current_event,\\n                    stop,\\n                    events = {n: {}},\\n                    firstDefined = function () {\\n                        for (var i = 0, ii = this.length; i < ii; i++) {\\n                            if (typeof this[i] != \\\"undefined\\\") {\\n                                return this[i];\\n                            }\\n                        }\\n                    },\\n                    lastDefined = function () {\\n                        var i = this.length;\\n                        while (--i) {\\n                            if (typeof this[i] != \\\"undefined\\\") {\\n                                return this[i];\\n                            }\\n                        }\\n                    },\\n                    objtos = Object.prototype.toString,\\n                    Str = String,\\n                    isArray = Array.isArray || function (ar) {\\n                            return ar instanceof Array || objtos.call(ar) == \\\"[object Array]\\\";\\n                        };\\n                /*\\\\\\n                 * eve\\n                 [ method ]\\n\\n                 * Fires event with given `name`, given scope and other parameters.\\n\\n                 > Arguments\\n\\n                 - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\\n                 - scope (object) context for the event handlers\\n                 - varargs (...) the rest of arguments will be sent to event handlers\\n\\n                 = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\\n                 \\\\*/\\n                eve = function (name, scope) {\\n                    var e = events,\\n                        oldstop = stop,\\n                        args = Array.prototype.slice.call(arguments, 2),\\n                        listeners = eve.listeners(name),\\n                        z = 0,\\n                        f = false,\\n                        l,\\n                        indexed = [],\\n                        queue = {},\\n                        out = [],\\n                        ce = current_event,\\n                        errors = [];\\n                    out.firstDefined = firstDefined;\\n                    out.lastDefined = lastDefined;\\n                    current_event = name;\\n                    stop = 0;\\n                    for (var i = 0, ii = listeners.length; i < ii; i++) if (\\\"zIndex\\\" in listeners[i]) {\\n                        indexed.push(listeners[i].zIndex);\\n                        if (listeners[i].zIndex < 0) {\\n                            queue[listeners[i].zIndex] = listeners[i];\\n                        }\\n                    }\\n                    indexed.sort(numsort);\\n                    while (indexed[z] < 0) {\\n                        l = queue[indexed[z++]];\\n                        out.push(l.apply(scope, args));\\n                        if (stop) {\\n                            stop = oldstop;\\n                            return out;\\n                        }\\n                    }\\n                    for (i = 0; i < ii; i++) {\\n                        l = listeners[i];\\n                        if (\\\"zIndex\\\" in l) {\\n                            if (l.zIndex == indexed[z]) {\\n                                out.push(l.apply(scope, args));\\n                                if (stop) {\\n                                    break;\\n                                }\\n                                do {\\n                                    z++;\\n                                    l = queue[indexed[z]];\\n                                    l && out.push(l.apply(scope, args));\\n                                    if (stop) {\\n                                        break;\\n                                    }\\n                                } while (l)\\n                            } else {\\n                                queue[l.zIndex] = l;\\n                            }\\n                        } else {\\n                            out.push(l.apply(scope, args));\\n                            if (stop) {\\n                                break;\\n                            }\\n                        }\\n                    }\\n                    stop = oldstop;\\n                    current_event = ce;\\n                    return out;\\n                };\\n                // Undocumented. Debug only.\\n                eve._events = events;\\n                /*\\\\\\n                 * eve.listeners\\n                 [ method ]\\n\\n                 * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\\n\\n                 > Arguments\\n\\n                 - name (string) name of the event, dot (`.`) or slash (`/`) separated\\n\\n                 = (array) array of event handlers\\n                 \\\\*/\\n                eve.listeners = function (name) {\\n                    var names = isArray(name) ? name : name.split(separator),\\n                        e = events,\\n                        item,\\n                        items,\\n                        k,\\n                        i,\\n                        ii,\\n                        j,\\n                        jj,\\n                        nes,\\n                        es = [e],\\n                        out = [];\\n                    for (i = 0, ii = names.length; i < ii; i++) {\\n                        nes = [];\\n                        for (j = 0, jj = es.length; j < jj; j++) {\\n                            e = es[j].n;\\n                            items = [e[names[i]], e[wildcard]];\\n                            k = 2;\\n                            while (k--) {\\n                                item = items[k];\\n                                if (item) {\\n                                    nes.push(item);\\n                                    out = out.concat(item.f || []);\\n                                }\\n                            }\\n                        }\\n                        es = nes;\\n                    }\\n                    return out;\\n                };\\n                /*\\\\\\n                 * eve.separator\\n                 [ method ]\\n\\n                 * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\\n                 * here. Be aware that if you pass a string longer than one character it will be treated as\\n                 * a list of characters.\\n\\n                 - separator (string) new separator. Empty string resets to default: `.` or `/`.\\n                 \\\\*/\\n                eve.separator = function (sep) {\\n                    if (sep) {\\n                        sep = Str(sep).replace(/(?=[\\\\.\\\\^\\\\]\\\\[\\\\-])/g, \\\"\\\\\\\\\\\");\\n                        sep = \\\"[\\\" + sep + \\\"]\\\";\\n                        separator = new RegExp(sep);\\n                    } else {\\n                        separator = /[\\\\.\\\\/]/;\\n                    }\\n                };\\n                /*\\\\\\n                 * eve.on\\n                 [ method ]\\n                 **\\n                 * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\\n                 | eve.on(\\\"*.under.*\\\", f);\\n                 | eve(\\\"mouse.under.floor\\\"); // triggers f\\n                 * Use @eve to trigger the listener.\\n                 **\\n                 - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\\n                 - f (function) event handler function\\n                 **\\n                 - name (array) if you don’t want to use separators, you can use array of strings\\n                 - f (function) event handler function\\n                 **\\n                 = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\\n                 > Example:\\n                 | eve.on(\\\"mouse\\\", eatIt)(2);\\n                 | eve.on(\\\"mouse\\\", scream);\\n                 | eve.on(\\\"mouse\\\", catchIt)(1);\\n                 * This will ensure that `catchIt` function will be called before `eatIt`.\\n                 *\\n                 * If you want to put your handler before non-indexed handlers, specify a negative value.\\n                 * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\\n                 \\\\*/\\n                eve.on = function (name, f) {\\n                    if (typeof f != \\\"function\\\") {\\n                        return function () {\\n                        };\\n                    }\\n                    var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\\n                    for (var i = 0, ii = names.length; i < ii; i++) {\\n                        (function (name) {\\n                            var names = isArray(name) ? name : Str(name).split(separator),\\n                                e = events,\\n                                exist;\\n                            for (var i = 0, ii = names.length; i < ii; i++) {\\n                                e = e.n;\\n                                e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\\n                            }\\n                            e.f = e.f || [];\\n                            for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\\n                                exist = true;\\n                                break;\\n                            }\\n                            !exist && e.f.push(f);\\n                        }(names[i]));\\n                    }\\n                    return function (zIndex) {\\n                        if (+zIndex == +zIndex) {\\n                            f.zIndex = +zIndex;\\n                        }\\n                    };\\n                };\\n                /*\\\\\\n                 * eve.f\\n                 [ method ]\\n                 **\\n                 * Returns function that will fire given event with optional arguments.\\n                 * Arguments that will be passed to the result function will be also\\n                 * concated to the list of final arguments.\\n                 | el.onclick = eve.f(\\\"click\\\", 1, 2);\\n                 | eve.on(\\\"click\\\", function (a, b, c) {\\n                 |     console.log(a, b, c); // 1, 2, [event object]\\n                 | });\\n                 > Arguments\\n                 - event (string) event name\\n                 - varargs (…) and any other arguments\\n                 = (function) possible event handler function\\n                 \\\\*/\\n                eve.f = function (event) {\\n                    var attrs = [].slice.call(arguments, 1);\\n                    return function () {\\n                        eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\\n                    };\\n                };\\n                /*\\\\\\n                 * eve.stop\\n                 [ method ]\\n                 **\\n                 * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\\n                 \\\\*/\\n                eve.stop = function () {\\n                    stop = 1;\\n                };\\n                /*\\\\\\n                 * eve.nt\\n                 [ method ]\\n                 **\\n                 * Could be used inside event handler to figure out actual name of the event.\\n                 **\\n                 > Arguments\\n                 **\\n                 - subname (string) #optional subname of the event\\n                 **\\n                 = (string) name of the event, if `subname` is not specified\\n                 * or\\n                 = (boolean) `true`, if current event’s name contains `subname`\\n                 \\\\*/\\n                eve.nt = function (subname) {\\n                    var cur = isArray(current_event) ? current_event.join(\\\".\\\") : current_event;\\n                    if (subname) {\\n                        return new RegExp(\\\"(?:\\\\\\\\.|\\\\\\\\/|^)\\\" + subname + \\\"(?:\\\\\\\\.|\\\\\\\\/|$)\\\").test(cur);\\n                    }\\n                    return cur;\\n                };\\n                /*\\\\\\n                 * eve.nts\\n                 [ method ]\\n                 **\\n                 * Could be used inside event handler to figure out actual name of the event.\\n                 **\\n                 **\\n                 = (array) names of the event\\n                 \\\\*/\\n                eve.nts = function () {\\n                    return isArray(current_event) ? current_event : current_event.split(separator);\\n                };\\n                /*\\\\\\n                 * eve.off\\n                 [ method ]\\n                 **\\n                 * Removes given function from the list of event listeners assigned to given name.\\n                 * If no arguments specified all the events will be cleared.\\n                 **\\n                 > Arguments\\n                 **\\n                 - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\\n                 - f (function) event handler function\\n                 \\\\*/\\n                /*\\\\\\n                 * eve.unbind\\n                 [ method ]\\n                 **\\n                 * See @eve.off\\n                 \\\\*/\\n                eve.off = eve.unbind = function (name, f) {\\n                    if (!name) {\\n                        eve._events = events = {n: {}};\\n                        return;\\n                    }\\n                    var names = isArray(name) ? (isArray(name[0]) ? name : [name]) : Str(name).split(comaseparator);\\n                    if (names.length > 1) {\\n                        for (var i = 0, ii = names.length; i < ii; i++) {\\n                            eve.off(names[i], f);\\n                        }\\n                        return;\\n                    }\\n                    names = isArray(name) ? name : Str(name).split(separator);\\n                    var e,\\n                        key,\\n                        splice,\\n                        i, ii, j, jj,\\n                        cur = [events];\\n                    for (i = 0, ii = names.length; i < ii; i++) {\\n                        for (j = 0; j < cur.length; j += splice.length - 2) {\\n                            splice = [j, 1];\\n                            e = cur[j].n;\\n                            if (names[i] != wildcard) {\\n                                if (e[names[i]]) {\\n                                    splice.push(e[names[i]]);\\n                                }\\n                            } else {\\n                                for (key in e) if (e[has](key)) {\\n                                    splice.push(e[key]);\\n                                }\\n                            }\\n                            cur.splice.apply(cur, splice);\\n                        }\\n                    }\\n                    for (i = 0, ii = cur.length; i < ii; i++) {\\n                        e = cur[i];\\n                        while (e.n) {\\n                            if (f) {\\n                                if (e.f) {\\n                                    for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\\n                                        e.f.splice(j, 1);\\n                                        break;\\n                                    }\\n                                    !e.f.length && delete e.f;\\n                                }\\n                                for (key in e.n) if (e.n[has](key) && e.n[key].f) {\\n                                    var funcs = e.n[key].f;\\n                                    for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\\n                                        funcs.splice(j, 1);\\n                                        break;\\n                                    }\\n                                    !funcs.length && delete e.n[key].f;\\n                                }\\n                            } else {\\n                                delete e.f;\\n                                for (key in e.n) if (e.n[has](key) && e.n[key].f) {\\n                                    delete e.n[key].f;\\n                                }\\n                            }\\n                            e = e.n;\\n                        }\\n                    }\\n                };\\n                /*\\\\\\n                 * eve.once\\n                 [ method ]\\n                 **\\n                 * Binds given event handler with a given name to only run once then unbind itself.\\n                 | eve.once(\\\"login\\\", f);\\n                 | eve(\\\"login\\\"); // triggers f\\n                 | eve(\\\"login\\\"); // no listeners\\n                 * Use @eve to trigger the listener.\\n                 **\\n                 > Arguments\\n                 **\\n                 - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\\n                 - f (function) event handler function\\n                 **\\n                 = (function) same return function as @eve.on\\n                 \\\\*/\\n                eve.once = function (name, f) {\\n                    var f2 = function () {\\n                        eve.off(name, f2);\\n                        return f.apply(this, arguments);\\n                    };\\n                    return eve.on(name, f2);\\n                };\\n                /*\\\\\\n                 * eve.version\\n                 [ property (string) ]\\n                 **\\n                 * Current version of the library.\\n                 \\\\*/\\n                eve.version = version;\\n                eve.toString = function () {\\n                    return \\\"You are running Eve \\\" + version;\\n                };\\n                (typeof module != \\\"undefined\\\" && module.exports) ? (module.exports = eve) : ( true ? (!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\\n                            return eve;\\n                        }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))) : (glob.eve = eve));\\n            })(this);\\n\\n\\n            /***/\\n        },\\n        /* 3 */\\n        /***/ function (module, exports, __webpack_require__) {\\n\\n            var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function (R) {\\n                if (R && !R.svg) {\\n                    return;\\n                }\\n\\n                var has = \\\"hasOwnProperty\\\",\\n                    Str = String,\\n                    toFloat = parseFloat,\\n                    toInt = parseInt,\\n                    math = Math,\\n                    mmax = math.max,\\n                    abs = math.abs,\\n                    pow = math.pow,\\n                    separator = /[, ]+/,\\n                    eve = R.eve,\\n                    E = \\\"\\\",\\n                    S = \\\" \\\";\\n                var xlink = \\\"http://www.w3.org/1999/xlink\\\",\\n                    markers = {\\n                        block: \\\"M5,0 0,2.5 5,5z\\\",\\n                        classic: \\\"M5,0 0,2.5 5,5 3.5,3 3.5,2z\\\",\\n                        diamond: \\\"M2.5,0 5,2.5 2.5,5 0,2.5z\\\",\\n                        open: \\\"M6,1 1,3.5 6,6\\\",\\n                        oval: \\\"M2.5,0A2.5,2.5,0,0,1,2.5,5 2.5,2.5,0,0,1,2.5,0z\\\"\\n                    },\\n                    markerCounter = {};\\n                R.toString = function () {\\n                    return \\\"Your browser supports SVG.\\\\nYou are running Rapha\\\\xebl \\\" + this.version;\\n                };\\n                var $ = function (el, attr) {\\n                        if (attr) {\\n                            if (typeof el == \\\"string\\\") {\\n                                el = $(el);\\n                            }\\n                            for (var key in attr) if (attr[has](key)) {\\n                                if (key.substring(0, 6) == \\\"xlink:\\\") {\\n                                    el.setAttributeNS(xlink, key.substring(6), Str(attr[key]));\\n                                } else {\\n                                    el.setAttribute(key, Str(attr[key]));\\n                                }\\n                            }\\n                        } else {\\n                            el = R._g.doc.createElementNS(\\\"http://www.w3.org/2000/svg\\\", el);\\n                            el.style && (el.style.webkitTapHighlightColor = \\\"rgba(0,0,0,0)\\\");\\n                        }\\n                        return el;\\n                    },\\n                    addGradientFill = function (element, gradient) {\\n                        var type = \\\"linear\\\",\\n                            id = element.id + gradient,\\n                            fx = .5, fy = .5,\\n                            o = element.node,\\n                            SVG = element.paper,\\n                            s = o.style,\\n                            el = R._g.doc.getElementById(id);\\n                        if (!el) {\\n                            gradient = Str(gradient).replace(R._radial_gradient, function (all, _fx, _fy) {\\n                                type = \\\"radial\\\";\\n                                if (_fx && _fy) {\\n                                    fx = toFloat(_fx);\\n                                    fy = toFloat(_fy);\\n                                    var dir = ((fy > .5) * 2 - 1);\\n                                    pow(fx - .5, 2) + pow(fy - .5, 2) > .25 &&\\n                                    (fy = math.sqrt(.25 - pow(fx - .5, 2)) * dir + .5) &&\\n                                    fy != .5 &&\\n                                    (fy = fy.toFixed(5) - 1e-5 * dir);\\n                                }\\n                                return E;\\n                            });\\n                            gradient = gradient.split(/\\\\s*\\\\-\\\\s*/);\\n                            if (type == \\\"linear\\\") {\\n                                var angle = gradient.shift();\\n                                angle = -toFloat(angle);\\n                                if (isNaN(angle)) {\\n                                    return null;\\n                                }\\n                                var vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))],\\n                                    max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\\n                                vector[2] *= max;\\n                                vector[3] *= max;\\n                                if (vector[2] < 0) {\\n                                    vector[0] = -vector[2];\\n                                    vector[2] = 0;\\n                                }\\n                                if (vector[3] < 0) {\\n                                    vector[1] = -vector[3];\\n                                    vector[3] = 0;\\n                                }\\n                            }\\n                            var dots = R._parseDots(gradient);\\n                            if (!dots) {\\n                                return null;\\n                            }\\n                            id = id.replace(/[\\\\(\\\\)\\\\s,\\\\xb0#]/g, \\\"_\\\");\\n\\n                            if (element.gradient && id != element.gradient.id) {\\n                                SVG.defs.removeChild(element.gradient);\\n                                delete element.gradient;\\n                            }\\n\\n                            if (!element.gradient) {\\n                                el = $(type + \\\"Gradient\\\", {id: id});\\n                                element.gradient = el;\\n                                $(el, type == \\\"radial\\\" ? {\\n                                        fx: fx,\\n                                        fy: fy\\n                                    } : {\\n                                        x1: vector[0],\\n                                        y1: vector[1],\\n                                        x2: vector[2],\\n                                        y2: vector[3],\\n                                        gradientTransform: element.matrix.invert()\\n                                    });\\n                                SVG.defs.appendChild(el);\\n                                for (var i = 0, ii = dots.length; i < ii; i++) {\\n                                    el.appendChild($(\\\"stop\\\", {\\n                                        offset: dots[i].offset ? dots[i].offset : i ? \\\"100%\\\" : \\\"0%\\\",\\n                                        \\\"stop-color\\\": dots[i].color || \\\"#fff\\\",\\n                                        \\\"stop-opacity\\\": isFinite(dots[i].opacity) ? dots[i].opacity : 1\\n                                    }));\\n                                }\\n                            }\\n                        }\\n                        $(o, {\\n                            fill: fillurl(id),\\n                            opacity: 1,\\n                            \\\"fill-opacity\\\": 1\\n                        });\\n                        s.fill = E;\\n                        s.opacity = 1;\\n                        s.fillOpacity = 1;\\n                        return 1;\\n                    },\\n                    isIE9or10 = function () {\\n                        var mode = document.documentMode;\\n                        return mode && (mode === 9 || mode === 10);\\n                    },\\n                    fillurl = function (id) {\\n                        if (isIE9or10()) {\\n                            return \\\"url('#\\\" + id + \\\"')\\\";\\n                        }\\n                        var location = document.location;\\n                        var locationString = (\\n                            location.protocol + '//' +\\n                            location.host +\\n                            location.pathname +\\n                            location.search\\n                        );\\n                        return \\\"url('\\\" + locationString + \\\"#\\\" + id + \\\"')\\\";\\n                    },\\n                    updatePosition = function (o) {\\n                        var bbox = o.getBBox(1);\\n                        $(o.pattern, {patternTransform: o.matrix.invert() + \\\" translate(\\\" + bbox.x + \\\",\\\" + bbox.y + \\\")\\\"});\\n                    },\\n                    addArrow = function (o, value, isEnd) {\\n                        if (o.type == \\\"path\\\") {\\n                            var values = Str(value).toLowerCase().split(\\\"-\\\"),\\n                                p = o.paper,\\n                                se = isEnd ? \\\"end\\\" : \\\"start\\\",\\n                                node = o.node,\\n                                attrs = o.attrs,\\n                                stroke = attrs[\\\"stroke-width\\\"],\\n                                i = values.length,\\n                                type = \\\"classic\\\",\\n                                from,\\n                                to,\\n                                dx,\\n                                refX,\\n                                attr,\\n                                w = 3,\\n                                h = 3,\\n                                t = 5;\\n                            while (i--) {\\n                                switch (values[i]) {\\n                                    case \\\"block\\\":\\n                                    case \\\"classic\\\":\\n                                    case \\\"oval\\\":\\n                                    case \\\"diamond\\\":\\n                                    case \\\"open\\\":\\n                                    case \\\"none\\\":\\n                                        type = values[i];\\n                                        break;\\n                                    case \\\"wide\\\":\\n                                        h = 5;\\n                                        break;\\n                                    case \\\"narrow\\\":\\n                                        h = 2;\\n                                        break;\\n                                    case \\\"long\\\":\\n                                        w = 5;\\n                                        break;\\n                                    case \\\"short\\\":\\n                                        w = 2;\\n                                        break;\\n                                }\\n                            }\\n                            if (type == \\\"open\\\") {\\n                                w += 2;\\n                                h += 2;\\n                                t += 2;\\n                                dx = 1;\\n                                refX = isEnd ? 4 : 1;\\n                                attr = {\\n                                    fill: \\\"none\\\",\\n                                    stroke: attrs.stroke\\n                                };\\n                            } else {\\n                                refX = dx = w / 2;\\n                                attr = {\\n                                    fill: attrs.stroke,\\n                                    stroke: \\\"none\\\"\\n                                };\\n                            }\\n                            if (o._.arrows) {\\n                                if (isEnd) {\\n                                    o._.arrows.endPath && markerCounter[o._.arrows.endPath]--;\\n                                    o._.arrows.endMarker && markerCounter[o._.arrows.endMarker]--;\\n                                } else {\\n                                    o._.arrows.startPath && markerCounter[o._.arrows.startPath]--;\\n                                    o._.arrows.startMarker && markerCounter[o._.arrows.startMarker]--;\\n                                }\\n                            } else {\\n                                o._.arrows = {};\\n                            }\\n                            if (type != \\\"none\\\") {\\n                                var pathId = \\\"raphael-marker-\\\" + type,\\n                                    markerId = \\\"raphael-marker-\\\" + se + type + w + h + \\\"-obj\\\" + o.id;\\n                                if (!R._g.doc.getElementById(pathId)) {\\n                                    p.defs.appendChild($($(\\\"path\\\"), {\\n                                        \\\"stroke-linecap\\\": \\\"round\\\",\\n                                        d: markers[type],\\n                                        id: pathId\\n                                    }));\\n                                    markerCounter[pathId] = 1;\\n                                } else {\\n                                    markerCounter[pathId]++;\\n                                }\\n                                var marker = R._g.doc.getElementById(markerId),\\n                                    use;\\n                                if (!marker) {\\n                                    marker = $($(\\\"marker\\\"), {\\n                                        id: markerId,\\n                                        markerHeight: h,\\n                                        markerWidth: w,\\n                                        orient: \\\"auto\\\",\\n                                        refX: refX,\\n                                        refY: h / 2\\n                                    });\\n                                    use = $($(\\\"use\\\"), {\\n                                        \\\"xlink:href\\\": \\\"#\\\" + pathId,\\n                                        transform: (isEnd ? \\\"rotate(180 \\\" + w / 2 + \\\" \\\" + h / 2 + \\\") \\\" : E) + \\\"scale(\\\" + w / t + \\\",\\\" + h / t + \\\")\\\",\\n                                        \\\"stroke-width\\\": (1 / ((w / t + h / t) / 2)).toFixed(4)\\n                                    });\\n                                    marker.appendChild(use);\\n                                    p.defs.appendChild(marker);\\n                                    markerCounter[markerId] = 1;\\n                                } else {\\n                                    markerCounter[markerId]++;\\n                                    use = marker.getElementsByTagName(\\\"use\\\")[0];\\n                                }\\n                                $(use, attr);\\n                                var delta = dx * (type != \\\"diamond\\\" && type != \\\"oval\\\");\\n                                if (isEnd) {\\n                                    from = o._.arrows.startdx * stroke || 0;\\n                                    to = R.getTotalLength(attrs.path) - delta * stroke;\\n                                } else {\\n                                    from = delta * stroke;\\n                                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\\n                                }\\n                                attr = {};\\n                                attr[\\\"marker-\\\" + se] = \\\"url(#\\\" + markerId + \\\")\\\";\\n                                if (to || from) {\\n                                    attr.d = R.getSubpath(attrs.path, from, to);\\n                                }\\n                                $(node, attr);\\n                                o._.arrows[se + \\\"Path\\\"] = pathId;\\n                                o._.arrows[se + \\\"Marker\\\"] = markerId;\\n                                o._.arrows[se + \\\"dx\\\"] = delta;\\n                                o._.arrows[se + \\\"Type\\\"] = type;\\n                                o._.arrows[se + \\\"String\\\"] = value;\\n                            } else {\\n                                if (isEnd) {\\n                                    from = o._.arrows.startdx * stroke || 0;\\n                                    to = R.getTotalLength(attrs.path) - from;\\n                                } else {\\n                                    from = 0;\\n                                    to = R.getTotalLength(attrs.path) - (o._.arrows.enddx * stroke || 0);\\n                                }\\n                                o._.arrows[se + \\\"Path\\\"] && $(node, {d: R.getSubpath(attrs.path, from, to)});\\n                                delete o._.arrows[se + \\\"Path\\\"];\\n                                delete o._.arrows[se + \\\"Marker\\\"];\\n                                delete o._.arrows[se + \\\"dx\\\"];\\n                                delete o._.arrows[se + \\\"Type\\\"];\\n                                delete o._.arrows[se + \\\"String\\\"];\\n                            }\\n                            for (attr in markerCounter) if (markerCounter[has](attr) && !markerCounter[attr]) {\\n                                var item = R._g.doc.getElementById(attr);\\n                                item && item.parentNode.removeChild(item);\\n                            }\\n                        }\\n                    },\\n                    dasharray = {\\n                        \\\"-\\\": [3, 1],\\n                        \\\".\\\": [1, 1],\\n                        \\\"-.\\\": [3, 1, 1, 1],\\n                        \\\"-..\\\": [3, 1, 1, 1, 1, 1],\\n                        \\\". \\\": [1, 3],\\n                        \\\"- \\\": [4, 3],\\n                        \\\"--\\\": [8, 3],\\n                        \\\"- .\\\": [4, 3, 1, 3],\\n                        \\\"--.\\\": [8, 3, 1, 3],\\n                        \\\"--..\\\": [8, 3, 1, 3, 1, 3]\\n                    },\\n                    addDashes = function (o, value, params) {\\n                        value = dasharray[Str(value).toLowerCase()];\\n                        if (value) {\\n                            var width = o.attrs[\\\"stroke-width\\\"] || \\\"1\\\",\\n                                butt = {\\n                                        round: width,\\n                                        square: width,\\n                                        butt: 0\\n                                    }[o.attrs[\\\"stroke-linecap\\\"] || params[\\\"stroke-linecap\\\"]] || 0,\\n                                dashes = [],\\n                                i = value.length;\\n                            while (i--) {\\n                                dashes[i] = value[i] * width + ((i % 2) ? 1 : -1) * butt;\\n                            }\\n                            $(o.node, {\\\"stroke-dasharray\\\": dashes.join(\\\",\\\")});\\n                        }\\n                        else {\\n                            $(o.node, {\\\"stroke-dasharray\\\": \\\"none\\\"});\\n                        }\\n                    },\\n                    setFillAndStroke = function (o, params) {\\n                        var node = o.node,\\n                            attrs = o.attrs,\\n                            vis = node.style.visibility;\\n                        node.style.visibility = \\\"hidden\\\";\\n                        for (var att in params) {\\n                            if (params[has](att)) {\\n                                if (!R._availableAttrs[has](att)) {\\n                                    continue;\\n                                }\\n                                var value = params[att];\\n                                attrs[att] = value;\\n                                switch (att) {\\n                                    case \\\"blur\\\":\\n                                        o.blur(value);\\n                                        break;\\n                                    case \\\"title\\\":\\n                                        var title = node.getElementsByTagName(\\\"title\\\");\\n\\n                                        // Use the existing <title>.\\n                                        if (title.length && (title = title[0])) {\\n                                            title.firstChild.nodeValue = value;\\n                                        } else {\\n                                            title = $(\\\"title\\\");\\n                                            var val = R._g.doc.createTextNode(value);\\n                                            title.appendChild(val);\\n                                            node.appendChild(title);\\n                                        }\\n                                        break;\\n                                    case \\\"href\\\":\\n                                    case \\\"target\\\":\\n                                        var pn = node.parentNode;\\n                                        if (pn.tagName.toLowerCase() != \\\"a\\\") {\\n                                            var hl = $(\\\"a\\\");\\n                                            pn.insertBefore(hl, node);\\n                                            hl.appendChild(node);\\n                                            pn = hl;\\n                                        }\\n                                        if (att == \\\"target\\\") {\\n                                            pn.setAttributeNS(xlink, \\\"show\\\", value == \\\"blank\\\" ? \\\"new\\\" : value);\\n                                        } else {\\n                                            pn.setAttributeNS(xlink, att, value);\\n                                        }\\n                                        break;\\n                                    case \\\"cursor\\\":\\n                                        node.style.cursor = value;\\n                                        break;\\n                                    case \\\"transform\\\":\\n                                        o.transform(value);\\n                                        break;\\n                                    case \\\"arrow-start\\\":\\n                                        addArrow(o, value);\\n                                        break;\\n                                    case \\\"arrow-end\\\":\\n                                        addArrow(o, value, 1);\\n                                        break;\\n                                    case \\\"clip-rect\\\":\\n                                        var rect = Str(value).split(separator);\\n                                        if (rect.length == 4) {\\n                                            o.clip && o.clip.parentNode.parentNode.removeChild(o.clip.parentNode);\\n                                            var el = $(\\\"clipPath\\\"),\\n                                                rc = $(\\\"rect\\\");\\n                                            el.id = R.createUUID();\\n                                            $(rc, {\\n                                                x: rect[0],\\n                                                y: rect[1],\\n                                                width: rect[2],\\n                                                height: rect[3]\\n                                            });\\n                                            el.appendChild(rc);\\n                                            o.paper.defs.appendChild(el);\\n                                            $(node, {\\\"clip-path\\\": \\\"url(#\\\" + el.id + \\\")\\\"});\\n                                            o.clip = rc;\\n                                        }\\n                                        if (!value) {\\n                                            var path = node.getAttribute(\\\"clip-path\\\");\\n                                            if (path) {\\n                                                var clip = R._g.doc.getElementById(path.replace(/(^url\\\\(#|\\\\)$)/g, E));\\n                                                clip && clip.parentNode.removeChild(clip);\\n                                                $(node, {\\\"clip-path\\\": E});\\n                                                delete o.clip;\\n                                            }\\n                                        }\\n                                        break;\\n                                    case \\\"path\\\":\\n                                        if (o.type == \\\"path\\\") {\\n                                            $(node, {d: value ? attrs.path = R._pathToAbsolute(value) : \\\"M0,0\\\"});\\n                                            o._.dirty = 1;\\n                                            if (o._.arrows) {\\n                                                \\\"startString\\\" in o._.arrows && addArrow(o, o._.arrows.startString);\\n                                                \\\"endString\\\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\\n                                            }\\n                                        }\\n                                        break;\\n                                    case \\\"width\\\":\\n                                        node.setAttribute(att, value);\\n                                        o._.dirty = 1;\\n                                        if (attrs.fx) {\\n                                            att = \\\"x\\\";\\n                                            value = attrs.x;\\n                                        } else {\\n                                            break;\\n                                        }\\n                                    case \\\"x\\\":\\n                                        if (attrs.fx) {\\n                                            value = -attrs.x - (attrs.width || 0);\\n                                        }\\n                                    case \\\"rx\\\":\\n                                        if (att == \\\"rx\\\" && o.type == \\\"rect\\\") {\\n                                            break;\\n                                        }\\n                                    case \\\"cx\\\":\\n                                        node.setAttribute(att, value);\\n                                        o.pattern && updatePosition(o);\\n                                        o._.dirty = 1;\\n                                        break;\\n                                    case \\\"height\\\":\\n                                        node.setAttribute(att, value);\\n                                        o._.dirty = 1;\\n                                        if (attrs.fy) {\\n                                            att = \\\"y\\\";\\n                                            value = attrs.y;\\n                                        } else {\\n                                            break;\\n                                        }\\n                                    case \\\"y\\\":\\n                                        if (attrs.fy) {\\n                                            value = -attrs.y - (attrs.height || 0);\\n                                        }\\n                                    case \\\"ry\\\":\\n                                        if (att == \\\"ry\\\" && o.type == \\\"rect\\\") {\\n                                            break;\\n                                        }\\n                                    case \\\"cy\\\":\\n                                        node.setAttribute(att, value);\\n                                        o.pattern && updatePosition(o);\\n                                        o._.dirty = 1;\\n                                        break;\\n                                    case \\\"r\\\":\\n                                        if (o.type == \\\"rect\\\") {\\n                                            $(node, {rx: value, ry: value});\\n                                        } else {\\n                                            node.setAttribute(att, value);\\n                                        }\\n                                        o._.dirty = 1;\\n                                        break;\\n                                    case \\\"src\\\":\\n                                        if (o.type == \\\"image\\\") {\\n                                            node.setAttributeNS(xlink, \\\"href\\\", value);\\n                                        }\\n                                        break;\\n                                    case \\\"stroke-width\\\":\\n                                        if (o._.sx != 1 || o._.sy != 1) {\\n                                            value /= mmax(abs(o._.sx), abs(o._.sy)) || 1;\\n                                        }\\n                                        node.setAttribute(att, value);\\n                                        if (attrs[\\\"stroke-dasharray\\\"]) {\\n                                            addDashes(o, attrs[\\\"stroke-dasharray\\\"], params);\\n                                        }\\n                                        if (o._.arrows) {\\n                                            \\\"startString\\\" in o._.arrows && addArrow(o, o._.arrows.startString);\\n                                            \\\"endString\\\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\\n                                        }\\n                                        break;\\n                                    case \\\"stroke-dasharray\\\":\\n                                        addDashes(o, value, params);\\n                                        break;\\n                                    case \\\"fill\\\":\\n                                        var isURL = Str(value).match(R._ISURL);\\n                                        if (isURL) {\\n                                            el = $(\\\"pattern\\\");\\n                                            var ig = $(\\\"image\\\");\\n                                            el.id = R.createUUID();\\n                                            $(el, {x: 0, y: 0, patternUnits: \\\"userSpaceOnUse\\\", height: 1, width: 1});\\n                                            $(ig, {x: 0, y: 0, \\\"xlink:href\\\": isURL[1]});\\n                                            el.appendChild(ig);\\n\\n                                            (function (el) {\\n                                                R._preload(isURL[1], function () {\\n                                                    var w = this.offsetWidth,\\n                                                        h = this.offsetHeight;\\n                                                    $(el, {width: w, height: h});\\n                                                    $(ig, {width: w, height: h});\\n                                                });\\n                                            })(el);\\n                                            o.paper.defs.appendChild(el);\\n                                            $(node, {fill: \\\"url(#\\\" + el.id + \\\")\\\"});\\n                                            o.pattern = el;\\n                                            o.pattern && updatePosition(o);\\n                                            break;\\n                                        }\\n                                        var clr = R.getRGB(value);\\n                                        if (!clr.error) {\\n                                            delete params.gradient;\\n                                            delete attrs.gradient;\\n                                            !R.is(attrs.opacity, \\\"undefined\\\") &&\\n                                            R.is(params.opacity, \\\"undefined\\\") &&\\n                                            $(node, {opacity: attrs.opacity});\\n                                            !R.is(attrs[\\\"fill-opacity\\\"], \\\"undefined\\\") &&\\n                                            R.is(params[\\\"fill-opacity\\\"], \\\"undefined\\\") &&\\n                                            $(node, {\\\"fill-opacity\\\": attrs[\\\"fill-opacity\\\"]});\\n                                        } else if ((o.type == \\\"circle\\\" || o.type == \\\"ellipse\\\" || Str(value).charAt() != \\\"r\\\") && addGradientFill(o, value)) {\\n                                            if (\\\"opacity\\\" in attrs || \\\"fill-opacity\\\" in attrs) {\\n                                                var gradient = R._g.doc.getElementById(node.getAttribute(\\\"fill\\\").replace(/^url\\\\(#|\\\\)$/g, E));\\n                                                if (gradient) {\\n                                                    var stops = gradient.getElementsByTagName(\\\"stop\\\");\\n                                                    $(stops[stops.length - 1], {\\\"stop-opacity\\\": (\\\"opacity\\\" in attrs ? attrs.opacity : 1) * (\\\"fill-opacity\\\" in attrs ? attrs[\\\"fill-opacity\\\"] : 1)});\\n                                                }\\n                                            }\\n                                            attrs.gradient = value;\\n                                            attrs.fill = \\\"none\\\";\\n                                            break;\\n                                        }\\n                                        clr[has](\\\"opacity\\\") && $(node, {\\\"fill-opacity\\\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\\n                                    case \\\"stroke\\\":\\n                                        clr = R.getRGB(value);\\n                                        node.setAttribute(att, clr.hex);\\n                                        att == \\\"stroke\\\" && clr[has](\\\"opacity\\\") && $(node, {\\\"stroke-opacity\\\": clr.opacity > 1 ? clr.opacity / 100 : clr.opacity});\\n                                        if (att == \\\"stroke\\\" && o._.arrows) {\\n                                            \\\"startString\\\" in o._.arrows && addArrow(o, o._.arrows.startString);\\n                                            \\\"endString\\\" in o._.arrows && addArrow(o, o._.arrows.endString, 1);\\n                                        }\\n                                        break;\\n                                    case \\\"gradient\\\":\\n                                        (o.type == \\\"circle\\\" || o.type == \\\"ellipse\\\" || Str(value).charAt() != \\\"r\\\") && addGradientFill(o, value);\\n                                        break;\\n                                    case \\\"opacity\\\":\\n                                        if (attrs.gradient && !attrs[has](\\\"stroke-opacity\\\")) {\\n                                            $(node, {\\\"stroke-opacity\\\": value > 1 ? value / 100 : value});\\n                                        }\\n                                    // fall\\n                                    case \\\"fill-opacity\\\":\\n                                        if (attrs.gradient) {\\n                                            gradient = R._g.doc.getElementById(node.getAttribute(\\\"fill\\\").replace(/^url\\\\(#|\\\\)$/g, E));\\n                                            if (gradient) {\\n                                                stops = gradient.getElementsByTagName(\\\"stop\\\");\\n                                                $(stops[stops.length - 1], {\\\"stop-opacity\\\": value});\\n                                            }\\n                                            break;\\n                                        }\\n                                    default:\\n                                        att == \\\"font-size\\\" && (value = toInt(value, 10) + \\\"px\\\");\\n                                        var cssrule = att.replace(/(\\\\-.)/g, function (w) {\\n                                            return w.substring(1).toUpperCase();\\n                                        });\\n                                        node.style[cssrule] = value;\\n                                        o._.dirty = 1;\\n                                        node.setAttribute(att, value);\\n                                        break;\\n                                }\\n                            }\\n                        }\\n\\n                        tuneText(o, params);\\n                        node.style.visibility = vis;\\n                    },\\n                    leading = 1.2,\\n                    tuneText = function (el, params) {\\n                        if (el.type != \\\"text\\\" || !(params[has](\\\"text\\\") || params[has](\\\"font\\\") || params[has](\\\"font-size\\\") || params[has](\\\"x\\\") || params[has](\\\"y\\\"))) {\\n                            return;\\n                        }\\n                        var a = el.attrs,\\n                            node = el.node,\\n                            fontSize = node.firstChild ? toInt(R._g.doc.defaultView.getComputedStyle(node.firstChild, E).getPropertyValue(\\\"font-size\\\"), 10) : 10;\\n\\n                        if (params[has](\\\"text\\\")) {\\n                            a.text = params.text;\\n                            while (node.firstChild) {\\n                                node.removeChild(node.firstChild);\\n                            }\\n                            var texts = Str(params.text).split(\\\"\\\\n\\\"),\\n                                tspans = [],\\n                                tspan;\\n                            for (var i = 0, ii = texts.length; i < ii; i++) {\\n                                tspan = $(\\\"tspan\\\");\\n                                i && $(tspan, {dy: fontSize * leading, x: a.x});\\n                                tspan.appendChild(R._g.doc.createTextNode(texts[i]));\\n                                node.appendChild(tspan);\\n                                tspans[i] = tspan;\\n                            }\\n                        } else {\\n                            tspans = node.getElementsByTagName(\\\"tspan\\\");\\n                            for (i = 0, ii = tspans.length; i < ii; i++) if (i) {\\n                                $(tspans[i], {dy: fontSize * leading, x: a.x});\\n                            } else {\\n                                $(tspans[0], {dy: 0});\\n                            }\\n                        }\\n                        $(node, {x: a.x, y: a.y});\\n                        el._.dirty = 1;\\n                        var bb = el._getBBox(),\\n                            dif = a.y - (bb.y + bb.height / 2);\\n                        dif && R.is(dif, \\\"finite\\\") && $(tspans[0], {dy: dif});\\n                    },\\n                    getRealNode = function (node) {\\n                        if (node.parentNode && node.parentNode.tagName.toLowerCase() === \\\"a\\\") {\\n                            return node.parentNode;\\n                        } else {\\n                            return node;\\n                        }\\n                    },\\n                    Element = function (node, svg) {\\n                        var X = 0,\\n                            Y = 0;\\n                        /*\\\\\\n                         * Element.node\\n                         [ property (object) ]\\n                         **\\n                         * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\\n                         **\\n                         * Note: Don’t mess with it.\\n                         > Usage\\n                         | // draw a circle at coordinate 10,10 with radius of 10\\n                         | var c = paper.circle(10, 10, 10);\\n                         | c.node.onclick = function () {\\n                         |     c.attr(\\\"fill\\\", \\\"red\\\");\\n                         | };\\n                         \\\\*/\\n                        this[0] = this.node = node;\\n                        /*\\\\\\n                         * Element.raphael\\n                         [ property (object) ]\\n                         **\\n                         * Internal reference to @Raphael object. In case it is not available.\\n                         > Usage\\n                         | Raphael.el.red = function () {\\n                         |     var hsb = this.paper.raphael.rgb2hsb(this.attr(\\\"fill\\\"));\\n                         |     hsb.h = 1;\\n                         |     this.attr({fill: this.paper.raphael.hsb2rgb(hsb).hex});\\n                         | }\\n                         \\\\*/\\n                        node.raphael = true;\\n                        /*\\\\\\n                         * Element.id\\n                         [ property (number) ]\\n                         **\\n                         * Unique id of the element. Especially useful when you want to listen to events of the element,\\n                         * because all events are fired in format `<module>.<action>.<id>`. Also useful for @Paper.getById method.\\n                         \\\\*/\\n                        this.id = guid();\\n                        node.raphaelid = this.id;\\n\\n                        /**\\n                         * Method that returns a 5 letter/digit id, enough for 36^5 = 60466176 elements\\n                         * @returns {string} id\\n                         */\\n                        function guid() {\\n                            return (\\\"0000\\\" + (Math.random() * Math.pow(36, 5) << 0).toString(36)).slice(-5);\\n                        }\\n\\n                        this.matrix = R.matrix();\\n                        this.realPath = null;\\n                        /*\\\\\\n                         * Element.paper\\n                         [ property (object) ]\\n                         **\\n                         * Internal reference to “paper” where object drawn. Mainly for use in plugins and element extensions.\\n                         > Usage\\n                         | Raphael.el.cross = function () {\\n                         |     this.attr({fill: \\\"red\\\"});\\n                         |     this.paper.path(\\\"M10,10L50,50M50,10L10,50\\\")\\n                         |         .attr({stroke: \\\"red\\\"});\\n                         | }\\n                         \\\\*/\\n                        this.paper = svg;\\n                        this.attrs = this.attrs || {};\\n                        this._ = {\\n                            transform: [],\\n                            sx: 1,\\n                            sy: 1,\\n                            deg: 0,\\n                            dx: 0,\\n                            dy: 0,\\n                            dirty: 1\\n                        };\\n                        !svg.bottom && (svg.bottom = this);\\n                        /*\\\\\\n                         * Element.prev\\n                         [ property (object) ]\\n                         **\\n                         * Reference to the previous element in the hierarchy.\\n                         \\\\*/\\n                        this.prev = svg.top;\\n                        svg.top && (svg.top.next = this);\\n                        svg.top = this;\\n                        /*\\\\\\n                         * Element.next\\n                         [ property (object) ]\\n                         **\\n                         * Reference to the next element in the hierarchy.\\n                         \\\\*/\\n                        this.next = null;\\n                    },\\n                    elproto = R.el;\\n\\n                Element.prototype = elproto;\\n                elproto.constructor = Element;\\n\\n                R._engine.path = function (pathString, SVG) {\\n                    var el = $(\\\"path\\\");\\n                    SVG.canvas && SVG.canvas.appendChild(el);\\n                    var p = new Element(el, SVG);\\n                    p.type = \\\"path\\\";\\n                    setFillAndStroke(p, {\\n                        fill: \\\"none\\\",\\n                        stroke: \\\"#000\\\",\\n                        path: pathString\\n                    });\\n                    return p;\\n                };\\n                /*\\\\\\n                 * Element.rotate\\n                 [ method ]\\n                 **\\n                 * Deprecated! Use @Element.transform instead.\\n                 * Adds rotation by given angle around given point to the list of\\n                 * transformations of the element.\\n                 > Parameters\\n                 - deg (number) angle in degrees\\n                 - cx (number) #optional x coordinate of the centre of rotation\\n                 - cy (number) #optional y coordinate of the centre of rotation\\n                 * If cx & cy aren’t specified centre of the shape is used as a point of rotation.\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.rotate = function (deg, cx, cy) {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    deg = Str(deg).split(separator);\\n                    if (deg.length - 1) {\\n                        cx = toFloat(deg[1]);\\n                        cy = toFloat(deg[2]);\\n                    }\\n                    deg = toFloat(deg[0]);\\n                    (cy == null) && (cx = cy);\\n                    if (cx == null || cy == null) {\\n                        var bbox = this.getBBox(1);\\n                        cx = bbox.x + bbox.width / 2;\\n                        cy = bbox.y + bbox.height / 2;\\n                    }\\n                    this.transform(this._.transform.concat([[\\\"r\\\", deg, cx, cy]]));\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.scale\\n                 [ method ]\\n                 **\\n                 * Deprecated! Use @Element.transform instead.\\n                 * Adds scale by given amount relative to given point to the list of\\n                 * transformations of the element.\\n                 > Parameters\\n                 - sx (number) horisontal scale amount\\n                 - sy (number) vertical scale amount\\n                 - cx (number) #optional x coordinate of the centre of scale\\n                 - cy (number) #optional y coordinate of the centre of scale\\n                 * If cx & cy aren’t specified centre of the shape is used instead.\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.scale = function (sx, sy, cx, cy) {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    sx = Str(sx).split(separator);\\n                    if (sx.length - 1) {\\n                        sy = toFloat(sx[1]);\\n                        cx = toFloat(sx[2]);\\n                        cy = toFloat(sx[3]);\\n                    }\\n                    sx = toFloat(sx[0]);\\n                    (sy == null) && (sy = sx);\\n                    (cy == null) && (cx = cy);\\n                    if (cx == null || cy == null) {\\n                        var bbox = this.getBBox(1);\\n                    }\\n                    cx = cx == null ? bbox.x + bbox.width / 2 : cx;\\n                    cy = cy == null ? bbox.y + bbox.height / 2 : cy;\\n                    this.transform(this._.transform.concat([[\\\"s\\\", sx, sy, cx, cy]]));\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.translate\\n                 [ method ]\\n                 **\\n                 * Deprecated! Use @Element.transform instead.\\n                 * Adds translation by given amount to the list of transformations of the element.\\n                 > Parameters\\n                 - dx (number) horisontal shift\\n                 - dy (number) vertical shift\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.translate = function (dx, dy) {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    dx = Str(dx).split(separator);\\n                    if (dx.length - 1) {\\n                        dy = toFloat(dx[1]);\\n                    }\\n                    dx = toFloat(dx[0]) || 0;\\n                    dy = +dy || 0;\\n                    this.transform(this._.transform.concat([[\\\"t\\\", dx, dy]]));\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.transform\\n                 [ method ]\\n                 **\\n                 * Adds transformation to the element which is separate to other attributes,\\n                 * i.e. translation doesn’t change `x` or `y` of the rectange. The format\\n                 * of transformation string is similar to the path string syntax:\\n                 | \\\"t100,100r30,100,100s2,2,100,100r45s1.5\\\"\\n                 * Each letter is a command. There are four commands: `t` is for translate, `r` is for rotate, `s` is for\\n                 * scale and `m` is for matrix.\\n                 *\\n                 * There are also alternative “absolute” translation, rotation and scale: `T`, `R` and `S`. They will not take previous transformation into account. For example, `...T100,0` will always move element 100 px horisontally, while `...t100,0` could move it vertically if there is `r90` before. Just compare results of `r90t100,0` and `r90T100,0`.\\n                 *\\n                 * So, the example line above could be read like “translate by 100, 100; rotate 30° around 100, 100; scale twice around 100, 100;\\n                 * rotate 45° around centre; scale 1.5 times relative to centre”. As you can see rotate and scale commands have origin\\n                 * coordinates as optional parameters, the default is the centre point of the element.\\n                 * Matrix accepts six parameters.\\n                 > Usage\\n                 | var el = paper.rect(10, 20, 300, 200);\\n                 | // translate 100, 100, rotate 45°, translate -100, 0\\n                 | el.transform(\\\"t100,100r45t-100,0\\\");\\n                 | // if you want you can append or prepend transformations\\n                 | el.transform(\\\"...t50,50\\\");\\n                 | el.transform(\\\"s2...\\\");\\n                 | // or even wrap\\n                 | el.transform(\\\"t50,50...t-50-50\\\");\\n                 | // to reset transformation call method with empty string\\n                 | el.transform(\\\"\\\");\\n                 | // to get current value call it without parameters\\n                 | console.log(el.transform());\\n                 > Parameters\\n                 - tstr (string) #optional transformation string\\n                 * If tstr isn’t specified\\n                 = (string) current transformation string\\n                 * else\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.transform = function (tstr) {\\n                    var _ = this._;\\n                    if (tstr == null) {\\n                        return _.transform;\\n                    }\\n                    R._extractTransform(this, tstr);\\n\\n                    this.clip && $(this.clip, {transform: this.matrix.invert()});\\n                    this.pattern && updatePosition(this);\\n                    this.node && $(this.node, {transform: this.matrix});\\n\\n                    if (_.sx != 1 || _.sy != 1) {\\n                        var sw = this.attrs[has](\\\"stroke-width\\\") ? this.attrs[\\\"stroke-width\\\"] : 1;\\n                        this.attr({\\\"stroke-width\\\": sw});\\n                    }\\n\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.hide\\n                 [ method ]\\n                 **\\n                 * Makes element invisible. See @Element.show.\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.hide = function () {\\n                    if (!this.removed) this.node.style.display = \\\"none\\\";\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.show\\n                 [ method ]\\n                 **\\n                 * Makes element visible. See @Element.hide.\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.show = function () {\\n                    if (!this.removed) this.node.style.display = \\\"\\\";\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.remove\\n                 [ method ]\\n                 **\\n                 * Removes element from the paper.\\n                 \\\\*/\\n                elproto.remove = function () {\\n                    var node = getRealNode(this.node);\\n                    if (this.removed || !node.parentNode) {\\n                        return;\\n                    }\\n                    var paper = this.paper;\\n                    paper.__set__ && paper.__set__.exclude(this);\\n                    eve.unbind(\\\"raphael.*.*.\\\" + this.id);\\n                    if (this.gradient) {\\n                        paper.defs.removeChild(this.gradient);\\n                    }\\n                    R._tear(this, paper);\\n\\n                    node.parentNode.removeChild(node);\\n\\n                    // Remove custom data for element\\n                    this.removeData();\\n\\n                    for (var i in this) {\\n                        this[i] = typeof this[i] == \\\"function\\\" ? R._removedFactory(i) : null;\\n                    }\\n                    this.removed = true;\\n                };\\n                elproto._getBBox = function () {\\n                    if (this.node.style.display == \\\"none\\\") {\\n                        this.show();\\n                        var hide = true;\\n                    }\\n                    var canvasHidden = false,\\n                        containerStyle;\\n                    if (this.paper.canvas.parentElement) {\\n                        containerStyle = this.paper.canvas.parentElement.style;\\n                    } //IE10+ can't find parentElement\\n                    else if (this.paper.canvas.parentNode) {\\n                        containerStyle = this.paper.canvas.parentNode.style;\\n                    }\\n\\n                    if (containerStyle && containerStyle.display == \\\"none\\\") {\\n                        canvasHidden = true;\\n                        containerStyle.display = \\\"\\\";\\n                    }\\n                    var bbox = {};\\n                    try {\\n                        bbox = this.node.getBBox();\\n                    } catch (e) {\\n                        // Firefox 3.0.x, 25.0.1 (probably more versions affected) play badly here - possible fix\\n                        bbox = {\\n                            x: this.node.clientLeft,\\n                            y: this.node.clientTop,\\n                            width: this.node.clientWidth,\\n                            height: this.node.clientHeight\\n                        }\\n                    } finally {\\n                        bbox = bbox || {};\\n                        if (canvasHidden) {\\n                            containerStyle.display = \\\"none\\\";\\n                        }\\n                    }\\n                    hide && this.hide();\\n                    return bbox;\\n                };\\n                /*\\\\\\n                 * Element.attr\\n                 [ method ]\\n                 **\\n                 * Sets the attributes of the element.\\n                 > Parameters\\n                 - attrName (string) attribute’s name\\n                 - value (string) value\\n                 * or\\n                 - params (object) object of name/value pairs\\n                 * or\\n                 - attrName (string) attribute’s name\\n                 * or\\n                 - attrNames (array) in this case method returns array of current values for given attribute names\\n                 = (object) @Element if attrsName & value or params are passed in.\\n                 = (...) value of the attribute if only attrsName is passed in.\\n                 = (array) array of values of the attribute if attrsNames is passed in.\\n                 = (object) object of attributes if nothing is passed in.\\n                 > Possible parameters\\n                 # <p>Please refer to the <a href=\\\"http://www.w3.org/TR/SVG/\\\" title=\\\"The W3C Recommendation for the SVG language describes these properties in detail.\\\">SVG specification</a> for an explanation of these parameters.</p>\\n                 o arrow-end (string) arrowhead on the end of the path. The format for string is `<type>[-<width>[-<length>]]`. Possible types: `classic`, `block`, `open`, `oval`, `diamond`, `none`, width: `wide`, `narrow`, `medium`, length: `long`, `short`, `midium`.\\n                 o clip-rect (string) comma or space separated values: x, y, width and height\\n                 o cursor (string) CSS type of the cursor\\n                 o cx (number) the x-axis coordinate of the center of the circle, or ellipse\\n                 o cy (number) the y-axis coordinate of the center of the circle, or ellipse\\n                 o fill (string) colour, gradient or image\\n                 o fill-opacity (number)\\n                 o font (string)\\n                 o font-family (string)\\n                 o font-size (number) font size in pixels\\n                 o font-weight (string)\\n                 o height (number)\\n                 o href (string) URL, if specified element behaves as hyperlink\\n                 o opacity (number)\\n                 o path (string) SVG path string format\\n                 o r (number) radius of the circle, ellipse or rounded corner on the rect\\n                 o rx (number) horisontal radius of the ellipse\\n                 o ry (number) vertical radius of the ellipse\\n                 o src (string) image URL, only works for @Element.image element\\n                 o stroke (string) stroke colour\\n                 o stroke-dasharray (string) [“”, “none”, “`-`”, “`.`”, “`-.`”, “`-..`”, “`. `”, “`- `”, “`--`”, “`- .`”, “`--.`”, “`--..`”]\\n                 o stroke-linecap (string) [“`butt`”, “`square`”, “`round`”]\\n                 o stroke-linejoin (string) [“`bevel`”, “`round`”, “`miter`”]\\n                 o stroke-miterlimit (number)\\n                 o stroke-opacity (number)\\n                 o stroke-width (number) stroke width in pixels, default is '1'\\n                 o target (string) used with href\\n                 o text (string) contents of the text element. Use `\\\\n` for multiline text\\n                 o text-anchor (string) [“`start`”, “`middle`”, “`end`”], default is “`middle`”\\n                 o title (string) will create tooltip with a given text\\n                 o transform (string) see @Element.transform\\n                 o width (number)\\n                 o x (number)\\n                 o y (number)\\n                 > Gradients\\n                 * Linear gradient format: “`‹angle›-‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`90-#fff-#000`” – 90°\\n                 * gradient from white to black or “`0-#fff-#f00:20-#000`” – 0° gradient from white via red (at 20%) to black.\\n                 *\\n                 * radial gradient: “`r[(‹fx›, ‹fy›)]‹colour›[-‹colour›[:‹offset›]]*-‹colour›`”, example: “`r#fff-#000`” –\\n                 * gradient from white to black or “`r(0.25, 0.75)#fff-#000`” – gradient from white to black with focus point\\n                 * at 0.25, 0.75. Focus point coordinates are in 0..1 range. Radial gradients can only be applied to circles and ellipses.\\n                 > Path String\\n                 # <p>Please refer to <a href=\\\"http://www.w3.org/TR/SVG/paths.html#PathData\\\" title=\\\"Details of a path’s data attribute’s format are described in the SVG specification.\\\">SVG documentation regarding path string</a>. Raphaël fully supports it.</p>\\n                 > Colour Parsing\\n                 # <ul>\\n                 #     <li>Colour name (“<code>red</code>”, “<code>green</code>”, “<code>cornflowerblue</code>”, etc)</li>\\n                 #     <li>#••• — shortened HTML colour: (“<code>#000</code>”, “<code>#fc0</code>”, etc)</li>\\n                 #     <li>#•••••• — full length HTML colour: (“<code>#000000</code>”, “<code>#bd2300</code>”)</li>\\n                 #     <li>rgb(•••, •••, •••) — red, green and blue channels’ values: (“<code>rgb(200,&nbsp;100,&nbsp;0)</code>”)</li>\\n                 #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (“<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>”)</li>\\n                 #     <li>rgba(•••, •••, •••, •••) — red, green and blue channels’ values: (“<code>rgba(200,&nbsp;100,&nbsp;0, .5)</code>”)</li>\\n                 #     <li>rgba(•••%, •••%, •••%, •••%) — same as above, but in %: (“<code>rgba(100%,&nbsp;175%,&nbsp;0%, 50%)</code>”)</li>\\n                 #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (“<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>”)</li>\\n                 #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\\n                 #     <li>hsba(•••, •••, •••, •••) — same as above, but with opacity</li>\\n                 #     <li>hsl(•••, •••, •••) — almost the same as hsb, see <a href=\\\"http://en.wikipedia.org/wiki/HSL_and_HSV\\\" title=\\\"HSL and HSV - Wikipedia, the free encyclopedia\\\">Wikipedia page</a></li>\\n                 #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\\n                 #     <li>hsla(•••, •••, •••, •••) — same as above, but with opacity</li>\\n                 #     <li>Optionally for hsb and hsl you could specify hue as a degree: “<code>hsl(240deg,&nbsp;1,&nbsp;.5)</code>” or, if you want to go fancy, “<code>hsl(240°,&nbsp;1,&nbsp;.5)</code>”</li>\\n                 # </ul>\\n                 \\\\*/\\n                elproto.attr = function (name, value) {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    if (name == null) {\\n                        var res = {};\\n                        for (var a in this.attrs) if (this.attrs[has](a)) {\\n                            res[a] = this.attrs[a];\\n                        }\\n                        res.gradient && res.fill == \\\"none\\\" && (res.fill = res.gradient) && delete res.gradient;\\n                        res.transform = this._.transform;\\n                        return res;\\n                    }\\n                    if (value == null && R.is(name, \\\"string\\\")) {\\n                        if (name == \\\"fill\\\" && this.attrs.fill == \\\"none\\\" && this.attrs.gradient) {\\n                            return this.attrs.gradient;\\n                        }\\n                        if (name == \\\"transform\\\") {\\n                            return this._.transform;\\n                        }\\n                        var names = name.split(separator),\\n                            out = {};\\n                        for (var i = 0, ii = names.length; i < ii; i++) {\\n                            name = names[i];\\n                            if (name in this.attrs) {\\n                                out[name] = this.attrs[name];\\n                            } else if (R.is(this.paper.customAttributes[name], \\\"function\\\")) {\\n                                out[name] = this.paper.customAttributes[name].def;\\n                            } else {\\n                                out[name] = R._availableAttrs[name];\\n                            }\\n                        }\\n                        return ii - 1 ? out : out[names[0]];\\n                    }\\n                    if (value == null && R.is(name, \\\"array\\\")) {\\n                        out = {};\\n                        for (i = 0, ii = name.length; i < ii; i++) {\\n                            out[name[i]] = this.attr(name[i]);\\n                        }\\n                        return out;\\n                    }\\n                    if (value != null) {\\n                        var params = {};\\n                        params[name] = value;\\n                    } else if (name != null && R.is(name, \\\"object\\\")) {\\n                        params = name;\\n                    }\\n                    for (var key in params) {\\n                        eve(\\\"raphael.attr.\\\" + key + \\\".\\\" + this.id, this, params[key]);\\n                    }\\n                    for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \\\"function\\\")) {\\n                        var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\\n                        this.attrs[key] = params[key];\\n                        for (var subkey in par) if (par[has](subkey)) {\\n                            params[subkey] = par[subkey];\\n                        }\\n                    }\\n                    setFillAndStroke(this, params);\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.toFront\\n                 [ method ]\\n                 **\\n                 * Moves the element so it is the closest to the viewer’s eyes, on top of other elements.\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.toFront = function () {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    var node = getRealNode(this.node);\\n                    node.parentNode.appendChild(node);\\n                    var svg = this.paper;\\n                    svg.top != this && R._tofront(this, svg);\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.toBack\\n                 [ method ]\\n                 **\\n                 * Moves the element so it is the furthest from the viewer’s eyes, behind other elements.\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.toBack = function () {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    var node = getRealNode(this.node);\\n                    var parentNode = node.parentNode;\\n                    parentNode.insertBefore(node, parentNode.firstChild);\\n                    R._toback(this, this.paper);\\n                    var svg = this.paper;\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.insertAfter\\n                 [ method ]\\n                 **\\n                 * Inserts current object after the given one.\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.insertAfter = function (element) {\\n                    if (this.removed || !element) {\\n                        return this;\\n                    }\\n\\n                    var node = getRealNode(this.node);\\n                    var afterNode = getRealNode(element.node || element[element.length - 1].node);\\n                    if (afterNode.nextSibling) {\\n                        afterNode.parentNode.insertBefore(node, afterNode.nextSibling);\\n                    } else {\\n                        afterNode.parentNode.appendChild(node);\\n                    }\\n                    R._insertafter(this, element, this.paper);\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Element.insertBefore\\n                 [ method ]\\n                 **\\n                 * Inserts current object before the given one.\\n                 = (object) @Element\\n                 \\\\*/\\n                elproto.insertBefore = function (element) {\\n                    if (this.removed || !element) {\\n                        return this;\\n                    }\\n\\n                    var node = getRealNode(this.node);\\n                    var beforeNode = getRealNode(element.node || element[0].node);\\n                    beforeNode.parentNode.insertBefore(node, beforeNode);\\n                    R._insertbefore(this, element, this.paper);\\n                    return this;\\n                };\\n                elproto.blur = function (size) {\\n                    // Experimental. No Safari support. Use it on your own risk.\\n                    var t = this;\\n                    if (+size !== 0) {\\n                        var fltr = $(\\\"filter\\\"),\\n                            blur = $(\\\"feGaussianBlur\\\");\\n                        t.attrs.blur = size;\\n                        fltr.id = R.createUUID();\\n                        $(blur, {stdDeviation: +size || 1.5});\\n                        fltr.appendChild(blur);\\n                        t.paper.defs.appendChild(fltr);\\n                        t._blur = fltr;\\n                        $(t.node, {filter: \\\"url(#\\\" + fltr.id + \\\")\\\"});\\n                    } else {\\n                        if (t._blur) {\\n                            t._blur.parentNode.removeChild(t._blur);\\n                            delete t._blur;\\n                            delete t.attrs.blur;\\n                        }\\n                        t.node.removeAttribute(\\\"filter\\\");\\n                    }\\n                    return t;\\n                };\\n                R._engine.circle = function (svg, x, y, r) {\\n                    var el = $(\\\"circle\\\");\\n                    svg.canvas && svg.canvas.appendChild(el);\\n                    var res = new Element(el, svg);\\n                    res.attrs = {cx: x, cy: y, r: r, fill: \\\"none\\\", stroke: \\\"#000\\\"};\\n                    res.type = \\\"circle\\\";\\n                    $(el, res.attrs);\\n                    return res;\\n                };\\n                R._engine.rect = function (svg, x, y, w, h, r) {\\n                    var el = $(\\\"rect\\\");\\n                    svg.canvas && svg.canvas.appendChild(el);\\n                    var res = new Element(el, svg);\\n                    res.attrs = {x: x, y: y, width: w, height: h, rx: r || 0, ry: r || 0, fill: \\\"none\\\", stroke: \\\"#000\\\"};\\n                    res.type = \\\"rect\\\";\\n                    $(el, res.attrs);\\n                    return res;\\n                };\\n                R._engine.ellipse = function (svg, x, y, rx, ry) {\\n                    var el = $(\\\"ellipse\\\");\\n                    svg.canvas && svg.canvas.appendChild(el);\\n                    var res = new Element(el, svg);\\n                    res.attrs = {cx: x, cy: y, rx: rx, ry: ry, fill: \\\"none\\\", stroke: \\\"#000\\\"};\\n                    res.type = \\\"ellipse\\\";\\n                    $(el, res.attrs);\\n                    return res;\\n                };\\n                R._engine.image = function (svg, src, x, y, w, h) {\\n                    var el = $(\\\"image\\\");\\n                    $(el, {x: x, y: y, width: w, height: h, preserveAspectRatio: \\\"none\\\"});\\n                    el.setAttributeNS(xlink, \\\"href\\\", src);\\n                    svg.canvas && svg.canvas.appendChild(el);\\n                    var res = new Element(el, svg);\\n                    res.attrs = {x: x, y: y, width: w, height: h, src: src};\\n                    res.type = \\\"image\\\";\\n                    return res;\\n                };\\n                R._engine.text = function (svg, x, y, text) {\\n                    var el = $(\\\"text\\\");\\n                    svg.canvas && svg.canvas.appendChild(el);\\n                    var res = new Element(el, svg);\\n                    res.attrs = {\\n                        x: x,\\n                        y: y,\\n                        \\\"text-anchor\\\": \\\"middle\\\",\\n                        text: text,\\n                        \\\"font-family\\\": R._availableAttrs[\\\"font-family\\\"],\\n                        \\\"font-size\\\": R._availableAttrs[\\\"font-size\\\"],\\n                        stroke: \\\"none\\\",\\n                        fill: \\\"#000\\\"\\n                    };\\n                    res.type = \\\"text\\\";\\n                    setFillAndStroke(res, res.attrs);\\n                    return res;\\n                };\\n                R._engine.setSize = function (width, height) {\\n                    this.width = width || this.width;\\n                    this.height = height || this.height;\\n                    this.canvas.setAttribute(\\\"width\\\", this.width);\\n                    this.canvas.setAttribute(\\\"height\\\", this.height);\\n                    if (this._viewBox) {\\n                        this.setViewBox.apply(this, this._viewBox);\\n                    }\\n                    return this;\\n                };\\n                R._engine.create = function () {\\n                    var con = R._getContainer.apply(0, arguments),\\n                        container = con && con.container,\\n                        x = con.x,\\n                        y = con.y,\\n                        width = con.width,\\n                        height = con.height;\\n                    if (!container) {\\n                        throw new Error(\\\"SVG container not found.\\\");\\n                    }\\n                    var cnvs = $(\\\"svg\\\"),\\n                        css = \\\"overflow:hidden;\\\",\\n                        isFloating;\\n                    x = x || 0;\\n                    y = y || 0;\\n                    width = width || 512;\\n                    height = height || 342;\\n                    $(cnvs, {\\n                        height: height,\\n                        version: 1.1,\\n                        width: width,\\n                        xmlns: \\\"http://www.w3.org/2000/svg\\\",\\n                        \\\"xmlns:xlink\\\": \\\"http://www.w3.org/1999/xlink\\\"\\n                    });\\n                    if (container == 1) {\\n                        cnvs.style.cssText = css + \\\"position:absolute;left:\\\" + x + \\\"px;top:\\\" + y + \\\"px\\\";\\n                        R._g.doc.body.appendChild(cnvs);\\n                        isFloating = 1;\\n                    } else {\\n                        cnvs.style.cssText = css + \\\"position:relative\\\";\\n                        if (container.firstChild) {\\n                            container.insertBefore(cnvs, container.firstChild);\\n                        } else {\\n                            container.appendChild(cnvs);\\n                        }\\n                    }\\n                    container = new R._Paper;\\n                    container.width = width;\\n                    container.height = height;\\n                    container.canvas = cnvs;\\n                    container.clear();\\n                    container._left = container._top = 0;\\n                    isFloating && (container.renderfix = function () {\\n                    });\\n                    container.renderfix();\\n                    return container;\\n                };\\n                R._engine.setViewBox = function (x, y, w, h, fit) {\\n                    eve(\\\"raphael.setViewBox\\\", this, this._viewBox, [x, y, w, h, fit]);\\n                    var paperSize = this.getSize(),\\n                        size = mmax(w / paperSize.width, h / paperSize.height),\\n                        top = this.top,\\n                        aspectRatio = fit ? \\\"xMidYMid meet\\\" : \\\"xMinYMin\\\",\\n                        vb,\\n                        sw;\\n                    if (x == null) {\\n                        if (this._vbSize) {\\n                            size = 1;\\n                        }\\n                        delete this._vbSize;\\n                        vb = \\\"0 0 \\\" + this.width + S + this.height;\\n                    } else {\\n                        this._vbSize = size;\\n                        vb = x + S + y + S + w + S + h;\\n                    }\\n                    $(this.canvas, {\\n                        viewBox: vb,\\n                        preserveAspectRatio: aspectRatio\\n                    });\\n                    while (size && top) {\\n                        sw = \\\"stroke-width\\\" in top.attrs ? top.attrs[\\\"stroke-width\\\"] : 1;\\n                        top.attr({\\\"stroke-width\\\": sw});\\n                        top._.dirty = 1;\\n                        top._.dirtyT = 1;\\n                        top = top.prev;\\n                    }\\n                    this._viewBox = [x, y, w, h, !!fit];\\n                    return this;\\n                };\\n                /*\\\\\\n                 * Paper.renderfix\\n                 [ method ]\\n                 **\\n                 * Fixes the issue of Firefox and IE9 regarding subpixel rendering. If paper is dependent\\n                 * on other elements after reflow it could shift half pixel which cause for lines to lost their crispness.\\n                 * This method fixes the issue.\\n                 **\\n                 Special thanks to Mariusz Nowak (http://www.medikoo.com/) for this method.\\n                 \\\\*/\\n                R.prototype.renderfix = function () {\\n                    var cnvs = this.canvas,\\n                        s = cnvs.style,\\n                        pos;\\n                    try {\\n                        pos = cnvs.getScreenCTM() || cnvs.createSVGMatrix();\\n                    } catch (e) {\\n                        pos = cnvs.createSVGMatrix();\\n                    }\\n                    var left = -pos.e % 1,\\n                        top = -pos.f % 1;\\n                    if (left || top) {\\n                        if (left) {\\n                            this._left = (this._left + left) % 1;\\n                            s.left = this._left + \\\"px\\\";\\n                        }\\n                        if (top) {\\n                            this._top = (this._top + top) % 1;\\n                            s.top = this._top + \\\"px\\\";\\n                        }\\n                    }\\n                };\\n                /*\\\\\\n                 * Paper.clear\\n                 [ method ]\\n                 **\\n                 * Clears the paper, i.e. removes all the elements.\\n                 \\\\*/\\n                R.prototype.clear = function () {\\n                    R.eve(\\\"raphael.clear\\\", this);\\n                    var c = this.canvas;\\n                    while (c.firstChild) {\\n                        c.removeChild(c.firstChild);\\n                    }\\n                    this.bottom = this.top = null;\\n                    (this.desc = $(\\\"desc\\\")).appendChild(R._g.doc.createTextNode(\\\"Created with Rapha\\\\xebl \\\" + R.version));\\n                    c.appendChild(this.desc);\\n                    c.appendChild(this.defs = $(\\\"defs\\\"));\\n                };\\n                /*\\\\\\n                 * Paper.remove\\n                 [ method ]\\n                 **\\n                 * Removes the paper from the DOM.\\n                 \\\\*/\\n                R.prototype.remove = function () {\\n                    eve(\\\"raphael.remove\\\", this);\\n                    this.canvas.parentNode && this.canvas.parentNode.removeChild(this.canvas);\\n                    for (var i in this) {\\n                        this[i] = typeof this[i] == \\\"function\\\" ? R._removedFactory(i) : null;\\n                    }\\n                };\\n                var setproto = R.st;\\n                for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\\n                    setproto[method] = (function (methodname) {\\n                        return function () {\\n                            var arg = arguments;\\n                            return this.forEach(function (el) {\\n                                el[methodname].apply(el, arg);\\n                            });\\n                        };\\n                    })(method);\\n                }\\n            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n\\n\\n            /***/\\n        },\\n        /* 4 */\\n        /***/ function (module, exports, __webpack_require__) {\\n\\n            var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\\n            !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1)], __WEBPACK_AMD_DEFINE_RESULT__ = function (R) {\\n                if (R && !R.vml) {\\n                    return;\\n                }\\n\\n                var has = \\\"hasOwnProperty\\\",\\n                    Str = String,\\n                    toFloat = parseFloat,\\n                    math = Math,\\n                    round = math.round,\\n                    mmax = math.max,\\n                    mmin = math.min,\\n                    abs = math.abs,\\n                    fillString = \\\"fill\\\",\\n                    separator = /[, ]+/,\\n                    eve = R.eve,\\n                    ms = \\\" progid:DXImageTransform.Microsoft\\\",\\n                    S = \\\" \\\",\\n                    E = \\\"\\\",\\n                    map = {M: \\\"m\\\", L: \\\"l\\\", C: \\\"c\\\", Z: \\\"x\\\", m: \\\"t\\\", l: \\\"r\\\", c: \\\"v\\\", z: \\\"x\\\"},\\n                    bites = /([clmz]),?([^clmz]*)/gi,\\n                    blurregexp = / progid:\\\\S+Blur\\\\([^\\\\)]+\\\\)/g,\\n                    val = /-?[^,\\\\s-]+/g,\\n                    cssDot = \\\"position:absolute;left:0;top:0;width:1px;height:1px;behavior:url(#default#VML)\\\",\\n                    zoom = 21600,\\n                    pathTypes = {path: 1, rect: 1, image: 1},\\n                    ovalTypes = {circle: 1, ellipse: 1},\\n                    path2vml = function (path) {\\n                        var total = /[ahqstv]/ig,\\n                            command = R._pathToAbsolute;\\n                        Str(path).match(total) && (command = R._path2curve);\\n                        total = /[clmz]/g;\\n                        if (command == R._pathToAbsolute && !Str(path).match(total)) {\\n                            var res = Str(path).replace(bites, function (all, command, args) {\\n                                var vals = [],\\n                                    isMove = command.toLowerCase() == \\\"m\\\",\\n                                    res = map[command];\\n                                args.replace(val, function (value) {\\n                                    if (isMove && vals.length == 2) {\\n                                        res += vals + map[command == \\\"m\\\" ? \\\"l\\\" : \\\"L\\\"];\\n                                        vals = [];\\n                                    }\\n                                    vals.push(round(value * zoom));\\n                                });\\n                                return res + vals;\\n                            });\\n                            return res;\\n                        }\\n                        var pa = command(path), p, r;\\n                        res = [];\\n                        for (var i = 0, ii = pa.length; i < ii; i++) {\\n                            p = pa[i];\\n                            r = pa[i][0].toLowerCase();\\n                            r == \\\"z\\\" && (r = \\\"x\\\");\\n                            for (var j = 1, jj = p.length; j < jj; j++) {\\n                                r += round(p[j] * zoom) + (j != jj - 1 ? \\\",\\\" : E);\\n                            }\\n                            res.push(r);\\n                        }\\n                        return res.join(S);\\n                    },\\n                    compensation = function (deg, dx, dy) {\\n                        var m = R.matrix();\\n                        m.rotate(-deg, .5, .5);\\n                        return {\\n                            dx: m.x(dx, dy),\\n                            dy: m.y(dx, dy)\\n                        };\\n                    },\\n                    setCoords = function (p, sx, sy, dx, dy, deg) {\\n                        var _ = p._,\\n                            m = p.matrix,\\n                            fillpos = _.fillpos,\\n                            o = p.node,\\n                            s = o.style,\\n                            y = 1,\\n                            flip = \\\"\\\",\\n                            dxdy,\\n                            kx = zoom / sx,\\n                            ky = zoom / sy;\\n                        s.visibility = \\\"hidden\\\";\\n                        if (!sx || !sy) {\\n                            return;\\n                        }\\n                        o.coordsize = abs(kx) + S + abs(ky);\\n                        s.rotation = deg * (sx * sy < 0 ? -1 : 1);\\n                        if (deg) {\\n                            var c = compensation(deg, dx, dy);\\n                            dx = c.dx;\\n                            dy = c.dy;\\n                        }\\n                        sx < 0 && (flip += \\\"x\\\");\\n                        sy < 0 && (flip += \\\" y\\\") && (y = -1);\\n                        s.flip = flip;\\n                        o.coordorigin = (dx * -kx) + S + (dy * -ky);\\n                        if (fillpos || _.fillsize) {\\n                            var fill = o.getElementsByTagName(fillString);\\n                            fill = fill && fill[0];\\n                            o.removeChild(fill);\\n                            if (fillpos) {\\n                                c = compensation(deg, m.x(fillpos[0], fillpos[1]), m.y(fillpos[0], fillpos[1]));\\n                                fill.position = c.dx * y + S + c.dy * y;\\n                            }\\n                            if (_.fillsize) {\\n                                fill.size = _.fillsize[0] * abs(sx) + S + _.fillsize[1] * abs(sy);\\n                            }\\n                            o.appendChild(fill);\\n                        }\\n                        s.visibility = \\\"visible\\\";\\n                    };\\n                R.toString = function () {\\n                    return \\\"Your browser doesn\\\\u2019t support SVG. Falling down to VML.\\\\nYou are running Rapha\\\\xebl \\\" + this.version;\\n                };\\n                var addArrow = function (o, value, isEnd) {\\n                        var values = Str(value).toLowerCase().split(\\\"-\\\"),\\n                            se = isEnd ? \\\"end\\\" : \\\"start\\\",\\n                            i = values.length,\\n                            type = \\\"classic\\\",\\n                            w = \\\"medium\\\",\\n                            h = \\\"medium\\\";\\n                        while (i--) {\\n                            switch (values[i]) {\\n                                case \\\"block\\\":\\n                                case \\\"classic\\\":\\n                                case \\\"oval\\\":\\n                                case \\\"diamond\\\":\\n                                case \\\"open\\\":\\n                                case \\\"none\\\":\\n                                    type = values[i];\\n                                    break;\\n                                case \\\"wide\\\":\\n                                case \\\"narrow\\\":\\n                                    h = values[i];\\n                                    break;\\n                                case \\\"long\\\":\\n                                case \\\"short\\\":\\n                                    w = values[i];\\n                                    break;\\n                            }\\n                        }\\n                        var stroke = o.node.getElementsByTagName(\\\"stroke\\\")[0];\\n                        stroke[se + \\\"arrow\\\"] = type;\\n                        stroke[se + \\\"arrowlength\\\"] = w;\\n                        stroke[se + \\\"arrowwidth\\\"] = h;\\n                    },\\n                    setFillAndStroke = function (o, params) {\\n                        // o.paper.canvas.style.display = \\\"none\\\";\\n                        o.attrs = o.attrs || {};\\n                        var node = o.node,\\n                            a = o.attrs,\\n                            s = node.style,\\n                            xy,\\n                            newpath = pathTypes[o.type] && (params.x != a.x || params.y != a.y || params.width != a.width || params.height != a.height || params.cx != a.cx || params.cy != a.cy || params.rx != a.rx || params.ry != a.ry || params.r != a.r),\\n                            isOval = ovalTypes[o.type] && (a.cx != params.cx || a.cy != params.cy || a.r != params.r || a.rx != params.rx || a.ry != params.ry),\\n                            res = o;\\n\\n\\n                        for (var par in params) if (params[has](par)) {\\n                            a[par] = params[par];\\n                        }\\n                        if (newpath) {\\n                            a.path = R._getPath[o.type](o);\\n                            o._.dirty = 1;\\n                        }\\n                        params.href && (node.href = params.href);\\n                        params.title && (node.title = params.title);\\n                        params.target && (node.target = params.target);\\n                        params.cursor && (s.cursor = params.cursor);\\n                        \\\"blur\\\" in params && o.blur(params.blur);\\n                        if (params.path && o.type == \\\"path\\\" || newpath) {\\n                            node.path = path2vml(~Str(a.path).toLowerCase().indexOf(\\\"r\\\") ? R._pathToAbsolute(a.path) : a.path);\\n                            o._.dirty = 1;\\n                            if (o.type == \\\"image\\\") {\\n                                o._.fillpos = [a.x, a.y];\\n                                o._.fillsize = [a.width, a.height];\\n                                setCoords(o, 1, 1, 0, 0, 0);\\n                            }\\n                        }\\n                        \\\"transform\\\" in params && o.transform(params.transform);\\n                        if (isOval) {\\n                            var cx = +a.cx,\\n                                cy = +a.cy,\\n                                rx = +a.rx || +a.r || 0,\\n                                ry = +a.ry || +a.r || 0;\\n                            node.path = R.format(\\\"ar{0},{1},{2},{3},{4},{1},{4},{1}x\\\", round((cx - rx) * zoom), round((cy - ry) * zoom), round((cx + rx) * zoom), round((cy + ry) * zoom), round(cx * zoom));\\n                            o._.dirty = 1;\\n                        }\\n                        if (\\\"clip-rect\\\" in params) {\\n                            var rect = Str(params[\\\"clip-rect\\\"]).split(separator);\\n                            if (rect.length == 4) {\\n                                rect[2] = +rect[2] + (+rect[0]);\\n                                rect[3] = +rect[3] + (+rect[1]);\\n                                var div = node.clipRect || R._g.doc.createElement(\\\"div\\\"),\\n                                    dstyle = div.style;\\n                                dstyle.clip = R.format(\\\"rect({1}px {2}px {3}px {0}px)\\\", rect);\\n                                if (!node.clipRect) {\\n                                    dstyle.position = \\\"absolute\\\";\\n                                    dstyle.top = 0;\\n                                    dstyle.left = 0;\\n                                    dstyle.width = o.paper.width + \\\"px\\\";\\n                                    dstyle.height = o.paper.height + \\\"px\\\";\\n                                    node.parentNode.insertBefore(div, node);\\n                                    div.appendChild(node);\\n                                    node.clipRect = div;\\n                                }\\n                            }\\n                            if (!params[\\\"clip-rect\\\"]) {\\n                                node.clipRect && (node.clipRect.style.clip = \\\"auto\\\");\\n                            }\\n                        }\\n                        if (o.textpath) {\\n                            var textpathStyle = o.textpath.style;\\n                            params.font && (textpathStyle.font = params.font);\\n                            params[\\\"font-family\\\"] && (textpathStyle.fontFamily = '\\\"' + params[\\\"font-family\\\"].split(\\\",\\\")[0].replace(/^['\\\"]+|['\\\"]+$/g, E) + '\\\"');\\n                            params[\\\"font-size\\\"] && (textpathStyle.fontSize = params[\\\"font-size\\\"]);\\n                            params[\\\"font-weight\\\"] && (textpathStyle.fontWeight = params[\\\"font-weight\\\"]);\\n                            params[\\\"font-style\\\"] && (textpathStyle.fontStyle = params[\\\"font-style\\\"]);\\n                        }\\n                        if (\\\"arrow-start\\\" in params) {\\n                            addArrow(res, params[\\\"arrow-start\\\"]);\\n                        }\\n                        if (\\\"arrow-end\\\" in params) {\\n                            addArrow(res, params[\\\"arrow-end\\\"], 1);\\n                        }\\n                        if (params.opacity != null ||\\n                            params.fill != null ||\\n                            params.src != null ||\\n                            params.stroke != null ||\\n                            params[\\\"stroke-width\\\"] != null ||\\n                            params[\\\"stroke-opacity\\\"] != null ||\\n                            params[\\\"fill-opacity\\\"] != null ||\\n                            params[\\\"stroke-dasharray\\\"] != null ||\\n                            params[\\\"stroke-miterlimit\\\"] != null ||\\n                            params[\\\"stroke-linejoin\\\"] != null ||\\n                            params[\\\"stroke-linecap\\\"] != null) {\\n                            var fill = node.getElementsByTagName(fillString),\\n                                newfill = false;\\n                            fill = fill && fill[0];\\n                            !fill && (newfill = fill = createNode(fillString));\\n                            if (o.type == \\\"image\\\" && params.src) {\\n                                fill.src = params.src;\\n                            }\\n                            params.fill && (fill.on = true);\\n                            if (fill.on == null || params.fill == \\\"none\\\" || params.fill === null) {\\n                                fill.on = false;\\n                            }\\n                            if (fill.on && params.fill) {\\n                                var isURL = Str(params.fill).match(R._ISURL);\\n                                if (isURL) {\\n                                    fill.parentNode == node && node.removeChild(fill);\\n                                    fill.rotate = true;\\n                                    fill.src = isURL[1];\\n                                    fill.type = \\\"tile\\\";\\n                                    var bbox = o.getBBox(1);\\n                                    fill.position = bbox.x + S + bbox.y;\\n                                    o._.fillpos = [bbox.x, bbox.y];\\n\\n                                    R._preload(isURL[1], function () {\\n                                        o._.fillsize = [this.offsetWidth, this.offsetHeight];\\n                                    });\\n                                } else {\\n                                    fill.color = R.getRGB(params.fill).hex;\\n                                    fill.src = E;\\n                                    fill.type = \\\"solid\\\";\\n                                    if (R.getRGB(params.fill).error && (res.type in {\\n                                            circle: 1,\\n                                            ellipse: 1\\n                                        } || Str(params.fill).charAt() != \\\"r\\\") && addGradientFill(res, params.fill, fill)) {\\n                                        a.fill = \\\"none\\\";\\n                                        a.gradient = params.fill;\\n                                        fill.rotate = false;\\n                                    }\\n                                }\\n                            }\\n                            if (\\\"fill-opacity\\\" in params || \\\"opacity\\\" in params) {\\n                                var opacity = ((+a[\\\"fill-opacity\\\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+R.getRGB(params.fill).o + 1 || 2) - 1);\\n                                opacity = mmin(mmax(opacity, 0), 1);\\n                                fill.opacity = opacity;\\n                                if (fill.src) {\\n                                    fill.color = \\\"none\\\";\\n                                }\\n                            }\\n                            node.appendChild(fill);\\n                            var stroke = (node.getElementsByTagName(\\\"stroke\\\") && node.getElementsByTagName(\\\"stroke\\\")[0]),\\n                                newstroke = false;\\n                            !stroke && (newstroke = stroke = createNode(\\\"stroke\\\"));\\n                            if ((params.stroke && params.stroke != \\\"none\\\") ||\\n                                params[\\\"stroke-width\\\"] ||\\n                                params[\\\"stroke-opacity\\\"] != null ||\\n                                params[\\\"stroke-dasharray\\\"] ||\\n                                params[\\\"stroke-miterlimit\\\"] ||\\n                                params[\\\"stroke-linejoin\\\"] ||\\n                                params[\\\"stroke-linecap\\\"]) {\\n                                stroke.on = true;\\n                            }\\n                            (params.stroke == \\\"none\\\" || params.stroke === null || stroke.on == null || params.stroke == 0 || params[\\\"stroke-width\\\"] == 0) && (stroke.on = false);\\n                            var strokeColor = R.getRGB(params.stroke);\\n                            stroke.on && params.stroke && (stroke.color = strokeColor.hex);\\n                            opacity = ((+a[\\\"stroke-opacity\\\"] + 1 || 2) - 1) * ((+a.opacity + 1 || 2) - 1) * ((+strokeColor.o + 1 || 2) - 1);\\n                            var width = (toFloat(params[\\\"stroke-width\\\"]) || 1) * .75;\\n                            opacity = mmin(mmax(opacity, 0), 1);\\n                            params[\\\"stroke-width\\\"] == null && (width = a[\\\"stroke-width\\\"]);\\n                            params[\\\"stroke-width\\\"] && (stroke.weight = width);\\n                            width && width < 1 && (opacity *= width) && (stroke.weight = 1);\\n                            stroke.opacity = opacity;\\n\\n                            params[\\\"stroke-linejoin\\\"] && (stroke.joinstyle = params[\\\"stroke-linejoin\\\"] || \\\"miter\\\");\\n                            stroke.miterlimit = params[\\\"stroke-miterlimit\\\"] || 8;\\n                            params[\\\"stroke-linecap\\\"] && (stroke.endcap = params[\\\"stroke-linecap\\\"] == \\\"butt\\\" ? \\\"flat\\\" : params[\\\"stroke-linecap\\\"] == \\\"square\\\" ? \\\"square\\\" : \\\"round\\\");\\n                            if (\\\"stroke-dasharray\\\" in params) {\\n                                var dasharray = {\\n                                    \\\"-\\\": \\\"shortdash\\\",\\n                                    \\\".\\\": \\\"shortdot\\\",\\n                                    \\\"-.\\\": \\\"shortdashdot\\\",\\n                                    \\\"-..\\\": \\\"shortdashdotdot\\\",\\n                                    \\\". \\\": \\\"dot\\\",\\n                                    \\\"- \\\": \\\"dash\\\",\\n                                    \\\"--\\\": \\\"longdash\\\",\\n                                    \\\"- .\\\": \\\"dashdot\\\",\\n                                    \\\"--.\\\": \\\"longdashdot\\\",\\n                                    \\\"--..\\\": \\\"longdashdotdot\\\"\\n                                };\\n                                stroke.dashstyle = dasharray[has](params[\\\"stroke-dasharray\\\"]) ? dasharray[params[\\\"stroke-dasharray\\\"]] : E;\\n                            }\\n                            newstroke && node.appendChild(stroke);\\n                        }\\n                        if (res.type == \\\"text\\\") {\\n                            res.paper.canvas.style.display = E;\\n                            var span = res.paper.span,\\n                                m = 100,\\n                                fontSize = a.font && a.font.match(/\\\\d+(?:\\\\.\\\\d*)?(?=px)/);\\n                            s = span.style;\\n                            a.font && (s.font = a.font);\\n                            a[\\\"font-family\\\"] && (s.fontFamily = a[\\\"font-family\\\"]);\\n                            a[\\\"font-weight\\\"] && (s.fontWeight = a[\\\"font-weight\\\"]);\\n                            a[\\\"font-style\\\"] && (s.fontStyle = a[\\\"font-style\\\"]);\\n                            fontSize = toFloat(a[\\\"font-size\\\"] || fontSize && fontSize[0]) || 10;\\n                            s.fontSize = fontSize * m + \\\"px\\\";\\n                            res.textpath.string && (span.innerHTML = Str(res.textpath.string).replace(/</g, \\\"&#60;\\\").replace(/&/g, \\\"&#38;\\\").replace(/\\\\n/g, \\\"<br>\\\"));\\n                            var brect = span.getBoundingClientRect();\\n                            res.W = a.w = (brect.right - brect.left) / m;\\n                            res.H = a.h = (brect.bottom - brect.top) / m;\\n                            // res.paper.canvas.style.display = \\\"none\\\";\\n                            res.X = a.x;\\n                            res.Y = a.y + res.H / 2;\\n\\n                            (\\\"x\\\" in params || \\\"y\\\" in params) && (res.path.v = R.format(\\\"m{0},{1}l{2},{1}\\\", round(a.x * zoom), round(a.y * zoom), round(a.x * zoom) + 1));\\n                            var dirtyattrs = [\\\"x\\\", \\\"y\\\", \\\"text\\\", \\\"font\\\", \\\"font-family\\\", \\\"font-weight\\\", \\\"font-style\\\", \\\"font-size\\\"];\\n                            for (var d = 0, dd = dirtyattrs.length; d < dd; d++) if (dirtyattrs[d] in params) {\\n                                res._.dirty = 1;\\n                                break;\\n                            }\\n\\n                            // text-anchor emulation\\n                            switch (a[\\\"text-anchor\\\"]) {\\n                                case \\\"start\\\":\\n                                    res.textpath.style[\\\"v-text-align\\\"] = \\\"left\\\";\\n                                    res.bbx = res.W / 2;\\n                                    break;\\n                                case \\\"end\\\":\\n                                    res.textpath.style[\\\"v-text-align\\\"] = \\\"right\\\";\\n                                    res.bbx = -res.W / 2;\\n                                    break;\\n                                default:\\n                                    res.textpath.style[\\\"v-text-align\\\"] = \\\"center\\\";\\n                                    res.bbx = 0;\\n                                    break;\\n                            }\\n                            res.textpath.style[\\\"v-text-kern\\\"] = true;\\n                        }\\n                        // res.paper.canvas.style.display = E;\\n                    },\\n                    addGradientFill = function (o, gradient, fill) {\\n                        o.attrs = o.attrs || {};\\n                        var attrs = o.attrs,\\n                            pow = Math.pow,\\n                            opacity,\\n                            oindex,\\n                            type = \\\"linear\\\",\\n                            fxfy = \\\".5 .5\\\";\\n                        o.attrs.gradient = gradient;\\n                        gradient = Str(gradient).replace(R._radial_gradient, function (all, fx, fy) {\\n                            type = \\\"radial\\\";\\n                            if (fx && fy) {\\n                                fx = toFloat(fx);\\n                                fy = toFloat(fy);\\n                                pow(fx - .5, 2) + pow(fy - .5, 2) > .25 && (fy = math.sqrt(.25 - pow(fx - .5, 2)) * ((fy > .5) * 2 - 1) + .5);\\n                                fxfy = fx + S + fy;\\n                            }\\n                            return E;\\n                        });\\n                        gradient = gradient.split(/\\\\s*\\\\-\\\\s*/);\\n                        if (type == \\\"linear\\\") {\\n                            var angle = gradient.shift();\\n                            angle = -toFloat(angle);\\n                            if (isNaN(angle)) {\\n                                return null;\\n                            }\\n                        }\\n                        var dots = R._parseDots(gradient);\\n                        if (!dots) {\\n                            return null;\\n                        }\\n                        o = o.shape || o.node;\\n                        if (dots.length) {\\n                            o.removeChild(fill);\\n                            fill.on = true;\\n                            fill.method = \\\"none\\\";\\n                            fill.color = dots[0].color;\\n                            fill.color2 = dots[dots.length - 1].color;\\n                            var clrs = [];\\n                            for (var i = 0, ii = dots.length; i < ii; i++) {\\n                                dots[i].offset && clrs.push(dots[i].offset + S + dots[i].color);\\n                            }\\n                            fill.colors = clrs.length ? clrs.join() : \\\"0% \\\" + fill.color;\\n                            if (type == \\\"radial\\\") {\\n                                fill.type = \\\"gradientTitle\\\";\\n                                fill.focus = \\\"100%\\\";\\n                                fill.focussize = \\\"0 0\\\";\\n                                fill.focusposition = fxfy;\\n                                fill.angle = 0;\\n                            } else {\\n                                // fill.rotate= true;\\n                                fill.type = \\\"gradient\\\";\\n                                fill.angle = (270 - angle) % 360;\\n                            }\\n                            o.appendChild(fill);\\n                        }\\n                        return 1;\\n                    },\\n                    Element = function (node, vml) {\\n                        this[0] = this.node = node;\\n                        node.raphael = true;\\n                        this.id = R._oid++;\\n                        node.raphaelid = this.id;\\n                        this.X = 0;\\n                        this.Y = 0;\\n                        this.attrs = {};\\n                        this.paper = vml;\\n                        this.matrix = R.matrix();\\n                        this._ = {\\n                            transform: [],\\n                            sx: 1,\\n                            sy: 1,\\n                            dx: 0,\\n                            dy: 0,\\n                            deg: 0,\\n                            dirty: 1,\\n                            dirtyT: 1\\n                        };\\n                        !vml.bottom && (vml.bottom = this);\\n                        this.prev = vml.top;\\n                        vml.top && (vml.top.next = this);\\n                        vml.top = this;\\n                        this.next = null;\\n                    };\\n                var elproto = R.el;\\n\\n                Element.prototype = elproto;\\n                elproto.constructor = Element;\\n                elproto.transform = function (tstr) {\\n                    if (tstr == null) {\\n                        return this._.transform;\\n                    }\\n                    var vbs = this.paper._viewBoxShift,\\n                        vbt = vbs ? \\\"s\\\" + [vbs.scale, vbs.scale] + \\\"-1-1t\\\" + [vbs.dx, vbs.dy] : E,\\n                        oldt;\\n                    if (vbs) {\\n                        oldt = tstr = Str(tstr).replace(/\\\\.{3}|\\\\u2026/g, this._.transform || E);\\n                    }\\n                    R._extractTransform(this, vbt + tstr);\\n                    var matrix = this.matrix.clone(),\\n                        skew = this.skew,\\n                        o = this.node,\\n                        split,\\n                        isGrad = ~Str(this.attrs.fill).indexOf(\\\"-\\\"),\\n                        isPatt = !Str(this.attrs.fill).indexOf(\\\"url(\\\");\\n                    matrix.translate(1, 1);\\n                    if (isPatt || isGrad || this.type == \\\"image\\\") {\\n                        skew.matrix = \\\"1 0 0 1\\\";\\n                        skew.offset = \\\"0 0\\\";\\n                        split = matrix.split();\\n                        if ((isGrad && split.noRotation) || !split.isSimple) {\\n                            o.style.filter = matrix.toFilter();\\n                            var bb = this.getBBox(),\\n                                bbt = this.getBBox(1),\\n                                dx = bb.x - bbt.x,\\n                                dy = bb.y - bbt.y;\\n                            o.coordorigin = (dx * -zoom) + S + (dy * -zoom);\\n                            setCoords(this, 1, 1, dx, dy, 0);\\n                        } else {\\n                            o.style.filter = E;\\n                            setCoords(this, split.scalex, split.scaley, split.dx, split.dy, split.rotate);\\n                        }\\n                    } else {\\n                        o.style.filter = E;\\n                        skew.matrix = Str(matrix);\\n                        skew.offset = matrix.offset();\\n                    }\\n                    if (oldt !== null) { // empty string value is true as well\\n                        this._.transform = oldt;\\n                        R._extractTransform(this, oldt);\\n                    }\\n                    return this;\\n                };\\n                elproto.rotate = function (deg, cx, cy) {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    if (deg == null) {\\n                        return;\\n                    }\\n                    deg = Str(deg).split(separator);\\n                    if (deg.length - 1) {\\n                        cx = toFloat(deg[1]);\\n                        cy = toFloat(deg[2]);\\n                    }\\n                    deg = toFloat(deg[0]);\\n                    (cy == null) && (cx = cy);\\n                    if (cx == null || cy == null) {\\n                        var bbox = this.getBBox(1);\\n                        cx = bbox.x + bbox.width / 2;\\n                        cy = bbox.y + bbox.height / 2;\\n                    }\\n                    this._.dirtyT = 1;\\n                    this.transform(this._.transform.concat([[\\\"r\\\", deg, cx, cy]]));\\n                    return this;\\n                };\\n                elproto.translate = function (dx, dy) {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    dx = Str(dx).split(separator);\\n                    if (dx.length - 1) {\\n                        dy = toFloat(dx[1]);\\n                    }\\n                    dx = toFloat(dx[0]) || 0;\\n                    dy = +dy || 0;\\n                    if (this._.bbox) {\\n                        this._.bbox.x += dx;\\n                        this._.bbox.y += dy;\\n                    }\\n                    this.transform(this._.transform.concat([[\\\"t\\\", dx, dy]]));\\n                    return this;\\n                };\\n                elproto.scale = function (sx, sy, cx, cy) {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    sx = Str(sx).split(separator);\\n                    if (sx.length - 1) {\\n                        sy = toFloat(sx[1]);\\n                        cx = toFloat(sx[2]);\\n                        cy = toFloat(sx[3]);\\n                        isNaN(cx) && (cx = null);\\n                        isNaN(cy) && (cy = null);\\n                    }\\n                    sx = toFloat(sx[0]);\\n                    (sy == null) && (sy = sx);\\n                    (cy == null) && (cx = cy);\\n                    if (cx == null || cy == null) {\\n                        var bbox = this.getBBox(1);\\n                    }\\n                    cx = cx == null ? bbox.x + bbox.width / 2 : cx;\\n                    cy = cy == null ? bbox.y + bbox.height / 2 : cy;\\n\\n                    this.transform(this._.transform.concat([[\\\"s\\\", sx, sy, cx, cy]]));\\n                    this._.dirtyT = 1;\\n                    return this;\\n                };\\n                elproto.hide = function () {\\n                    !this.removed && (this.node.style.display = \\\"none\\\");\\n                    return this;\\n                };\\n                elproto.show = function () {\\n                    !this.removed && (this.node.style.display = E);\\n                    return this;\\n                };\\n                // Needed to fix the vml setViewBox issues\\n                elproto.auxGetBBox = R.el.getBBox;\\n                elproto.getBBox = function () {\\n                    var b = this.auxGetBBox();\\n                    if (this.paper && this.paper._viewBoxShift) {\\n                        var c = {};\\n                        var z = 1 / this.paper._viewBoxShift.scale;\\n                        c.x = b.x - this.paper._viewBoxShift.dx;\\n                        c.x *= z;\\n                        c.y = b.y - this.paper._viewBoxShift.dy;\\n                        c.y *= z;\\n                        c.width = b.width * z;\\n                        c.height = b.height * z;\\n                        c.x2 = c.x + c.width;\\n                        c.y2 = c.y + c.height;\\n                        return c;\\n                    }\\n                    return b;\\n                };\\n                elproto._getBBox = function () {\\n                    if (this.removed) {\\n                        return {};\\n                    }\\n                    return {\\n                        x: this.X + (this.bbx || 0) - this.W / 2,\\n                        y: this.Y - this.H,\\n                        width: this.W,\\n                        height: this.H\\n                    };\\n                };\\n                elproto.remove = function () {\\n                    if (this.removed || !this.node.parentNode) {\\n                        return;\\n                    }\\n                    this.paper.__set__ && this.paper.__set__.exclude(this);\\n                    R.eve.unbind(\\\"raphael.*.*.\\\" + this.id);\\n                    R._tear(this, this.paper);\\n                    this.node.parentNode.removeChild(this.node);\\n                    this.shape && this.shape.parentNode.removeChild(this.shape);\\n                    for (var i in this) {\\n                        this[i] = typeof this[i] == \\\"function\\\" ? R._removedFactory(i) : null;\\n                    }\\n                    this.removed = true;\\n                };\\n                elproto.attr = function (name, value) {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    if (name == null) {\\n                        var res = {};\\n                        for (var a in this.attrs) if (this.attrs[has](a)) {\\n                            res[a] = this.attrs[a];\\n                        }\\n                        res.gradient && res.fill == \\\"none\\\" && (res.fill = res.gradient) && delete res.gradient;\\n                        res.transform = this._.transform;\\n                        return res;\\n                    }\\n                    if (value == null && R.is(name, \\\"string\\\")) {\\n                        if (name == fillString && this.attrs.fill == \\\"none\\\" && this.attrs.gradient) {\\n                            return this.attrs.gradient;\\n                        }\\n                        var names = name.split(separator),\\n                            out = {};\\n                        for (var i = 0, ii = names.length; i < ii; i++) {\\n                            name = names[i];\\n                            if (name in this.attrs) {\\n                                out[name] = this.attrs[name];\\n                            } else if (R.is(this.paper.customAttributes[name], \\\"function\\\")) {\\n                                out[name] = this.paper.customAttributes[name].def;\\n                            } else {\\n                                out[name] = R._availableAttrs[name];\\n                            }\\n                        }\\n                        return ii - 1 ? out : out[names[0]];\\n                    }\\n                    if (this.attrs && value == null && R.is(name, \\\"array\\\")) {\\n                        out = {};\\n                        for (i = 0, ii = name.length; i < ii; i++) {\\n                            out[name[i]] = this.attr(name[i]);\\n                        }\\n                        return out;\\n                    }\\n                    var params;\\n                    if (value != null) {\\n                        params = {};\\n                        params[name] = value;\\n                    }\\n                    value == null && R.is(name, \\\"object\\\") && (params = name);\\n                    for (var key in params) {\\n                        eve(\\\"raphael.attr.\\\" + key + \\\".\\\" + this.id, this, params[key]);\\n                    }\\n                    if (params) {\\n                        for (key in this.paper.customAttributes) if (this.paper.customAttributes[has](key) && params[has](key) && R.is(this.paper.customAttributes[key], \\\"function\\\")) {\\n                            var par = this.paper.customAttributes[key].apply(this, [].concat(params[key]));\\n                            this.attrs[key] = params[key];\\n                            for (var subkey in par) if (par[has](subkey)) {\\n                                params[subkey] = par[subkey];\\n                            }\\n                        }\\n                        // this.paper.canvas.style.display = \\\"none\\\";\\n                        if (params.text && this.type == \\\"text\\\") {\\n                            this.textpath.string = params.text;\\n                        }\\n                        setFillAndStroke(this, params);\\n                        // this.paper.canvas.style.display = E;\\n                    }\\n                    return this;\\n                };\\n                elproto.toFront = function () {\\n                    !this.removed && this.node.parentNode.appendChild(this.node);\\n                    this.paper && this.paper.top != this && R._tofront(this, this.paper);\\n                    return this;\\n                };\\n                elproto.toBack = function () {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    if (this.node.parentNode.firstChild != this.node) {\\n                        this.node.parentNode.insertBefore(this.node, this.node.parentNode.firstChild);\\n                        R._toback(this, this.paper);\\n                    }\\n                    return this;\\n                };\\n                elproto.insertAfter = function (element) {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    if (element.constructor == R.st.constructor) {\\n                        element = element[element.length - 1];\\n                    }\\n                    if (element.node.nextSibling) {\\n                        element.node.parentNode.insertBefore(this.node, element.node.nextSibling);\\n                    } else {\\n                        element.node.parentNode.appendChild(this.node);\\n                    }\\n                    R._insertafter(this, element, this.paper);\\n                    return this;\\n                };\\n                elproto.insertBefore = function (element) {\\n                    if (this.removed) {\\n                        return this;\\n                    }\\n                    if (element.constructor == R.st.constructor) {\\n                        element = element[0];\\n                    }\\n                    element.node.parentNode.insertBefore(this.node, element.node);\\n                    R._insertbefore(this, element, this.paper);\\n                    return this;\\n                };\\n                elproto.blur = function (size) {\\n                    var s = this.node.runtimeStyle,\\n                        f = s.filter;\\n                    f = f.replace(blurregexp, E);\\n                    if (+size !== 0) {\\n                        this.attrs.blur = size;\\n                        s.filter = f + S + ms + \\\".Blur(pixelradius=\\\" + (+size || 1.5) + \\\")\\\";\\n                        s.margin = R.format(\\\"-{0}px 0 0 -{0}px\\\", round(+size || 1.5));\\n                    } else {\\n                        s.filter = f;\\n                        s.margin = 0;\\n                        delete this.attrs.blur;\\n                    }\\n                    return this;\\n                };\\n\\n                R._engine.path = function (pathString, vml) {\\n                    var el = createNode(\\\"shape\\\");\\n                    el.style.cssText = cssDot;\\n                    el.coordsize = zoom + S + zoom;\\n                    el.coordorigin = vml.coordorigin;\\n                    var p = new Element(el, vml),\\n                        attr = {fill: \\\"none\\\", stroke: \\\"#000\\\"};\\n                    pathString && (attr.path = pathString);\\n                    p.type = \\\"path\\\";\\n                    p.path = [];\\n                    p.Path = E;\\n                    setFillAndStroke(p, attr);\\n                    vml.canvas && vml.canvas.appendChild(el);\\n                    var skew = createNode(\\\"skew\\\");\\n                    skew.on = true;\\n                    el.appendChild(skew);\\n                    p.skew = skew;\\n                    p.transform(E);\\n                    return p;\\n                };\\n                R._engine.rect = function (vml, x, y, w, h, r) {\\n                    var path = R._rectPath(x, y, w, h, r),\\n                        res = vml.path(path),\\n                        a = res.attrs;\\n                    res.X = a.x = x;\\n                    res.Y = a.y = y;\\n                    res.W = a.width = w;\\n                    res.H = a.height = h;\\n                    a.r = r;\\n                    a.path = path;\\n                    res.type = \\\"rect\\\";\\n                    return res;\\n                };\\n                R._engine.ellipse = function (vml, x, y, rx, ry) {\\n                    var res = vml.path(),\\n                        a = res.attrs;\\n                    res.X = x - rx;\\n                    res.Y = y - ry;\\n                    res.W = rx * 2;\\n                    res.H = ry * 2;\\n                    res.type = \\\"ellipse\\\";\\n                    setFillAndStroke(res, {\\n                        cx: x,\\n                        cy: y,\\n                        rx: rx,\\n                        ry: ry\\n                    });\\n                    return res;\\n                };\\n                R._engine.circle = function (vml, x, y, r) {\\n                    var res = vml.path(),\\n                        a = res.attrs;\\n                    res.X = x - r;\\n                    res.Y = y - r;\\n                    res.W = res.H = r * 2;\\n                    res.type = \\\"circle\\\";\\n                    setFillAndStroke(res, {\\n                        cx: x,\\n                        cy: y,\\n                        r: r\\n                    });\\n                    return res;\\n                };\\n                R._engine.image = function (vml, src, x, y, w, h) {\\n                    var path = R._rectPath(x, y, w, h),\\n                        res = vml.path(path).attr({stroke: \\\"none\\\"}),\\n                        a = res.attrs,\\n                        node = res.node,\\n                        fill = node.getElementsByTagName(fillString)[0];\\n                    a.src = src;\\n                    res.X = a.x = x;\\n                    res.Y = a.y = y;\\n                    res.W = a.width = w;\\n                    res.H = a.height = h;\\n                    a.path = path;\\n                    res.type = \\\"image\\\";\\n                    fill.parentNode == node && node.removeChild(fill);\\n                    fill.rotate = true;\\n                    fill.src = src;\\n                    fill.type = \\\"tile\\\";\\n                    res._.fillpos = [x, y];\\n                    res._.fillsize = [w, h];\\n                    node.appendChild(fill);\\n                    setCoords(res, 1, 1, 0, 0, 0);\\n                    return res;\\n                };\\n                R._engine.text = function (vml, x, y, text) {\\n                    var el = createNode(\\\"shape\\\"),\\n                        path = createNode(\\\"path\\\"),\\n                        o = createNode(\\\"textpath\\\");\\n                    x = x || 0;\\n                    y = y || 0;\\n                    text = text || \\\"\\\";\\n                    path.v = R.format(\\\"m{0},{1}l{2},{1}\\\", round(x * zoom), round(y * zoom), round(x * zoom) + 1);\\n                    path.textpathok = true;\\n                    o.string = Str(text);\\n                    o.on = true;\\n                    el.style.cssText = cssDot;\\n                    el.coordsize = zoom + S + zoom;\\n                    el.coordorigin = \\\"0 0\\\";\\n                    var p = new Element(el, vml),\\n                        attr = {\\n                            fill: \\\"#000\\\",\\n                            stroke: \\\"none\\\",\\n                            font: R._availableAttrs.font,\\n                            text: text\\n                        };\\n                    p.shape = el;\\n                    p.path = path;\\n                    p.textpath = o;\\n                    p.type = \\\"text\\\";\\n                    p.attrs.text = Str(text);\\n                    p.attrs.x = x;\\n                    p.attrs.y = y;\\n                    p.attrs.w = 1;\\n                    p.attrs.h = 1;\\n                    setFillAndStroke(p, attr);\\n                    el.appendChild(o);\\n                    el.appendChild(path);\\n                    vml.canvas.appendChild(el);\\n                    var skew = createNode(\\\"skew\\\");\\n                    skew.on = true;\\n                    el.appendChild(skew);\\n                    p.skew = skew;\\n                    p.transform(E);\\n                    return p;\\n                };\\n                R._engine.setSize = function (width, height) {\\n                    var cs = this.canvas.style;\\n                    this.width = width;\\n                    this.height = height;\\n                    width == +width && (width += \\\"px\\\");\\n                    height == +height && (height += \\\"px\\\");\\n                    cs.width = width;\\n                    cs.height = height;\\n                    cs.clip = \\\"rect(0 \\\" + width + \\\" \\\" + height + \\\" 0)\\\";\\n                    if (this._viewBox) {\\n                        R._engine.setViewBox.apply(this, this._viewBox);\\n                    }\\n                    return this;\\n                };\\n                R._engine.setViewBox = function (x, y, w, h, fit) {\\n                    R.eve(\\\"raphael.setViewBox\\\", this, this._viewBox, [x, y, w, h, fit]);\\n                    var paperSize = this.getSize(),\\n                        width = paperSize.width,\\n                        height = paperSize.height,\\n                        H, W;\\n                    if (fit) {\\n                        H = height / h;\\n                        W = width / w;\\n                        if (w * H < width) {\\n                            x -= (width - w * H) / 2 / H;\\n                        }\\n                        if (h * W < height) {\\n                            y -= (height - h * W) / 2 / W;\\n                        }\\n                    }\\n                    this._viewBox = [x, y, w, h, !!fit];\\n                    this._viewBoxShift = {\\n                        dx: -x,\\n                        dy: -y,\\n                        scale: paperSize\\n                    };\\n                    this.forEach(function (el) {\\n                        el.transform(\\\"...\\\");\\n                    });\\n                    return this;\\n                };\\n                var createNode;\\n                R._engine.initWin = function (win) {\\n                    var doc = win.document;\\n                    if (doc.styleSheets.length < 31) {\\n                        doc.createStyleSheet().addRule(\\\".rvml\\\", \\\"behavior:url(#default#VML)\\\");\\n                    } else {\\n                        // no more room, add to the existing one\\n                        // http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx\\n                        doc.styleSheets[0].addRule(\\\".rvml\\\", \\\"behavior:url(#default#VML)\\\");\\n                    }\\n                    try {\\n                        !doc.namespaces.rvml && doc.namespaces.add(\\\"rvml\\\", \\\"urn:schemas-microsoft-com:vml\\\");\\n                        createNode = function (tagName) {\\n                            return doc.createElement('<rvml:' + tagName + ' class=\\\"rvml\\\">');\\n                        };\\n                    } catch (e) {\\n                        createNode = function (tagName) {\\n                            return doc.createElement('<' + tagName + ' xmlns=\\\"urn:schemas-microsoft.com:vml\\\" class=\\\"rvml\\\">');\\n                        };\\n                    }\\n                };\\n                R._engine.initWin(R._g.win);\\n                R._engine.create = function () {\\n                    var con = R._getContainer.apply(0, arguments),\\n                        container = con.container,\\n                        height = con.height,\\n                        s,\\n                        width = con.width,\\n                        x = con.x,\\n                        y = con.y;\\n                    if (!container) {\\n                        throw new Error(\\\"VML container not found.\\\");\\n                    }\\n                    var res = new R._Paper,\\n                        c = res.canvas = R._g.doc.createElement(\\\"div\\\"),\\n                        cs = c.style;\\n                    x = x || 0;\\n                    y = y || 0;\\n                    width = width || 512;\\n                    height = height || 342;\\n                    res.width = width;\\n                    res.height = height;\\n                    width == +width && (width += \\\"px\\\");\\n                    height == +height && (height += \\\"px\\\");\\n                    res.coordsize = zoom * 1e3 + S + zoom * 1e3;\\n                    res.coordorigin = \\\"0 0\\\";\\n                    res.span = R._g.doc.createElement(\\\"span\\\");\\n                    res.span.style.cssText = \\\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;\\\";\\n                    c.appendChild(res.span);\\n                    cs.cssText = R.format(\\\"top:0;left:0;width:{0};height:{1};display:inline-block;position:relative;clip:rect(0 {0} {1} 0);overflow:hidden\\\", width, height);\\n                    if (container == 1) {\\n                        R._g.doc.body.appendChild(c);\\n                        cs.left = x + \\\"px\\\";\\n                        cs.top = y + \\\"px\\\";\\n                        cs.position = \\\"absolute\\\";\\n                    } else {\\n                        if (container.firstChild) {\\n                            container.insertBefore(c, container.firstChild);\\n                        } else {\\n                            container.appendChild(c);\\n                        }\\n                    }\\n                    res.renderfix = function () {\\n                    };\\n                    return res;\\n                };\\n                R.prototype.clear = function () {\\n                    R.eve(\\\"raphael.clear\\\", this);\\n                    this.canvas.innerHTML = E;\\n                    this.span = R._g.doc.createElement(\\\"span\\\");\\n                    this.span.style.cssText = \\\"position:absolute;left:-9999em;top:-9999em;padding:0;margin:0;line-height:1;display:inline;\\\";\\n                    this.canvas.appendChild(this.span);\\n                    this.bottom = this.top = null;\\n                };\\n                R.prototype.remove = function () {\\n                    R.eve(\\\"raphael.remove\\\", this);\\n                    this.canvas.parentNode.removeChild(this.canvas);\\n                    for (var i in this) {\\n                        this[i] = typeof this[i] == \\\"function\\\" ? R._removedFactory(i) : null;\\n                    }\\n                    return true;\\n                };\\n\\n                var setproto = R.st;\\n                for (var method in elproto) if (elproto[has](method) && !setproto[has](method)) {\\n                    setproto[method] = (function (methodname) {\\n                        return function () {\\n                            var arg = arguments;\\n                            return this.forEach(function (el) {\\n                                el[methodname].apply(el, arg);\\n                            });\\n                        };\\n                    })(method);\\n                }\\n            }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\\n\\n\\n            /***/\\n        }\\n        /******/])\\n});\\n;\\n/* @license\\n morris.js v0.5.0\\n Copyright 2014 Olly Smith All rights reserved.\\n Licensed under the BSD-2-Clause License.\\n */\\n\\n\\n(function () {\\n    var $, Morris, minutesSpecHelper, secondsSpecHelper,\\n        __slice = [].slice,\\n        __bind = function (fn, me) {\\n            return function () {\\n                return fn.apply(me, arguments);\\n            };\\n        },\\n        __hasProp = {}.hasOwnProperty,\\n        __extends = function (child, parent) {\\n            for (var key in parent) {\\n                if (__hasProp.call(parent, key)) child[key] = parent[key];\\n            }\\n            function ctor() {\\n                this.constructor = child;\\n            }\\n\\n            ctor.prototype = parent.prototype;\\n            child.prototype = new ctor();\\n            child.__super__ = parent.prototype;\\n            return child;\\n        },\\n        __indexOf = [].indexOf || function (item) {\\n                for (var i = 0, l = this.length; i < l; i++) {\\n                    if (i in this && this[i] === item) return i;\\n                }\\n                return -1;\\n            };\\n\\n    Morris = window.Morris = {};\\n\\n    $ = jQuery;\\n\\n    Morris.EventEmitter = (function () {\\n        function EventEmitter() {\\n        }\\n\\n        EventEmitter.prototype.on = function (name, handler) {\\n            if (this.handlers == null) {\\n                this.handlers = {};\\n            }\\n            if (this.handlers[name] == null) {\\n                this.handlers[name] = [];\\n            }\\n            this.handlers[name].push(handler);\\n            return this;\\n        };\\n\\n        EventEmitter.prototype.fire = function () {\\n            var args, handler, name, _i, _len, _ref, _results;\\n            name = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\\n            if ((this.handlers != null) && (this.handlers[name] != null)) {\\n                _ref = this.handlers[name];\\n                _results = [];\\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                    handler = _ref[_i];\\n                    _results.push(handler.apply(null, args));\\n                }\\n                return _results;\\n            }\\n        };\\n\\n        return EventEmitter;\\n\\n    })();\\n\\n    Morris.commas = function (num) {\\n        var absnum, intnum, ret, strabsnum;\\n        if (num != null) {\\n            ret = num < 0 ? \\\"-\\\" : \\\"\\\";\\n            absnum = Math.abs(num);\\n            intnum = Math.floor(absnum).toFixed(0);\\n            ret += intnum.replace(/(?=(?:\\\\d{3})+$)(?!^)/g, ',');\\n            strabsnum = absnum.toString();\\n            if (strabsnum.length > intnum.length) {\\n                ret += strabsnum.slice(intnum.length);\\n            }\\n            return ret;\\n        } else {\\n            return '-';\\n        }\\n    };\\n\\n    Morris.pad2 = function (number) {\\n        return (number < 10 ? '0' : '') + number;\\n    };\\n\\n    Morris.Grid = (function (_super) {\\n        __extends(Grid, _super);\\n\\n        function Grid(options) {\\n            this.resizeHandler = __bind(this.resizeHandler, this);\\n            var _this = this;\\n            if (typeof options.element === 'string') {\\n                this.el = $(document.getElementById(options.element));\\n            } else {\\n                this.el = $(options.element);\\n            }\\n            if ((this.el == null) || this.el.length === 0) {\\n                throw new Error(\\\"Graph container element not found\\\");\\n            }\\n            if (this.el.css('position') === 'static') {\\n                this.el.css('position', 'relative');\\n            }\\n            this.options = $.extend({}, this.gridDefaults, this.defaults || {}, options);\\n            if (typeof this.options.units === 'string') {\\n                this.options.postUnits = options.units;\\n            }\\n            this.raphael = new Raphael(this.el[0]);\\n            this.elementWidth = null;\\n            this.elementHeight = null;\\n            this.dirty = false;\\n            this.selectFrom = null;\\n            if (this.init) {\\n                this.init();\\n            }\\n            this.setData(this.options.data);\\n            this.el.bind('mousemove', function (evt) {\\n                var left, offset, right, width, x;\\n                offset = _this.el.offset();\\n                x = evt.pageX - offset.left;\\n                if (_this.selectFrom) {\\n                    left = _this.data[_this.hitTest(Math.min(x, _this.selectFrom))]._x;\\n                    right = _this.data[_this.hitTest(Math.max(x, _this.selectFrom))]._x;\\n                    width = right - left;\\n                    return _this.selectionRect.attr({\\n                        x: left,\\n                        width: width\\n                    });\\n                } else {\\n                    return _this.fire('hovermove', x, evt.pageY - offset.top);\\n                }\\n            });\\n            this.el.bind('mouseleave', function (evt) {\\n                if (_this.selectFrom) {\\n                    _this.selectionRect.hide();\\n                    _this.selectFrom = null;\\n                }\\n                return _this.fire('hoverout');\\n            });\\n            this.el.bind('touchstart touchmove touchend', function (evt) {\\n                var offset, touch;\\n                touch = evt.originalEvent.touches[0] || evt.originalEvent.changedTouches[0];\\n                offset = _this.el.offset();\\n                return _this.fire('hovermove', touch.pageX - offset.left, touch.pageY - offset.top);\\n            });\\n            this.el.bind('click', function (evt) {\\n                var offset;\\n                offset = _this.el.offset();\\n                return _this.fire('gridclick', evt.pageX - offset.left, evt.pageY - offset.top);\\n            });\\n            if (this.options.rangeSelect) {\\n                this.selectionRect = this.raphael.rect(0, 0, 0, this.el.innerHeight()).attr({\\n                    fill: this.options.rangeSelectColor,\\n                    stroke: false\\n                }).toBack().hide();\\n                this.el.bind('mousedown', function (evt) {\\n                    var offset;\\n                    offset = _this.el.offset();\\n                    return _this.startRange(evt.pageX - offset.left);\\n                });\\n                this.el.bind('mouseup', function (evt) {\\n                    var offset;\\n                    offset = _this.el.offset();\\n                    _this.endRange(evt.pageX - offset.left);\\n                    return _this.fire('hovermove', evt.pageX - offset.left, evt.pageY - offset.top);\\n                });\\n            }\\n            if (this.options.resize) {\\n                $(window).bind('resize', function (evt) {\\n                    if (_this.timeoutId != null) {\\n                        window.clearTimeout(_this.timeoutId);\\n                    }\\n                    return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\\n                });\\n            }\\n            this.el.css('-webkit-tap-highlight-color', 'rgba(0,0,0,0)');\\n            if (this.postInit) {\\n                this.postInit();\\n            }\\n        }\\n\\n        Grid.prototype.gridDefaults = {\\n            dateFormat: null,\\n            axes: true,\\n            grid: true,\\n            gridLineColor: '#aaa',\\n            gridStrokeWidth: 0.5,\\n            gridTextColor: '#888',\\n            gridTextSize: 12,\\n            gridTextFamily: 'sans-serif',\\n            gridTextWeight: 'normal',\\n            hideHover: false,\\n            yLabelFormat: null,\\n            xLabelAngle: 0,\\n            numLines: 5,\\n            padding: 25,\\n            parseTime: true,\\n            postUnits: '',\\n            preUnits: '',\\n            ymax: 'auto',\\n            ymin: 'auto 0',\\n            goals: [],\\n            goalStrokeWidth: 1.0,\\n            goalLineColors: ['#666633', '#999966', '#cc6666', '#663333'],\\n            events: [],\\n            eventStrokeWidth: 1.0,\\n            eventLineColors: ['#005a04', '#ccffbb', '#3a5f0b', '#005502'],\\n            rangeSelect: null,\\n            rangeSelectColor: '#eef',\\n            resize: false\\n        };\\n\\n        Grid.prototype.setData = function (data, redraw) {\\n            var e, idx, index, maxGoal, minGoal, ret, row, step, total, y, ykey, ymax, ymin, yval, _ref;\\n            if (redraw == null) {\\n                redraw = true;\\n            }\\n            this.options.data = data;\\n            if ((data == null) || data.length === 0) {\\n                this.data = [];\\n                this.raphael.clear();\\n                if (this.hover != null) {\\n                    this.hover.hide();\\n                }\\n                return;\\n            }\\n            ymax = this.cumulative ? 0 : null;\\n            ymin = this.cumulative ? 0 : null;\\n            if (this.options.goals.length > 0) {\\n                minGoal = Math.min.apply(Math, this.options.goals);\\n                maxGoal = Math.max.apply(Math, this.options.goals);\\n                ymin = ymin != null ? Math.min(ymin, minGoal) : minGoal;\\n                ymax = ymax != null ? Math.max(ymax, maxGoal) : maxGoal;\\n            }\\n            this.data = (function () {\\n                var _i, _len, _results;\\n                _results = [];\\n                for (index = _i = 0, _len = data.length; _i < _len; index = ++_i) {\\n                    row = data[index];\\n                    ret = {\\n                        src: row\\n                    };\\n                    ret.label = row[this.options.xkey];\\n                    if (this.options.parseTime) {\\n                        ret.x = Morris.parseDate(ret.label);\\n                        if (this.options.dateFormat) {\\n                            ret.label = this.options.dateFormat(ret.x);\\n                        } else if (typeof ret.label === 'number') {\\n                            ret.label = new Date(ret.label).toString();\\n                        }\\n                    } else {\\n                        ret.x = index;\\n                        if (this.options.xLabelFormat) {\\n                            ret.label = this.options.xLabelFormat(ret);\\n                        }\\n                    }\\n                    total = 0;\\n                    ret.y = (function () {\\n                        var _j, _len1, _ref, _results1;\\n                        _ref = this.options.ykeys;\\n                        _results1 = [];\\n                        for (idx = _j = 0, _len1 = _ref.length; _j < _len1; idx = ++_j) {\\n                            ykey = _ref[idx];\\n                            yval = row[ykey];\\n                            if (typeof yval === 'string') {\\n                                yval = parseFloat(yval);\\n                            }\\n                            if ((yval != null) && typeof yval !== 'number') {\\n                                yval = null;\\n                            }\\n                            if (yval != null) {\\n                                if (this.cumulative) {\\n                                    total += yval;\\n                                } else {\\n                                    if (ymax != null) {\\n                                        ymax = Math.max(yval, ymax);\\n                                        ymin = Math.min(yval, ymin);\\n                                    } else {\\n                                        ymax = ymin = yval;\\n                                    }\\n                                }\\n                            }\\n                            if (this.cumulative && (total != null)) {\\n                                ymax = Math.max(total, ymax);\\n                                ymin = Math.min(total, ymin);\\n                            }\\n                            _results1.push(yval);\\n                        }\\n                        return _results1;\\n                    }).call(this);\\n                    _results.push(ret);\\n                }\\n                return _results;\\n            }).call(this);\\n            if (this.options.parseTime) {\\n                this.data = this.data.sort(function (a, b) {\\n                    return (a.x > b.x) - (b.x > a.x);\\n                });\\n            }\\n            this.xmin = this.data[0].x;\\n            this.xmax = this.data[this.data.length - 1].x;\\n            this.events = [];\\n            if (this.options.events.length > 0) {\\n                if (this.options.parseTime) {\\n                    this.events = (function () {\\n                        var _i, _len, _ref, _results;\\n                        _ref = this.options.events;\\n                        _results = [];\\n                        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                            e = _ref[_i];\\n                            _results.push(Morris.parseDate(e));\\n                        }\\n                        return _results;\\n                    }).call(this);\\n                } else {\\n                    this.events = this.options.events;\\n                }\\n                this.xmax = Math.max(this.xmax, Math.max.apply(Math, this.events));\\n                this.xmin = Math.min(this.xmin, Math.min.apply(Math, this.events));\\n            }\\n            if (this.xmin === this.xmax) {\\n                this.xmin -= 1;\\n                this.xmax += 1;\\n            }\\n            this.ymin = this.yboundary('min', ymin);\\n            this.ymax = this.yboundary('max', ymax);\\n            if (this.ymin === this.ymax) {\\n                if (ymin) {\\n                    this.ymin -= 1;\\n                }\\n                this.ymax += 1;\\n            }\\n            if (((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'y') || this.options.grid === true) {\\n                if (this.options.ymax === this.gridDefaults.ymax && this.options.ymin === this.gridDefaults.ymin) {\\n                    this.grid = this.autoGridLines(this.ymin, this.ymax, this.options.numLines);\\n                    this.ymin = Math.min(this.ymin, this.grid[0]);\\n                    this.ymax = Math.max(this.ymax, this.grid[this.grid.length - 1]);\\n                } else {\\n                    step = (this.ymax - this.ymin) / (this.options.numLines - 1);\\n                    this.grid = (function () {\\n                        var _i, _ref1, _ref2, _results;\\n                        _results = [];\\n                        for (y = _i = _ref1 = this.ymin, _ref2 = this.ymax; step > 0 ? _i <= _ref2 : _i >= _ref2; y = _i += step) {\\n                            _results.push(y);\\n                        }\\n                        return _results;\\n                    }).call(this);\\n                }\\n            }\\n            this.dirty = true;\\n            if (redraw) {\\n                return this.redraw();\\n            }\\n        };\\n\\n        Grid.prototype.yboundary = function (boundaryType, currentValue) {\\n            var boundaryOption, suggestedValue;\\n            boundaryOption = this.options[\\\"y\\\" + boundaryType];\\n            if (typeof boundaryOption === 'string') {\\n                if (boundaryOption.slice(0, 4) === 'auto') {\\n                    if (boundaryOption.length > 5) {\\n                        suggestedValue = parseInt(boundaryOption.slice(5), 10);\\n                        if (currentValue == null) {\\n                            return suggestedValue;\\n                        }\\n                        return Math[boundaryType](currentValue, suggestedValue);\\n                    } else {\\n                        if (currentValue != null) {\\n                            return currentValue;\\n                        } else {\\n                            return 0;\\n                        }\\n                    }\\n                } else {\\n                    return parseInt(boundaryOption, 10);\\n                }\\n            } else {\\n                return boundaryOption;\\n            }\\n        };\\n\\n        Grid.prototype.autoGridLines = function (ymin, ymax, nlines) {\\n            var gmax, gmin, grid, smag, span, step, unit, y, ymag;\\n            span = ymax - ymin;\\n            ymag = Math.floor(Math.log(span) / Math.log(10));\\n            unit = Math.pow(10, ymag);\\n            gmin = Math.floor(ymin / unit) * unit;\\n            gmax = Math.ceil(ymax / unit) * unit;\\n            step = (gmax - gmin) / (nlines - 1);\\n            if (unit === 1 && step > 1 && Math.ceil(step) !== step) {\\n                step = Math.ceil(step);\\n                gmax = gmin + step * (nlines - 1);\\n            }\\n            if (gmin < 0 && gmax > 0) {\\n                gmin = Math.floor(ymin / step) * step;\\n                gmax = Math.ceil(ymax / step) * step;\\n            }\\n            if (step < 1) {\\n                smag = Math.floor(Math.log(step) / Math.log(10));\\n                grid = (function () {\\n                    var _i, _results;\\n                    _results = [];\\n                    for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\\n                        _results.push(parseFloat(y.toFixed(1 - smag)));\\n                    }\\n                    return _results;\\n                })();\\n            } else {\\n                grid = (function () {\\n                    var _i, _results;\\n                    _results = [];\\n                    for (y = _i = gmin; step > 0 ? _i <= gmax : _i >= gmax; y = _i += step) {\\n                        _results.push(y);\\n                    }\\n                    return _results;\\n                })();\\n            }\\n            return grid;\\n        };\\n\\n        Grid.prototype._calc = function () {\\n            var bottomOffsets, gridLine, h, i, w, yLabelWidths, _ref, _ref1;\\n            w = this.el.width();\\n            h = this.el.height();\\n            if (this.elementWidth !== w || this.elementHeight !== h || this.dirty) {\\n                this.elementWidth = w;\\n                this.elementHeight = h;\\n                this.dirty = false;\\n                this.left = this.options.padding;\\n                this.right = this.elementWidth - this.options.padding;\\n                this.top = this.options.padding;\\n                this.bottom = this.elementHeight - this.options.padding;\\n                if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'y') {\\n                    yLabelWidths = (function () {\\n                        var _i, _len, _ref1, _results;\\n                        _ref1 = this.grid;\\n                        _results = [];\\n                        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\\n                            gridLine = _ref1[_i];\\n                            _results.push(this.measureText(this.yAxisFormat(gridLine)).width);\\n                        }\\n                        return _results;\\n                    }).call(this);\\n                    this.left += Math.max.apply(Math, yLabelWidths);\\n                }\\n                if ((_ref1 = this.options.axes) === true || _ref1 === 'both' || _ref1 === 'x') {\\n                    bottomOffsets = (function () {\\n                        var _i, _ref2, _results;\\n                        _results = [];\\n                        for (i = _i = 0, _ref2 = this.data.length; 0 <= _ref2 ? _i < _ref2 : _i > _ref2; i = 0 <= _ref2 ? ++_i : --_i) {\\n                            _results.push(this.measureText(this.data[i].text, -this.options.xLabelAngle).height);\\n                        }\\n                        return _results;\\n                    }).call(this);\\n                    this.bottom -= Math.max.apply(Math, bottomOffsets);\\n                }\\n                this.width = Math.max(1, this.right - this.left);\\n                this.height = Math.max(1, this.bottom - this.top);\\n                this.dx = this.width / (this.xmax - this.xmin);\\n                this.dy = this.height / (this.ymax - this.ymin);\\n                if (this.calc) {\\n                    return this.calc();\\n                }\\n            }\\n        };\\n\\n        Grid.prototype.transY = function (y) {\\n            return this.bottom - (y - this.ymin) * this.dy;\\n        };\\n\\n        Grid.prototype.transX = function (x) {\\n            if (this.data.length === 1) {\\n                return (this.left + this.right) / 2;\\n            } else {\\n                return this.left + (x - this.xmin) * this.dx;\\n            }\\n        };\\n\\n        Grid.prototype.redraw = function () {\\n            this.raphael.clear();\\n            this._calc();\\n            this.drawGrid();\\n            this.drawGoals();\\n            this.drawEvents();\\n            if (this.draw) {\\n                return this.draw();\\n            }\\n        };\\n\\n        Grid.prototype.measureText = function (text, angle) {\\n            var ret, tt;\\n            if (angle == null) {\\n                angle = 0;\\n            }\\n            tt = this.raphael.text(100, 100, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).rotate(angle);\\n            ret = tt.getBBox();\\n            tt.remove();\\n            return ret;\\n        };\\n\\n        Grid.prototype.yAxisFormat = function (label) {\\n            return this.yLabelFormat(label);\\n        };\\n\\n        Grid.prototype.yLabelFormat = function (label) {\\n            if (typeof this.options.yLabelFormat === 'function') {\\n                return this.options.yLabelFormat(label);\\n            } else {\\n                return \\\"\\\" + this.options.preUnits + (Morris.commas(label)) + this.options.postUnits;\\n            }\\n        };\\n\\n        Grid.prototype.drawGrid = function () {\\n            var lineY, y, _i, _len, _ref, _ref1, _ref2, _results;\\n            if (this.options.grid === false && ((_ref = this.options.axes) !== true && _ref !== 'both' && _ref !== 'y')) {\\n                return;\\n            }\\n            _ref1 = this.grid;\\n            _results = [];\\n            for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\\n                lineY = _ref1[_i];\\n                y = this.transY(lineY);\\n                if ((_ref2 = this.options.axes) === true || _ref2 === 'both' || _ref2 === 'y') {\\n                    this.drawYAxisLabel(this.left - this.options.padding / 2, y, this.yAxisFormat(lineY));\\n                }\\n                if (this.options.grid) {\\n                    _results.push(this.drawGridLine(\\\"M\\\" + this.left + \\\",\\\" + y + \\\"H\\\" + (this.left + this.width)));\\n                } else {\\n                    _results.push(void 0);\\n                }\\n            }\\n            return _results;\\n        };\\n\\n        Grid.prototype.drawGoals = function () {\\n            var color, goal, i, _i, _len, _ref, _results;\\n            _ref = this.options.goals;\\n            _results = [];\\n            for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\\n                goal = _ref[i];\\n                color = this.options.goalLineColors[i % this.options.goalLineColors.length];\\n                _results.push(this.drawGoal(goal, color));\\n            }\\n            return _results;\\n        };\\n\\n        Grid.prototype.drawEvents = function () {\\n            var color, event, i, _i, _len, _ref, _results;\\n            _ref = this.events;\\n            _results = [];\\n            for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {\\n                event = _ref[i];\\n                color = this.options.eventLineColors[i % this.options.eventLineColors.length];\\n                _results.push(this.drawEvent(event, color));\\n            }\\n            return _results;\\n        };\\n\\n        Grid.prototype.drawGoal = function (goal, color) {\\n            return this.raphael.path(\\\"M\\\" + this.left + \\\",\\\" + (this.transY(goal)) + \\\"H\\\" + this.right).attr('stroke', color).attr('stroke-width', this.options.goalStrokeWidth);\\n        };\\n\\n        Grid.prototype.drawEvent = function (event, color) {\\n            return this.raphael.path(\\\"M\\\" + (this.transX(event)) + \\\",\\\" + this.bottom + \\\"V\\\" + this.top).attr('stroke', color).attr('stroke-width', this.options.eventStrokeWidth);\\n        };\\n\\n        Grid.prototype.drawYAxisLabel = function (xPos, yPos, text) {\\n            return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor).attr('text-anchor', 'end');\\n        };\\n\\n        Grid.prototype.drawGridLine = function (path) {\\n            return this.raphael.path(path).attr('stroke', this.options.gridLineColor).attr('stroke-width', this.options.gridStrokeWidth);\\n        };\\n\\n        Grid.prototype.startRange = function (x) {\\n            this.hover.hide();\\n            this.selectFrom = x;\\n            return this.selectionRect.attr({\\n                x: x,\\n                width: 0\\n            }).show();\\n        };\\n\\n        Grid.prototype.endRange = function (x) {\\n            var end, start;\\n            if (this.selectFrom) {\\n                start = Math.min(this.selectFrom, x);\\n                end = Math.max(this.selectFrom, x);\\n                this.options.rangeSelect.call(this.el, {\\n                    start: this.data[this.hitTest(start)].x,\\n                    end: this.data[this.hitTest(end)].x\\n                });\\n                return this.selectFrom = null;\\n            }\\n        };\\n\\n        Grid.prototype.resizeHandler = function () {\\n            this.timeoutId = null;\\n            this.raphael.setSize(this.el.width(), this.el.height());\\n            return this.redraw();\\n        };\\n\\n        return Grid;\\n\\n    })(Morris.EventEmitter);\\n\\n    Morris.parseDate = function (date) {\\n        var isecs, m, msecs, n, o, offsetmins, p, q, r, ret, secs;\\n        if (typeof date === 'number') {\\n            return date;\\n        }\\n        m = date.match(/^(\\\\d+) Q(\\\\d)$/);\\n        n = date.match(/^(\\\\d+)-(\\\\d+)$/);\\n        o = date.match(/^(\\\\d+)-(\\\\d+)-(\\\\d+)$/);\\n        p = date.match(/^(\\\\d+) W(\\\\d+)$/);\\n        q = date.match(/^(\\\\d+)-(\\\\d+)-(\\\\d+)[ T](\\\\d+):(\\\\d+)(Z|([+-])(\\\\d\\\\d):?(\\\\d\\\\d))?$/);\\n        r = date.match(/^(\\\\d+)-(\\\\d+)-(\\\\d+)[ T](\\\\d+):(\\\\d+):(\\\\d+(\\\\.\\\\d+)?)(Z|([+-])(\\\\d\\\\d):?(\\\\d\\\\d))?$/);\\n        if (m) {\\n            return new Date(parseInt(m[1], 10), parseInt(m[2], 10) * 3 - 1, 1).getTime();\\n        } else if (n) {\\n            return new Date(parseInt(n[1], 10), parseInt(n[2], 10) - 1, 1).getTime();\\n        } else if (o) {\\n            return new Date(parseInt(o[1], 10), parseInt(o[2], 10) - 1, parseInt(o[3], 10)).getTime();\\n        } else if (p) {\\n            ret = new Date(parseInt(p[1], 10), 0, 1);\\n            if (ret.getDay() !== 4) {\\n                ret.setMonth(0, 1 + ((4 - ret.getDay()) + 7) % 7);\\n            }\\n            return ret.getTime() + parseInt(p[2], 10) * 604800000;\\n        } else if (q) {\\n            if (!q[6]) {\\n                return new Date(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10)).getTime();\\n            } else {\\n                offsetmins = 0;\\n                if (q[6] !== 'Z') {\\n                    offsetmins = parseInt(q[8], 10) * 60 + parseInt(q[9], 10);\\n                    if (q[7] === '+') {\\n                        offsetmins = 0 - offsetmins;\\n                    }\\n                }\\n                return Date.UTC(parseInt(q[1], 10), parseInt(q[2], 10) - 1, parseInt(q[3], 10), parseInt(q[4], 10), parseInt(q[5], 10) + offsetmins);\\n            }\\n        } else if (r) {\\n            secs = parseFloat(r[6]);\\n            isecs = Math.floor(secs);\\n            msecs = Math.round((secs - isecs) * 1000);\\n            if (!r[8]) {\\n                return new Date(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10), isecs, msecs).getTime();\\n            } else {\\n                offsetmins = 0;\\n                if (r[8] !== 'Z') {\\n                    offsetmins = parseInt(r[10], 10) * 60 + parseInt(r[11], 10);\\n                    if (r[9] === '+') {\\n                        offsetmins = 0 - offsetmins;\\n                    }\\n                }\\n                return Date.UTC(parseInt(r[1], 10), parseInt(r[2], 10) - 1, parseInt(r[3], 10), parseInt(r[4], 10), parseInt(r[5], 10) + offsetmins, isecs, msecs);\\n            }\\n        } else {\\n            return new Date(parseInt(date, 10), 0, 1).getTime();\\n        }\\n    };\\n\\n    Morris.Hover = (function () {\\n        Hover.defaults = {\\n            \\\"class\\\": 'morris-hover morris-default-style'\\n        };\\n\\n        function Hover(options) {\\n            if (options == null) {\\n                options = {};\\n            }\\n            this.options = $.extend({}, Morris.Hover.defaults, options);\\n            this.el = $(\\\"<div class='\\\" + this.options[\\\"class\\\"] + \\\"'></div>\\\");\\n            this.el.hide();\\n            this.options.parent.append(this.el);\\n        }\\n\\n        Hover.prototype.update = function (html, x, y) {\\n            if (!html) {\\n                return this.hide();\\n            } else {\\n                this.html(html);\\n                this.show();\\n                return this.moveTo(x, y);\\n            }\\n        };\\n\\n        Hover.prototype.html = function (content) {\\n            return this.el.html(content);\\n        };\\n\\n        Hover.prototype.moveTo = function (x, y) {\\n            var hoverHeight, hoverWidth, left, parentHeight, parentWidth, top;\\n            parentWidth = this.options.parent.innerWidth();\\n            parentHeight = this.options.parent.innerHeight();\\n            hoverWidth = this.el.outerWidth();\\n            hoverHeight = this.el.outerHeight();\\n            left = Math.min(Math.max(0, x - hoverWidth / 2), parentWidth - hoverWidth);\\n            if (y != null) {\\n                top = y - hoverHeight - 10;\\n                if (top < 0) {\\n                    top = y + 10;\\n                    if (top + hoverHeight > parentHeight) {\\n                        top = parentHeight / 2 - hoverHeight / 2;\\n                    }\\n                }\\n            } else {\\n                top = parentHeight / 2 - hoverHeight / 2;\\n            }\\n            return this.el.css({\\n                left: left + \\\"px\\\",\\n                top: parseInt(top) + \\\"px\\\"\\n            });\\n        };\\n\\n        Hover.prototype.show = function () {\\n            return this.el.show();\\n        };\\n\\n        Hover.prototype.hide = function () {\\n            return this.el.hide();\\n        };\\n\\n        return Hover;\\n\\n    })();\\n\\n    Morris.Line = (function (_super) {\\n        __extends(Line, _super);\\n\\n        function Line(options) {\\n            this.hilight = __bind(this.hilight, this);\\n            this.onHoverOut = __bind(this.onHoverOut, this);\\n            this.onHoverMove = __bind(this.onHoverMove, this);\\n            this.onGridClick = __bind(this.onGridClick, this);\\n            if (!(this instanceof Morris.Line)) {\\n                return new Morris.Line(options);\\n            }\\n            Line.__super__.constructor.call(this, options);\\n        }\\n\\n        Line.prototype.init = function () {\\n            if (this.options.hideHover !== 'always') {\\n                this.hover = new Morris.Hover({\\n                    parent: this.el\\n                });\\n                this.on('hovermove', this.onHoverMove);\\n                this.on('hoverout', this.onHoverOut);\\n                return this.on('gridclick', this.onGridClick);\\n            }\\n        };\\n\\n        Line.prototype.defaults = {\\n            lineWidth: 3,\\n            pointSize: 4,\\n            lineColors: ['#0b62a4', '#7A92A3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\\n            pointStrokeWidths: [1],\\n            pointStrokeColors: ['#ffffff'],\\n            pointFillColors: [],\\n            smooth: true,\\n            xLabels: 'auto',\\n            xLabelFormat: null,\\n            xLabelMargin: 24,\\n            hideHover: false\\n        };\\n\\n        Line.prototype.calc = function () {\\n            this.calcPoints();\\n            return this.generatePaths();\\n        };\\n\\n        Line.prototype.calcPoints = function () {\\n            var row, y, _i, _len, _ref, _results;\\n            _ref = this.data;\\n            _results = [];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                row = _ref[_i];\\n                row._x = this.transX(row.x);\\n                row._y = (function () {\\n                    var _j, _len1, _ref1, _results1;\\n                    _ref1 = row.y;\\n                    _results1 = [];\\n                    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\\n                        y = _ref1[_j];\\n                        if (y != null) {\\n                            _results1.push(this.transY(y));\\n                        } else {\\n                            _results1.push(y);\\n                        }\\n                    }\\n                    return _results1;\\n                }).call(this);\\n                _results.push(row._ymax = Math.min.apply(Math, [this.bottom].concat((function () {\\n                    var _j, _len1, _ref1, _results1;\\n                    _ref1 = row._y;\\n                    _results1 = [];\\n                    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\\n                        y = _ref1[_j];\\n                        if (y != null) {\\n                            _results1.push(y);\\n                        }\\n                    }\\n                    return _results1;\\n                })())));\\n            }\\n            return _results;\\n        };\\n\\n        Line.prototype.hitTest = function (x) {\\n            var index, r, _i, _len, _ref;\\n            if (this.data.length === 0) {\\n                return null;\\n            }\\n            _ref = this.data.slice(1);\\n            for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {\\n                r = _ref[index];\\n                if (x < (r._x + this.data[index]._x) / 2) {\\n                    break;\\n                }\\n            }\\n            return index;\\n        };\\n\\n        Line.prototype.onGridClick = function (x, y) {\\n            var index;\\n            index = this.hitTest(x);\\n            return this.fire('click', index, this.data[index].src, x, y);\\n        };\\n\\n        Line.prototype.onHoverMove = function (x, y) {\\n            var index;\\n            index = this.hitTest(x);\\n            return this.displayHoverForRow(index);\\n        };\\n\\n        Line.prototype.onHoverOut = function () {\\n            if (this.options.hideHover !== false) {\\n                return this.displayHoverForRow(null);\\n            }\\n        };\\n\\n        Line.prototype.displayHoverForRow = function (index) {\\n            var _ref;\\n            if (index != null) {\\n                (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\\n                return this.hilight(index);\\n            } else {\\n                this.hover.hide();\\n                return this.hilight();\\n            }\\n        };\\n\\n        Line.prototype.hoverContentForRow = function (index) {\\n            var content, j, row, y, _i, _len, _ref;\\n            row = this.data[index];\\n            content = \\\"<div class='morris-hover-row-label'>\\\" + row.label + \\\"</div>\\\";\\n            _ref = row.y;\\n            for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\\n                y = _ref[j];\\n                content += \\\"<div class='morris-hover-point' style='color: \\\" + (this.colorFor(row, j, 'label')) + \\\"'>\\\\n  \\\" + this.options.labels[j] + \\\":\\\\n  \\\" + (this.yLabelFormat(y)) + \\\"\\\\n</div>\\\";\\n            }\\n            if (typeof this.options.hoverCallback === 'function') {\\n                content = this.options.hoverCallback(index, this.options, content, row.src);\\n            }\\n            return [content, row._x, row._ymax];\\n        };\\n\\n        Line.prototype.generatePaths = function () {\\n            var coords, i, r, smooth;\\n            return this.paths = (function () {\\n                var _i, _ref, _ref1, _results;\\n                _results = [];\\n                for (i = _i = 0, _ref = this.options.ykeys.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\\n                    smooth = typeof this.options.smooth === \\\"boolean\\\" ? this.options.smooth : (_ref1 = this.options.ykeys[i], __indexOf.call(this.options.smooth, _ref1) >= 0);\\n                    coords = (function () {\\n                        var _j, _len, _ref2, _results1;\\n                        _ref2 = this.data;\\n                        _results1 = [];\\n                        for (_j = 0, _len = _ref2.length; _j < _len; _j++) {\\n                            r = _ref2[_j];\\n                            if (r._y[i] !== void 0) {\\n                                _results1.push({\\n                                    x: r._x,\\n                                    y: r._y[i]\\n                                });\\n                            }\\n                        }\\n                        return _results1;\\n                    }).call(this);\\n                    if (coords.length > 1) {\\n                        _results.push(Morris.Line.createPath(coords, smooth, this.bottom));\\n                    } else {\\n                        _results.push(null);\\n                    }\\n                }\\n                return _results;\\n            }).call(this);\\n        };\\n\\n        Line.prototype.draw = function () {\\n            var _ref;\\n            if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\\n                this.drawXAxis();\\n            }\\n            this.drawSeries();\\n            if (this.options.hideHover === false) {\\n                return this.displayHoverForRow(this.data.length - 1);\\n            }\\n        };\\n\\n        Line.prototype.drawXAxis = function () {\\n            var drawLabel, l, labels, prevAngleMargin, prevLabelMargin, row, ypos, _i, _len, _results,\\n                _this = this;\\n            ypos = this.bottom + this.options.padding / 2;\\n            prevLabelMargin = null;\\n            prevAngleMargin = null;\\n            drawLabel = function (labelText, xpos) {\\n                var label, labelBox, margin, offset, textBox;\\n                label = _this.drawXAxisLabel(_this.transX(xpos), ypos, labelText);\\n                textBox = label.getBBox();\\n                label.transform(\\\"r\\\" + (-_this.options.xLabelAngle));\\n                labelBox = label.getBBox();\\n                label.transform(\\\"t0,\\\" + (labelBox.height / 2) + \\\"...\\\");\\n                if (_this.options.xLabelAngle !== 0) {\\n                    offset = -0.5 * textBox.width * Math.cos(_this.options.xLabelAngle * Math.PI / 180.0);\\n                    label.transform(\\\"t\\\" + offset + \\\",0...\\\");\\n                }\\n                labelBox = label.getBBox();\\n                if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < _this.el.width()) {\\n                    if (_this.options.xLabelAngle !== 0) {\\n                        margin = 1.25 * _this.options.gridTextSize / Math.sin(_this.options.xLabelAngle * Math.PI / 180.0);\\n                        prevAngleMargin = labelBox.x - margin;\\n                    }\\n                    return prevLabelMargin = labelBox.x - _this.options.xLabelMargin;\\n                } else {\\n                    return label.remove();\\n                }\\n            };\\n            if (this.options.parseTime) {\\n                if (this.data.length === 1 && this.options.xLabels === 'auto') {\\n                    labels = [[this.data[0].label, this.data[0].x]];\\n                } else {\\n                    labels = Morris.labelSeries(this.xmin, this.xmax, this.width, this.options.xLabels, this.options.xLabelFormat);\\n                }\\n            } else {\\n                labels = (function () {\\n                    var _i, _len, _ref, _results;\\n                    _ref = this.data;\\n                    _results = [];\\n                    for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                        row = _ref[_i];\\n                        _results.push([row.label, row.x]);\\n                    }\\n                    return _results;\\n                }).call(this);\\n            }\\n            labels.reverse();\\n            _results = [];\\n            for (_i = 0, _len = labels.length; _i < _len; _i++) {\\n                l = labels[_i];\\n                _results.push(drawLabel(l[0], l[1]));\\n            }\\n            return _results;\\n        };\\n\\n        Line.prototype.drawSeries = function () {\\n            var i, _i, _j, _ref, _ref1, _results;\\n            this.seriesPoints = [];\\n            for (i = _i = _ref = this.options.ykeys.length - 1; _ref <= 0 ? _i <= 0 : _i >= 0; i = _ref <= 0 ? ++_i : --_i) {\\n                this._drawLineFor(i);\\n            }\\n            _results = [];\\n            for (i = _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; i = _ref1 <= 0 ? ++_j : --_j) {\\n                _results.push(this._drawPointFor(i));\\n            }\\n            return _results;\\n        };\\n\\n        Line.prototype._drawPointFor = function (index) {\\n            var circle, row, _i, _len, _ref, _results;\\n            this.seriesPoints[index] = [];\\n            _ref = this.data;\\n            _results = [];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                row = _ref[_i];\\n                circle = null;\\n                if (row._y[index] != null) {\\n                    circle = this.drawLinePoint(row._x, row._y[index], this.colorFor(row, index, 'point'), index);\\n                }\\n                _results.push(this.seriesPoints[index].push(circle));\\n            }\\n            return _results;\\n        };\\n\\n        Line.prototype._drawLineFor = function (index) {\\n            var path;\\n            path = this.paths[index];\\n            if (path !== null) {\\n                return this.drawLinePath(path, this.colorFor(null, index, 'line'), index);\\n            }\\n        };\\n\\n        Line.createPath = function (coords, smooth, bottom) {\\n            var coord, g, grads, i, ix, lg, path, prevCoord, x1, x2, y1, y2, _i, _len;\\n            path = \\\"\\\";\\n            if (smooth) {\\n                grads = Morris.Line.gradients(coords);\\n            }\\n            prevCoord = {\\n                y: null\\n            };\\n            for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\\n                coord = coords[i];\\n                if (coord.y != null) {\\n                    if (prevCoord.y != null) {\\n                        if (smooth) {\\n                            g = grads[i];\\n                            lg = grads[i - 1];\\n                            ix = (coord.x - prevCoord.x) / 4;\\n                            x1 = prevCoord.x + ix;\\n                            y1 = Math.min(bottom, prevCoord.y + ix * lg);\\n                            x2 = coord.x - ix;\\n                            y2 = Math.min(bottom, coord.y - ix * g);\\n                            path += \\\"C\\\" + x1 + \\\",\\\" + y1 + \\\",\\\" + x2 + \\\",\\\" + y2 + \\\",\\\" + coord.x + \\\",\\\" + coord.y;\\n                        } else {\\n                            path += \\\"L\\\" + coord.x + \\\",\\\" + coord.y;\\n                        }\\n                    } else {\\n                        if (!smooth || (grads[i] != null)) {\\n                            path += \\\"M\\\" + coord.x + \\\",\\\" + coord.y;\\n                        }\\n                    }\\n                }\\n                prevCoord = coord;\\n            }\\n            return path;\\n        };\\n\\n        Line.gradients = function (coords) {\\n            var coord, grad, i, nextCoord, prevCoord, _i, _len, _results;\\n            grad = function (a, b) {\\n                return (a.y - b.y) / (a.x - b.x);\\n            };\\n            _results = [];\\n            for (i = _i = 0, _len = coords.length; _i < _len; i = ++_i) {\\n                coord = coords[i];\\n                if (coord.y != null) {\\n                    nextCoord = coords[i + 1] || {\\n                            y: null\\n                        };\\n                    prevCoord = coords[i - 1] || {\\n                            y: null\\n                        };\\n                    if ((prevCoord.y != null) && (nextCoord.y != null)) {\\n                        _results.push(grad(prevCoord, nextCoord));\\n                    } else if (prevCoord.y != null) {\\n                        _results.push(grad(prevCoord, coord));\\n                    } else if (nextCoord.y != null) {\\n                        _results.push(grad(coord, nextCoord));\\n                    } else {\\n                        _results.push(null);\\n                    }\\n                } else {\\n                    _results.push(null);\\n                }\\n            }\\n            return _results;\\n        };\\n\\n        Line.prototype.hilight = function (index) {\\n            var i, _i, _j, _ref, _ref1;\\n            if (this.prevHilight !== null && this.prevHilight !== index) {\\n                for (i = _i = 0, _ref = this.seriesPoints.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\\n                    if (this.seriesPoints[i][this.prevHilight]) {\\n                        this.seriesPoints[i][this.prevHilight].animate(this.pointShrinkSeries(i));\\n                    }\\n                }\\n            }\\n            if (index !== null && this.prevHilight !== index) {\\n                for (i = _j = 0, _ref1 = this.seriesPoints.length - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 0 <= _ref1 ? ++_j : --_j) {\\n                    if (this.seriesPoints[i][index]) {\\n                        this.seriesPoints[i][index].animate(this.pointGrowSeries(i));\\n                    }\\n                }\\n            }\\n            return this.prevHilight = index;\\n        };\\n\\n        Line.prototype.colorFor = function (row, sidx, type) {\\n            if (typeof this.options.lineColors === 'function') {\\n                return this.options.lineColors.call(this, row, sidx, type);\\n            } else if (type === 'point') {\\n                return this.options.pointFillColors[sidx % this.options.pointFillColors.length] || this.options.lineColors[sidx % this.options.lineColors.length];\\n            } else {\\n                return this.options.lineColors[sidx % this.options.lineColors.length];\\n            }\\n        };\\n\\n        Line.prototype.drawXAxisLabel = function (xPos, yPos, text) {\\n            return this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\\n        };\\n\\n        Line.prototype.drawLinePath = function (path, lineColor, lineIndex) {\\n            return this.raphael.path(path).attr('stroke', lineColor).attr('stroke-width', this.lineWidthForSeries(lineIndex));\\n        };\\n\\n        Line.prototype.drawLinePoint = function (xPos, yPos, pointColor, lineIndex) {\\n            return this.raphael.circle(xPos, yPos, this.pointSizeForSeries(lineIndex)).attr('fill', pointColor).attr('stroke-width', this.pointStrokeWidthForSeries(lineIndex)).attr('stroke', this.pointStrokeColorForSeries(lineIndex));\\n        };\\n\\n        Line.prototype.pointStrokeWidthForSeries = function (index) {\\n            return this.options.pointStrokeWidths[index % this.options.pointStrokeWidths.length];\\n        };\\n\\n        Line.prototype.pointStrokeColorForSeries = function (index) {\\n            return this.options.pointStrokeColors[index % this.options.pointStrokeColors.length];\\n        };\\n\\n        Line.prototype.lineWidthForSeries = function (index) {\\n            if (this.options.lineWidth instanceof Array) {\\n                return this.options.lineWidth[index % this.options.lineWidth.length];\\n            } else {\\n                return this.options.lineWidth;\\n            }\\n        };\\n\\n        Line.prototype.pointSizeForSeries = function (index) {\\n            if (this.options.pointSize instanceof Array) {\\n                return this.options.pointSize[index % this.options.pointSize.length];\\n            } else {\\n                return this.options.pointSize;\\n            }\\n        };\\n\\n        Line.prototype.pointGrowSeries = function (index) {\\n            return Raphael.animation({\\n                r: this.pointSizeForSeries(index) + 3\\n            }, 25, 'linear');\\n        };\\n\\n        Line.prototype.pointShrinkSeries = function (index) {\\n            return Raphael.animation({\\n                r: this.pointSizeForSeries(index)\\n            }, 25, 'linear');\\n        };\\n\\n        return Line;\\n\\n    })(Morris.Grid);\\n\\n    Morris.labelSeries = function (dmin, dmax, pxwidth, specName, xLabelFormat) {\\n        var d, d0, ddensity, name, ret, s, spec, t, _i, _len, _ref;\\n        ddensity = 200 * (dmax - dmin) / pxwidth;\\n        d0 = new Date(dmin);\\n        spec = Morris.LABEL_SPECS[specName];\\n        if (spec === void 0) {\\n            _ref = Morris.AUTO_LABEL_ORDER;\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                name = _ref[_i];\\n                s = Morris.LABEL_SPECS[name];\\n                if (ddensity >= s.span) {\\n                    spec = s;\\n                    break;\\n                }\\n            }\\n        }\\n        if (spec === void 0) {\\n            spec = Morris.LABEL_SPECS[\\\"second\\\"];\\n        }\\n        if (xLabelFormat) {\\n            spec = $.extend({}, spec, {\\n                fmt: xLabelFormat\\n            });\\n        }\\n        d = spec.start(d0);\\n        ret = [];\\n        while ((t = d.getTime()) <= dmax) {\\n            if (t >= dmin) {\\n                ret.push([spec.fmt(d), t]);\\n            }\\n            spec.incr(d);\\n        }\\n        return ret;\\n    };\\n\\n    minutesSpecHelper = function (interval) {\\n        return {\\n            span: interval * 60 * 1000,\\n            start: function (d) {\\n                return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours());\\n            },\\n            fmt: function (d) {\\n                return \\\"\\\" + (Morris.pad2(d.getHours())) + \\\":\\\" + (Morris.pad2(d.getMinutes()));\\n            },\\n            incr: function (d) {\\n                return d.setUTCMinutes(d.getUTCMinutes() + interval);\\n            }\\n        };\\n    };\\n\\n    secondsSpecHelper = function (interval) {\\n        return {\\n            span: interval * 1000,\\n            start: function (d) {\\n                return new Date(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes());\\n            },\\n            fmt: function (d) {\\n                return \\\"\\\" + (Morris.pad2(d.getHours())) + \\\":\\\" + (Morris.pad2(d.getMinutes())) + \\\":\\\" + (Morris.pad2(d.getSeconds()));\\n            },\\n            incr: function (d) {\\n                return d.setUTCSeconds(d.getUTCSeconds() + interval);\\n            }\\n        };\\n    };\\n\\n    Morris.LABEL_SPECS = {\\n        \\\"decade\\\": {\\n            span: 172800000000,\\n            start: function (d) {\\n                return new Date(d.getFullYear() - d.getFullYear() % 10, 0, 1);\\n            },\\n            fmt: function (d) {\\n                return \\\"\\\" + (d.getFullYear());\\n            },\\n            incr: function (d) {\\n                return d.setFullYear(d.getFullYear() + 10);\\n            }\\n        },\\n        \\\"year\\\": {\\n            span: 17280000000,\\n            start: function (d) {\\n                return new Date(d.getFullYear(), 0, 1);\\n            },\\n            fmt: function (d) {\\n                return \\\"\\\" + (d.getFullYear());\\n            },\\n            incr: function (d) {\\n                return d.setFullYear(d.getFullYear() + 1);\\n            }\\n        },\\n        \\\"month\\\": {\\n            span: 2419200000,\\n            start: function (d) {\\n                return new Date(d.getFullYear(), d.getMonth(), 1);\\n            },\\n            fmt: function (d) {\\n                return \\\"\\\" + (d.getFullYear()) + \\\"-\\\" + (Morris.pad2(d.getMonth() + 1));\\n            },\\n            incr: function (d) {\\n                return d.setMonth(d.getMonth() + 1);\\n            }\\n        },\\n        \\\"week\\\": {\\n            span: 604800000,\\n            start: function (d) {\\n                return new Date(d.getFullYear(), d.getMonth(), d.getDate());\\n            },\\n            fmt: function (d) {\\n                return \\\"\\\" + (d.getFullYear()) + \\\"-\\\" + (Morris.pad2(d.getMonth() + 1)) + \\\"-\\\" + (Morris.pad2(d.getDate()));\\n            },\\n            incr: function (d) {\\n                return d.setDate(d.getDate() + 7);\\n            }\\n        },\\n        \\\"day\\\": {\\n            span: 86400000,\\n            start: function (d) {\\n                return new Date(d.getFullYear(), d.getMonth(), d.getDate());\\n            },\\n            fmt: function (d) {\\n                return \\\"\\\" + (d.getFullYear()) + \\\"-\\\" + (Morris.pad2(d.getMonth() + 1)) + \\\"-\\\" + (Morris.pad2(d.getDate()));\\n            },\\n            incr: function (d) {\\n                return d.setDate(d.getDate() + 1);\\n            }\\n        },\\n        \\\"hour\\\": minutesSpecHelper(60),\\n        \\\"30min\\\": minutesSpecHelper(30),\\n        \\\"15min\\\": minutesSpecHelper(15),\\n        \\\"10min\\\": minutesSpecHelper(10),\\n        \\\"5min\\\": minutesSpecHelper(5),\\n        \\\"minute\\\": minutesSpecHelper(1),\\n        \\\"30sec\\\": secondsSpecHelper(30),\\n        \\\"15sec\\\": secondsSpecHelper(15),\\n        \\\"10sec\\\": secondsSpecHelper(10),\\n        \\\"5sec\\\": secondsSpecHelper(5),\\n        \\\"second\\\": secondsSpecHelper(1)\\n    };\\n\\n    Morris.AUTO_LABEL_ORDER = [\\\"decade\\\", \\\"year\\\", \\\"month\\\", \\\"week\\\", \\\"day\\\", \\\"hour\\\", \\\"30min\\\", \\\"15min\\\", \\\"10min\\\", \\\"5min\\\", \\\"minute\\\", \\\"30sec\\\", \\\"15sec\\\", \\\"10sec\\\", \\\"5sec\\\", \\\"second\\\"];\\n\\n    Morris.Area = (function (_super) {\\n        var areaDefaults;\\n\\n        __extends(Area, _super);\\n\\n        areaDefaults = {\\n            fillOpacity: 'auto',\\n            behaveLikeLine: false\\n        };\\n\\n        function Area(options) {\\n            var areaOptions;\\n            if (!(this instanceof Morris.Area)) {\\n                return new Morris.Area(options);\\n            }\\n            areaOptions = $.extend({}, areaDefaults, options);\\n            this.cumulative = !areaOptions.behaveLikeLine;\\n            if (areaOptions.fillOpacity === 'auto') {\\n                areaOptions.fillOpacity = areaOptions.behaveLikeLine ? .8 : 1;\\n            }\\n            Area.__super__.constructor.call(this, areaOptions);\\n        }\\n\\n        Area.prototype.calcPoints = function () {\\n            var row, total, y, _i, _len, _ref, _results;\\n            _ref = this.data;\\n            _results = [];\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                row = _ref[_i];\\n                row._x = this.transX(row.x);\\n                total = 0;\\n                row._y = (function () {\\n                    var _j, _len1, _ref1, _results1;\\n                    _ref1 = row.y;\\n                    _results1 = [];\\n                    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\\n                        y = _ref1[_j];\\n                        if (this.options.behaveLikeLine) {\\n                            _results1.push(this.transY(y));\\n                        } else {\\n                            total += y || 0;\\n                            _results1.push(this.transY(total));\\n                        }\\n                    }\\n                    return _results1;\\n                }).call(this);\\n                _results.push(row._ymax = Math.max.apply(Math, row._y));\\n            }\\n            return _results;\\n        };\\n\\n        Area.prototype.drawSeries = function () {\\n            var i, range, _i, _j, _k, _len, _ref, _ref1, _results, _results1, _results2;\\n            this.seriesPoints = [];\\n            if (this.options.behaveLikeLine) {\\n                range = (function () {\\n                    _results = [];\\n                    for (var _i = 0, _ref = this.options.ykeys.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; 0 <= _ref ? _i++ : _i--) {\\n                        _results.push(_i);\\n                    }\\n                    return _results;\\n                }).apply(this);\\n            } else {\\n                range = (function () {\\n                    _results1 = [];\\n                    for (var _j = _ref1 = this.options.ykeys.length - 1; _ref1 <= 0 ? _j <= 0 : _j >= 0; _ref1 <= 0 ? _j++ : _j--) {\\n                        _results1.push(_j);\\n                    }\\n                    return _results1;\\n                }).apply(this);\\n            }\\n            _results2 = [];\\n            for (_k = 0, _len = range.length; _k < _len; _k++) {\\n                i = range[_k];\\n                this._drawFillFor(i);\\n                this._drawLineFor(i);\\n                _results2.push(this._drawPointFor(i));\\n            }\\n            return _results2;\\n        };\\n\\n        Area.prototype._drawFillFor = function (index) {\\n            var path;\\n            path = this.paths[index];\\n            if (path !== null) {\\n                path = path + (\\\"L\\\" + (this.transX(this.xmax)) + \\\",\\\" + this.bottom + \\\"L\\\" + (this.transX(this.xmin)) + \\\",\\\" + this.bottom + \\\"Z\\\");\\n                return this.drawFilledPath(path, this.fillForSeries(index));\\n            }\\n        };\\n\\n        Area.prototype.fillForSeries = function (i) {\\n            var color;\\n            color = Raphael.rgb2hsl(this.colorFor(this.data[i], i, 'line'));\\n            return Raphael.hsl(color.h, this.options.behaveLikeLine ? color.s * 0.9 : color.s * 0.75, Math.min(0.98, this.options.behaveLikeLine ? color.l * 1.2 : color.l * 1.25));\\n        };\\n\\n        Area.prototype.drawFilledPath = function (path, fill) {\\n            return this.raphael.path(path).attr('fill', fill).attr('fill-opacity', this.options.fillOpacity).attr('stroke', 'none');\\n        };\\n\\n        return Area;\\n\\n    })(Morris.Line);\\n\\n    Morris.Bar = (function (_super) {\\n        __extends(Bar, _super);\\n\\n        function Bar(options) {\\n            this.onHoverOut = __bind(this.onHoverOut, this);\\n            this.onHoverMove = __bind(this.onHoverMove, this);\\n            this.onGridClick = __bind(this.onGridClick, this);\\n            if (!(this instanceof Morris.Bar)) {\\n                return new Morris.Bar(options);\\n            }\\n            Bar.__super__.constructor.call(this, $.extend({}, options, {\\n                parseTime: false\\n            }));\\n        }\\n\\n        Bar.prototype.init = function () {\\n            this.cumulative = this.options.stacked;\\n            if (this.options.hideHover !== 'always') {\\n                this.hover = new Morris.Hover({\\n                    parent: this.el\\n                });\\n                this.on('hovermove', this.onHoverMove);\\n                this.on('hoverout', this.onHoverOut);\\n                return this.on('gridclick', this.onGridClick);\\n            }\\n        };\\n\\n        Bar.prototype.defaults = {\\n            barSizeRatio: 0.75,\\n            barGap: 3,\\n            barColors: ['#0b62a4', '#7a92a3', '#4da74d', '#afd8f8', '#edc240', '#cb4b4b', '#9440ed'],\\n            barOpacity: 1.0,\\n            barRadius: [0, 0, 0, 0],\\n            xLabelMargin: 50\\n        };\\n\\n        Bar.prototype.calc = function () {\\n            var _ref;\\n            this.calcBars();\\n            if (this.options.hideHover === false) {\\n                return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(this.data.length - 1));\\n            }\\n        };\\n\\n        Bar.prototype.calcBars = function () {\\n            var idx, row, y, _i, _len, _ref, _results;\\n            _ref = this.data;\\n            _results = [];\\n            for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\\n                row = _ref[idx];\\n                row._x = this.left + this.width * (idx + 0.5) / this.data.length;\\n                _results.push(row._y = (function () {\\n                    var _j, _len1, _ref1, _results1;\\n                    _ref1 = row.y;\\n                    _results1 = [];\\n                    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\\n                        y = _ref1[_j];\\n                        if (y != null) {\\n                            _results1.push(this.transY(y));\\n                        } else {\\n                            _results1.push(null);\\n                        }\\n                    }\\n                    return _results1;\\n                }).call(this));\\n            }\\n            return _results;\\n        };\\n\\n        Bar.prototype.draw = function () {\\n            var _ref;\\n            if ((_ref = this.options.axes) === true || _ref === 'both' || _ref === 'x') {\\n                this.drawXAxis();\\n            }\\n            return this.drawSeries();\\n        };\\n\\n        Bar.prototype.drawXAxis = function () {\\n            var i, label, labelBox, margin, offset, prevAngleMargin, prevLabelMargin, row, textBox, ypos, _i, _ref, _results;\\n            ypos = this.bottom + (this.options.xAxisLabelTopPadding || this.options.padding / 2);\\n            prevLabelMargin = null;\\n            prevAngleMargin = null;\\n            _results = [];\\n            for (i = _i = 0, _ref = this.data.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\\n                row = this.data[this.data.length - 1 - i];\\n                label = this.drawXAxisLabel(row._x, ypos, row.label);\\n                textBox = label.getBBox();\\n                label.transform(\\\"r\\\" + (-this.options.xLabelAngle));\\n                labelBox = label.getBBox();\\n                label.transform(\\\"t0,\\\" + (labelBox.height / 2) + \\\"...\\\");\\n                if (this.options.xLabelAngle !== 0) {\\n                    offset = -0.5 * textBox.width * Math.cos(this.options.xLabelAngle * Math.PI / 180.0);\\n                    label.transform(\\\"t\\\" + offset + \\\",0...\\\");\\n                }\\n                if (((prevLabelMargin == null) || prevLabelMargin >= labelBox.x + labelBox.width || (prevAngleMargin != null) && prevAngleMargin >= labelBox.x) && labelBox.x >= 0 && (labelBox.x + labelBox.width) < this.el.width()) {\\n                    if (this.options.xLabelAngle !== 0) {\\n                        margin = 1.25 * this.options.gridTextSize / Math.sin(this.options.xLabelAngle * Math.PI / 180.0);\\n                        prevAngleMargin = labelBox.x - margin;\\n                    }\\n                    _results.push(prevLabelMargin = labelBox.x - this.options.xLabelMargin);\\n                } else {\\n                    _results.push(label.remove());\\n                }\\n            }\\n            return _results;\\n        };\\n\\n        Bar.prototype.drawSeries = function () {\\n            var barWidth, bottom, groupWidth, idx, lastTop, left, leftPadding, numBars, row, sidx, size, spaceLeft, top, ypos, zeroPos;\\n            groupWidth = this.width / this.options.data.length;\\n            numBars = this.options.stacked ? 1 : this.options.ykeys.length;\\n            barWidth = (groupWidth * this.options.barSizeRatio - this.options.barGap * (numBars - 1)) / numBars;\\n            if (this.options.barSize) {\\n                barWidth = Math.min(barWidth, this.options.barSize);\\n            }\\n            spaceLeft = groupWidth - barWidth * numBars - this.options.barGap * (numBars - 1);\\n            leftPadding = spaceLeft / 2;\\n            zeroPos = this.ymin <= 0 && this.ymax >= 0 ? this.transY(0) : null;\\n            return this.bars = (function () {\\n                var _i, _len, _ref, _results;\\n                _ref = this.data;\\n                _results = [];\\n                for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {\\n                    row = _ref[idx];\\n                    lastTop = 0;\\n                    _results.push((function () {\\n                        var _j, _len1, _ref1, _results1;\\n                        _ref1 = row._y;\\n                        _results1 = [];\\n                        for (sidx = _j = 0, _len1 = _ref1.length; _j < _len1; sidx = ++_j) {\\n                            ypos = _ref1[sidx];\\n                            if (ypos !== null) {\\n                                if (zeroPos) {\\n                                    top = Math.min(ypos, zeroPos);\\n                                    bottom = Math.max(ypos, zeroPos);\\n                                } else {\\n                                    top = ypos;\\n                                    bottom = this.bottom;\\n                                }\\n                                left = this.left + idx * groupWidth + leftPadding;\\n                                if (!this.options.stacked) {\\n                                    left += sidx * (barWidth + this.options.barGap);\\n                                }\\n                                size = bottom - top;\\n                                if (this.options.verticalGridCondition && this.options.verticalGridCondition(row.x)) {\\n                                    this.drawBar(this.left + idx * groupWidth, this.top, groupWidth, Math.abs(this.top - this.bottom), this.options.verticalGridColor, this.options.verticalGridOpacity, this.options.barRadius);\\n                                }\\n                                if (this.options.stacked) {\\n                                    top -= lastTop;\\n                                }\\n                                this.drawBar(left, top, barWidth, size, this.colorFor(row, sidx, 'bar'), this.options.barOpacity, this.options.barRadius);\\n                                _results1.push(lastTop += size);\\n                            } else {\\n                                _results1.push(null);\\n                            }\\n                        }\\n                        return _results1;\\n                    }).call(this));\\n                }\\n                return _results;\\n            }).call(this);\\n        };\\n\\n        Bar.prototype.colorFor = function (row, sidx, type) {\\n            var r, s;\\n            if (typeof this.options.barColors === 'function') {\\n                r = {\\n                    x: row.x,\\n                    y: row.y[sidx],\\n                    label: row.label\\n                };\\n                s = {\\n                    index: sidx,\\n                    key: this.options.ykeys[sidx],\\n                    label: this.options.labels[sidx]\\n                };\\n                return this.options.barColors.call(this, r, s, type);\\n            } else {\\n                return this.options.barColors[sidx % this.options.barColors.length];\\n            }\\n        };\\n\\n        Bar.prototype.hitTest = function (x) {\\n            if (this.data.length === 0) {\\n                return null;\\n            }\\n            x = Math.max(Math.min(x, this.right), this.left);\\n            return Math.min(this.data.length - 1, Math.floor((x - this.left) / (this.width / this.data.length)));\\n        };\\n\\n        Bar.prototype.onGridClick = function (x, y) {\\n            var index;\\n            index = this.hitTest(x);\\n            return this.fire('click', index, this.data[index].src, x, y);\\n        };\\n\\n        Bar.prototype.onHoverMove = function (x, y) {\\n            var index, _ref;\\n            index = this.hitTest(x);\\n            return (_ref = this.hover).update.apply(_ref, this.hoverContentForRow(index));\\n        };\\n\\n        Bar.prototype.onHoverOut = function () {\\n            if (this.options.hideHover !== false) {\\n                return this.hover.hide();\\n            }\\n        };\\n\\n        Bar.prototype.hoverContentForRow = function (index) {\\n            var content, j, row, x, y, _i, _len, _ref;\\n            row = this.data[index];\\n            content = \\\"<div class='morris-hover-row-label'>\\\" + row.label + \\\"</div>\\\";\\n            _ref = row.y;\\n            for (j = _i = 0, _len = _ref.length; _i < _len; j = ++_i) {\\n                y = _ref[j];\\n                content += \\\"<div class='morris-hover-point' style='color: \\\" + (this.colorFor(row, j, 'label')) + \\\"'>\\\\n  \\\" + this.options.labels[j] + \\\":\\\\n  \\\" + (this.yLabelFormat(y)) + \\\"\\\\n</div>\\\";\\n            }\\n            if (typeof this.options.hoverCallback === 'function') {\\n                content = this.options.hoverCallback(index, this.options, content, row.src);\\n            }\\n            x = this.left + (index + 0.5) * this.width / this.data.length;\\n            return [content, x];\\n        };\\n\\n        Bar.prototype.drawXAxisLabel = function (xPos, yPos, text) {\\n            var label;\\n            return label = this.raphael.text(xPos, yPos, text).attr('font-size', this.options.gridTextSize).attr('font-family', this.options.gridTextFamily).attr('font-weight', this.options.gridTextWeight).attr('fill', this.options.gridTextColor);\\n        };\\n\\n        Bar.prototype.drawBar = function (xPos, yPos, width, height, barColor, opacity, radiusArray) {\\n            var maxRadius, path;\\n            maxRadius = Math.max.apply(Math, radiusArray);\\n            if (maxRadius === 0 || maxRadius > height) {\\n                path = this.raphael.rect(xPos, yPos, width, height);\\n            } else {\\n                path = this.raphael.path(this.roundedRect(xPos, yPos, width, height, radiusArray));\\n            }\\n            return path.attr('fill', barColor).attr('fill-opacity', opacity).attr('stroke', 'none');\\n        };\\n\\n        Bar.prototype.roundedRect = function (x, y, w, h, r) {\\n            if (r == null) {\\n                r = [0, 0, 0, 0];\\n            }\\n            return [\\\"M\\\", x, r[0] + y, \\\"Q\\\", x, y, x + r[0], y, \\\"L\\\", x + w - r[1], y, \\\"Q\\\", x + w, y, x + w, y + r[1], \\\"L\\\", x + w, y + h - r[2], \\\"Q\\\", x + w, y + h, x + w - r[2], y + h, \\\"L\\\", x + r[3], y + h, \\\"Q\\\", x, y + h, x, y + h - r[3], \\\"Z\\\"];\\n        };\\n\\n        return Bar;\\n\\n    })(Morris.Grid);\\n\\n    Morris.Donut = (function (_super) {\\n        __extends(Donut, _super);\\n\\n        Donut.prototype.defaults = {\\n            colors: ['#0B62A4', '#3980B5', '#679DC6', '#95BBD7', '#B0CCE1', '#095791', '#095085', '#083E67', '#052C48', '#042135'],\\n            backgroundColor: '#FFFFFF',\\n            labelColor: '#000000',\\n            formatter: Morris.commas,\\n            resize: false\\n        };\\n\\n        function Donut(options) {\\n            this.resizeHandler = __bind(this.resizeHandler, this);\\n            this.select = __bind(this.select, this);\\n            this.click = __bind(this.click, this);\\n            var _this = this;\\n            if (!(this instanceof Morris.Donut)) {\\n                return new Morris.Donut(options);\\n            }\\n            this.options = $.extend({}, this.defaults, options);\\n            if (typeof options.element === 'string') {\\n                this.el = $(document.getElementById(options.element));\\n            } else {\\n                this.el = $(options.element);\\n            }\\n            if (this.el === null || this.el.length === 0) {\\n                throw new Error(\\\"Graph placeholder not found.\\\");\\n            }\\n            if (options.data === void 0 || options.data.length === 0) {\\n                return;\\n            }\\n            this.raphael = new Raphael(this.el[0]);\\n            if (this.options.resize) {\\n                $(window).bind('resize', function (evt) {\\n                    if (_this.timeoutId != null) {\\n                        window.clearTimeout(_this.timeoutId);\\n                    }\\n                    return _this.timeoutId = window.setTimeout(_this.resizeHandler, 100);\\n                });\\n            }\\n            this.setData(options.data);\\n        }\\n\\n        Donut.prototype.redraw = function () {\\n            var C, cx, cy, i, idx, last, max_value, min, next, seg, total, value, w, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\\n            this.raphael.clear();\\n            cx = this.el.width() / 2;\\n            cy = this.el.height() / 2;\\n            w = (Math.min(cx, cy) - 10) / 3;\\n            total = 0;\\n            _ref = this.values;\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                value = _ref[_i];\\n                total += value;\\n            }\\n            min = 5 / (2 * w);\\n            C = 1.9999 * Math.PI - min * this.data.length;\\n            last = 0;\\n            idx = 0;\\n            this.segments = [];\\n            _ref1 = this.values;\\n            for (i = _j = 0, _len1 = _ref1.length; _j < _len1; i = ++_j) {\\n                value = _ref1[i];\\n                next = last + min + C * (value / total);\\n                seg = new Morris.DonutSegment(cx, cy, w * 2, w, last, next, this.data[i].color || this.options.colors[idx % this.options.colors.length], this.options.backgroundColor, idx, this.raphael);\\n                seg.render();\\n                this.segments.push(seg);\\n                seg.on('hover', this.select);\\n                seg.on('click', this.click);\\n                last = next;\\n                idx += 1;\\n            }\\n            this.text1 = this.drawEmptyDonutLabel(cx, cy - 10, this.options.labelColor, 15, 800);\\n            this.text2 = this.drawEmptyDonutLabel(cx, cy + 10, this.options.labelColor, 14);\\n            max_value = Math.max.apply(Math, this.values);\\n            idx = 0;\\n            _ref2 = this.values;\\n            _results = [];\\n            for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\\n                value = _ref2[_k];\\n                if (value === max_value) {\\n                    this.select(idx);\\n                    break;\\n                }\\n                _results.push(idx += 1);\\n            }\\n            return _results;\\n        };\\n\\n        Donut.prototype.setData = function (data) {\\n            var row;\\n            this.data = data;\\n            this.values = (function () {\\n                var _i, _len, _ref, _results;\\n                _ref = this.data;\\n                _results = [];\\n                for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                    row = _ref[_i];\\n                    _results.push(parseFloat(row.value));\\n                }\\n                return _results;\\n            }).call(this);\\n            return this.redraw();\\n        };\\n\\n        Donut.prototype.click = function (idx) {\\n            return this.fire('click', idx, this.data[idx]);\\n        };\\n\\n        Donut.prototype.select = function (idx) {\\n            var row, s, segment, _i, _len, _ref;\\n            _ref = this.segments;\\n            for (_i = 0, _len = _ref.length; _i < _len; _i++) {\\n                s = _ref[_i];\\n                s.deselect();\\n            }\\n            segment = this.segments[idx];\\n            segment.select();\\n            row = this.data[idx];\\n            return this.setLabels(row.label, this.options.formatter(row.value, row));\\n        };\\n\\n        Donut.prototype.setLabels = function (label1, label2) {\\n            var inner, maxHeightBottom, maxHeightTop, maxWidth, text1bbox, text1scale, text2bbox, text2scale;\\n            inner = (Math.min(this.el.width() / 2, this.el.height() / 2) - 10) * 2 / 3;\\n            maxWidth = 1.8 * inner;\\n            maxHeightTop = inner / 2;\\n            maxHeightBottom = inner / 3;\\n            this.text1.attr({\\n                text: label1,\\n                transform: ''\\n            });\\n            text1bbox = this.text1.getBBox();\\n            text1scale = Math.min(maxWidth / text1bbox.width, maxHeightTop / text1bbox.height);\\n            this.text1.attr({\\n                transform: \\\"S\\\" + text1scale + \\\",\\\" + text1scale + \\\",\\\" + (text1bbox.x + text1bbox.width / 2) + \\\",\\\" + (text1bbox.y + text1bbox.height)\\n            });\\n            this.text2.attr({\\n                text: label2,\\n                transform: ''\\n            });\\n            text2bbox = this.text2.getBBox();\\n            text2scale = Math.min(maxWidth / text2bbox.width, maxHeightBottom / text2bbox.height);\\n            return this.text2.attr({\\n                transform: \\\"S\\\" + text2scale + \\\",\\\" + text2scale + \\\",\\\" + (text2bbox.x + text2bbox.width / 2) + \\\",\\\" + text2bbox.y\\n            });\\n        };\\n\\n        Donut.prototype.drawEmptyDonutLabel = function (xPos, yPos, color, fontSize, fontWeight) {\\n            var text;\\n            text = this.raphael.text(xPos, yPos, '').attr('font-size', fontSize).attr('fill', color);\\n            if (fontWeight != null) {\\n                text.attr('font-weight', fontWeight);\\n            }\\n            return text;\\n        };\\n\\n        Donut.prototype.resizeHandler = function () {\\n            this.timeoutId = null;\\n            this.raphael.setSize(this.el.width(), this.el.height());\\n            return this.redraw();\\n        };\\n\\n        return Donut;\\n\\n    })(Morris.EventEmitter);\\n\\n    Morris.DonutSegment = (function (_super) {\\n        __extends(DonutSegment, _super);\\n\\n        function DonutSegment(cx, cy, inner, outer, p0, p1, color, backgroundColor, index, raphael) {\\n            this.cx = cx;\\n            this.cy = cy;\\n            this.inner = inner;\\n            this.outer = outer;\\n            this.color = color;\\n            this.backgroundColor = backgroundColor;\\n            this.index = index;\\n            this.raphael = raphael;\\n            this.deselect = __bind(this.deselect, this);\\n            this.select = __bind(this.select, this);\\n            this.sin_p0 = Math.sin(p0);\\n            this.cos_p0 = Math.cos(p0);\\n            this.sin_p1 = Math.sin(p1);\\n            this.cos_p1 = Math.cos(p1);\\n            this.is_long = (p1 - p0) > Math.PI ? 1 : 0;\\n            this.path = this.calcSegment(this.inner + 3, this.inner + this.outer - 5);\\n            this.selectedPath = this.calcSegment(this.inner + 3, this.inner + this.outer);\\n            this.hilight = this.calcArc(this.inner);\\n        }\\n\\n        DonutSegment.prototype.calcArcPoints = function (r) {\\n            return [this.cx + r * this.sin_p0, this.cy + r * this.cos_p0, this.cx + r * this.sin_p1, this.cy + r * this.cos_p1];\\n        };\\n\\n        DonutSegment.prototype.calcSegment = function (r1, r2) {\\n            var ix0, ix1, iy0, iy1, ox0, ox1, oy0, oy1, _ref, _ref1;\\n            _ref = this.calcArcPoints(r1), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\\n            _ref1 = this.calcArcPoints(r2), ox0 = _ref1[0], oy0 = _ref1[1], ox1 = _ref1[2], oy1 = _ref1[3];\\n            return (\\\"M\\\" + ix0 + \\\",\\\" + iy0) + (\\\"A\\\" + r1 + \\\",\\\" + r1 + \\\",0,\\\" + this.is_long + \\\",0,\\\" + ix1 + \\\",\\\" + iy1) + (\\\"L\\\" + ox1 + \\\",\\\" + oy1) + (\\\"A\\\" + r2 + \\\",\\\" + r2 + \\\",0,\\\" + this.is_long + \\\",1,\\\" + ox0 + \\\",\\\" + oy0) + \\\"Z\\\";\\n        };\\n\\n        DonutSegment.prototype.calcArc = function (r) {\\n            var ix0, ix1, iy0, iy1, _ref;\\n            _ref = this.calcArcPoints(r), ix0 = _ref[0], iy0 = _ref[1], ix1 = _ref[2], iy1 = _ref[3];\\n            return (\\\"M\\\" + ix0 + \\\",\\\" + iy0) + (\\\"A\\\" + r + \\\",\\\" + r + \\\",0,\\\" + this.is_long + \\\",0,\\\" + ix1 + \\\",\\\" + iy1);\\n        };\\n\\n        DonutSegment.prototype.render = function () {\\n            var _this = this;\\n            this.arc = this.drawDonutArc(this.hilight, this.color);\\n            return this.seg = this.drawDonutSegment(this.path, this.color, this.backgroundColor, function () {\\n                return _this.fire('hover', _this.index);\\n            }, function () {\\n                return _this.fire('click', _this.index);\\n            });\\n        };\\n\\n        DonutSegment.prototype.drawDonutArc = function (path, color) {\\n            return this.raphael.path(path).attr({\\n                stroke: color,\\n                'stroke-width': 2,\\n                opacity: 0\\n            });\\n        };\\n\\n        DonutSegment.prototype.drawDonutSegment = function (path, fillColor, strokeColor, hoverFunction, clickFunction) {\\n            return this.raphael.path(path).attr({\\n                fill: fillColor,\\n                stroke: strokeColor,\\n                'stroke-width': 3\\n            }).hover(hoverFunction).click(clickFunction);\\n        };\\n\\n        DonutSegment.prototype.select = function () {\\n            if (!this.selected) {\\n                this.seg.animate({\\n                    path: this.selectedPath\\n                }, 150, '<>');\\n                this.arc.animate({\\n                    opacity: 1\\n                }, 150, '<>');\\n                return this.selected = true;\\n            }\\n        };\\n\\n        DonutSegment.prototype.deselect = function () {\\n            if (this.selected) {\\n                this.seg.animate({\\n                    path: this.path\\n                }, 150, '<>');\\n                this.arc.animate({\\n                    opacity: 0\\n                }, 150, '<>');\\n                return this.selected = false;\\n            }\\n        };\\n\\n        return DonutSegment;\\n\\n    })(Morris.EventEmitter);\\n\\n}).call(this);\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/raw-loader!./~/source-map-loader!./lib/modular-admin/vendor.js\n// module id = 492\n// module chunks = 2","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nmodule.exports = function(src) {\r\n\tif (typeof execScript !== \"undefined\")\r\n\t\texecScript(src);\r\n\telse\r\n\t\teval.call(null, src);\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/script-loader/addScript.js\n// module id = 99\n// module chunks = 2"],"sourceRoot":""}